
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002305c  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004944  0802321c  0802321c  0003321c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000088  08027b60  08027b60  00037b60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08027be8  08027be8  00097a3c  2**0
                  CONTENTS
  5 .ARM          00000008  08027be8  08027be8  00037be8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  08027bf0  08027bf0  00097a3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  08027bf0  08027bf0  00037bf0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08027c08  08027c08  00037c08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  08027c10  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000e858  20000140  08027d50  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000e998  08027d50  0004e998  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00097a3c  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00041dac  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 00005b40  90041dac  90041dac  00091dac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000150  900478ec  900478ec  000978ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   0005901f  00000000  00000000  00097a6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   000e8d49  00000000  00000000  000f0a8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00018dcf  00000000  00000000  001d97d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002cd0  00000000  00000000  001f25a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00132afe  00000000  00000000  001f5278  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00004db8  00000000  00000000  00327d78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    0002e2b4  00000000  00000000  0032cb30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003b60a  00000000  00000000  0035ade4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  003963ee  2**0
                  CONTENTS, READONLY
 25 .debug_frame  000084b4  00000000  00000000  003964c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	08023204 	.word	0x08023204

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	08023204 	.word	0x08023204

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f004 ffc7 	bl	8005554 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f021 fded 	bl	80221a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 fff9 	bl	80015c0 <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005d0:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005d4:	08027c10 	.word	0x08027c10
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005e0:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005e4:	2000e998 	.word	0x2000e998

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bdf1 	b.w	80011d0 <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 be5f 	b.w	80012b0 <touchgfx_taskEntry>

080005f2 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005f2:	2100      	movs	r1, #0
 80005f4:	4608      	mov	r0, r1
 80005f6:	f004 bb15 	b.w	8004c24 <BSP_PB_Init>

080005fa <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f004 bb4c 	b.w	8004c98 <BSP_PB_GetState>

08000600 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000600:	6840      	ldr	r0, [r0, #4]
    }
 8000602:	4770      	bx	lr

08000604 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000604:	6041      	str	r1, [r0, #4]
    }
 8000606:	4770      	bx	lr

08000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000608:	4a05      	ldr	r2, [pc, #20]	; (8000620 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800060a:	6813      	ldr	r3, [r2, #0]
 800060c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000610:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000612:	4a04      	ldr	r2, [pc, #16]	; (8000624 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000614:	6813      	ldr	r3, [r2, #0]
 8000616:	f043 0301 	orr.w	r3, r3, #1
 800061a:	6013      	str	r3, [r2, #0]
}
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	e000edfc 	.word	0xe000edfc
 8000624:	e0001000 	.word	0xe0001000

08000628 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000628:	1a51      	subs	r1, r2, r1
 800062a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 800062e:	fbb1 f0f3 	udiv	r0, r1, r3
 8000632:	4770      	bx	lr

08000634 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000634:	4b01      	ldr	r3, [pc, #4]	; (800063c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000636:	6818      	ldr	r0, [r3, #0]
}
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	e0001004 	.word	0xe0001004

08000640 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000640:	4770      	bx	lr

08000642 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000642:	b510      	push	{r4, lr}
 8000644:	210c      	movs	r1, #12
 8000646:	4604      	mov	r4, r0
 8000648:	f020 ff43 	bl	80214d2 <_ZdlPvj>
 800064c:	4620      	mov	r0, r4
 800064e:	bd10      	pop	{r4, pc}

08000650 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000650:	6803      	ldr	r3, [r0, #0]
{
 8000652:	b510      	push	{r4, lr}
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000658:	b131      	cbz	r1, 8000668 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065a:	4798      	blx	r3
 800065c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800065e:	6863      	ldr	r3, [r4, #4]
 8000660:	1a9b      	subs	r3, r3, r2
 8000662:	4418      	add	r0, r3
 8000664:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000666:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000668:	4798      	blx	r3
 800066a:	60a0      	str	r0, [r4, #8]
}
 800066c:	e7fb      	b.n	8000666 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800066e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800066e:	4770      	bx	lr

08000670 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000670:	4770      	bx	lr
	...

08000674 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000674:	b508      	push	{r3, lr}
    Buttons::init();
 8000676:	f7ff ffbc 	bl	80005f2 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800067a:	4b02      	ldr	r3, [pc, #8]	; (8000684 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
}
 8000680:	bd08      	pop	{r3, pc}
 8000682:	bf00      	nop
 8000684:	2000015c 	.word	0x2000015c

08000688 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000688:	b570      	push	{r4, r5, r6, lr}
 800068a:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 800068c:	f7ff ffb5 	bl	80005fa <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000690:	4a0b      	ldr	r2, [pc, #44]	; (80006c0 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000692:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000694:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000696:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000698:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 800069a:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 800069c:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006a0:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006a2:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006a4:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a6:	d00a      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006a8:	f016 0001 	ands.w	r0, r6, #1
 80006ac:	d007      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ae:	f011 0001 	ands.w	r0, r1, #1
 80006b2:	d004      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006b4:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006b6:	bf5a      	itte	pl
 80006b8:	2001      	movpl	r0, #1
 80006ba:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006bc:	2000      	movmi	r0, #0
}
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	2000015c 	.word	0x2000015c

080006c4 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f020 ff02 	bl	80214d2 <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f020 fefa 	bl	80214d2 <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006e4:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006e6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006ea:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006ee:	f004 fe7d 	bl	80053ec <BSP_TS_Init>
 80006f2:	4b07      	ldr	r3, [pc, #28]	; (8000710 <_ZN20STM32TouchController4initEv+0x2c>)
 80006f4:	b910      	cbnz	r0, 80006fc <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 80006f6:	2201      	movs	r2, #1
 80006f8:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 80006fa:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 80006fc:	781b      	ldrb	r3, [r3, #0]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d1fb      	bne.n	80006fa <_ZN20STM32TouchController4initEv+0x16>
 8000702:	4b04      	ldr	r3, [pc, #16]	; (8000714 <_ZN20STM32TouchController4initEv+0x30>)
 8000704:	4a04      	ldr	r2, [pc, #16]	; (8000718 <_ZN20STM32TouchController4initEv+0x34>)
 8000706:	4805      	ldr	r0, [pc, #20]	; (800071c <_ZN20STM32TouchController4initEv+0x38>)
 8000708:	2124      	movs	r1, #36	; 0x24
 800070a:	f021 fd01 	bl	8022110 <__assert_func>
 800070e:	bf00      	nop
 8000710:	20000160 	.word	0x20000160
 8000714:	080232a8 	.word	0x080232a8
 8000718:	080232bb 	.word	0x080232bb
 800071c:	080232e5 	.word	0x080232e5

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000720:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000724:	781c      	ldrb	r4, [r3, #0]
{
 8000726:	460e      	mov	r6, r1
 8000728:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800072a:	b15c      	cbz	r4, 8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 800072c:	a801      	add	r0, sp, #4
 800072e:	f004 fe9b 	bl	8005468 <BSP_TS_GetState>
        if (state.touchDetected)
 8000732:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000736:	b143      	cbz	r3, 800074a <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000738:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800073c:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800073e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000742:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000744:	4620      	mov	r0, r4
 8000746:	b004      	add	sp, #16
 8000748:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800074a:	461c      	mov	r4, r3
 800074c:	e7fa      	b.n	8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800074e:	bf00      	nop
 8000750:	20000160 	.word	0x20000160

08000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000754:	b110      	cbz	r0, 800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000756:	2801      	cmp	r0, #1
 8000758:	d009      	beq.n	800076e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800075a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800075c:	4b08      	ldr	r3, [pc, #32]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800075e:	4809      	ldr	r0, [pc, #36]	; (8000784 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	fab2 f282 	clz	r2, r2
 8000766:	0952      	lsrs	r2, r2, #5
 8000768:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	f006 ba3d 	b.w	8006be8 <HAL_GPIO_WritePin>
 800076e:	4b04      	ldr	r3, [pc, #16]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000770:	4805      	ldr	r0, [pc, #20]	; (8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000772:	685a      	ldr	r2, [r3, #4]
 8000774:	fab2 f282 	clz	r2, r2
 8000778:	0952      	lsrs	r2, r2, #5
 800077a:	2110      	movs	r1, #16
 800077c:	e7f5      	b.n	800076a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800077e:	bf00      	nop
 8000780:	20000164 	.word	0x20000164
 8000784:	40021800 	.word	0x40021800
 8000788:	40020c00 	.word	0x40020c00

0800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800078c:	b110      	cbz	r0, 8000794 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800078e:	2801      	cmp	r0, #1
 8000790:	d009      	beq.n	80007a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000792:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000794:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000796:	4809      	ldr	r0, [pc, #36]	; (80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8000798:	681a      	ldr	r2, [r3, #0]
 800079a:	3a00      	subs	r2, #0
 800079c:	bf18      	it	ne
 800079e:	2201      	movne	r2, #1
 80007a0:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007a2:	f006 ba21 	b.w	8006be8 <HAL_GPIO_WritePin>
 80007a6:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a8:	4805      	ldr	r0, [pc, #20]	; (80007c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007aa:	685a      	ldr	r2, [r3, #4]
 80007ac:	3a00      	subs	r2, #0
 80007ae:	bf18      	it	ne
 80007b0:	2201      	movne	r2, #1
 80007b2:	2110      	movs	r1, #16
 80007b4:	e7f5      	b.n	80007a2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007b6:	bf00      	nop
 80007b8:	20000164 	.word	0x20000164
 80007bc:	40021800 	.word	0x40021800
 80007c0:	40020c00 	.word	0x40020c00

080007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007c4:	b110      	cbz	r0, 80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007c6:	2801      	cmp	r0, #1
 80007c8:	d004      	beq.n	80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007cc:	4803      	ldr	r0, [pc, #12]	; (80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007ce:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007d0:	f006 ba0f 	b.w	8006bf2 <HAL_GPIO_TogglePin>
 80007d4:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7fa      	b.n	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007da:	bf00      	nop
 80007dc:	40021800 	.word	0x40021800
 80007e0:	40020c00 	.word	0x40020c00

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2801      	cmp	r0, #1
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	4804      	ldr	r0, [pc, #16]	; (8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 80007f8:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007fa:	f006 f9ef 	bl	8006bdc <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000800:	4802      	ldr	r0, [pc, #8]	; (800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000802:	2110      	movs	r1, #16
 8000804:	e7f9      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000806:	bf00      	nop
 8000808:	40021800 	.word	0x40021800
 800080c:	40020c00 	.word	0x40020c00

08000810 <_ZN8touchgfx4GPIO4initEv>:
{
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4d08      	ldr	r5, [pc, #32]	; (8000834 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000814:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000816:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000818:	b2e0      	uxtb	r0, r4
 800081a:	f7ff ffe3 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800081e:	b118      	cbz	r0, 8000828 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000824:	bf18      	it	ne
 8000826:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000828:	3401      	adds	r4, #1
 800082a:	2c05      	cmp	r4, #5
 800082c:	f105 0504 	add.w	r5, r5, #4
 8000830:	d1f2      	bne.n	8000818 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000832:	bd70      	pop	{r4, r5, r6, pc}
 8000834:	20000164 	.word	0x20000164

08000838 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000838:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800083a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800083e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000842:	4770      	bx	lr

08000844 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000844:	2000      	movs	r0, #0
 8000846:	4770      	bx	lr

08000848 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000848:	2000      	movs	r0, #0
 800084a:	4770      	bx	lr

0800084c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800084c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800084e:	b10b      	cbz	r3, 8000854 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000850:	4608      	mov	r0, r1
 8000852:	4718      	bx	r3
        }
    }
 8000854:	4770      	bx	lr

08000856 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000856:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800085a:	4770      	bx	lr

0800085c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800085c:	6840      	ldr	r0, [r0, #4]
 800085e:	6803      	ldr	r3, [r0, #0]
 8000860:	699b      	ldr	r3, [r3, #24]
 8000862:	4718      	bx	r3

08000864 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {

    }
 8000864:	4770      	bx	lr

08000866 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {

    }
 8000866:	4770      	bx	lr

08000868 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000868:	4b01      	ldr	r3, [pc, #4]	; (8000870 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800086a:	6818      	ldr	r0, [r3, #0]
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000174 	.word	0x20000174

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000878:	6803      	ldr	r3, [r0, #0]
{
 800087a:	4604      	mov	r4, r0
 800087c:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800087e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8000880:	4798      	blx	r3
    enableInterrupts();
 8000882:	6823      	ldr	r3, [r4, #0]
 8000884:	4620      	mov	r0, r4
 8000886:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000888:	4798      	blx	r3
    OSWrappers::waitForVSync();
 800088a:	f000 fa31 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800088e:	6823      	ldr	r3, [r4, #0]
 8000890:	4620      	mov	r0, r4
 8000892:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000894:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 8000896:	2100      	movs	r1, #0
 8000898:	4806      	ldr	r0, [pc, #24]	; (80008b4 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 800089a:	9100      	str	r1, [sp, #0]
 800089c:	2329      	movs	r3, #41	; 0x29
 800089e:	2215      	movs	r2, #21
 80008a0:	f005 ff87 	bl	80067b2 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008a4:	f000 fa24 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008a8:	6823      	ldr	r3, [r4, #0]
 80008aa:	4620      	mov	r0, r4
 80008ac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80008ae:	4798      	blx	r3
    for (;;)
 80008b0:	e7f8      	b.n	80008a4 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008b2:	bf00      	nop
 80008b4:	2000e708 	.word	0x2000e708

080008b8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008b8:	b510      	push	{r4, lr}
 80008ba:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008bc:	f00b ff0c 	bl	800c6d8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008c0:	6823      	ldr	r3, [r4, #0]
 80008c2:	4620      	mov	r0, r4
 80008c4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80008c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008cc:	4718      	bx	r3

080008ce <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008ce:	f000 bd72 	b.w	80013b6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008d2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008d2:	f000 bd71 	b.w	80013b8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008d6 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80008d6:	f000 bd71 	b.w	80013bc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

080008da <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008da:	f000 bd5b 	b.w	8001394 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008de <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008de:	f000 bd61 	b.w	80013a4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008e2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008e2:	f000 bd6d 	b.w	80013c0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

080008e8 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 80008e8:	4b02      	ldr	r3, [pc, #8]	; (80008f4 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 80008ea:	2200      	movs	r2, #0
 80008ec:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80008ee:	f00b b985 	b.w	800bbfc <_ZN8touchgfx3HAL10beginFrameEv>
 80008f2:	bf00      	nop
 80008f4:	20000014 	.word	0x20000014

080008f8 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 80008f8:	b510      	push	{r4, lr}
 80008fa:	4604      	mov	r4, r0
    HAL::endFrame();
 80008fc:	f00b f98a 	bl	800bc14 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8000900:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000904:	b113      	cbz	r3, 800090c <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000906:	4b02      	ldr	r3, [pc, #8]	; (8000910 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000908:	2201      	movs	r2, #1
 800090a:	701a      	strb	r2, [r3, #0]
    }
}
 800090c:	bd10      	pop	{r4, pc}
 800090e:	bf00      	nop
 8000910:	20000014 	.word	0x20000014

08000914 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000914:	f00b b95a 	b.w	800bbcc <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000918 <_ZN11TouchGFXHALD0Ev>:
 8000918:	b510      	push	{r4, lr}
 800091a:	217c      	movs	r1, #124	; 0x7c
 800091c:	4604      	mov	r4, r0
 800091e:	f020 fdd8 	bl	80214d2 <_ZdlPvj>
 8000922:	4620      	mov	r0, r4
 8000924:	bd10      	pop	{r4, pc}

08000926 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000926:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800092a:	b11b      	cbz	r3, 8000934 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 800092c:	6840      	ldr	r0, [r0, #4]
 800092e:	6803      	ldr	r3, [r0, #0]
 8000930:	681b      	ldr	r3, [r3, #0]
 8000932:	4718      	bx	r3
    }
 8000934:	4618      	mov	r0, r3
 8000936:	4770      	bx	lr

08000938 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000938:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800093a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800093e:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 8000942:	4b10      	ldr	r3, [pc, #64]	; (8000984 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 8000944:	428c      	cmp	r4, r1
 8000946:	781a      	ldrb	r2, [r3, #0]
 8000948:	d00d      	beq.n	8000966 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 800094a:	b95a      	cbnz	r2, 8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800094c:	4a0e      	ldr	r2, [pc, #56]	; (8000988 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 800094e:	490f      	ldr	r1, [pc, #60]	; (800098c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000950:	480f      	ldr	r0, [pc, #60]	; (8000990 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000952:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000954:	4d0f      	ldr	r5, [pc, #60]	; (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000956:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000958:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800095a:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800095c:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800095e:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 8000960:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000962:	701a      	strb	r2, [r3, #0]
    }
 8000964:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000966:	2a00      	cmp	r2, #0
 8000968:	d0fc      	beq.n	8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800096a:	4809      	ldr	r0, [pc, #36]	; (8000990 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 800096c:	4a07      	ldr	r2, [pc, #28]	; (800098c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 800096e:	8801      	ldrh	r1, [r0, #0]
 8000970:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 8000972:	4a05      	ldr	r2, [pc, #20]	; (8000988 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000974:	4d07      	ldr	r5, [pc, #28]	; (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 8000976:	8814      	ldrh	r4, [r2, #0]
 8000978:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 800097a:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 800097c:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 800097e:	2200      	movs	r2, #0
 8000980:	e7ef      	b.n	8000962 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 8000982:	bf00      	nop
 8000984:	2000e3d8 	.word	0x2000e3d8
 8000988:	2000e3d4 	.word	0x2000e3d4
 800098c:	2000e3da 	.word	0x2000e3da
 8000990:	2000e3d6 	.word	0x2000e3d6
 8000994:	2000e3dc 	.word	0x2000e3dc

08000998 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8000998:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 800099a:	4c0c      	ldr	r4, [pc, #48]	; (80009cc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 800099c:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800099e:	b931      	cbnz	r1, 80009ae <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 80009a0:	4b0b      	ldr	r3, [pc, #44]	; (80009d0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80009a2:	4a0c      	ldr	r2, [pc, #48]	; (80009d4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80009a4:	480c      	ldr	r0, [pc, #48]	; (80009d8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80009a6:	f240 216b 	movw	r1, #619	; 0x26b
 80009aa:	f021 fbb1 	bl	8022110 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009ae:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009b2:	3a00      	subs	r2, #0
 80009b4:	4909      	ldr	r1, [pc, #36]	; (80009dc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80009b6:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009b8:	bf18      	it	ne
 80009ba:	2201      	movne	r2, #1
 80009bc:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80009be:	3b00      	subs	r3, #0
 80009c0:	4a07      	ldr	r2, [pc, #28]	; (80009e0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 80009c2:	bf18      	it	ne
 80009c4:	2301      	movne	r3, #1
 80009c6:	7013      	strb	r3, [r2, #0]
}
 80009c8:	bd10      	pop	{r4, pc}
 80009ca:	bf00      	nop
 80009cc:	20000174 	.word	0x20000174
 80009d0:	0802334c 	.word	0x0802334c
 80009d4:	08023384 	.word	0x08023384
 80009d8:	080233d2 	.word	0x080233d2
 80009dc:	2000e3de 	.word	0x2000e3de
 80009e0:	2000e3df 	.word	0x2000e3df

080009e4 <_ZN11TouchGFXHAL10initializeEv>:
{
 80009e4:	b538      	push	{r3, r4, r5, lr}
 80009e6:	4604      	mov	r4, r0
    mcuInstr.init();
 80009e8:	4d09      	ldr	r5, [pc, #36]	; (8000a10 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80009ea:	f7ff ff11 	bl	8000810 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80009ee:	4620      	mov	r0, r4
 80009f0:	f000 fcf2 	bl	80013d8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 80009f4:	2300      	movs	r3, #0
 80009f6:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 80009fa:	4628      	mov	r0, r5
 80009fc:	f7ff fe04 	bl	8000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000a00:	2301      	movs	r3, #1
 8000a02:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 8000a06:	4b03      	ldr	r3, [pc, #12]	; (8000a14 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 8000a08:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8000a0a:	6163      	str	r3, [r4, #20]
}
 8000a0c:	bd38      	pop	{r3, r4, r5, pc}
 8000a0e:	bf00      	nop
 8000a10:	20000180 	.word	0x20000180
 8000a14:	2000017c 	.word	0x2000017c

08000a18 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a18:	2801      	cmp	r0, #1
    {
 8000a1a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a1c:	d80a      	bhi.n	8000a34 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a1e:	784b      	ldrb	r3, [r1, #1]
 8000a20:	9300      	str	r3, [sp, #0]
 8000a22:	780b      	ldrb	r3, [r1, #0]
 8000a24:	4808      	ldr	r0, [pc, #32]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a26:	2215      	movs	r2, #21
 8000a28:	2100      	movs	r1, #0
 8000a2a:	f005 fec2 	bl	80067b2 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a2e:	b003      	add	sp, #12
 8000a30:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a34:	9101      	str	r1, [sp, #4]
 8000a36:	5c0b      	ldrb	r3, [r1, r0]
 8000a38:	9300      	str	r3, [sp, #0]
 8000a3a:	2239      	movs	r2, #57	; 0x39
 8000a3c:	4603      	mov	r3, r0
 8000a3e:	2100      	movs	r1, #0
 8000a40:	4801      	ldr	r0, [pc, #4]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a42:	f005 fec7 	bl	80067d4 <HAL_DSI_LongWrite>
    }
 8000a46:	e7f2      	b.n	8000a2e <DSI_IO_WriteCmd+0x16>
 8000a48:	2000e708 	.word	0x2000e708

08000a4c <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a4e:	4a0b      	ldr	r2, [pc, #44]	; (8000a7c <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a50:	4c0b      	ldr	r4, [pc, #44]	; (8000a80 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a52:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a54:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a56:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a58:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a5a:	9201      	str	r2, [sp, #4]
 8000a5c:	2244      	movs	r2, #68	; 0x44
 8000a5e:	9200      	str	r2, [sp, #0]
 8000a60:	2100      	movs	r1, #0
 8000a62:	2239      	movs	r2, #57	; 0x39
 8000a64:	4620      	mov	r0, r4
 8000a66:	f005 feb5 	bl	80067d4 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	9100      	str	r1, [sp, #0]
 8000a6e:	2335      	movs	r3, #53	; 0x35
 8000a70:	462a      	mov	r2, r5
 8000a72:	4620      	mov	r0, r4
 8000a74:	f005 fe9d 	bl	80067b2 <HAL_DSI_ShortWrite>
    }
 8000a78:	b003      	add	sp, #12
 8000a7a:	bd30      	pop	{r4, r5, pc}
 8000a7c:	2000018c 	.word	0x2000018c
 8000a80:	2000e708 	.word	0x2000e708

08000a84 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000a84:	b507      	push	{r0, r1, r2, lr}
 8000a86:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000a88:	f7ff ffe0 	bl	8000a4c <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a8c:	9801      	ldr	r0, [sp, #4]
}
 8000a8e:	b003      	add	sp, #12
 8000a90:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a94:	f000 bc8e 	b.w	80013b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a98 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000a98:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000a9a:	4b07      	ldr	r3, [pc, #28]	; (8000ab8 <LCD_SetUpdateRegion+0x20>)
 8000a9c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000aa0:	232a      	movs	r3, #42	; 0x2a
 8000aa2:	9001      	str	r0, [sp, #4]
 8000aa4:	9300      	str	r3, [sp, #0]
 8000aa6:	2239      	movs	r2, #57	; 0x39
 8000aa8:	2304      	movs	r3, #4
 8000aaa:	2100      	movs	r1, #0
 8000aac:	4803      	ldr	r0, [pc, #12]	; (8000abc <LCD_SetUpdateRegion+0x24>)
 8000aae:	f005 fe91 	bl	80067d4 <HAL_DSI_LongWrite>
    }
 8000ab2:	b003      	add	sp, #12
 8000ab4:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ab8:	20000004 	.word	0x20000004
 8000abc:	2000e708 	.word	0x2000e708

08000ac0 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000ac0:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000ac2:	4d15      	ldr	r5, [pc, #84]	; (8000b18 <HAL_DSI_TearingEffectCallback+0x58>)
 8000ac4:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000ac6:	2000      	movs	r0, #0
 8000ac8:	f7ff fe44 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000acc:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000ace:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000ad8:	f000 f8fe 	bl	8000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000adc:	4b0f      	ldr	r3, [pc, #60]	; (8000b1c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000ade:	6828      	ldr	r0, [r5, #0]
 8000ae0:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000ae2:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000ae4:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000ae8:	b123      	cbz	r3, 8000af4 <HAL_DSI_TearingEffectCallback+0x34>
 8000aea:	4d0d      	ldr	r5, [pc, #52]	; (8000b20 <HAL_DSI_TearingEffectCallback+0x60>)
 8000aec:	782b      	ldrb	r3, [r5, #0]
 8000aee:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000af2:	b123      	cbz	r3, 8000afe <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000af4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000af8:	2000      	movs	r0, #0
 8000afa:	f7ff be47 	b.w	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000afe:	f00b fdeb 	bl	800c6d8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b02:	4b08      	ldr	r3, [pc, #32]	; (8000b24 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b04:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b06:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b08:	f7ff ffc6 	bl	8000a98 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b0c:	4620      	mov	r0, r4
 8000b0e:	f005 fe40 	bl	8006792 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b12:	2301      	movs	r3, #1
 8000b14:	702b      	strb	r3, [r5, #0]
    }
 8000b16:	bd70      	pop	{r4, r5, r6, pc}
 8000b18:	2000e3e0 	.word	0x2000e3e0
 8000b1c:	20000014 	.word	0x20000014
 8000b20:	2000018e 	.word	0x2000018e
 8000b24:	20000178 	.word	0x20000178

08000b28 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b28:	4b30      	ldr	r3, [pc, #192]	; (8000bec <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b2a:	4a31      	ldr	r2, [pc, #196]	; (8000bf0 <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b2c:	b570      	push	{r4, r5, r6, lr}
 8000b2e:	4605      	mov	r5, r0
        updateRegion++;
 8000b30:	6818      	ldr	r0, [r3, #0]
 8000b32:	4c30      	ldr	r4, [pc, #192]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b34:	3001      	adds	r0, #1
 8000b36:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b38:	4b2f      	ldr	r3, [pc, #188]	; (8000bf8 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b3a:	2803      	cmp	r0, #3
 8000b3c:	681e      	ldr	r6, [r3, #0]
 8000b3e:	dc2a      	bgt.n	8000b96 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b40:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b44:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b48:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b4c:	f021 0108 	bic.w	r1, r1, #8
 8000b50:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b54:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b56:	bf0c      	ite	eq
 8000b58:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b5a:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b5c:	3302      	adds	r3, #2
 8000b5e:	4927      	ldr	r1, [pc, #156]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b60:	041b      	lsls	r3, r3, #16
 8000b62:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b66:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b68:	4b25      	ldr	r3, [pc, #148]	; (8000c00 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b6a:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b6c:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b70:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b72:	4b24      	ldr	r3, [pc, #144]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000b74:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b76:	2301      	movs	r3, #1
 8000b78:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000b7a:	f7ff ff8d 	bl	8000a98 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000b7e:	4a1d      	ldr	r2, [pc, #116]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b80:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000b84:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000b88:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000b8a:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000b8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000b92:	f005 bdfe 	b.w	8006792 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b96:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000b9a:	491b      	ldr	r1, [pc, #108]	; (8000c08 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b9c:	f023 0308 	bic.w	r3, r3, #8
 8000ba0:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba4:	4b15      	ldr	r3, [pc, #84]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000ba6:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba8:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000baa:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bae:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bb0:	4916      	ldr	r1, [pc, #88]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bb2:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000bb4:	4913      	ldr	r1, [pc, #76]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000bb6:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bb8:	2201      	movs	r2, #1
 8000bba:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000bbc:	2000      	movs	r0, #0
 8000bbe:	f7ff ff6b 	bl	8000a98 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bc2:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bc6:	f043 0308 	orr.w	r3, r3, #8
 8000bca:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000bce:	2000      	movs	r0, #0
 8000bd0:	f7ff fddc 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000bd4:	4b0e      	ldr	r3, [pc, #56]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000bd6:	2200      	movs	r2, #0
 8000bd8:	701a      	strb	r2, [r3, #0]
        return instance;
 8000bda:	4b0e      	ldr	r3, [pc, #56]	; (8000c14 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000bdc:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000bde:	b120      	cbz	r0, 8000bea <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000be0:	6803      	ldr	r3, [r0, #0]
    }
 8000be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000be6:	699b      	ldr	r3, [r3, #24]
 8000be8:	4718      	bx	r3
 8000bea:	bd70      	pop	{r4, r5, r6, pc}
 8000bec:	20000178 	.word	0x20000178
 8000bf0:	40016884 	.word	0x40016884
 8000bf4:	40016c00 	.word	0x40016c00
 8000bf8:	20000174 	.word	0x20000174
 8000bfc:	40016800 	.word	0x40016800
 8000c00:	00ca01e3 	.word	0x00ca01e3
 8000c04:	06800193 	.word	0x06800193
 8000c08:	00ca01e2 	.word	0x00ca01e2
 8000c0c:	00ca0003 	.word	0x00ca0003
 8000c10:	2000018e 	.word	0x2000018e
 8000c14:	2000e3e0 	.word	0x2000e3e0

08000c18 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c18:	b508      	push	{r3, lr}
 8000c1a:	4b04      	ldr	r3, [pc, #16]	; (8000c2c <IdleTaskHook+0x14>)
 8000c1c:	4601      	mov	r1, r0
 8000c1e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c20:	b101      	cbz	r1, 8000c24 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c22:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c24:	f00b fd72 	bl	800c70c <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c28:	2001      	movs	r0, #1
 8000c2a:	bd08      	pop	{r3, pc}
 8000c2c:	2000e3e0 	.word	0x2000e3e0

08000c30 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c30:	4b05      	ldr	r3, [pc, #20]	; (8000c48 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c32:	4806      	ldr	r0, [pc, #24]	; (8000c4c <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	605a      	str	r2, [r3, #4]
 8000c38:	609a      	str	r2, [r3, #8]
 8000c3a:	4a05      	ldr	r2, [pc, #20]	; (8000c50 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c3c:	601a      	str	r2, [r3, #0]
 8000c3e:	4b05      	ldr	r3, [pc, #20]	; (8000c54 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c40:	6003      	str	r3, [r0, #0]
        init();
 8000c42:	f7ff bd17 	b.w	8000674 <_ZN8touchgfx10KeySampler4initEv>
 8000c46:	bf00      	nop
 8000c48:	20000180 	.word	0x20000180
 8000c4c:	2000017c 	.word	0x2000017c
 8000c50:	0802326c 	.word	0x0802326c
 8000c54:	08023294 	.word	0x08023294

08000c58 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c58:	2101      	movs	r1, #1
{
 8000c5a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c5c:	2200      	movs	r2, #0
 8000c5e:	4608      	mov	r0, r1
 8000c60:	f007 ffd2 	bl	8008c08 <osSemaphoreNew>
 8000c64:	4b0a      	ldr	r3, [pc, #40]	; (8000c90 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c66:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c68:	b928      	cbnz	r0, 8000c76 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c6a:	4b0a      	ldr	r3, [pc, #40]	; (8000c94 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c6c:	4a0a      	ldr	r2, [pc, #40]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c6e:	2125      	movs	r1, #37	; 0x25

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c70:	480a      	ldr	r0, [pc, #40]	; (8000c9c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c72:	f021 fa4d 	bl	8022110 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000c76:	2200      	movs	r2, #0
 8000c78:	2104      	movs	r1, #4
 8000c7a:	2001      	movs	r0, #1
 8000c7c:	f008 f88a 	bl	8008d94 <osMessageQueueNew>
 8000c80:	4b07      	ldr	r3, [pc, #28]	; (8000ca0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000c82:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c84:	b918      	cbnz	r0, 8000c8e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000c86:	4b07      	ldr	r3, [pc, #28]	; (8000ca4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000c88:	4a03      	ldr	r2, [pc, #12]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c8a:	2129      	movs	r1, #41	; 0x29
 8000c8c:	e7f0      	b.n	8000c70 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000c8e:	bd08      	pop	{r3, pc}
 8000c90:	20000194 	.word	0x20000194
 8000c94:	080234d4 	.word	0x080234d4
 8000c98:	0802351d 	.word	0x0802351d
 8000c9c:	0802354c 	.word	0x0802354c
 8000ca0:	20000190 	.word	0x20000190
 8000ca4:	0802359b 	.word	0x0802359b

08000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000ca8:	4b02      	ldr	r3, [pc, #8]	; (8000cb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000caa:	f04f 31ff 	mov.w	r1, #4294967295
 8000cae:	6818      	ldr	r0, [r3, #0]
 8000cb0:	f008 b800 	b.w	8008cb4 <osSemaphoreAcquire>
 8000cb4:	20000194 	.word	0x20000194

08000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000cb8:	4b01      	ldr	r3, [pc, #4]	; (8000cc0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000cba:	6818      	ldr	r0, [r3, #0]
 8000cbc:	f008 b834 	b.w	8008d28 <osSemaphoreRelease>
 8000cc0:	20000194 	.word	0x20000194

08000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cc4:	4b02      	ldr	r3, [pc, #8]	; (8000cd0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	6818      	ldr	r0, [r3, #0]
 8000cca:	f007 bff3 	b.w	8008cb4 <osSemaphoreAcquire>
 8000cce:	bf00      	nop
 8000cd0:	20000194 	.word	0x20000194

08000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000cd4:	f7ff bff0 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000cd8:	4803      	ldr	r0, [pc, #12]	; (8000ce8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000cda:	4904      	ldr	r1, [pc, #16]	; (8000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000cdc:	6800      	ldr	r0, [r0, #0]
 8000cde:	2300      	movs	r3, #0
 8000ce0:	461a      	mov	r2, r3
 8000ce2:	f008 b89d 	b.w	8008e20 <osMessageQueuePut>
 8000ce6:	bf00      	nop
 8000ce8:	20000190 	.word	0x20000190
 8000cec:	20000018 	.word	0x20000018

08000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000cf0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000cf2:	4c08      	ldr	r4, [pc, #32]	; (8000d14 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	461a      	mov	r2, r3
 8000cf8:	a901      	add	r1, sp, #4
 8000cfa:	6820      	ldr	r0, [r4, #0]
 8000cfc:	f008 f8d2 	bl	8008ea4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d00:	6820      	ldr	r0, [r4, #0]
 8000d02:	f04f 33ff 	mov.w	r3, #4294967295
 8000d06:	2200      	movs	r2, #0
 8000d08:	a901      	add	r1, sp, #4
 8000d0a:	f008 f8cb 	bl	8008ea4 <osMessageQueueGet>
}
 8000d0e:	b002      	add	sp, #8
 8000d10:	bd10      	pop	{r4, pc}
 8000d12:	bf00      	nop
 8000d14:	20000190 	.word	0x20000190

08000d18 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d18:	6803      	ldr	r3, [r0, #0]
 8000d1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d1c:	4718      	bx	r3

08000d1e <_ZN10STM32F4DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d1e:	2001      	movs	r0, #1
 8000d20:	4770      	bx	lr

08000d22 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d22:	6803      	ldr	r3, [r0, #0]
 8000d24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d26:	4718      	bx	r3

08000d28 <_ZN10STM32F4DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32F4DMA::initialize()
{
 8000d28:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d2a:	2300      	movs	r3, #0
 8000d2c:	9301      	str	r3, [sp, #4]
 8000d2e:	4b0d      	ldr	r3, [pc, #52]	; (8000d64 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 8000d30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d32:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d36:	631a      	str	r2, [r3, #48]	; 0x30
 8000d38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d3a:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d3e:	9201      	str	r2, [sp, #4]
 8000d40:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d42:	691a      	ldr	r2, [r3, #16]
 8000d44:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d48:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d4a:	691a      	ldr	r2, [r3, #16]
 8000d4c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000d50:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d52:	4b05      	ldr	r3, [pc, #20]	; (8000d68 <_ZN10STM32F4DMA10initializeEv+0x40>)
 8000d54:	4a05      	ldr	r2, [pc, #20]	; (8000d6c <_ZN10STM32F4DMA10initializeEv+0x44>)
 8000d56:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d58:	4b05      	ldr	r3, [pc, #20]	; (8000d70 <_ZN10STM32F4DMA10initializeEv+0x48>)
 8000d5a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d5e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000d60:	b002      	add	sp, #8
 8000d62:	4770      	bx	lr
 8000d64:	40023800 	.word	0x40023800
 8000d68:	2000e7f8 	.word	0x2000e7f8
 8000d6c:	08000d7d 	.word	0x08000d7d
 8000d70:	e000e100 	.word	0xe000e100

08000d74 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000d74:	f240 10ef 	movw	r0, #495	; 0x1ef
 8000d78:	4770      	bx	lr
	...

08000d7c <DMA2D_XferCpltCallback>:
    HAL::getInstance()->signalDMAInterrupt();
 8000d7c:	4b02      	ldr	r3, [pc, #8]	; (8000d88 <DMA2D_XferCpltCallback+0xc>)
 8000d7e:	681b      	ldr	r3, [r3, #0]
 8000d80:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000d82:	6803      	ldr	r3, [r0, #0]
 8000d84:	695b      	ldr	r3, [r3, #20]
 8000d86:	4718      	bx	r3
 8000d88:	2000e3e0 	.word	0x2000e3e0

08000d8c <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d8c:	b508      	push	{r3, lr}
 8000d8e:	280b      	cmp	r0, #11
 8000d90:	d80b      	bhi.n	8000daa <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d92:	e8df f000 	tbb	[pc, r0]
 8000d96:	0612      	.short	0x0612
 8000d98:	0a0a0a10 	.word	0x0a0a0a10
 8000d9c:	0808080a 	.word	0x0808080a
 8000da0:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000da2:	2001      	movs	r0, #1
}
 8000da4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000da6:	2005      	movs	r0, #5
        break;
 8000da8:	e7fc      	b.n	8000da4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000daa:	4b05      	ldr	r3, [pc, #20]	; (8000dc0 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dac:	4a05      	ldr	r2, [pc, #20]	; (8000dc4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dae:	4806      	ldr	r0, [pc, #24]	; (8000dc8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000db0:	2165      	movs	r1, #101	; 0x65
 8000db2:	f021 f9ad 	bl	8022110 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000db6:	2000      	movs	r0, #0
 8000db8:	e7f4      	b.n	8000da4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000dba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000dbc:	e7f2      	b.n	8000da4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dbe:	bf00      	nop
 8000dc0:	080235dd 	.word	0x080235dd
 8000dc4:	080235f8 	.word	0x080235f8
 8000dc8:	08023644 	.word	0x08023644

08000dcc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000dcc:	b508      	push	{r3, lr}
 8000dce:	280a      	cmp	r0, #10
 8000dd0:	d809      	bhi.n	8000de6 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000dd2:	e8df f000 	tbb	[pc, r0]
 8000dd6:	0610      	.short	0x0610
 8000dd8:	0808080e 	.word	0x0808080e
 8000ddc:	06060608 	.word	0x06060608
 8000de0:	06          	.byte	0x06
 8000de1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000de2:	2001      	movs	r0, #1
}
 8000de4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000de6:	4b05      	ldr	r3, [pc, #20]	; (8000dfc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000de8:	4a05      	ldr	r2, [pc, #20]	; (8000e00 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dea:	4806      	ldr	r0, [pc, #24]	; (8000e04 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dec:	2186      	movs	r1, #134	; 0x86
 8000dee:	f021 f98f 	bl	8022110 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000df2:	2000      	movs	r0, #0
 8000df4:	e7f6      	b.n	8000de4 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000df6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000df8:	e7f4      	b.n	8000de4 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dfa:	bf00      	nop
 8000dfc:	080235dd 	.word	0x080235dd
 8000e00:	08023691 	.word	0x08023691
 8000e04:	08023644 	.word	0x08023644

08000e08 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e0c:	7f4f      	ldrb	r7, [r1, #29]
{
 8000e0e:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e10:	4638      	mov	r0, r7
 8000e12:	f7ff ffbb 	bl	8000d8c <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e16:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e1a:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e1c:	4640      	mov	r0, r8
 8000e1e:	f7ff ffb5 	bl	8000d8c <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e22:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e24:	4640      	mov	r0, r8
 8000e26:	f7ff ffd1 	bl	8000dcc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e2a:	8a21      	ldrh	r1, [r4, #16]
 8000e2c:	8ae2      	ldrh	r2, [r4, #22]
 8000e2e:	4b54      	ldr	r3, [pc, #336]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
 8000e30:	1a52      	subs	r2, r2, r1
 8000e32:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e34:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e36:	8aa2      	ldrh	r2, [r4, #20]
 8000e38:	1a52      	subs	r2, r2, r1
 8000e3a:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e3c:	8a62      	ldrh	r2, [r4, #18]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e3e:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e40:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e44:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e46:	68e0      	ldr	r0, [r4, #12]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e48:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e4a:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e4c:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e4e:	f8d4 c000 	ldr.w	ip, [r4]
 8000e52:	7f22      	ldrb	r2, [r4, #28]
 8000e54:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000e58:	ea4f 6202 	mov.w	r2, r2, lsl #24
 8000e5c:	469e      	mov	lr, r3
 8000e5e:	d032      	beq.n	8000ec6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
 8000e60:	d829      	bhi.n	8000eb6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
 8000e62:	f1bc 0f20 	cmp.w	ip, #32
 8000e66:	ea45 0102 	orr.w	r1, r5, r2
 8000e6a:	d075      	beq.n	8000f58 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
 8000e6c:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000e70:	d072      	beq.n	8000f58 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
 8000e72:	f1bc 0f04 	cmp.w	ip, #4
 8000e76:	d03c      	beq.n	8000ef2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e78:	4b41      	ldr	r3, [pc, #260]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
 8000e7a:	432a      	orrs	r2, r5
 8000e7c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        if (blitOp.srcFormat == Bitmap::L8)
 8000e80:	2f0b      	cmp	r7, #11
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e82:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat == Bitmap::L8)
 8000e84:	d179      	bne.n	8000f7a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x172>
        {
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000e86:	68a2      	ldr	r2, [r4, #8]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000e88:	1d11      	adds	r1, r2, #4
 8000e8a:	62d9      	str	r1, [r3, #44]	; 0x2c

            /* Write foreground CLUT size and CLUT color mode */
            MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e8c:	69d9      	ldr	r1, [r3, #28]
 8000e8e:	8852      	ldrh	r2, [r2, #2]
 8000e90:	1e50      	subs	r0, r2, #1
 8000e92:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000e96:	f022 0210 	bic.w	r2, r2, #16
 8000e9a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000e9e:	f042 0210 	orr.w	r2, r2, #16
 8000ea2:	61da      	str	r2, [r3, #28]

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000ea4:	69da      	ldr	r2, [r3, #28]
 8000ea6:	f042 0220 	orr.w	r2, r2, #32
 8000eaa:	61da      	str	r2, [r3, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000eac:	69da      	ldr	r2, [r3, #28]
 8000eae:	0692      	lsls	r2, r2, #26
 8000eb0:	d55f      	bpl.n	8000f72 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16a>
            {
                __NOP();
 8000eb2:	bf00      	nop
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000eb4:	e7fa      	b.n	8000eac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
    switch (blitOp.operation)
 8000eb6:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000eba:	d1dd      	bne.n	8000e78 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ebc:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ec0:	f042 0209 	orr.w	r2, r2, #9
 8000ec4:	e003      	b.n	8000ece <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ec6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000eca:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ece:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8000ed0:	69a1      	ldr	r1, [r4, #24]
 8000ed2:	020a      	lsls	r2, r1, #8
 8000ed4:	014c      	lsls	r4, r1, #5
 8000ed6:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000eda:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8000ede:	00c9      	lsls	r1, r1, #3
 8000ee0:	4322      	orrs	r2, r4
 8000ee2:	b2c9      	uxtb	r1, r1
 8000ee4:	430a      	orrs	r2, r1
 8000ee6:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ee8:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000eea:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000eec:	4a25      	ldr	r2, [pc, #148]	; (8000f84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
        }
        else
        {
            /* Start DMA2D */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000eee:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ef0:	e03d      	b.n	8000f6e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ef2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
        if (blitOp.srcFormat == Bitmap::L8)
 8000ef6:	2f0b      	cmp	r7, #11
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ef8:	61d9      	str	r1, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000efa:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000efc:	6158      	str	r0, [r3, #20]
        if (blitOp.srcFormat == Bitmap::L8)
 8000efe:	d129      	bne.n	8000f54 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000f00:	68a1      	ldr	r1, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000f02:	4821      	ldr	r0, [pc, #132]	; (8000f88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x180>)
 8000f04:	1d0a      	adds	r2, r1, #4
 8000f06:	62da      	str	r2, [r3, #44]	; 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
 8000f08:	780a      	ldrb	r2, [r1, #0]
 8000f0a:	b13a      	cbz	r2, 8000f1c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x114>
 8000f0c:	2a01      	cmp	r2, #1
 8000f0e:	d016      	beq.n	8000f3e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
                assert(0 && "Unsupported format");
 8000f10:	4b1e      	ldr	r3, [pc, #120]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>)
 8000f12:	4a1f      	ldr	r2, [pc, #124]	; (8000f90 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f14:	481f      	ldr	r0, [pc, #124]	; (8000f94 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000f16:	21fc      	movs	r1, #252	; 0xfc
 8000f18:	f021 f8fa 	bl	8022110 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f1c:	69da      	ldr	r2, [r3, #28]
 8000f1e:	8849      	ldrh	r1, [r1, #2]
 8000f20:	4002      	ands	r2, r0
 8000f22:	3901      	subs	r1, #1
 8000f24:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f28:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f2a:	4b15      	ldr	r3, [pc, #84]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
 8000f2c:	69da      	ldr	r2, [r3, #28]
 8000f2e:	f042 0220 	orr.w	r2, r2, #32
 8000f32:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f34:	69da      	ldr	r2, [r3, #28]
 8000f36:	0691      	lsls	r1, r2, #26
 8000f38:	d50a      	bpl.n	8000f50 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
                __NOP();
 8000f3a:	bf00      	nop
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f3c:	e7fa      	b.n	8000f34 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12c>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f3e:	69da      	ldr	r2, [r3, #28]
 8000f40:	8849      	ldrh	r1, [r1, #2]
 8000f42:	4002      	ands	r2, r0
 8000f44:	3901      	subs	r1, #1
 8000f46:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000f4a:	f042 0210 	orr.w	r2, r2, #16
 8000f4e:	e7eb      	b.n	8000f28 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f50:	2210      	movs	r2, #16
 8000f52:	609a      	str	r2, [r3, #8]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f54:	4b0a      	ldr	r3, [pc, #40]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
 8000f56:	e7c9      	b.n	8000eec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe4>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f58:	4b0a      	ldr	r3, [pc, #40]	; (8000f84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f5a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
 8000f5e:	f8ce 101c 	str.w	r1, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f62:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f66:	f8ce 0014 	str.w	r0, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f6a:	f8ce 3000 	str.w	r3, [lr]
}
 8000f6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f72:	2210      	movs	r2, #16
 8000f74:	609a      	str	r2, [r3, #8]
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f76:	4a08      	ldr	r2, [pc, #32]	; (8000f98 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
 8000f78:	e7b9      	b.n	8000eee <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000f7a:	f240 2201 	movw	r2, #513	; 0x201
 8000f7e:	e7b6      	b.n	8000eee <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
 8000f80:	4002b000 	.word	0x4002b000
 8000f84:	00020201 	.word	0x00020201
 8000f88:	ffff00ef 	.word	0xffff00ef
 8000f8c:	080236de 	.word	0x080236de
 8000f90:	080236f8 	.word	0x080236f8
 8000f94:	08023644 	.word	0x08023644
 8000f98:	00010201 	.word	0x00010201

08000f9c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32F4DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f9e:	7f8e      	ldrb	r6, [r1, #30]
{
 8000fa0:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000fa2:	4630      	mov	r0, r6
 8000fa4:	f7ff ff12 	bl	8000dcc <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fa8:	8a27      	ldrh	r7, [r4, #16]
 8000faa:	8a61      	ldrh	r1, [r4, #18]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fac:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fae:	4b1e      	ldr	r3, [pc, #120]	; (8001028 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fb0:	68e5      	ldr	r5, [r4, #12]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fb2:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fb4:	ea41 4107 	orr.w	r1, r1, r7, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb8:	1bd2      	subs	r2, r2, r7
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fba:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fbc:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fbe:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fc0:	6821      	ldr	r1, [r4, #0]
 8000fc2:	2908      	cmp	r1, #8
 8000fc4:	d118      	bne.n	8000ff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc6:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc8:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fca:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000fcc:	7f21      	ldrb	r1, [r4, #28]
 8000fce:	4a17      	ldr	r2, [pc, #92]	; (800102c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
 8000fd0:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8000fd4:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 8000fd6:	69a1      	ldr	r1, [r4, #24]
 8000fd8:	020a      	lsls	r2, r1, #8
 8000fda:	0148      	lsls	r0, r1, #5
 8000fdc:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000fe0:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8000fe4:	00c9      	lsls	r1, r1, #3
 8000fe6:	b2c9      	uxtb	r1, r1
 8000fe8:	4302      	orrs	r2, r0
 8000fea:	430a      	orrs	r2, r1
 8000fec:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000fee:	4a10      	ldr	r2, [pc, #64]	; (8001030 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ff0:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ff2:	60dd      	str	r5, [r3, #12]
            // set color
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
        }

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000ff4:	601a      	str	r2, [r3, #0]
    }
}
 8000ff6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000ff8:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ffa:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000ffc:	611a      	str	r2, [r3, #16]
        if (blitOp.dstFormat == Bitmap::RGB565)
 8000ffe:	69a1      	ldr	r1, [r4, #24]
 8001000:	b91e      	cbnz	r6, 800100a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6e>
            WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8001002:	6399      	str	r1, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001004:	4b08      	ldr	r3, [pc, #32]	; (8001028 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
 8001006:	4a0b      	ldr	r2, [pc, #44]	; (8001034 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
 8001008:	e7f4      	b.n	8000ff4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 800100a:	020a      	lsls	r2, r1, #8
 800100c:	0148      	lsls	r0, r1, #5
 800100e:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8001012:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8001016:	00c9      	lsls	r1, r1, #3
 8001018:	b2c9      	uxtb	r1, r1
 800101a:	4302      	orrs	r2, r0
 800101c:	430a      	orrs	r2, r1
 800101e:	7f21      	ldrb	r1, [r4, #28]
 8001020:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8001024:	639a      	str	r2, [r3, #56]	; 0x38
 8001026:	e7ed      	b.n	8001004 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>
 8001028:	4002b000 	.word	0x4002b000
 800102c:	00010009 	.word	0x00010009
 8001030:	00020201 	.word	0x00020201
 8001034:	00030201 	.word	0x00030201

08001038 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8001038:	4b05      	ldr	r3, [pc, #20]	; (8001050 <_ZN10STM32F4DMAD1Ev+0x18>)
 800103a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800103c:	4b05      	ldr	r3, [pc, #20]	; (8001054 <_ZN10STM32F4DMAD1Ev+0x1c>)
 800103e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001042:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001046:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800104a:	f3bf 8f6f 	isb	sy
}
 800104e:	4770      	bx	lr
 8001050:	08023740 	.word	0x08023740
 8001054:	e000e100 	.word	0xe000e100

08001058 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8001058:	b510      	push	{r4, lr}
 800105a:	4604      	mov	r4, r0
}
 800105c:	f7ff ffec 	bl	8001038 <_ZN10STM32F4DMAD1Ev>
 8001060:	4620      	mov	r0, r4
 8001062:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8001066:	f020 fa34 	bl	80214d2 <_ZdlPvj>
 800106a:	4620      	mov	r0, r4
 800106c:	bd10      	pop	{r4, pc}
	...

08001070 <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 8001070:	b570      	push	{r4, r5, r6, lr}
 8001072:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001074:	4625      	mov	r5, r4
 8001076:	4b0a      	ldr	r3, [pc, #40]	; (80010a0 <_ZN10STM32F4DMAC1Ev+0x30>)
 8001078:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800107a:	2600      	movs	r6, #0
 800107c:	6060      	str	r0, [r4, #4]
 800107e:	7226      	strb	r6, [r4, #8]
 8001080:	7266      	strb	r6, [r4, #9]
 8001082:	f845 3b20 	str.w	r3, [r5], #32
 8001086:	2260      	movs	r2, #96	; 0x60
 8001088:	4629      	mov	r1, r5
 800108a:	f00b fc6d 	bl	800c968 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800108e:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001092:	61ae      	str	r6, [r5, #24]
 8001094:	3520      	adds	r5, #32
 8001096:	42ab      	cmp	r3, r5
 8001098:	d1fb      	bne.n	8001092 <_ZN10STM32F4DMAC1Ev+0x22>
}
 800109a:	4620      	mov	r0, r4
 800109c:	bd70      	pop	{r4, r5, r6, pc}
 800109e:	bf00      	nop
 80010a0:	08023740 	.word	0x08023740

080010a4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010a4:	2001      	movs	r0, #1
 80010a6:	4770      	bx	lr

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010a8:	200c      	movs	r0, #12
 80010aa:	4770      	bx	lr

080010ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010ac:	230c      	movs	r3, #12
 80010ae:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010b2:	3008      	adds	r0, #8
 80010b4:	4770      	bx	lr

080010b6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010b6:	230c      	movs	r3, #12
 80010b8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010bc:	3008      	adds	r0, #8
 80010be:	4770      	bx	lr

080010c0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010c0:	2001      	movs	r0, #1
 80010c2:	4770      	bx	lr

080010c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010c4:	f244 3084 	movw	r0, #17284	; 0x4384
 80010c8:	4770      	bx	lr

080010ca <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ca:	f244 3384 	movw	r3, #17284	; 0x4384
 80010ce:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d2:	3008      	adds	r0, #8
 80010d4:	4770      	bx	lr

080010d6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010d6:	f244 3384 	movw	r3, #17284	; 0x4384
 80010da:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010de:	3008      	adds	r0, #8
 80010e0:	4770      	bx	lr

080010e2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010e2:	2001      	movs	r0, #1
 80010e4:	4770      	bx	lr

080010e6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010e6:	2010      	movs	r0, #16
 80010e8:	4770      	bx	lr

080010ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ea:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010ee:	3008      	adds	r0, #8
 80010f0:	4770      	bx	lr

080010f2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010f2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010f6:	3008      	adds	r0, #8
 80010f8:	4770      	bx	lr

080010fa <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010fa:	4608      	mov	r0, r1
 80010fc:	f001 b97a 	b.w	80023f4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001100 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001100:	b510      	push	{r4, lr}
 8001102:	4b03      	ldr	r3, [pc, #12]	; (8001110 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001104:	6003      	str	r3, [r0, #0]
 8001106:	4604      	mov	r4, r0
 8001108:	f009 fec2 	bl	800ae90 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800110c:	4620      	mov	r0, r4
 800110e:	bd10      	pop	{r4, pc}
 8001110:	080237f8 	.word	0x080237f8

08001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001114:	b510      	push	{r4, lr}
 8001116:	4604      	mov	r4, r0
 8001118:	f7ff fff2 	bl	8001100 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800111c:	4620      	mov	r0, r4
 800111e:	2114      	movs	r1, #20
 8001120:	f020 f9d7 	bl	80214d2 <_ZdlPvj>
 8001124:	4620      	mov	r0, r4
 8001126:	bd10      	pop	{r4, pc}

08001128 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001128:	b510      	push	{r4, lr}
 800112a:	4b03      	ldr	r3, [pc, #12]	; (8001138 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800112c:	6003      	str	r3, [r0, #0]
 800112e:	4604      	mov	r4, r0
 8001130:	f009 feae 	bl	800ae90 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001134:	4620      	mov	r0, r4
 8001136:	bd10      	pop	{r4, pc}
 8001138:	080237c4 	.word	0x080237c4

0800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800113c:	b510      	push	{r4, lr}
 800113e:	4604      	mov	r4, r0
 8001140:	f7ff fff2 	bl	8001128 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001144:	4620      	mov	r0, r4
 8001146:	f244 318c 	movw	r1, #17292	; 0x438c
 800114a:	f020 f9c2 	bl	80214d2 <_ZdlPvj>
 800114e:	4620      	mov	r0, r4
 8001150:	bd10      	pop	{r4, pc}
	...

08001154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001154:	b510      	push	{r4, lr}
 8001156:	4b03      	ldr	r3, [pc, #12]	; (8001164 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001158:	6003      	str	r3, [r0, #0]
 800115a:	4604      	mov	r4, r0
 800115c:	f009 fe98 	bl	800ae90 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001160:	4620      	mov	r0, r4
 8001162:	bd10      	pop	{r4, pc}
 8001164:	08023790 	.word	0x08023790

08001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001168:	b510      	push	{r4, lr}
 800116a:	4604      	mov	r4, r0
 800116c:	f7ff fff2 	bl	8001154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001170:	4620      	mov	r0, r4
 8001172:	2118      	movs	r1, #24
 8001174:	f020 f9ad 	bl	80214d2 <_ZdlPvj>
 8001178:	4620      	mov	r0, r4
 800117a:	bd10      	pop	{r4, pc}

0800117c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800117c:	b510      	push	{r4, lr}
 800117e:	4b09      	ldr	r3, [pc, #36]	; (80011a4 <_ZN12FrontendHeapD1Ev+0x28>)
 8001180:	6003      	str	r3, [r0, #0]
 8001182:	4604      	mov	r4, r0
 8001184:	f500 4087 	add.w	r0, r0, #17280	; 0x4380
 8001188:	3038      	adds	r0, #56	; 0x38
 800118a:	f7ff ffb9 	bl	8001100 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800118e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001192:	f7ff ffc9 	bl	8001128 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001196:	f104 0014 	add.w	r0, r4, #20
 800119a:	f7ff ffdb 	bl	8001154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800119e:	4620      	mov	r0, r4
 80011a0:	bd10      	pop	{r4, pc}
 80011a2:	bf00      	nop
 80011a4:	0802382c 	.word	0x0802382c

080011a8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011a8:	b508      	push	{r3, lr}
 80011aa:	4802      	ldr	r0, [pc, #8]	; (80011b4 <__tcf_0+0xc>)
 80011ac:	f7ff ffe6 	bl	800117c <_ZN12FrontendHeapD1Ev>
 80011b0:	bd08      	pop	{r3, pc}
 80011b2:	bf00      	nop
 80011b4:	2000019c 	.word	0x2000019c

080011b8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011b8:	b510      	push	{r4, lr}
 80011ba:	4604      	mov	r4, r0
 80011bc:	f7ff ffde 	bl	800117c <_ZN12FrontendHeapD1Ev>
 80011c0:	4620      	mov	r0, r4
 80011c2:	f244 5128 	movw	r1, #17704	; 0x4528
 80011c6:	f020 f984 	bl	80214d2 <_ZdlPvj>
 80011ca:	4620      	mov	r0, r4
 80011cc:	bd10      	pop	{r4, pc}
	...

080011d0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011d0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011d4:	f001 f850 	bl	8002278 <_ZN14BitmapDatabase11getInstanceEv>
 80011d8:	4605      	mov	r5, r0
 80011da:	f001 f851 	bl	8002280 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011de:	2400      	movs	r4, #0
 80011e0:	4601      	mov	r1, r0
 80011e2:	4623      	mov	r3, r4
 80011e4:	4628      	mov	r0, r5
 80011e6:	4622      	mov	r2, r4
 80011e8:	9400      	str	r4, [sp, #0]
 80011ea:	f012 f87d 	bl	80132e8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011ee:	4b24      	ldr	r3, [pc, #144]	; (8001280 <touchgfx_init+0xb0>)
 80011f0:	4a24      	ldr	r2, [pc, #144]	; (8001284 <touchgfx_init+0xb4>)
        static FrontendHeap instance;
 80011f2:	4d25      	ldr	r5, [pc, #148]	; (8001288 <touchgfx_init+0xb8>)
 80011f4:	601a      	str	r2, [r3, #0]
  TypedText::registerTexts(&texts);
  Texts::setLanguage(0);
 80011f6:	4620      	mov	r0, r4
 80011f8:	f003 f894 	bl	8004324 <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 80011fc:	4823      	ldr	r0, [pc, #140]	; (800128c <touchgfx_init+0xbc>)
 80011fe:	f011 ffb5 	bl	801316c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001202:	782b      	ldrb	r3, [r5, #0]
 8001204:	f3bf 8f5b 	dmb	ish
 8001208:	07db      	lsls	r3, r3, #31
 800120a:	d433      	bmi.n	8001274 <touchgfx_init+0xa4>
 800120c:	4628      	mov	r0, r5
 800120e:	f020 f962 	bl	80214d6 <__cxa_guard_acquire>
 8001212:	b378      	cbz	r0, 8001274 <touchgfx_init+0xa4>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001214:	4c1e      	ldr	r4, [pc, #120]	; (8001290 <touchgfx_init+0xc0>)
 8001216:	4f1f      	ldr	r7, [pc, #124]	; (8001294 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001218:	4b1f      	ldr	r3, [pc, #124]	; (8001298 <touchgfx_init+0xc8>)
 800121a:	6023      	str	r3, [r4, #0]
 800121c:	f107 0618 	add.w	r6, r7, #24
 8001220:	f104 0014 	add.w	r0, r4, #20
 8001224:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001228:	6060      	str	r0, [r4, #4]
 800122a:	f8c4 8008 	str.w	r8, [r4, #8]
 800122e:	60e7      	str	r7, [r4, #12]
 8001230:	6126      	str	r6, [r4, #16]
 8001232:	f009 fe2f 	bl	800ae94 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001236:	4b19      	ldr	r3, [pc, #100]	; (800129c <touchgfx_init+0xcc>)
 8001238:	6163      	str	r3, [r4, #20]
 800123a:	4640      	mov	r0, r8
 800123c:	f009 fe2a 	bl	800ae94 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001240:	4b17      	ldr	r3, [pc, #92]	; (80012a0 <touchgfx_init+0xd0>)
 8001242:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001244:	4638      	mov	r0, r7
 8001246:	f009 fe25 	bl	800ae94 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800124a:	4b16      	ldr	r3, [pc, #88]	; (80012a4 <touchgfx_init+0xd4>)
 800124c:	603b      	str	r3, [r7, #0]
 800124e:	f107 0014 	add.w	r0, r7, #20
 8001252:	f003 f8ef 	bl	8004434 <_ZN5ModelC1Ev>
 8001256:	4622      	mov	r2, r4
 8001258:	f107 0114 	add.w	r1, r7, #20
 800125c:	4630      	mov	r0, r6
 800125e:	f003 f8df 	bl	8004420 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001262:	4630      	mov	r0, r6
 8001264:	f001 f8c6 	bl	80023f4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001268:	4628      	mov	r0, r5
 800126a:	f020 f940 	bl	80214ee <__cxa_guard_release>
 800126e:	480e      	ldr	r0, [pc, #56]	; (80012a8 <touchgfx_init+0xd8>)
 8001270:	f020 ff6c 	bl	802214c <atexit>
  (void)heap;

  /*
   * Initialize TouchGFX
   */
  hal.initialize();
 8001274:	480d      	ldr	r0, [pc, #52]	; (80012ac <touchgfx_init+0xdc>)
}
 8001276:	b002      	add	sp, #8
 8001278:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  hal.initialize();
 800127c:	f7ff bbb2 	b.w	80009e4 <_ZN11TouchGFXHAL10initializeEv>
 8001280:	2000e45c 	.word	0x2000e45c
 8001284:	20005364 	.word	0x20005364
 8001288:	20000198 	.word	0x20000198
 800128c:	2000001c 	.word	0x2000001c
 8001290:	2000019c 	.word	0x2000019c
 8001294:	20004554 	.word	0x20004554
 8001298:	0802382c 	.word	0x0802382c
 800129c:	08023790 	.word	0x08023790
 80012a0:	080237c4 	.word	0x080237c4
 80012a4:	080237f8 	.word	0x080237f8
 80012a8:	080011a9 	.word	0x080011a9
 80012ac:	200052e8 	.word	0x200052e8

080012b0 <touchgfx_taskEntry>:
  * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
  * this function from your GUI task.
  *
  * Note This function never returns
  */
  hal.taskEntry();
 80012b0:	4801      	ldr	r0, [pc, #4]	; (80012b8 <touchgfx_taskEntry+0x8>)
 80012b2:	f7ff bae1 	b.w	8000878 <_ZN11TouchGFXHAL9taskEntryEv>
 80012b6:	bf00      	nop
 80012b8:	200052e8 	.word	0x200052e8

080012bc <_GLOBAL__sub_I_touchgfx_init>:
}
 80012bc:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80012be:	4c25      	ldr	r4, [pc, #148]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static STM32F4DMA dma;
 80012c0:	4e25      	ldr	r6, [pc, #148]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012c2:	4b26      	ldr	r3, [pc, #152]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 80012c4:	4d26      	ldr	r5, [pc, #152]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 80012c6:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80012c8:	4630      	mov	r0, r6
 80012ca:	f7ff fed1 	bl	8001070 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80012ce:	4628      	mov	r0, r5
 80012d0:	f015 f896 	bl	8016400 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderVariant(HARDWARE)
 80012d4:	4b23      	ldr	r3, [pc, #140]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80012d6:	4824      	ldr	r0, [pc, #144]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 80012d8:	60dc      	str	r4, [r3, #12]
 80012da:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012de:	f8a3 1048 	strh.w	r1, [r3, #72]	; 0x48
 80012e2:	f8a3 1076 	strh.w	r1, [r3, #118]	; 0x76
 80012e6:	2101      	movs	r1, #1
 80012e8:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012ec:	491f      	ldr	r1, [pc, #124]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        DISPLAY_HEIGHT = height;
 80012ee:	4c20      	ldr	r4, [pc, #128]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
        instance = this;
 80012f0:	600b      	str	r3, [r1, #0]
          lastRenderVariant(HARDWARE)
 80012f2:	2200      	movs	r2, #0
        DISPLAY_WIDTH = width;
 80012f4:	491f      	ldr	r1, [pc, #124]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012f6:	851a      	strh	r2, [r3, #40]	; 0x28
          lastRenderVariant(HARDWARE)
 80012f8:	e9c3 0219 	strd	r0, r2, [r3, #100]	; 0x64
        DISPLAY_WIDTH = width;
 80012fc:	f44f 7050 	mov.w	r0, #832	; 0x340
 8001300:	8008      	strh	r0, [r1, #0]
        DISPLAY_HEIGHT = height;
 8001302:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001306:	8021      	strh	r1, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001308:	4c1b      	ldr	r4, [pc, #108]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 800130a:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
          lastRenderVariant(HARDWARE)
 800130e:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001312:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001316:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800131a:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 800131e:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
        x = 0;
 8001322:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8001326:	62da      	str	r2, [r3, #44]	; 0x2c
 8001328:	861a      	strh	r2, [r3, #48]	; 0x30
 800132a:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
        y = 0;
        width = 0;
 800132e:	655a      	str	r2, [r3, #84]	; 0x54
 8001330:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001334:	671a      	str	r2, [r3, #112]	; 0x70
 8001336:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 800133a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        DISPLAY_ROTATION = rotate0;
 800133e:	7022      	strb	r2, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001340:	4c0e      	ldr	r4, [pc, #56]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001342:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001346:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001348:	480d      	ldr	r0, [pc, #52]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800134a:	4a0e      	ldr	r2, [pc, #56]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 800134c:	8001      	strh	r1, [r0, #0]
 800134e:	601a      	str	r2, [r3, #0]
}
 8001350:	bd70      	pop	{r4, r5, r6, pc}
 8001352:	bf00      	nop
 8001354:	200046c4 	.word	0x200046c4
 8001358:	200046c8 	.word	0x200046c8
 800135c:	0802333c 	.word	0x0802333c
 8001360:	20005368 	.word	0x20005368
 8001364:	200052e8 	.word	0x200052e8
 8001368:	01000001 	.word	0x01000001
 800136c:	2000e3e0 	.word	0x2000e3e0
 8001370:	2000e3d6 	.word	0x2000e3d6
 8001374:	2000e3d4 	.word	0x2000e3d4
 8001378:	2000e3d8 	.word	0x2000e3d8
 800137c:	2000e3da 	.word	0x2000e3da
 8001380:	2000e3dc 	.word	0x2000e3dc
 8001384:	08023420 	.word	0x08023420

08001388 <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 8001388:	4801      	ldr	r0, [pc, #4]	; (8001390 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800138a:	f7ff be55 	b.w	8001038 <_ZN10STM32F4DMAD1Ev>
 800138e:	bf00      	nop
 8001390:	200046c8 	.word	0x200046c8

08001394 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001394:	4b02      	ldr	r3, [pc, #8]	; (80013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001396:	2290      	movs	r2, #144	; 0x90
 8001398:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 800139c:	4770      	bx	lr
 800139e:	bf00      	nop
 80013a0:	e000e100 	.word	0xe000e100

080013a4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013a4:	4b02      	ldr	r3, [pc, #8]	; (80013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013a6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013aa:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013ac:	4770      	bx	lr
 80013ae:	bf00      	nop
 80013b0:	e000e100 	.word	0xe000e100

080013b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013b4:	4770      	bx	lr

080013b6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013b6:	4770      	bx	lr

080013b8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
  HAL::flushFrameBuffer(rect);
 80013b8:	f00a bc0e 	b.w	800bbd8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013bc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
  return HAL::blockCopy(dest, src, numBytes);
 80013bc:	f00a bd33 	b.w	800be26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013c0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013c0:	4b04      	ldr	r3, [pc, #16]	; (80013d4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013c2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013c6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013ca:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013ce:	f3bf 8f6f 	isb	sy
}
 80013d2:	4770      	bx	lr
 80013d4:	e000e100 	.word	0xe000e100

080013d8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013d8:	b538      	push	{r3, r4, r5, lr}
 80013da:	4604      	mov	r4, r0
    HAL::initialize();
 80013dc:	f00a fef4 	bl	800c1c8 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013e0:	6823      	ldr	r3, [r4, #0]
 80013e2:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80013e4:	f00e fe40 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 80013e8:	4601      	mov	r1, r0
 80013ea:	4620      	mov	r0, r4
 80013ec:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013ee:	6823      	ldr	r3, [r4, #0]
 80013f0:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 80013f2:	2300      	movs	r3, #0
 80013f4:	461a      	mov	r2, r3
 80013f6:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013fa:	4620      	mov	r0, r4
 80013fc:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013fe:	2301      	movs	r3, #1
 8001400:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 8001404:	bd38      	pop	{r3, r4, r5, pc}
	...

08001408 <sendMessage>:
#include "can.h"
extern uint8_t rxData[8];
uint32_t TxMailbox;
extern int screen;

void sendMessage(uint8_t data[]) {
 8001408:	b530      	push	{r4, r5, lr}
 800140a:	b087      	sub	sp, #28
	CAN_TxHeaderTypeDef pHeader;
	pHeader.DLC = 8;
	pHeader.RTR = CAN_RTR_DATA;
 800140c:	2300      	movs	r3, #0
 800140e:	2108      	movs	r1, #8
 8001410:	e9cd 3103 	strd	r3, r1, [sp, #12]
	pHeader.IDE = CAN_ID_STD;
 8001414:	9302      	str	r3, [sp, #8]
	pHeader.StdId = 0x48;
 8001416:	2348      	movs	r3, #72	; 0x48
void sendMessage(uint8_t data[]) {
 8001418:	4602      	mov	r2, r0
	pHeader.StdId = 0x48;
 800141a:	9300      	str	r3, [sp, #0]
	HAL_CAN_AddTxMessage(&hcan2, &pHeader, data, &TxMailbox);
 800141c:	4807      	ldr	r0, [pc, #28]	; (800143c <sendMessage+0x34>)
 800141e:	4b08      	ldr	r3, [pc, #32]	; (8001440 <sendMessage+0x38>)
	while(HAL_CAN_IsTxMessagePending(&hcan2, TxMailbox));
 8001420:	4d07      	ldr	r5, [pc, #28]	; (8001440 <sendMessage+0x38>)
 8001422:	4c06      	ldr	r4, [pc, #24]	; (800143c <sendMessage+0x34>)
	HAL_CAN_AddTxMessage(&hcan2, &pHeader, data, &TxMailbox);
 8001424:	4669      	mov	r1, sp
 8001426:	f004 fa15 	bl	8005854 <HAL_CAN_AddTxMessage>
	while(HAL_CAN_IsTxMessagePending(&hcan2, TxMailbox));
 800142a:	6829      	ldr	r1, [r5, #0]
 800142c:	4620      	mov	r0, r4
 800142e:	f004 fa61 	bl	80058f4 <HAL_CAN_IsTxMessagePending>
 8001432:	2800      	cmp	r0, #0
 8001434:	d1f9      	bne.n	800142a <sendMessage+0x22>
}
 8001436:	b007      	add	sp, #28
 8001438:	bd30      	pop	{r4, r5, pc}
 800143a:	bf00      	nop
 800143c:	2000e7cc 	.word	0x2000e7cc
 8001440:	2000e6a8 	.word	0x2000e6a8

08001444 <HAL_CAN_RxFifo0MsgPendingCallback>:

void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 8001444:	b510      	push	{r4, lr}
	CAN_RxHeaderTypeDef pHeader;
	HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &pHeader, rxData);
 8001446:	4c06      	ldr	r4, [pc, #24]	; (8001460 <HAL_CAN_RxFifo0MsgPendingCallback+0x1c>)
void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 8001448:	b088      	sub	sp, #32
	HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &pHeader, rxData);
 800144a:	4623      	mov	r3, r4
 800144c:	aa01      	add	r2, sp, #4
 800144e:	2100      	movs	r1, #0
 8001450:	f004 fa61 	bl	8005916 <HAL_CAN_GetRxMessage>
	sendMessage(rxData);
 8001454:	4620      	mov	r0, r4
 8001456:	f7ff ffd7 	bl	8001408 <sendMessage>
}
 800145a:	b008      	add	sp, #32
 800145c:	bd10      	pop	{r4, pc}
 800145e:	bf00      	nop
 8001460:	2000e69c 	.word	0x2000e69c

08001464 <HAL_CAN_RxFifo1MsgPendingCallback>:

void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 8001464:	b510      	push	{r4, lr}
	CAN_RxHeaderTypeDef pHeader;
	HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO1, &pHeader, rxData);
 8001466:	4c06      	ldr	r4, [pc, #24]	; (8001480 <HAL_CAN_RxFifo1MsgPendingCallback+0x1c>)
void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 8001468:	b088      	sub	sp, #32
	HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO1, &pHeader, rxData);
 800146a:	4623      	mov	r3, r4
 800146c:	aa01      	add	r2, sp, #4
 800146e:	2101      	movs	r1, #1
 8001470:	f004 fa51 	bl	8005916 <HAL_CAN_GetRxMessage>
	sendMessage(rxData);
 8001474:	4620      	mov	r0, r4
 8001476:	f7ff ffc7 	bl	8001408 <sendMessage>
}
 800147a:	b008      	add	sp, #32
 800147c:	bd10      	pop	{r4, pc}
 800147e:	bf00      	nop
 8001480:	2000e69c 	.word	0x2000e69c

08001484 <canInit>:

void canInit(){
 8001484:	b510      	push	{r4, lr}
	HAL_CAN_ActivateNotification(&hcan2, CAN_IT_TX_MAILBOX_EMPTY);
 8001486:	4c13      	ldr	r4, [pc, #76]	; (80014d4 <canInit+0x50>)
void canInit(){
 8001488:	b08a      	sub	sp, #40	; 0x28
	HAL_CAN_ActivateNotification(&hcan2, CAN_IT_TX_MAILBOX_EMPTY);
 800148a:	2101      	movs	r1, #1
 800148c:	4620      	mov	r0, r4
 800148e:	f004 fab9 	bl	8005a04 <HAL_CAN_ActivateNotification>
	HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
 8001492:	2102      	movs	r1, #2
 8001494:	4620      	mov	r0, r4
 8001496:	f004 fab5 	bl	8005a04 <HAL_CAN_ActivateNotification>
	HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING);
 800149a:	2110      	movs	r1, #16
 800149c:	4620      	mov	r0, r4
 800149e:	f004 fab1 	bl	8005a04 <HAL_CAN_ActivateNotification>

	CAN_FilterTypeDef CanFilter;
	CanFilter.FilterIdHigh = 0x100 << 5;
	CanFilter.FilterIdLow = 0;
 80014a2:	2300      	movs	r3, #0
 80014a4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80014a8:	e9cd 2300 	strd	r2, r3, [sp]
	CanFilter.FilterMaskIdHigh = 0x700 << 5;
 80014ac:	f44f 4260 	mov.w	r2, #57344	; 0xe000
	CanFilter.FilterMaskIdLow = 0;
 80014b0:	e9cd 2302 	strd	r2, r3, [sp, #8]
	CanFilter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
	CanFilter.FilterBank = 15;
 80014b4:	220f      	movs	r2, #15
	CanFilter.FilterMode = CAN_FILTERMODE_IDMASK;
 80014b6:	e9cd 2305 	strd	r2, r3, [sp, #20]
	CanFilter.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 80014ba:	9304      	str	r3, [sp, #16]
	CanFilter.FilterScale = CAN_FILTERSCALE_32BIT;
	CanFilter.FilterActivation = CAN_FILTER_ENABLE;
	HAL_CAN_ConfigFilter(&hcan2, &CanFilter);
 80014bc:	4669      	mov	r1, sp
	CanFilter.FilterScale = CAN_FILTERSCALE_32BIT;
 80014be:	2301      	movs	r3, #1
	HAL_CAN_ConfigFilter(&hcan2, &CanFilter);
 80014c0:	4620      	mov	r0, r4
	CanFilter.FilterActivation = CAN_FILTER_ENABLE;
 80014c2:	e9cd 3307 	strd	r3, r3, [sp, #28]
	HAL_CAN_ConfigFilter(&hcan2, &CanFilter);
 80014c6:	f004 f90f 	bl	80056e8 <HAL_CAN_ConfigFilter>
	HAL_CAN_Start(&hcan2);
 80014ca:	4620      	mov	r0, r4
 80014cc:	f004 f994 	bl	80057f8 <HAL_CAN_Start>
}
 80014d0:	b00a      	add	sp, #40	; 0x28
 80014d2:	bd10      	pop	{r4, pc}
 80014d4:	2000e7cc 	.word	0x2000e7cc

080014d8 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
	if(GPIO_Pin == GPIO_PIN_0){
 80014d8:	2801      	cmp	r0, #1
 80014da:	d107      	bne.n	80014ec <HAL_GPIO_EXTI_Callback+0x14>
		if(screen == 1) screen = 2;
 80014dc:	4b04      	ldr	r3, [pc, #16]	; (80014f0 <HAL_GPIO_EXTI_Callback+0x18>)
 80014de:	681a      	ldr	r2, [r3, #0]
 80014e0:	2a01      	cmp	r2, #1
 80014e2:	d102      	bne.n	80014ea <HAL_GPIO_EXTI_Callback+0x12>
 80014e4:	2202      	movs	r2, #2
 80014e6:	601a      	str	r2, [r3, #0]
 80014e8:	4770      	bx	lr
		else screen = 1;
 80014ea:	6018      	str	r0, [r3, #0]
	}
}
 80014ec:	4770      	bx	lr
 80014ee:	bf00      	nop
 80014f0:	2000e6a4 	.word	0x2000e6a4

080014f4 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80014f4:	4901      	ldr	r1, [pc, #4]	; (80014fc <vApplicationIdleHook+0x8>)
 80014f6:	2000      	movs	r0, #0
 80014f8:	f008 bff2 	b.w	800a4e0 <vTaskSetApplicationTaskTag>
 80014fc:	08000c19 	.word	0x08000c19

08001500 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001504:	b0a4      	sub	sp, #144	; 0x90
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001506:	2210      	movs	r2, #16
 8001508:	2100      	movs	r1, #0
 800150a:	a80a      	add	r0, sp, #40	; 0x28
 800150c:	f020 fe8c 	bl	8022228 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001510:	2214      	movs	r2, #20
 8001512:	2100      	movs	r1, #0
 8001514:	a803      	add	r0, sp, #12
 8001516:	f020 fe87 	bl	8022228 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800151a:	2100      	movs	r1, #0
 800151c:	223c      	movs	r2, #60	; 0x3c
 800151e:	a815      	add	r0, sp, #84	; 0x54
 8001520:	f020 fe82 	bl	8022228 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001524:	2400      	movs	r4, #0
 8001526:	4b24      	ldr	r3, [pc, #144]	; (80015b8 <SystemClock_Config+0xb8>)
 8001528:	9401      	str	r4, [sp, #4]
 800152a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800152c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001530:	641a      	str	r2, [r3, #64]	; 0x40
 8001532:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001534:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001538:	9301      	str	r3, [sp, #4]
 800153a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800153c:	4b1f      	ldr	r3, [pc, #124]	; (80015bc <SystemClock_Config+0xbc>)
 800153e:	9402      	str	r4, [sp, #8]
 8001540:	681a      	ldr	r2, [r3, #0]
 8001542:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001546:	601a      	str	r2, [r3, #0]
 8001548:	681b      	ldr	r3, [r3, #0]
 800154a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800154e:	9302      	str	r3, [sp, #8]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001550:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001552:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001554:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001558:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800155c:	2502      	movs	r5, #2
 800155e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001562:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001566:	f04f 0808 	mov.w	r8, #8
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 4;
  RCC_OscInitStruct.PLL.PLLR = 6;
 800156a:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLN = 360;
 800156c:	f44f 77b4 	mov.w	r7, #360	; 0x168
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001570:	2606      	movs	r6, #6
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001572:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001574:	e9cd 3613 	strd	r3, r6, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001578:	e9cd 8710 	strd	r8, r7, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800157c:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800157e:	f006 feef 	bl	8008360 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001582:	f006 f93f 	bl	8007804 <HAL_PWREx_EnableOverDrive>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001586:	230f      	movs	r3, #15
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001588:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800158c:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001590:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001594:	e9cd 1306 	strd	r1, r3, [sp, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001598:	a803      	add	r0, sp, #12
 800159a:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800159c:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800159e:	f006 fcb3 	bl	8007f08 <HAL_RCC_ClockConfig>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80015a2:	a815      	add	r0, sp, #84	; 0x54
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80015a4:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 80015a8:	9719      	str	r7, [sp, #100]	; 0x64
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 80015aa:	961c      	str	r6, [sp, #112]	; 0x70
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 80015ac:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80015ae:	f006 fd75 	bl	800809c <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 80015b2:	b024      	add	sp, #144	; 0x90
 80015b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80015b8:	40023800 	.word	0x40023800
 80015bc:	40007000 	.word	0x40007000

080015c0 <main>:
{
 80015c0:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80015c4:	b0bf      	sub	sp, #252	; 0xfc
  HAL_Init();
 80015c6:	f003 ffd3 	bl	8005570 <HAL_Init>
  SystemClock_Config();
 80015ca:	f7ff ff99 	bl	8001500 <SystemClock_Config>
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015ce:	2214      	movs	r2, #20
 80015d0:	2100      	movs	r1, #0
 80015d2:	a831      	add	r0, sp, #196	; 0xc4

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80015d4:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015d6:	f020 fe27 	bl	8022228 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80015da:	4bc6      	ldr	r3, [pc, #792]	; (80018f4 <main+0x334>)
 80015dc:	9403      	str	r4, [sp, #12]
 80015de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOJ_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015e0:	48c5      	ldr	r0, [pc, #788]	; (80018f8 <main+0x338>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80015e2:	f042 0210 	orr.w	r2, r2, #16
 80015e6:	631a      	str	r2, [r3, #48]	; 0x30
 80015e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015ea:	f002 0210 	and.w	r2, r2, #16
 80015ee:	9203      	str	r2, [sp, #12]
 80015f0:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80015f2:	9404      	str	r4, [sp, #16]
 80015f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015f6:	f042 0202 	orr.w	r2, r2, #2
 80015fa:	631a      	str	r2, [r3, #48]	; 0x30
 80015fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015fe:	f002 0202 	and.w	r2, r2, #2
 8001602:	9204      	str	r2, [sp, #16]
 8001604:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001606:	9405      	str	r4, [sp, #20]
 8001608:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800160a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800160e:	631a      	str	r2, [r3, #48]	; 0x30
 8001610:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001612:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001616:	9205      	str	r2, [sp, #20]
 8001618:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800161a:	9406      	str	r4, [sp, #24]
 800161c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800161e:	f042 0208 	orr.w	r2, r2, #8
 8001622:	631a      	str	r2, [r3, #48]	; 0x30
 8001624:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001626:	f002 0208 	and.w	r2, r2, #8
 800162a:	9206      	str	r2, [sp, #24]
 800162c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800162e:	9407      	str	r4, [sp, #28]
 8001630:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001632:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001636:	631a      	str	r2, [r3, #48]	; 0x30
 8001638:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800163a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800163e:	9207      	str	r2, [sp, #28]
 8001640:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001642:	9408      	str	r4, [sp, #32]
 8001644:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001646:	f042 0220 	orr.w	r2, r2, #32
 800164a:	631a      	str	r2, [r3, #48]	; 0x30
 800164c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800164e:	f002 0220 	and.w	r2, r2, #32
 8001652:	9208      	str	r2, [sp, #32]
 8001654:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001656:	9409      	str	r4, [sp, #36]	; 0x24
 8001658:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800165a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800165e:	631a      	str	r2, [r3, #48]	; 0x30
 8001660:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001662:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001666:	9209      	str	r2, [sp, #36]	; 0x24
 8001668:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800166a:	940a      	str	r4, [sp, #40]	; 0x28
 800166c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800166e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001672:	631a      	str	r2, [r3, #48]	; 0x30
 8001674:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001676:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800167a:	920a      	str	r2, [sp, #40]	; 0x28
 800167c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800167e:	940b      	str	r4, [sp, #44]	; 0x2c
 8001680:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001682:	f042 0204 	orr.w	r2, r2, #4
 8001686:	631a      	str	r2, [r3, #48]	; 0x30
 8001688:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800168a:	f002 0204 	and.w	r2, r2, #4
 800168e:	920b      	str	r2, [sp, #44]	; 0x2c
 8001690:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001692:	940c      	str	r4, [sp, #48]	; 0x30
 8001694:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001696:	f042 0201 	orr.w	r2, r2, #1
 800169a:	631a      	str	r2, [r3, #48]	; 0x30
 800169c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800169e:	f002 0201 	and.w	r2, r2, #1
 80016a2:	920c      	str	r2, [sp, #48]	; 0x30
 80016a4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80016a6:	940d      	str	r4, [sp, #52]	; 0x34
 80016a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016aa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80016ae:	631a      	str	r2, [r3, #48]	; 0x30
 80016b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016b2:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80016b6:	2201      	movs	r2, #1
 80016b8:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80016ba:	930d      	str	r3, [sp, #52]	; 0x34
 80016bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80016be:	f005 fa93 	bl	8006be8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 80016c2:	488e      	ldr	r0, [pc, #568]	; (80018fc <main+0x33c>)
 80016c4:	4622      	mov	r2, r4
 80016c6:	2110      	movs	r1, #16
 80016c8:	f005 fa8e 	bl	8006be8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80016cc:	488c      	ldr	r0, [pc, #560]	; (8001900 <main+0x340>)
 80016ce:	4622      	mov	r2, r4
 80016d0:	2140      	movs	r1, #64	; 0x40
 80016d2:	f005 fa89 	bl	8006be8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80016d6:	4622      	mov	r2, r4
 80016d8:	488a      	ldr	r0, [pc, #552]	; (8001904 <main+0x344>)
 80016da:	2180      	movs	r1, #128	; 0x80
 80016dc:	f005 fa84 	bl	8006be8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PK3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80016e0:	2611      	movs	r6, #17
 80016e2:	2308      	movs	r3, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80016e4:	4884      	ldr	r0, [pc, #528]	; (80018f8 <main+0x338>)
 80016e6:	a931      	add	r1, sp, #196	; 0xc4

  /*Configure GPIO pin : RENDER_TIME_Pin */
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016e8:	2701      	movs	r7, #1
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80016ea:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80016ee:	e9cd 3631 	strd	r3, r6, [sp, #196]	; 0xc4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016f2:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016f6:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80016fa:	f005 f8e3 	bl	80068c4 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80016fe:	487f      	ldr	r0, [pc, #508]	; (80018fc <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001700:	9433      	str	r4, [sp, #204]	; 0xcc
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8001702:	a931      	add	r1, sp, #196	; 0xc4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001704:	e9cd a731 	strd	sl, r7, [sp, #196]	; 0xc4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001708:	f8cd 80d0 	str.w	r8, [sp, #208]	; 0xd0
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 800170c:	f005 f8da 	bl	80068c4 <HAL_GPIO_Init>

  /*Configure GPIO pin : VSYNC_FREQ_Pin */
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 8001710:	2340      	movs	r3, #64	; 0x40
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001712:	487b      	ldr	r0, [pc, #492]	; (8001900 <main+0x340>)
 8001714:	a931      	add	r1, sp, #196	; 0xc4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001716:	e9cd 3731 	strd	r3, r7, [sp, #196]	; 0xc4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800171a:	e9cd 4833 	strd	r4, r8, [sp, #204]	; 0xcc
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 800171e:	f005 f8d1 	bl	80068c4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001722:	4b79      	ldr	r3, [pc, #484]	; (8001908 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001724:	4879      	ldr	r0, [pc, #484]	; (800190c <main+0x34c>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001726:	9731      	str	r7, [sp, #196]	; 0xc4
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001728:	a931      	add	r1, sp, #196	; 0xc4

  /*Configure GPIO pin : PH7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 800172a:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800172c:	e9cd 3832 	strd	r3, r8, [sp, #200]	; 0xc8
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001730:	f005 f8c8 	bl	80068c4 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001734:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001736:	4873      	ldr	r0, [pc, #460]	; (8001904 <main+0x344>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001738:	9334      	str	r3, [sp, #208]	; 0xd0
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800173a:	a931      	add	r1, sp, #196	; 0xc4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 800173c:	e9cd 5631 	strd	r5, r6, [sp, #196]	; 0xc4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001740:	9433      	str	r4, [sp, #204]	; 0xcc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001742:	f005 f8bf 	bl	80068c4 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 5, 0);
 8001746:	4622      	mov	r2, r4
 8001748:	2105      	movs	r1, #5
 800174a:	2006      	movs	r0, #6
 800174c:	f004 fa86 	bl	8005c5c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8001750:	2006      	movs	r0, #6
 8001752:	f004 fab5 	bl	8005cc0 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001756:	486e      	ldr	r0, [pc, #440]	; (8001910 <main+0x350>)
  hdma2d.Instance = DMA2D;
 8001758:	4e6e      	ldr	r6, [pc, #440]	; (8001914 <main+0x354>)
  hcrc.Instance = CRC;
 800175a:	4b6f      	ldr	r3, [pc, #444]	; (8001918 <main+0x358>)
 800175c:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800175e:	f004 fad1 	bl	8005d04 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001762:	4b6e      	ldr	r3, [pc, #440]	; (800191c <main+0x35c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001764:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001768:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800176c:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800176e:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001772:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001776:	f004 fbd9 	bl	8005f2c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800177a:	4639      	mov	r1, r7
 800177c:	4630      	mov	r0, r6
 800177e:	f004 fc8d 	bl	800609c <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001782:	4629      	mov	r1, r5
 8001784:	4622      	mov	r2, r4
 8001786:	485f      	ldr	r0, [pc, #380]	; (8001904 <main+0x344>)
  hdsi.Instance = DSI;
 8001788:	4e65      	ldr	r6, [pc, #404]	; (8001920 <main+0x360>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800178a:	f005 fa2d 	bl	8006be8 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800178e:	2014      	movs	r0, #20
 8001790:	f003 ff1a 	bl	80055c8 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001794:	4629      	mov	r1, r5
 8001796:	463a      	mov	r2, r7
 8001798:	485a      	ldr	r0, [pc, #360]	; (8001904 <main+0x344>)
 800179a:	f005 fa25 	bl	8006be8 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 800179e:	200a      	movs	r0, #10
 80017a0:	f003 ff12 	bl	80055c8 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80017a4:	2224      	movs	r2, #36	; 0x24
 80017a6:	4621      	mov	r1, r4
 80017a8:	a817      	add	r0, sp, #92	; 0x5c
 80017aa:	f020 fd3d 	bl	8022228 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80017ae:	2218      	movs	r2, #24
 80017b0:	4621      	mov	r1, r4
 80017b2:	a811      	add	r0, sp, #68	; 0x44
 80017b4:	f020 fd38 	bl	8022228 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80017b8:	2234      	movs	r2, #52	; 0x34
 80017ba:	4621      	mov	r1, r4
 80017bc:	a831      	add	r0, sp, #196	; 0xc4
 80017be:	f020 fd33 	bl	8022228 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80017c2:	222c      	movs	r2, #44	; 0x2c
 80017c4:	4621      	mov	r1, r4
 80017c6:	a824      	add	r0, sp, #144	; 0x90
 80017c8:	f020 fd2e 	bl	8022228 <memset>
  hdsi.Instance = DSI;
 80017cc:	4b55      	ldr	r3, [pc, #340]	; (8001924 <main+0x364>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 80017ce:	9410      	str	r4, [sp, #64]	; 0x40
  hdsi.Init.TXEscapeCkdiv = 4;
 80017d0:	2504      	movs	r5, #4
  PLLInit.PLLNDIV = 125;
 80017d2:	227d      	movs	r2, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80017d4:	a90e      	add	r1, sp, #56	; 0x38
 80017d6:	4630      	mov	r0, r6
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 80017d8:	e9c6 3400 	strd	r3, r4, [r6]
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80017dc:	e9c6 5702 	strd	r5, r7, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80017e0:	e9cd 280e 	strd	r2, r8, [sp, #56]	; 0x38
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80017e4:	f004 fd22 	bl	800622c <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80017e8:	a917      	add	r1, sp, #92	; 0x5c
 80017ea:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80017ec:	e9cd 7417 	strd	r7, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 80017f0:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80017f4:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 80017f8:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 80017fc:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80017fe:	f004 ff3f 	bl	8006680 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8001802:	231c      	movs	r3, #28
 8001804:	2221      	movs	r2, #33	; 0x21
 8001806:	e9cd 3211 	strd	r3, r2, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800180a:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 800180c:	220f      	movs	r2, #15
 800180e:	2319      	movs	r3, #25
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001810:	4630      	mov	r0, r6
  PhyTimings.DataLaneLP2HSTime = 25;
 8001812:	e9cd 2313 	strd	r2, r3, [sp, #76]	; 0x4c
  PhyTimings.StopWaitTime = 0;
 8001816:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800181a:	f004 fef4 	bl	8006606 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 800181e:	4629      	mov	r1, r5
 8001820:	4630      	mov	r0, r6
 8001822:	f004 fedf 	bl	80065e4 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8001826:	f242 7110 	movw	r1, #10000	; 0x2710
 800182a:	4630      	mov	r0, r6
 800182c:	f005 f833 	bl	8006896 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001830:	4621      	mov	r1, r4
 8001832:	4630      	mov	r0, r6
 8001834:	f004 fc97 	bl	8006166 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001838:	f44f 7180 	mov.w	r1, #256	; 0x100
 800183c:	f44f 7200 	mov.w	r2, #512	; 0x200
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001840:	f44f 6980 	mov.w	r9, #1024	; 0x400
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001844:	e9cd 1231 	strd	r1, r2, [sp, #196]	; 0xc4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001848:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800184c:	e9cd 9233 	strd	r9, r2, [sp, #204]	; 0xcc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001850:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001854:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001858:	e9cd 2135 	strd	r2, r1, [sp, #212]	; 0xd4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 800185c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001860:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 8001864:	e9cd 3137 	strd	r3, r1, [sp, #220]	; 0xdc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001868:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 800186c:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001870:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001874:	e9cd 0139 	strd	r0, r1, [sp, #228]	; 0xe4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001878:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 800187c:	e9cd c13b 	strd	ip, r1, [sp, #236]	; 0xec
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001880:	4630      	mov	r0, r6
 8001882:	a931      	add	r1, sp, #196	; 0xc4
  CmdCfg.CommandSize = 200;
 8001884:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001888:	f8cd 80f4 	str.w	r8, [sp, #244]	; 0xf4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800188c:	f004 fe76 	bl	800657c <HAL_DSI_ConfigCommand>
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001890:	a924      	add	r1, sp, #144	; 0x90
 8001892:	4630      	mov	r0, r6
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001894:	e9cd 4528 	strd	r4, r5, [sp, #160]	; 0xa0
  CmdCfg.ColorCoding = DSI_RGB565;
 8001898:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800189c:	e9cd ba26 	strd	fp, sl, [sp, #152]	; 0x98
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 80018a0:	e9cd 842a 	strd	r8, r4, [sp, #168]	; 0xa8
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 80018a4:	e9cd 442c 	strd	r4, r4, [sp, #176]	; 0xb0
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 80018a8:	972e      	str	r7, [sp, #184]	; 0xb8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 80018aa:	f004 fdf5 	bl	8006498 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 80018ae:	4621      	mov	r1, r4
 80018b0:	4630      	mov	r0, r6
 80018b2:	f004 fde0 	bl	8006476 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80018b6:	481c      	ldr	r0, [pc, #112]	; (8001928 <main+0x368>)
 80018b8:	491c      	ldr	r1, [pc, #112]	; (800192c <main+0x36c>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 80018ba:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80018bc:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80018c0:	2340      	movs	r3, #64	; 0x40
 80018c2:	2120      	movs	r1, #32
 80018c4:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80018c8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80018cc:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80018d0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80018d4:	e9c0 2309 	strd	r2, r3, [r0, #36]	; 0x24
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80018d8:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.WriteRecoveryTime = 3;
 80018dc:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80018de:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80018e0:	a931      	add	r1, sp, #196	; 0xc4
  SdramTiming.RPDelay = 2;
 80018e2:	e9cd 3835 	strd	r3, r8, [sp, #212]	; 0xd4
  SdramTiming.SelfRefreshTime = 4;
 80018e6:	e9cd 2532 	strd	r2, r5, [sp, #200]	; 0xc8
  SdramTiming.RowCycleDelay = 7;
 80018ea:	9234      	str	r2, [sp, #208]	; 0xd0
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80018ec:	e9c0 4502 	strd	r4, r5, [r0, #8]
 80018f0:	e01e      	b.n	8001930 <main+0x370>
 80018f2:	bf00      	nop
 80018f4:	40023800 	.word	0x40023800
 80018f8:	40022800 	.word	0x40022800
 80018fc:	40020c00 	.word	0x40020c00
 8001900:	40021800 	.word	0x40021800
 8001904:	40021c00 	.word	0x40021c00
 8001908:	10110000 	.word	0x10110000
 800190c:	40020000 	.word	0x40020000
 8001910:	2000e700 	.word	0x2000e700
 8001914:	2000e7f8 	.word	0x2000e7f8
 8001918:	40023000 	.word	0x40023000
 800191c:	4002b000 	.word	0x4002b000
 8001920:	2000e708 	.word	0x2000e708
 8001924:	40016c00 	.word	0x40016c00
 8001928:	2000e838 	.word	0x2000e838
 800192c:	a0000140 	.word	0xa0000140
  SdramTiming.LoadToActiveDelay = 2;
 8001930:	f8cd 80c4 	str.w	r8, [sp, #196]	; 0xc4
  SdramTiming.RCDDelay = 2;
 8001934:	f8cd 80dc 	str.w	r8, [sp, #220]	; 0xdc
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001938:	f006 fe98 	bl	800866c <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 800193c:	f003 fd40 	bl	80053c0 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 8001940:	f003 fcf0 	bl	8005324 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001944:	2234      	movs	r2, #52	; 0x34
 8001946:	4621      	mov	r1, r4
 8001948:	a817      	add	r0, sp, #92	; 0x5c
 800194a:	f020 fc6d 	bl	8022228 <memset>
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 800194e:	4621      	mov	r1, r4
 8001950:	2234      	movs	r2, #52	; 0x34
 8001952:	a824      	add	r0, sp, #144	; 0x90
  hltdc.Instance = LTDC;
 8001954:	4d63      	ldr	r5, [pc, #396]	; (8001ae4 <main+0x524>)
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 8001956:	f020 fc67 	bl	8022228 <memset>
  hltdc.Instance = LTDC;
 800195a:	4b63      	ldr	r3, [pc, #396]	; (8001ae8 <main+0x528>)
  hltdc.Init.Backcolor.Blue = 0;
 800195c:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.AccumulatedActiveH = 482;
 800195e:	f04f 0eca 	mov.w	lr, #202	; 0xca
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001962:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 8001966:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 800196a:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 800196e:	22cb      	movs	r2, #203	; 0xcb
 8001970:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001974:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 8001976:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800197a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 800197e:	e9c5 4704 	strd	r4, r7, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 8001982:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001986:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 800198a:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800198e:	f005 fe03 	bl	8007598 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001992:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowY1 = 480;
 8001994:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001998:	e9cd 341c 	strd	r3, r4, [sp, #112]	; 0x70
  pLayerCfg.FBStartAdress = 0xC0000000;
 800199c:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80019a0:	2305      	movs	r3, #5
 80019a2:	e9cd 311f 	strd	r3, r1, [sp, #124]	; 0x7c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80019a6:	e9cd 281a 	strd	r2, r8, [sp, #104]	; 0x68
  pLayerCfg.ImageHeight = 480;
 80019aa:	e9cd b221 	strd	fp, r2, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80019ae:	a917      	add	r1, sp, #92	; 0x5c
 80019b0:	4622      	mov	r2, r4
 80019b2:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 200;
 80019b4:	e9cd 4b17 	strd	r4, fp, [sp, #92]	; 0x5c
  pLayerCfg.WindowY0 = 0;
 80019b8:	9419      	str	r4, [sp, #100]	; 0x64
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80019ba:	f8cd 9078 	str.w	r9, [sp, #120]	; 0x78
  pLayerCfg.Backcolor.Blue = 0;
 80019be:	f8ad 408c 	strh.w	r4, [sp, #140]	; 0x8c
  pLayerCfg.Backcolor.Red = 0;
 80019c2:	f88d 408e 	strb.w	r4, [sp, #142]	; 0x8e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80019c6:	f005 feb3 	bl	8007730 <HAL_LTDC_ConfigLayer>
  pLayerCfg1.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80019ca:	2305      	movs	r3, #5
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 80019cc:	a924      	add	r1, sp, #144	; 0x90
 80019ce:	463a      	mov	r2, r7
 80019d0:	4628      	mov	r0, r5
  pLayerCfg1.FBStartAdress = 0;
 80019d2:	e9cd 342c 	strd	r3, r4, [sp, #176]	; 0xb0
  pLayerCfg1.WindowX1 = 0;
 80019d6:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  pLayerCfg1.WindowY1 = 0;
 80019da:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  pLayerCfg1.Alpha = 0;
 80019de:	e9cd 4428 	strd	r4, r4, [sp, #160]	; 0xa0
  pLayerCfg1.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80019e2:	e9cd 492a 	strd	r4, r9, [sp, #168]	; 0xa8
  pLayerCfg1.ImageHeight = 0;
 80019e6:	e9cd 442e 	strd	r4, r4, [sp, #184]	; 0xb8
  pLayerCfg1.Backcolor.Blue = 0;
 80019ea:	f8ad 40c0 	strh.w	r4, [sp, #192]	; 0xc0
  pLayerCfg1.Backcolor.Red = 0;
 80019ee:	f88d 40c2 	strb.w	r4, [sp, #194]	; 0xc2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 80019f2:	f005 fe9d 	bl	8007730 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 80019f6:	682a      	ldr	r2, [r5, #0]
 80019f8:	6993      	ldr	r3, [r2, #24]
 80019fa:	f023 0301 	bic.w	r3, r3, #1
 80019fe:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8001a00:	4630      	mov	r0, r6
 8001a02:	f004 fea3 	bl	800674c <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001a06:	4639      	mov	r1, r7
 8001a08:	4640      	mov	r0, r8
 8001a0a:	f002 fe4d 	bl	80046a8 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 8001a0e:	2328      	movs	r3, #40	; 0x28
 8001a10:	2215      	movs	r2, #21
 8001a12:	4621      	mov	r1, r4
 8001a14:	4630      	mov	r0, r6
 8001a16:	9400      	str	r4, [sp, #0]
 8001a18:	f004 fecb 	bl	80067b2 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001a1c:	a931      	add	r1, sp, #196	; 0xc4
 8001a1e:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8001a20:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001a24:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8001a28:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001a2c:	e9cd 4437 	strd	r4, r4, [sp, #220]	; 0xdc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8001a30:	e9cd 4439 	strd	r4, r4, [sp, #228]	; 0xe4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8001a34:	943b      	str	r4, [sp, #236]	; 0xec
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001a36:	f004 fda1 	bl	800657c <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8001a3a:	f44f 7148 	mov.w	r1, #800	; 0x320
 8001a3e:	4622      	mov	r2, r4
 8001a40:	4628      	mov	r0, r5
 8001a42:	f005 fea3 	bl	800778c <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8001a46:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 8001a48:	4828      	ldr	r0, [pc, #160]	; (8001aec <main+0x52c>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001a4a:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 8001a4c:	4d28      	ldr	r5, [pc, #160]	; (8001af0 <main+0x530>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001a4e:	433b      	orrs	r3, r7
 8001a50:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 8001a52:	4b28      	ldr	r3, [pc, #160]	; (8001af4 <main+0x534>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001a54:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 8001a56:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 8001a5a:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8001a5c:	e9c0 3904 	strd	r3, r9, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8001a60:	e9c0 7a02 	strd	r7, sl, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8001a64:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001a68:	f005 ffe4 	bl	8007a34 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 8001a6c:	f003 fb20 	bl	80050b0 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 8001a70:	f003 fa54 	bl	8004f1c <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001a74:	f003 f9ca 	bl	8004e0c <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 8001a78:	491f      	ldr	r1, [pc, #124]	; (8001af8 <main+0x538>)
 8001a7a:	4b20      	ldr	r3, [pc, #128]	; (8001afc <main+0x53c>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001a7c:	622c      	str	r4, [r5, #32]
  hi2c1.Init.ClockSpeed = 400000;
 8001a7e:	e9c5 1300 	strd	r1, r3, [r5]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001a82:	4628      	mov	r0, r5
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001a84:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001a88:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 8001a8c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001a90:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001a94:	f005 fa9c 	bl	8006fd0 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001a98:	4628      	mov	r0, r5
 8001a9a:	f005 fb41 	bl	8007120 <HAL_I2C_DeInit>
  hcan2.Init.Prescaler = 25;
 8001a9e:	4d18      	ldr	r5, [pc, #96]	; (8001b00 <main+0x540>)
  hcan2.Instance = CAN2;
 8001aa0:	4818      	ldr	r0, [pc, #96]	; (8001b04 <main+0x544>)
  hcan2.Init.Prescaler = 25;
 8001aa2:	2319      	movs	r3, #25
 8001aa4:	e9c0 5300 	strd	r5, r3, [r0]
  hcan2.Init.TimeSeg2 = CAN_BS2_2TQ;
 8001aa8:	f44f 2660 	mov.w	r6, #917504	; 0xe0000
 8001aac:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  hcan2.Init.TimeTriggeredMode = DISABLE;
 8001ab0:	6184      	str	r4, [r0, #24]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 8001ab2:	8384      	strh	r4, [r0, #28]
  hcan2.Init.TimeSeg2 = CAN_BS2_2TQ;
 8001ab4:	e9c0 6304 	strd	r6, r3, [r0, #16]
  hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8001ab8:	e9c0 4402 	strd	r4, r4, [r0, #8]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 8001abc:	f003 fd98 	bl	80055f0 <HAL_CAN_Init>
  MX_TouchGFX_Init();
 8001ac0:	f7fe fd93 	bl	80005ea <MX_TouchGFX_Init>
  canInit();
 8001ac4:	f7ff fcde 	bl	8001484 <canInit>
  workInit();
 8001ac8:	f000 fb94 	bl	80021f4 <workInit>
  osKernelInitialize();
 8001acc:	f007 f80c 	bl	8008ae8 <osKernelInitialize>
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001ad0:	4a0d      	ldr	r2, [pc, #52]	; (8001b08 <main+0x548>)
 8001ad2:	480e      	ldr	r0, [pc, #56]	; (8001b0c <main+0x54c>)
 8001ad4:	4621      	mov	r1, r4
 8001ad6:	f007 f841 	bl	8008b5c <osThreadNew>
 8001ada:	4b0d      	ldr	r3, [pc, #52]	; (8001b10 <main+0x550>)
 8001adc:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001ade:	f007 f81d 	bl	8008b1c <osKernelStart>
  while (1)
 8001ae2:	e7fe      	b.n	8001ae2 <main+0x522>
 8001ae4:	2000e724 	.word	0x2000e724
 8001ae8:	40016800 	.word	0x40016800
 8001aec:	2000e86c 	.word	0x2000e86c
 8001af0:	2000e6ac 	.word	0x2000e6ac
 8001af4:	a0001000 	.word	0xa0001000
 8001af8:	40005400 	.word	0x40005400
 8001afc:	00061a80 	.word	0x00061a80
 8001b00:	40006800 	.word	0x40006800
 8001b04:	2000e7cc 	.word	0x2000e7cc
 8001b08:	08023848 	.word	0x08023848
 8001b0c:	080005ef 	.word	0x080005ef
 8001b10:	2000e7f4 	.word	0x2000e7f4

08001b14 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b14:	6802      	ldr	r2, [r0, #0]
 8001b16:	4b03      	ldr	r3, [pc, #12]	; (8001b24 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b18:	429a      	cmp	r2, r3
 8001b1a:	d101      	bne.n	8001b20 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001b1c:	f003 bd42 	b.w	80055a4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b20:	4770      	bx	lr
 8001b22:	bf00      	nop
 8001b24:	40001000 	.word	0x40001000

08001b28 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b28:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b2a:	4b0e      	ldr	r3, [pc, #56]	; (8001b64 <HAL_MspInit+0x3c>)
 8001b2c:	2200      	movs	r2, #0
 8001b2e:	9200      	str	r2, [sp, #0]
 8001b30:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b32:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b36:	6459      	str	r1, [r3, #68]	; 0x44
 8001b38:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b3a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001b3e:	9100      	str	r1, [sp, #0]
 8001b40:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b42:	9201      	str	r2, [sp, #4]
 8001b44:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001b46:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001b4a:	6419      	str	r1, [r3, #64]	; 0x40
 8001b4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b4e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b52:	9301      	str	r3, [sp, #4]
 8001b54:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b56:	210f      	movs	r1, #15
 8001b58:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b5c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b5e:	f004 b87d 	b.w	8005c5c <HAL_NVIC_SetPriority>
 8001b62:	bf00      	nop
 8001b64:	40023800 	.word	0x40023800

08001b68 <HAL_CAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hcan: CAN handle pointer
* @retval None
*/
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 8001b68:	b510      	push	{r4, lr}
 8001b6a:	4604      	mov	r4, r0
 8001b6c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b6e:	2214      	movs	r2, #20
 8001b70:	2100      	movs	r1, #0
 8001b72:	a803      	add	r0, sp, #12
 8001b74:	f020 fb58 	bl	8022228 <memset>
  if(hcan->Instance==CAN2)
 8001b78:	6822      	ldr	r2, [r4, #0]
 8001b7a:	4b26      	ldr	r3, [pc, #152]	; (8001c14 <HAL_CAN_MspInit+0xac>)
 8001b7c:	429a      	cmp	r2, r3
 8001b7e:	d147      	bne.n	8001c10 <HAL_CAN_MspInit+0xa8>
  {
  /* USER CODE BEGIN CAN2_MspInit 0 */

  /* USER CODE END CAN2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CAN2_CLK_ENABLE();
 8001b80:	f503 33e8 	add.w	r3, r3, #118784	; 0x1d000
 8001b84:	2400      	movs	r4, #0
 8001b86:	9400      	str	r4, [sp, #0]
 8001b88:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b8a:	4823      	ldr	r0, [pc, #140]	; (8001c18 <HAL_CAN_MspInit+0xb0>)
    __HAL_RCC_CAN2_CLK_ENABLE();
 8001b8c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001b90:	641a      	str	r2, [r3, #64]	; 0x40
 8001b92:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001b94:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001b98:	9200      	str	r2, [sp, #0]
 8001b9a:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_CAN1_CLK_ENABLE();
 8001b9c:	9401      	str	r4, [sp, #4]
 8001b9e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ba0:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8001ba4:	641a      	str	r2, [r3, #64]	; 0x40
 8001ba6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ba8:	f002 7200 	and.w	r2, r2, #33554432	; 0x2000000
 8001bac:	9201      	str	r2, [sp, #4]
 8001bae:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001bb0:	9402      	str	r4, [sp, #8]
 8001bb2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bb4:	f042 0202 	orr.w	r2, r2, #2
 8001bb8:	631a      	str	r2, [r3, #48]	; 0x30
 8001bba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bbc:	f003 0302 	and.w	r3, r3, #2
 8001bc0:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bc2:	f242 0220 	movw	r2, #8224	; 0x2020
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001bc6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bc8:	2302      	movs	r3, #2
 8001bca:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bce:	2101      	movs	r1, #1
 8001bd0:	2303      	movs	r3, #3
 8001bd2:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
 8001bd6:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bd8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
 8001bda:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bdc:	f004 fe72 	bl	80068c4 <HAL_GPIO_Init>

    /* CAN2 interrupt Init */
    HAL_NVIC_SetPriority(CAN2_TX_IRQn, 5, 0);
 8001be0:	4622      	mov	r2, r4
 8001be2:	2105      	movs	r1, #5
 8001be4:	203f      	movs	r0, #63	; 0x3f
 8001be6:	f004 f839 	bl	8005c5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_TX_IRQn);
 8001bea:	203f      	movs	r0, #63	; 0x3f
 8001bec:	f004 f868 	bl	8005cc0 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(CAN2_RX0_IRQn, 5, 0);
 8001bf0:	4622      	mov	r2, r4
 8001bf2:	2105      	movs	r1, #5
 8001bf4:	2040      	movs	r0, #64	; 0x40
 8001bf6:	f004 f831 	bl	8005c5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX0_IRQn);
 8001bfa:	2040      	movs	r0, #64	; 0x40
 8001bfc:	f004 f860 	bl	8005cc0 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(CAN2_RX1_IRQn, 5, 0);
 8001c00:	2041      	movs	r0, #65	; 0x41
 8001c02:	4622      	mov	r2, r4
 8001c04:	2105      	movs	r1, #5
 8001c06:	f004 f829 	bl	8005c5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX1_IRQn);
 8001c0a:	2041      	movs	r0, #65	; 0x41
 8001c0c:	f004 f858 	bl	8005cc0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN CAN2_MspInit 1 */

  /* USER CODE END CAN2_MspInit 1 */
  }

}
 8001c10:	b008      	add	sp, #32
 8001c12:	bd10      	pop	{r4, pc}
 8001c14:	40006800 	.word	0x40006800
 8001c18:	40020400 	.word	0x40020400

08001c1c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001c1c:	6802      	ldr	r2, [r0, #0]
 8001c1e:	4b09      	ldr	r3, [pc, #36]	; (8001c44 <HAL_CRC_MspInit+0x28>)
 8001c20:	429a      	cmp	r2, r3
{
 8001c22:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001c24:	d10b      	bne.n	8001c3e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001c26:	2300      	movs	r3, #0
 8001c28:	9301      	str	r3, [sp, #4]
 8001c2a:	4b07      	ldr	r3, [pc, #28]	; (8001c48 <HAL_CRC_MspInit+0x2c>)
 8001c2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c2e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001c32:	631a      	str	r2, [r3, #48]	; 0x30
 8001c34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c36:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001c3a:	9301      	str	r3, [sp, #4]
 8001c3c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001c3e:	b002      	add	sp, #8
 8001c40:	4770      	bx	lr
 8001c42:	bf00      	nop
 8001c44:	40023000 	.word	0x40023000
 8001c48:	40023800 	.word	0x40023800

08001c4c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001c4c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001c4e:	4b0f      	ldr	r3, [pc, #60]	; (8001c8c <HAL_DMA2D_MspInit+0x40>)
 8001c50:	6802      	ldr	r2, [r0, #0]
 8001c52:	429a      	cmp	r2, r3
 8001c54:	d116      	bne.n	8001c84 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c56:	2200      	movs	r2, #0
 8001c58:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001c5c:	9201      	str	r2, [sp, #4]
 8001c5e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c60:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c64:	6319      	str	r1, [r3, #48]	; 0x30
 8001c66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c68:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c6c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c6e:	2105      	movs	r1, #5
 8001c70:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c72:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c74:	f003 fff2 	bl	8005c5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c78:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c7a:	b003      	add	sp, #12
 8001c7c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c80:	f004 b81e 	b.w	8005cc0 <HAL_NVIC_EnableIRQ>
}
 8001c84:	b003      	add	sp, #12
 8001c86:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c8a:	bf00      	nop
 8001c8c:	4002b000 	.word	0x4002b000

08001c90 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001c90:	b510      	push	{r4, lr}
 8001c92:	4604      	mov	r4, r0
 8001c94:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c96:	2214      	movs	r2, #20
 8001c98:	2100      	movs	r1, #0
 8001c9a:	a803      	add	r0, sp, #12
 8001c9c:	f020 fac4 	bl	8022228 <memset>
  if(hdsi->Instance==DSI)
 8001ca0:	6822      	ldr	r2, [r4, #0]
 8001ca2:	4b18      	ldr	r3, [pc, #96]	; (8001d04 <HAL_DSI_MspInit+0x74>)
 8001ca4:	429a      	cmp	r2, r3
 8001ca6:	d12a      	bne.n	8001cfe <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ca8:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001cac:	2400      	movs	r4, #0
 8001cae:	9401      	str	r4, [sp, #4]
 8001cb0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001cb2:	4815      	ldr	r0, [pc, #84]	; (8001d08 <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001cb4:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001cb8:	645a      	str	r2, [r3, #68]	; 0x44
 8001cba:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001cbc:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001cc0:	9201      	str	r2, [sp, #4]
 8001cc2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001cc4:	9402      	str	r4, [sp, #8]
 8001cc6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cc8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001ccc:	631a      	str	r2, [r3, #48]	; 0x30
 8001cce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cd0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001cd4:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cd6:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001cd8:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cda:	2302      	movs	r3, #2
 8001cdc:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ce0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001ce2:	230d      	movs	r3, #13
 8001ce4:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ce6:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001cea:	f004 fdeb 	bl	80068c4 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001cee:	205c      	movs	r0, #92	; 0x5c
 8001cf0:	4622      	mov	r2, r4
 8001cf2:	2105      	movs	r1, #5
 8001cf4:	f003 ffb2 	bl	8005c5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001cf8:	205c      	movs	r0, #92	; 0x5c
 8001cfa:	f003 ffe1 	bl	8005cc0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001cfe:	b008      	add	sp, #32
 8001d00:	bd10      	pop	{r4, pc}
 8001d02:	bf00      	nop
 8001d04:	40016c00 	.word	0x40016c00
 8001d08:	40022400 	.word	0x40022400

08001d0c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001d0c:	b530      	push	{r4, r5, lr}
 8001d0e:	4604      	mov	r4, r0
 8001d10:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d12:	2214      	movs	r2, #20
 8001d14:	2100      	movs	r1, #0
 8001d16:	a803      	add	r0, sp, #12
 8001d18:	f020 fa86 	bl	8022228 <memset>
  if(hi2c->Instance==I2C1)
 8001d1c:	6822      	ldr	r2, [r4, #0]
 8001d1e:	4b1a      	ldr	r3, [pc, #104]	; (8001d88 <HAL_I2C_MspInit+0x7c>)
 8001d20:	429a      	cmp	r2, r3
 8001d22:	d12f      	bne.n	8001d84 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d24:	4c19      	ldr	r4, [pc, #100]	; (8001d8c <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d26:	481a      	ldr	r0, [pc, #104]	; (8001d90 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d28:	2500      	movs	r5, #0
 8001d2a:	9501      	str	r5, [sp, #4]
 8001d2c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001d2e:	f043 0302 	orr.w	r3, r3, #2
 8001d32:	6323      	str	r3, [r4, #48]	; 0x30
 8001d34:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001d36:	f003 0302 	and.w	r3, r3, #2
 8001d3a:	9301      	str	r3, [sp, #4]
 8001d3c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d3e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001d42:	2312      	movs	r3, #18
 8001d44:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d48:	2101      	movs	r1, #1
 8001d4a:	2303      	movs	r3, #3
 8001d4c:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001d50:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d52:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001d54:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d56:	f004 fdb5 	bl	80068c4 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001d5a:	9502      	str	r5, [sp, #8]
 8001d5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001d5e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001d62:	6423      	str	r3, [r4, #64]	; 0x40
 8001d64:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001d66:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001d6a:	9302      	str	r3, [sp, #8]
 8001d6c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001d6e:	6a23      	ldr	r3, [r4, #32]
 8001d70:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001d74:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001d76:	6a23      	ldr	r3, [r4, #32]
 8001d78:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001d7c:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001d7e:	2064      	movs	r0, #100	; 0x64
 8001d80:	f003 fc22 	bl	80055c8 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001d84:	b009      	add	sp, #36	; 0x24
 8001d86:	bd30      	pop	{r4, r5, pc}
 8001d88:	40005400 	.word	0x40005400
 8001d8c:	40023800 	.word	0x40023800
 8001d90:	40020400 	.word	0x40020400

08001d94 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001d94:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001d96:	6802      	ldr	r2, [r0, #0]
 8001d98:	4b0a      	ldr	r3, [pc, #40]	; (8001dc4 <HAL_I2C_MspDeInit+0x30>)
 8001d9a:	429a      	cmp	r2, r3
 8001d9c:	d110      	bne.n	8001dc0 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001d9e:	4a0a      	ldr	r2, [pc, #40]	; (8001dc8 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001da0:	480a      	ldr	r0, [pc, #40]	; (8001dcc <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001da2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001da4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001da8:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001daa:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001dae:	f004 fe73 	bl	8006a98 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001db2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001db6:	4805      	ldr	r0, [pc, #20]	; (8001dcc <HAL_I2C_MspDeInit+0x38>)
 8001db8:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001dbc:	f004 be6c 	b.w	8006a98 <HAL_GPIO_DeInit>
}
 8001dc0:	bd08      	pop	{r3, pc}
 8001dc2:	bf00      	nop
 8001dc4:	40005400 	.word	0x40005400
 8001dc8:	40023800 	.word	0x40023800
 8001dcc:	40020400 	.word	0x40020400

08001dd0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001dd0:	b507      	push	{r0, r1, r2, lr}
  if(hltdc->Instance==LTDC)
 8001dd2:	4b0f      	ldr	r3, [pc, #60]	; (8001e10 <HAL_LTDC_MspInit+0x40>)
 8001dd4:	6802      	ldr	r2, [r0, #0]
 8001dd6:	429a      	cmp	r2, r3
 8001dd8:	d116      	bne.n	8001e08 <HAL_LTDC_MspInit+0x38>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001dda:	2200      	movs	r2, #0
 8001ddc:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001de0:	9201      	str	r2, [sp, #4]
 8001de2:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001de4:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8001de8:	6459      	str	r1, [r3, #68]	; 0x44
 8001dea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001dec:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001df0:	9301      	str	r3, [sp, #4]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001df2:	2105      	movs	r1, #5
 8001df4:	2058      	movs	r0, #88	; 0x58
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001df6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001df8:	f003 ff30 	bl	8005c5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001dfc:	2058      	movs	r0, #88	; 0x58
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001dfe:	b003      	add	sp, #12
 8001e00:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001e04:	f003 bf5c 	b.w	8005cc0 <HAL_NVIC_EnableIRQ>
}
 8001e08:	b003      	add	sp, #12
 8001e0a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001e0e:	bf00      	nop
 8001e10:	40016800 	.word	0x40016800

08001e14 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001e14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e16:	4604      	mov	r4, r0
 8001e18:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e1a:	2214      	movs	r2, #20
 8001e1c:	2100      	movs	r1, #0
 8001e1e:	a803      	add	r0, sp, #12
 8001e20:	f020 fa02 	bl	8022228 <memset>
  if(hqspi->Instance==QUADSPI)
 8001e24:	6822      	ldr	r2, [r4, #0]
 8001e26:	4b24      	ldr	r3, [pc, #144]	; (8001eb8 <HAL_QSPI_MspInit+0xa4>)
 8001e28:	429a      	cmp	r2, r3
 8001e2a:	d143      	bne.n	8001eb4 <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001e2c:	4b23      	ldr	r3, [pc, #140]	; (8001ebc <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e2e:	4824      	ldr	r0, [pc, #144]	; (8001ec0 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001e30:	2400      	movs	r4, #0
 8001e32:	9400      	str	r4, [sp, #0]
 8001e34:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001e36:	f042 0202 	orr.w	r2, r2, #2
 8001e3a:	639a      	str	r2, [r3, #56]	; 0x38
 8001e3c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001e3e:	f002 0202 	and.w	r2, r2, #2
 8001e42:	9200      	str	r2, [sp, #0]
 8001e44:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001e46:	9401      	str	r4, [sp, #4]
 8001e48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e4a:	f042 0202 	orr.w	r2, r2, #2
 8001e4e:	631a      	str	r2, [r3, #48]	; 0x30
 8001e50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e52:	f002 0202 	and.w	r2, r2, #2
 8001e56:	9201      	str	r2, [sp, #4]
 8001e58:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e5a:	9402      	str	r4, [sp, #8]
 8001e5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e5e:	f042 0220 	orr.w	r2, r2, #32
 8001e62:	631a      	str	r2, [r3, #48]	; 0x30
 8001e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e66:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e68:	f003 0320 	and.w	r3, r3, #32
 8001e6c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e6e:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001e70:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e72:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001e74:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e76:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e78:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e7a:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001e7e:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e82:	f004 fd1f 	bl	80068c4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001e86:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e8a:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e8e:	480d      	ldr	r0, [pc, #52]	; (8001ec4 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001e90:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e92:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001e94:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e96:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e9a:	f004 fd13 	bl	80068c4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001e9e:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ea2:	4808      	ldr	r0, [pc, #32]	; (8001ec4 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001ea4:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ea6:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ea8:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eac:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001eb0:	f004 fd08 	bl	80068c4 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001eb4:	b009      	add	sp, #36	; 0x24
 8001eb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001eb8:	a0001000 	.word	0xa0001000
 8001ebc:	40023800 	.word	0x40023800
 8001ec0:	40020400 	.word	0x40020400
 8001ec4:	40021400 	.word	0x40021400

08001ec8 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001ec8:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001eca:	6802      	ldr	r2, [r0, #0]
 8001ecc:	4b09      	ldr	r3, [pc, #36]	; (8001ef4 <HAL_QSPI_MspDeInit+0x2c>)
 8001ece:	429a      	cmp	r2, r3
 8001ed0:	d10f      	bne.n	8001ef2 <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001ed2:	4a09      	ldr	r2, [pc, #36]	; (8001ef8 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001ed4:	4809      	ldr	r0, [pc, #36]	; (8001efc <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001ed6:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001ed8:	f023 0302 	bic.w	r3, r3, #2
 8001edc:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001ede:	2140      	movs	r1, #64	; 0x40
 8001ee0:	f004 fdda 	bl	8006a98 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001ee4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001ee8:	4805      	ldr	r0, [pc, #20]	; (8001f00 <HAL_QSPI_MspDeInit+0x38>)
 8001eea:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001eee:	f004 bdd3 	b.w	8006a98 <HAL_GPIO_DeInit>
}
 8001ef2:	bd08      	pop	{r3, pc}
 8001ef4:	a0001000 	.word	0xa0001000
 8001ef8:	40023800 	.word	0x40023800
 8001efc:	40020400 	.word	0x40020400
 8001f00:	40021400 	.word	0x40021400

08001f04 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001f04:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001f06:	4b31      	ldr	r3, [pc, #196]	; (8001fcc <HAL_SDRAM_MspInit+0xc8>)
 8001f08:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001f0a:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001f0c:	2c00      	cmp	r4, #0
 8001f0e:	d15b      	bne.n	8001fc8 <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001f10:	2201      	movs	r2, #1
 8001f12:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f14:	4b2e      	ldr	r3, [pc, #184]	; (8001fd0 <HAL_SDRAM_MspInit+0xcc>)
 8001f16:	9400      	str	r4, [sp, #0]
 8001f18:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f1a:	482e      	ldr	r0, [pc, #184]	; (8001fd4 <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f1c:	f042 0201 	orr.w	r2, r2, #1
 8001f20:	639a      	str	r2, [r3, #56]	; 0x38
 8001f22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f24:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f26:	f003 0301 	and.w	r3, r3, #1
 8001f2a:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f2c:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f2e:	2603      	movs	r6, #3
 8001f30:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f32:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f34:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f36:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001f3a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f3e:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f42:	f004 fcbf 	bl	80068c4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001f46:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f4a:	4823      	ldr	r0, [pc, #140]	; (8001fd8 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f4c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f4e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f50:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f54:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f58:	f004 fcb4 	bl	80068c4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001f5c:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f60:	481e      	ldr	r0, [pc, #120]	; (8001fdc <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f62:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f64:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f66:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f6a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f6e:	f004 fca9 	bl	80068c4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001f72:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001f76:	481a      	ldr	r0, [pc, #104]	; (8001fe0 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f78:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001f7a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f7c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f80:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001f84:	f004 fc9e 	bl	80068c4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001f88:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f8c:	4815      	ldr	r0, [pc, #84]	; (8001fe4 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f8e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f90:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f92:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f96:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f9a:	f004 fc93 	bl	80068c4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001f9e:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001fa2:	4811      	ldr	r0, [pc, #68]	; (8001fe8 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fa4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001fa6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fa8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fac:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001fb0:	f004 fc88 	bl	80068c4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001fb4:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fb6:	480d      	ldr	r0, [pc, #52]	; (8001fec <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fb8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fba:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fbc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fc0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fc4:	f004 fc7e 	bl	80068c4 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001fc8:	b007      	add	sp, #28
 8001fca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001fcc:	200053e4 	.word	0x200053e4
 8001fd0:	40023800 	.word	0x40023800
 8001fd4:	40021000 	.word	0x40021000
 8001fd8:	40021800 	.word	0x40021800
 8001fdc:	40020c00 	.word	0x40020c00
 8001fe0:	40022000 	.word	0x40022000
 8001fe4:	40021400 	.word	0x40021400
 8001fe8:	40021c00 	.word	0x40021c00
 8001fec:	40020800 	.word	0x40020800

08001ff0 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001ff0:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001ff2:	4b17      	ldr	r3, [pc, #92]	; (8002050 <HAL_SDRAM_MspDeInit+0x60>)
 8001ff4:	681a      	ldr	r2, [r3, #0]
 8001ff6:	bb52      	cbnz	r2, 800204e <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001ff8:	2201      	movs	r2, #1
 8001ffa:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001ffc:	4a15      	ldr	r2, [pc, #84]	; (8002054 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001ffe:	4816      	ldr	r0, [pc, #88]	; (8002058 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8002000:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002002:	f023 0301 	bic.w	r3, r3, #1
 8002006:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8002008:	f64f 7183 	movw	r1, #65411	; 0xff83
 800200c:	f004 fd44 	bl	8006a98 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8002010:	4812      	ldr	r0, [pc, #72]	; (800205c <HAL_SDRAM_MspDeInit+0x6c>)
 8002012:	f248 1133 	movw	r1, #33075	; 0x8133
 8002016:	f004 fd3f 	bl	8006a98 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 800201a:	4811      	ldr	r0, [pc, #68]	; (8002060 <HAL_SDRAM_MspDeInit+0x70>)
 800201c:	f24c 7103 	movw	r1, #50947	; 0xc703
 8002020:	f004 fd3a 	bl	8006a98 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8002024:	480f      	ldr	r0, [pc, #60]	; (8002064 <HAL_SDRAM_MspDeInit+0x74>)
 8002026:	f240 61ff 	movw	r1, #1791	; 0x6ff
 800202a:	f004 fd35 	bl	8006a98 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800202e:	480e      	ldr	r0, [pc, #56]	; (8002068 <HAL_SDRAM_MspDeInit+0x78>)
 8002030:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8002034:	f004 fd30 	bl	8006a98 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8002038:	480c      	ldr	r0, [pc, #48]	; (800206c <HAL_SDRAM_MspDeInit+0x7c>)
 800203a:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 800203e:	f004 fd2b 	bl	8006a98 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8002042:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8002046:	480a      	ldr	r0, [pc, #40]	; (8002070 <HAL_SDRAM_MspDeInit+0x80>)
 8002048:	210d      	movs	r1, #13
 800204a:	f004 bd25 	b.w	8006a98 <HAL_GPIO_DeInit>
}
 800204e:	bd08      	pop	{r3, pc}
 8002050:	200053e0 	.word	0x200053e0
 8002054:	40023800 	.word	0x40023800
 8002058:	40021000 	.word	0x40021000
 800205c:	40021800 	.word	0x40021800
 8002060:	40020c00 	.word	0x40020c00
 8002064:	40022000 	.word	0x40022000
 8002068:	40021400 	.word	0x40021400
 800206c:	40021c00 	.word	0x40021c00
 8002070:	40020800 	.word	0x40020800

08002074 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002074:	b530      	push	{r4, r5, lr}
 8002076:	4601      	mov	r1, r0
 8002078:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 800207a:	2200      	movs	r2, #0
 800207c:	2036      	movs	r0, #54	; 0x36
 800207e:	f003 fded 	bl	8005c5c <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002082:	2036      	movs	r0, #54	; 0x36
 8002084:	f003 fe1c 	bl	8005cc0 <HAL_NVIC_EnableIRQ>
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002088:	2500      	movs	r5, #0
 800208a:	4b15      	ldr	r3, [pc, #84]	; (80020e0 <HAL_InitTick+0x6c>)
 800208c:	9502      	str	r5, [sp, #8]
 800208e:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002090:	4c14      	ldr	r4, [pc, #80]	; (80020e4 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002092:	f042 0210 	orr.w	r2, r2, #16
 8002096:	641a      	str	r2, [r3, #64]	; 0x40
 8002098:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800209a:	f003 0310 	and.w	r3, r3, #16
 800209e:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020a0:	a901      	add	r1, sp, #4
 80020a2:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80020a4:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020a6:	f005 ffdb 	bl	8008060 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80020aa:	f005 ffc9 	bl	8008040 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 80020ae:	4b0e      	ldr	r3, [pc, #56]	; (80020e8 <HAL_InitTick+0x74>)
 80020b0:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 80020b2:	f240 33e7 	movw	r3, #999	; 0x3e7
 80020b6:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80020b8:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80020ba:	4b0c      	ldr	r3, [pc, #48]	; (80020ec <HAL_InitTick+0x78>)
 80020bc:	fbb0 f0f3 	udiv	r0, r0, r3
 80020c0:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80020c2:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80020c4:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 80020c6:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020c8:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80020ca:	f006 fc43 	bl	8008954 <HAL_TIM_Base_Init>
 80020ce:	b920      	cbnz	r0, 80020da <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80020d0:	4620      	mov	r0, r4
 80020d2:	f006 fb23 	bl	800871c <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 80020d6:	b009      	add	sp, #36	; 0x24
 80020d8:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80020da:	2001      	movs	r0, #1
 80020dc:	e7fb      	b.n	80020d6 <HAL_InitTick+0x62>
 80020de:	bf00      	nop
 80020e0:	40023800 	.word	0x40023800
 80020e4:	2000e8b8 	.word	0x2000e8b8
 80020e8:	40001000 	.word	0x40001000
 80020ec:	000f4240 	.word	0x000f4240

080020f0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80020f0:	4770      	bx	lr

080020f2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80020f2:	e7fe      	b.n	80020f2 <HardFault_Handler>

080020f4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80020f4:	e7fe      	b.n	80020f4 <MemManage_Handler>

080020f6 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80020f6:	e7fe      	b.n	80020f6 <BusFault_Handler>

080020f8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80020f8:	e7fe      	b.n	80020f8 <UsageFault_Handler>

080020fa <DebugMon_Handler>:
 80020fa:	4770      	bx	lr

080020fc <EXTI0_IRQHandler>:
void EXTI0_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI0_IRQn 0 */

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 80020fc:	2001      	movs	r0, #1
 80020fe:	f004 bd7f 	b.w	8006c00 <HAL_GPIO_EXTI_IRQHandler>
	...

08002104 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002104:	4801      	ldr	r0, [pc, #4]	; (800210c <TIM6_DAC_IRQHandler+0x8>)
 8002106:	f006 bb1d 	b.w	8008744 <HAL_TIM_IRQHandler>
 800210a:	bf00      	nop
 800210c:	2000e8b8 	.word	0x2000e8b8

08002110 <CAN2_TX_IRQHandler>:
void CAN2_TX_IRQHandler(void)
{
  /* USER CODE BEGIN CAN2_TX_IRQn 0 */

  /* USER CODE END CAN2_TX_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan2);
 8002110:	4801      	ldr	r0, [pc, #4]	; (8002118 <CAN2_TX_IRQHandler+0x8>)
 8002112:	f003 bc93 	b.w	8005a3c <HAL_CAN_IRQHandler>
 8002116:	bf00      	nop
 8002118:	2000e7cc 	.word	0x2000e7cc

0800211c <CAN2_RX0_IRQHandler>:
 800211c:	f7ff bff8 	b.w	8002110 <CAN2_TX_IRQHandler>

08002120 <CAN2_RX1_IRQHandler>:
 8002120:	f7ff bff6 	b.w	8002110 <CAN2_TX_IRQHandler>

08002124 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002124:	4801      	ldr	r0, [pc, #4]	; (800212c <LTDC_IRQHandler+0x8>)
 8002126:	f005 baa6 	b.w	8007676 <HAL_LTDC_IRQHandler>
 800212a:	bf00      	nop
 800212c:	2000e724 	.word	0x2000e724

08002130 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002130:	4801      	ldr	r0, [pc, #4]	; (8002138 <DMA2D_IRQHandler+0x8>)
 8002132:	f003 bf29 	b.w	8005f88 <HAL_DMA2D_IRQHandler>
 8002136:	bf00      	nop
 8002138:	2000e7f8 	.word	0x2000e7f8

0800213c <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 800213c:	4801      	ldr	r0, [pc, #4]	; (8002144 <DSI_IRQHandler+0x8>)
 800213e:	f004 b928 	b.w	8006392 <HAL_DSI_IRQHandler>
 8002142:	bf00      	nop
 8002144:	2000e708 	.word	0x2000e708

08002148 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002148:	2001      	movs	r0, #1
 800214a:	4770      	bx	lr

0800214c <_kill>:

int _kill(int pid, int sig)
{
 800214c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800214e:	f020 f811 	bl	8022174 <__errno>
 8002152:	2316      	movs	r3, #22
 8002154:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002156:	f04f 30ff 	mov.w	r0, #4294967295
 800215a:	bd08      	pop	{r3, pc}

0800215c <_exit>:

void _exit (int status)
{
 800215c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800215e:	f020 f809 	bl	8022174 <__errno>
 8002162:	2316      	movs	r3, #22
 8002164:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002166:	e7fe      	b.n	8002166 <_exit+0xa>

08002168 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002168:	b570      	push	{r4, r5, r6, lr}
 800216a:	460e      	mov	r6, r1
 800216c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800216e:	2500      	movs	r5, #0
 8002170:	42a5      	cmp	r5, r4
 8002172:	db01      	blt.n	8002178 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002174:	4620      	mov	r0, r4
 8002176:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002178:	f3af 8000 	nop.w
 800217c:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800217e:	3501      	adds	r5, #1
 8002180:	e7f6      	b.n	8002170 <_read+0x8>

08002182 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002182:	b570      	push	{r4, r5, r6, lr}
 8002184:	460e      	mov	r6, r1
 8002186:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002188:	2500      	movs	r5, #0
 800218a:	42a5      	cmp	r5, r4
 800218c:	db01      	blt.n	8002192 <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800218e:	4620      	mov	r0, r4
 8002190:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002192:	5d70      	ldrb	r0, [r6, r5]
 8002194:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002198:	3501      	adds	r5, #1
 800219a:	e7f6      	b.n	800218a <_write+0x8>

0800219c <_close>:

int _close(int file)
{
	return -1;
}
 800219c:	f04f 30ff 	mov.w	r0, #4294967295
 80021a0:	4770      	bx	lr

080021a2 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80021a2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021a6:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021a8:	2000      	movs	r0, #0
 80021aa:	4770      	bx	lr

080021ac <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021ac:	2001      	movs	r0, #1
 80021ae:	4770      	bx	lr

080021b0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80021b0:	2000      	movs	r0, #0
 80021b2:	4770      	bx	lr

080021b4 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80021b4:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80021b6:	4b0a      	ldr	r3, [pc, #40]	; (80021e0 <_sbrk+0x2c>)
 80021b8:	6819      	ldr	r1, [r3, #0]
{
 80021ba:	4602      	mov	r2, r0
	if (heap_end == 0)
 80021bc:	b909      	cbnz	r1, 80021c2 <_sbrk+0xe>
		heap_end = &end;
 80021be:	4909      	ldr	r1, [pc, #36]	; (80021e4 <_sbrk+0x30>)
 80021c0:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 80021c2:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 80021c4:	4669      	mov	r1, sp
 80021c6:	4402      	add	r2, r0
 80021c8:	428a      	cmp	r2, r1
 80021ca:	d906      	bls.n	80021da <_sbrk+0x26>
	{
		errno = ENOMEM;
 80021cc:	f01f ffd2 	bl	8022174 <__errno>
 80021d0:	230c      	movs	r3, #12
 80021d2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80021d4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80021d8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80021da:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 80021dc:	e7fc      	b.n	80021d8 <_sbrk+0x24>
 80021de:	bf00      	nop
 80021e0:	200053e8 	.word	0x200053e8
 80021e4:	2000e998 	.word	0x2000e998

080021e8 <workTask>:
#include "can.h"


static void workTask(void *parameters)
{
	screen = 1;
 80021e8:	4b01      	ldr	r3, [pc, #4]	; (80021f0 <workTask+0x8>)
 80021ea:	2201      	movs	r2, #1
 80021ec:	601a      	str	r2, [r3, #0]
	while(1){
 80021ee:	e7fe      	b.n	80021ee <workTask+0x6>
 80021f0:	2000e6a4 	.word	0x2000e6a4

080021f4 <workInit>:
	}

}

void workInit()
{
 80021f4:	b507      	push	{r0, r1, r2, lr}
	xTaskCreate(workTask, "workTask", 128, NULL, 5, NULL);
 80021f6:	2300      	movs	r3, #0
 80021f8:	2205      	movs	r2, #5
 80021fa:	e9cd 2300 	strd	r2, r3, [sp]
 80021fe:	4904      	ldr	r1, [pc, #16]	; (8002210 <workInit+0x1c>)
 8002200:	4804      	ldr	r0, [pc, #16]	; (8002214 <workInit+0x20>)
 8002202:	2280      	movs	r2, #128	; 0x80
 8002204:	f008 f826 	bl	800a254 <xTaskCreate>
}
 8002208:	b003      	add	sp, #12
 800220a:	f85d fb04 	ldr.w	pc, [sp], #4
 800220e:	bf00      	nop
 8002210:	0802386c 	.word	0x0802386c
 8002214:	080021e9 	.word	0x080021e9

08002218 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_02 = 5; // PALSCRI_TTF_32_4bpp
    static const touchgfx::FontId TYPOGRAPHY_03 = 6; // ROCK_TTF_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 7;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002218:	4770      	bx	lr

0800221a <_ZN23ApplicationFontProviderD0Ev>:
 800221a:	b510      	push	{r4, lr}
 800221c:	2104      	movs	r1, #4
 800221e:	4604      	mov	r4, r0
 8002220:	f01f f957 	bl	80214d2 <_ZdlPvj>
 8002224:	4620      	mov	r0, r4
 8002226:	bd10      	pop	{r4, pc}

08002228 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002228:	b508      	push	{r3, lr}
 800222a:	2906      	cmp	r1, #6
 800222c:	d821      	bhi.n	8002272 <_ZN23ApplicationFontProvider7getFontEt+0x4a>
 800222e:	e8df f001 	tbb	[pc, r1]
 8002232:	0804      	.short	0x0804
 8002234:	1814100c 	.word	0x1814100c
 8002238:	1c          	.byte	0x1c
 8002239:	00          	.byte	0x00
    switch (typography)
    {
    case Typography::DEFAULT:
        // seguisb_22_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800223a:	f002 f8bf 	bl	80043bc <_ZN17TypedTextDatabase8getFontsEv>
 800223e:	6800      	ldr	r0, [r0, #0]
        // ROCK_TTF_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
    default:
        return 0;
    }
}
 8002240:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002242:	f002 f8bb 	bl	80043bc <_ZN17TypedTextDatabase8getFontsEv>
 8002246:	6840      	ldr	r0, [r0, #4]
 8002248:	e7fa      	b.n	8002240 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800224a:	f002 f8b7 	bl	80043bc <_ZN17TypedTextDatabase8getFontsEv>
 800224e:	6880      	ldr	r0, [r0, #8]
 8002250:	e7f6      	b.n	8002240 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002252:	f002 f8b3 	bl	80043bc <_ZN17TypedTextDatabase8getFontsEv>
 8002256:	68c0      	ldr	r0, [r0, #12]
 8002258:	e7f2      	b.n	8002240 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 800225a:	f002 f8af 	bl	80043bc <_ZN17TypedTextDatabase8getFontsEv>
 800225e:	6900      	ldr	r0, [r0, #16]
 8002260:	e7ee      	b.n	8002240 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 8002262:	f002 f8ab 	bl	80043bc <_ZN17TypedTextDatabase8getFontsEv>
 8002266:	6940      	ldr	r0, [r0, #20]
 8002268:	e7ea      	b.n	8002240 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 800226a:	f002 f8a7 	bl	80043bc <_ZN17TypedTextDatabase8getFontsEv>
 800226e:	6980      	ldr	r0, [r0, #24]
 8002270:	e7e6      	b.n	8002240 <_ZN23ApplicationFontProvider7getFontEt+0x18>
{
 8002272:	2000      	movs	r0, #0
 8002274:	e7e4      	b.n	8002240 <_ZN23ApplicationFontProvider7getFontEt+0x18>
	...

08002278 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002278:	4800      	ldr	r0, [pc, #0]	; (800227c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800227a:	4770      	bx	lr
 800227c:	0802388c 	.word	0x0802388c

08002280 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002280:	2003      	movs	r0, #3
 8002282:	4770      	bx	lr

08002284 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002284:	b513      	push	{r0, r1, r4, lr}
 8002286:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002288:	b151      	cbz	r1, 80022a0 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800228a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800228c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800228e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002292:	aa01      	add	r2, sp, #4
 8002294:	689c      	ldr	r4, [r3, #8]
 8002296:	f10d 0303 	add.w	r3, sp, #3
 800229a:	47a0      	blx	r4
        return glyph;
    }
 800229c:	b002      	add	sp, #8
 800229e:	bd10      	pop	{r4, pc}
            return 0;
 80022a0:	4608      	mov	r0, r1
 80022a2:	e7fb      	b.n	800229c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080022a4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80022a4:	8940      	ldrh	r0, [r0, #10]
 80022a6:	4770      	bx	lr

080022a8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80022a8:	8980      	ldrh	r0, [r0, #12]
 80022aa:	4770      	bx	lr

080022ac <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80022ac:	8880      	ldrh	r0, [r0, #4]
 80022ae:	4770      	bx	lr

080022b0 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80022b0:	7983      	ldrb	r3, [r0, #6]
 80022b2:	8880      	ldrh	r0, [r0, #4]
 80022b4:	4418      	add	r0, r3
    }
 80022b6:	b280      	uxth	r0, r0
 80022b8:	4770      	bx	lr

080022ba <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80022ba:	79c0      	ldrb	r0, [r0, #7]
    }
 80022bc:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80022c0:	4770      	bx	lr

080022c2 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80022c2:	79c0      	ldrb	r0, [r0, #7]
    }
 80022c4:	09c0      	lsrs	r0, r0, #7
 80022c6:	4770      	bx	lr

080022c8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022c8:	4770      	bx	lr

080022ca <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80022ca:	b510      	push	{r4, lr}
    }
 80022cc:	2108      	movs	r1, #8
    virtual ~TypedText()
 80022ce:	4604      	mov	r4, r0
    }
 80022d0:	f01f f8ff 	bl	80214d2 <_ZdlPvj>
 80022d4:	4620      	mov	r0, r4
 80022d6:	bd10      	pop	{r4, pc}

080022d8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 80022d8:	4770      	bx	lr

080022da <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80022da:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 80022de:	6808      	ldr	r0, [r1, #0]
 80022e0:	6849      	ldr	r1, [r1, #4]
 80022e2:	c303      	stmia	r3!, {r0, r1}
    };
 80022e4:	4770      	bx	lr

080022e6 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80022e6:	4770      	bx	lr

080022e8 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80022e8:	4770      	bx	lr

080022ea <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80022ea:	6041      	str	r1, [r0, #4]
    }
 80022ec:	4770      	bx	lr

080022ee <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80022ee:	4770      	bx	lr

080022f0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80022f0:	2301      	movs	r3, #1
 80022f2:	7203      	strb	r3, [r0, #8]
    }
 80022f4:	4770      	bx	lr

080022f6 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80022f6:	4770      	bx	lr

080022f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022f8:	4770      	bx	lr

080022fa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80022fa:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80022fc:	68c2      	ldr	r2, [r0, #12]
 80022fe:	6841      	ldr	r1, [r0, #4]
 8002300:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002302:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002304:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002308:	07d2      	lsls	r2, r2, #31
 800230a:	bf48      	it	mi
 800230c:	590a      	ldrmi	r2, [r1, r4]
 800230e:	689b      	ldr	r3, [r3, #8]
    }
 8002310:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002314:	bf48      	it	mi
 8002316:	58d3      	ldrmi	r3, [r2, r3]
 8002318:	4718      	bx	r3

0800231a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 800231a:	6843      	ldr	r3, [r0, #4]
 800231c:	b12b      	cbz	r3, 800232a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800231e:	6883      	ldr	r3, [r0, #8]
 8002320:	b92b      	cbnz	r3, 800232e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002322:	68c0      	ldr	r0, [r0, #12]
 8002324:	f000 0001 	and.w	r0, r0, #1
 8002328:	4770      	bx	lr
 800232a:	4618      	mov	r0, r3
 800232c:	4770      	bx	lr
 800232e:	2001      	movs	r0, #1
    }
 8002330:	4770      	bx	lr

08002332 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002332:	b510      	push	{r4, lr}
 8002334:	210c      	movs	r1, #12
 8002336:	4604      	mov	r4, r0
 8002338:	f01f f8cb 	bl	80214d2 <_ZdlPvj>
 800233c:	4620      	mov	r0, r4
 800233e:	bd10      	pop	{r4, pc}

08002340 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002340:	b510      	push	{r4, lr}
 8002342:	2110      	movs	r1, #16
 8002344:	4604      	mov	r4, r0
 8002346:	f01f f8c4 	bl	80214d2 <_ZdlPvj>
 800234a:	4620      	mov	r0, r4
 800234c:	bd10      	pop	{r4, pc}

0800234e <_ZN23FrontendApplicationBaseD0Ev>:
 800234e:	b510      	push	{r4, lr}
 8002350:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002354:	4604      	mov	r4, r0
 8002356:	f01f f8bc 	bl	80214d2 <_ZdlPvj>
 800235a:	4620      	mov	r0, r4
 800235c:	bd10      	pop	{r4, pc}

0800235e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800235e:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8002360:	f00d fe82 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 8002364:	6803      	ldr	r3, [r0, #0]
    }
 8002366:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 800236a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800236c:	4718      	bx	r3

0800236e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800236e:	b510      	push	{r4, lr}
 8002370:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002372:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002376:	b158      	cbz	r0, 8002390 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002378:	6803      	ldr	r3, [r0, #0]
 800237a:	68db      	ldr	r3, [r3, #12]
 800237c:	4798      	blx	r3
 800237e:	b138      	cbz	r0, 8002390 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002380:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002384:	6803      	ldr	r3, [r0, #0]
 8002386:	689b      	ldr	r3, [r3, #8]
 8002388:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800238a:	2300      	movs	r3, #0
 800238c:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002390:	bd10      	pop	{r4, pc}
	...

08002394 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen2_screen/Screen2View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002396:	4604      	mov	r4, r0
 8002398:	4617      	mov	r7, r2
 800239a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800239c:	f00d fecc 	bl	8010138 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80023a0:	4b10      	ldr	r3, [pc, #64]	; (80023e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80023a2:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80023a4:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 80023a8:	4e0f      	ldr	r6, [pc, #60]	; (80023e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 80023aa:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 80023ac:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80023b0:	4b0e      	ldr	r3, [pc, #56]	; (80023ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80023b2:	6830      	ldr	r0, [r6, #0]
 80023b4:	6023      	str	r3, [r4, #0]
 80023b6:	4b0e      	ldr	r3, [pc, #56]	; (80023f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80023b8:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80023bc:	6803      	ldr	r3, [r0, #0]
 80023be:	4629      	mov	r1, r5
 80023c0:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80023c2:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 80023c6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80023c8:	4628      	mov	r0, r5
 80023ca:	f001 ffab 	bl	8004324 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80023ce:	6833      	ldr	r3, [r6, #0]
 80023d0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80023d4:	b10a      	cbz	r2, 80023da <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 80023d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80023d8:	b900      	cbnz	r0, 80023dc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
            return instance->lcdRef;
 80023da:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80023dc:	f015 fc71 	bl	8017cc2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 80023e0:	4620      	mov	r0, r4
 80023e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80023e4:	2000e44c 	.word	0x2000e44c
 80023e8:	2000e3e0 	.word	0x2000e3e0
 80023ec:	08023d1c 	.word	0x08023d1c
 80023f0:	08023d04 	.word	0x08023d04

080023f4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80023f4:	4b06      	ldr	r3, [pc, #24]	; (8002410 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80023f6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80023fa:	2300      	movs	r3, #0
 80023fc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002400:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002404:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002408:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800240c:	4770      	bx	lr
 800240e:	bf00      	nop
 8002410:	08002575 	.word	0x08002575

08002414 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 8002414:	4b06      	ldr	r3, [pc, #24]	; (8002430 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 8002416:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800241a:	2300      	movs	r3, #0
 800241c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002420:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002424:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002428:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800242c:	4770      	bx	lr
 800242e:	bf00      	nop
 8002430:	080026d9 	.word	0x080026d9

08002434 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002434:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002438:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800243a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800243c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002440:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002446:	4688      	mov	r8, r1
 8002448:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800244a:	4798      	blx	r3
 800244c:	f244 3383 	movw	r3, #17283	; 0x4383
 8002450:	4298      	cmp	r0, r3
 8002452:	d805      	bhi.n	8002460 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 8002454:	4b41      	ldr	r3, [pc, #260]	; (800255c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002456:	4a42      	ldr	r2, [pc, #264]	; (8002560 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002458:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800245a:	4842      	ldr	r0, [pc, #264]	; (8002564 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 800245c:	f01f fe58 	bl	8022110 <__assert_func>
 8002460:	6860      	ldr	r0, [r4, #4]
 8002462:	6803      	ldr	r3, [r0, #0]
 8002464:	6a1b      	ldr	r3, [r3, #32]
 8002466:	4798      	blx	r3
 8002468:	280f      	cmp	r0, #15
 800246a:	d803      	bhi.n	8002474 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 800246c:	4b3e      	ldr	r3, [pc, #248]	; (8002568 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 800246e:	4a3c      	ldr	r2, [pc, #240]	; (8002560 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002470:	21a8      	movs	r1, #168	; 0xa8
 8002472:	e7f2      	b.n	800245a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002474:	68e0      	ldr	r0, [r4, #12]
 8002476:	6803      	ldr	r3, [r0, #0]
 8002478:	6a1b      	ldr	r3, [r3, #32]
 800247a:	4798      	blx	r3
 800247c:	280b      	cmp	r0, #11
 800247e:	d803      	bhi.n	8002488 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 8002480:	4b3a      	ldr	r3, [pc, #232]	; (800256c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002482:	4a37      	ldr	r2, [pc, #220]	; (8002560 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002484:	21a9      	movs	r1, #169	; 0xa9
 8002486:	e7e8      	b.n	800245a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 8002488:	f00d fdee 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 800248c:	f00d fe3a 	bl	8010104 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002490:	f8d9 0000 	ldr.w	r0, [r9]
 8002494:	b110      	cbz	r0, 800249c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 8002496:	6803      	ldr	r3, [r0, #0]
 8002498:	68db      	ldr	r3, [r3, #12]
 800249a:	4798      	blx	r3
    if (*currentTrans)
 800249c:	f8d9 0000 	ldr.w	r0, [r9]
 80024a0:	b110      	cbz	r0, 80024a8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 80024a2:	6803      	ldr	r3, [r0, #0]
 80024a4:	681b      	ldr	r3, [r3, #0]
 80024a6:	4798      	blx	r3
    if (*currentScreen)
 80024a8:	6838      	ldr	r0, [r7, #0]
 80024aa:	b110      	cbz	r0, 80024b2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 80024ac:	6803      	ldr	r3, [r0, #0]
 80024ae:	695b      	ldr	r3, [r3, #20]
 80024b0:	4798      	blx	r3
    if (*currentPresenter)
 80024b2:	f8d8 0000 	ldr.w	r0, [r8]
 80024b6:	b110      	cbz	r0, 80024be <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 80024b8:	6803      	ldr	r3, [r0, #0]
 80024ba:	685b      	ldr	r3, [r3, #4]
 80024bc:	4798      	blx	r3
    if (*currentScreen)
 80024be:	6838      	ldr	r0, [r7, #0]
 80024c0:	b110      	cbz	r0, 80024c8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 80024c2:	6803      	ldr	r3, [r0, #0]
 80024c4:	681b      	ldr	r3, [r3, #0]
 80024c6:	4798      	blx	r3
    if (*currentPresenter)
 80024c8:	f8d8 0000 	ldr.w	r0, [r8]
 80024cc:	b110      	cbz	r0, 80024d4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 80024ce:	6803      	ldr	r3, [r0, #0]
 80024d0:	689b      	ldr	r3, [r3, #8]
 80024d2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80024d4:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80024d6:	6803      	ldr	r3, [r0, #0]
 80024d8:	2100      	movs	r1, #0
 80024da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024dc:	4798      	blx	r3
        : screenContainer(0), done(false)
 80024de:	f04f 0b00 	mov.w	fp, #0
 80024e2:	4b23      	ldr	r3, [pc, #140]	; (8002570 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 80024e4:	6003      	str	r3, [r0, #0]
 80024e6:	4605      	mov	r5, r0
 80024e8:	f8c0 b004 	str.w	fp, [r0, #4]
 80024ec:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80024f0:	68a0      	ldr	r0, [r4, #8]
 80024f2:	6803      	ldr	r3, [r0, #0]
 80024f4:	4659      	mov	r1, fp
 80024f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024f8:	4798      	blx	r3
 80024fa:	4606      	mov	r6, r0
 80024fc:	f002 f804 	bl	8004508 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002500:	6860      	ldr	r0, [r4, #4]
 8002502:	6803      	ldr	r3, [r0, #0]
 8002504:	4659      	mov	r1, fp
 8002506:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002508:	4798      	blx	r3
 800250a:	4631      	mov	r1, r6
 800250c:	4604      	mov	r4, r0
 800250e:	f001 ffa3 	bl	8004458 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002512:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002516:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 800251a:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 800251c:	b1e4      	cbz	r4, 8002558 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
 800251e:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002520:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002524:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002526:	f8c4 a008 	str.w	sl, [r4, #8]
 800252a:	4630      	mov	r0, r6
 800252c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 800252e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002530:	4798      	blx	r3
    newPresenter->activate();
 8002532:	6823      	ldr	r3, [r4, #0]
 8002534:	4620      	mov	r0, r4
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800253a:	4629      	mov	r1, r5
 800253c:	4630      	mov	r0, r6
 800253e:	f00f fac4 	bl	8011aca <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002542:	682b      	ldr	r3, [r5, #0]
 8002544:	4628      	mov	r0, r5
 8002546:	691b      	ldr	r3, [r3, #16]
 8002548:	4798      	blx	r3
    newTransition->invalidate();
 800254a:	682b      	ldr	r3, [r5, #0]
 800254c:	4628      	mov	r0, r5
 800254e:	695b      	ldr	r3, [r3, #20]
 8002550:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002552:	4620      	mov	r0, r4
 8002554:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8002558:	4623      	mov	r3, r4
 800255a:	e7e1      	b.n	8002520 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xec>
 800255c:	080238d8 	.word	0x080238d8
 8002560:	08023966 	.word	0x08023966
 8002564:	08023a6a 	.word	0x08023a6a
 8002568:	08023ab1 	.word	0x08023ab1
 800256c:	08023b54 	.word	0x08023b54
 8002570:	08023d60 	.word	0x08023d60

08002574 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 8002574:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002576:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 800257a:	9300      	str	r3, [sp, #0]
 800257c:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002580:	4b04      	ldr	r3, [pc, #16]	; (8002594 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 8002582:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002586:	4804      	ldr	r0, [pc, #16]	; (8002598 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 8002588:	f7ff ff54 	bl	8002434 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800258c:	b003      	add	sp, #12
 800258e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002592:	bf00      	nop
 8002594:	2000e440 	.word	0x2000e440
 8002598:	2000e43c 	.word	0x2000e43c

0800259c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800259c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025a0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80025a2:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80025a4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80025a8:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80025aa:	6803      	ldr	r3, [r0, #0]
 80025ac:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80025ae:	4688      	mov	r8, r1
 80025b0:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80025b2:	4798      	blx	r3
 80025b4:	289f      	cmp	r0, #159	; 0x9f
 80025b6:	d805      	bhi.n	80025c4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x28>
 80025b8:	4b41      	ldr	r3, [pc, #260]	; (80026c0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>)
 80025ba:	4a42      	ldr	r2, [pc, #264]	; (80026c4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80025bc:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80025be:	4842      	ldr	r0, [pc, #264]	; (80026c8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80025c0:	f01f fda6 	bl	8022110 <__assert_func>
 80025c4:	6860      	ldr	r0, [r4, #4]
 80025c6:	6803      	ldr	r3, [r0, #0]
 80025c8:	6a1b      	ldr	r3, [r3, #32]
 80025ca:	4798      	blx	r3
 80025cc:	280f      	cmp	r0, #15
 80025ce:	d803      	bhi.n	80025d8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3c>
 80025d0:	4b3e      	ldr	r3, [pc, #248]	; (80026cc <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 80025d2:	4a3c      	ldr	r2, [pc, #240]	; (80026c4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80025d4:	21a8      	movs	r1, #168	; 0xa8
 80025d6:	e7f2      	b.n	80025be <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80025d8:	68e0      	ldr	r0, [r4, #12]
 80025da:	6803      	ldr	r3, [r0, #0]
 80025dc:	6a1b      	ldr	r3, [r3, #32]
 80025de:	4798      	blx	r3
 80025e0:	280b      	cmp	r0, #11
 80025e2:	d803      	bhi.n	80025ec <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x50>
 80025e4:	4b3a      	ldr	r3, [pc, #232]	; (80026d0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 80025e6:	4a37      	ldr	r2, [pc, #220]	; (80026c4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80025e8:	21a9      	movs	r1, #169	; 0xa9
 80025ea:	e7e8      	b.n	80025be <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    Application::getInstance()->clearAllTimerWidgets();
 80025ec:	f00d fd3c 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 80025f0:	f00d fd88 	bl	8010104 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80025f4:	f8d9 0000 	ldr.w	r0, [r9]
 80025f8:	b110      	cbz	r0, 8002600 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x64>
        (*currentTrans)->tearDown();
 80025fa:	6803      	ldr	r3, [r0, #0]
 80025fc:	68db      	ldr	r3, [r3, #12]
 80025fe:	4798      	blx	r3
    if (*currentTrans)
 8002600:	f8d9 0000 	ldr.w	r0, [r9]
 8002604:	b110      	cbz	r0, 800260c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x70>
        (*currentTrans)->~Transition();
 8002606:	6803      	ldr	r3, [r0, #0]
 8002608:	681b      	ldr	r3, [r3, #0]
 800260a:	4798      	blx	r3
    if (*currentScreen)
 800260c:	6838      	ldr	r0, [r7, #0]
 800260e:	b110      	cbz	r0, 8002616 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
        (*currentScreen)->tearDownScreen();
 8002610:	6803      	ldr	r3, [r0, #0]
 8002612:	695b      	ldr	r3, [r3, #20]
 8002614:	4798      	blx	r3
    if (*currentPresenter)
 8002616:	f8d8 0000 	ldr.w	r0, [r8]
 800261a:	b110      	cbz	r0, 8002622 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x86>
        (*currentPresenter)->deactivate();
 800261c:	6803      	ldr	r3, [r0, #0]
 800261e:	685b      	ldr	r3, [r3, #4]
 8002620:	4798      	blx	r3
    if (*currentScreen)
 8002622:	6838      	ldr	r0, [r7, #0]
 8002624:	b110      	cbz	r0, 800262c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x90>
        (*currentScreen)->~Screen();
 8002626:	6803      	ldr	r3, [r0, #0]
 8002628:	681b      	ldr	r3, [r3, #0]
 800262a:	4798      	blx	r3
    if (*currentPresenter)
 800262c:	f8d8 0000 	ldr.w	r0, [r8]
 8002630:	b110      	cbz	r0, 8002638 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9c>
        (*currentPresenter)->~Presenter();
 8002632:	6803      	ldr	r3, [r0, #0]
 8002634:	689b      	ldr	r3, [r3, #8]
 8002636:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002638:	68e0      	ldr	r0, [r4, #12]
 800263a:	6803      	ldr	r3, [r0, #0]
 800263c:	2100      	movs	r1, #0
 800263e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002640:	4798      	blx	r3
 8002642:	f04f 0b00 	mov.w	fp, #0
 8002646:	4b23      	ldr	r3, [pc, #140]	; (80026d4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002648:	6003      	str	r3, [r0, #0]
 800264a:	4605      	mov	r5, r0
 800264c:	f8c0 b004 	str.w	fp, [r0, #4]
 8002650:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002654:	68a0      	ldr	r0, [r4, #8]
 8002656:	6803      	ldr	r3, [r0, #0]
 8002658:	4659      	mov	r1, fp
 800265a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800265c:	4798      	blx	r3
 800265e:	4606      	mov	r6, r0
 8002660:	f001 ff96 	bl	8004590 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002664:	6860      	ldr	r0, [r4, #4]
 8002666:	6803      	ldr	r3, [r0, #0]
 8002668:	4659      	mov	r1, fp
 800266a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800266c:	4798      	blx	r3
 800266e:	4631      	mov	r1, r6
 8002670:	4604      	mov	r4, r0
 8002672:	f001 ff65 	bl	8004540 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 8002676:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800267a:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 800267e:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002680:	b1e4      	cbz	r4, 80026bc <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x120>
 8002682:	1d23      	adds	r3, r4, #4
 8002684:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002688:	6833      	ldr	r3, [r6, #0]
 800268a:	f8c4 a008 	str.w	sl, [r4, #8]
 800268e:	4630      	mov	r0, r6
 8002690:	68db      	ldr	r3, [r3, #12]
 8002692:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002694:	4798      	blx	r3
    newPresenter->activate();
 8002696:	6823      	ldr	r3, [r4, #0]
 8002698:	4620      	mov	r0, r4
 800269a:	681b      	ldr	r3, [r3, #0]
 800269c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800269e:	4629      	mov	r1, r5
 80026a0:	4630      	mov	r0, r6
 80026a2:	f00f fa12 	bl	8011aca <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80026a6:	682b      	ldr	r3, [r5, #0]
 80026a8:	4628      	mov	r0, r5
 80026aa:	691b      	ldr	r3, [r3, #16]
 80026ac:	4798      	blx	r3
    newTransition->invalidate();
 80026ae:	682b      	ldr	r3, [r5, #0]
 80026b0:	4628      	mov	r0, r5
 80026b2:	695b      	ldr	r3, [r3, #20]
 80026b4:	4798      	blx	r3
}
 80026b6:	4620      	mov	r0, r4
 80026b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 80026bc:	4623      	mov	r3, r4
 80026be:	e7e1      	b.n	8002684 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe8>
 80026c0:	080238d8 	.word	0x080238d8
 80026c4:	08023bf7 	.word	0x08023bf7
 80026c8:	08023a6a 	.word	0x08023a6a
 80026cc:	08023ab1 	.word	0x08023ab1
 80026d0:	08023b54 	.word	0x08023b54
 80026d4:	08023d60 	.word	0x08023d60

080026d8 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()
{
 80026d8:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80026da:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80026de:	9300      	str	r3, [sp, #0]
 80026e0:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80026e4:	4b04      	ldr	r3, [pc, #16]	; (80026f8 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>)
 80026e6:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80026ea:	4804      	ldr	r0, [pc, #16]	; (80026fc <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>)
 80026ec:	f7ff ff56 	bl	800259c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80026f0:	b003      	add	sp, #12
 80026f2:	f85d fb04 	ldr.w	pc, [sp], #4
 80026f6:	bf00      	nop
 80026f8:	2000e440 	.word	0x2000e440
 80026fc:	2000e43c 	.word	0x2000e43c

08002700 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002700:	6a00      	ldr	r0, [r0, #32]
 8002702:	4770      	bx	lr

08002704 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002704:	4770      	bx	lr

08002706 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002706:	888b      	ldrh	r3, [r1, #4]
 8002708:	6980      	ldr	r0, [r0, #24]
 800270a:	680a      	ldr	r2, [r1, #0]
 800270c:	0adb      	lsrs	r3, r3, #11
 800270e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002712:	4410      	add	r0, r2
 8002714:	4770      	bx	lr

08002716 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002716:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002718:	b1c2      	cbz	r2, 800274c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800271a:	7b13      	ldrb	r3, [r2, #12]
 800271c:	b1b3      	cbz	r3, 800274c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800271e:	7b54      	ldrb	r4, [r2, #13]
 8002720:	7ad2      	ldrb	r2, [r2, #11]
 8002722:	0224      	lsls	r4, r4, #8
 8002724:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002728:	4314      	orrs	r4, r2
 800272a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800272c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800272e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002732:	8813      	ldrh	r3, [r2, #0]
 8002734:	428b      	cmp	r3, r1
 8002736:	d102      	bne.n	800273e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002738:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800273c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800273e:	d805      	bhi.n	800274c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002740:	3801      	subs	r0, #1
 8002742:	b280      	uxth	r0, r0
 8002744:	3204      	adds	r2, #4
 8002746:	2800      	cmp	r0, #0
 8002748:	d1f3      	bne.n	8002732 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800274a:	e7f7      	b.n	800273c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800274c:	2000      	movs	r0, #0
 800274e:	e7f5      	b.n	800273c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002750 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002750:	b510      	push	{r4, lr}
 8002752:	2124      	movs	r1, #36	; 0x24
 8002754:	4604      	mov	r4, r0
 8002756:	f01e febc 	bl	80214d2 <_ZdlPvj>
 800275a:	4620      	mov	r0, r4
 800275c:	bd10      	pop	{r4, pc}
	...

08002760 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8002760:	b530      	push	{r4, r5, lr}
 8002762:	b089      	sub	sp, #36	; 0x24
 8002764:	4604      	mov	r4, r0
    gsubTable(gsubData)
 8002766:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800276a:	9506      	str	r5, [sp, #24]
 800276c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002770:	9505      	str	r5, [sp, #20]
 8002772:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002776:	9504      	str	r5, [sp, #16]
 8002778:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800277c:	9503      	str	r5, [sp, #12]
 800277e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002782:	9502      	str	r5, [sp, #8]
 8002784:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002788:	9501      	str	r5, [sp, #4]
 800278a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800278e:	9500      	str	r5, [sp, #0]
 8002790:	f00e fcce 	bl	8011130 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002794:	4b05      	ldr	r3, [pc, #20]	; (80027ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 8002796:	6023      	str	r3, [r4, #0]
 8002798:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800279a:	61a3      	str	r3, [r4, #24]
 800279c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800279e:	61e3      	str	r3, [r4, #28]
 80027a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80027a2:	6223      	str	r3, [r4, #32]
}
 80027a4:	4620      	mov	r0, r4
 80027a6:	b009      	add	sp, #36	; 0x24
 80027a8:	bd30      	pop	{r4, r5, pc}
 80027aa:	bf00      	nop
 80027ac:	08023d84 	.word	0x08023d84

080027b0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80027b0:	2000      	movs	r0, #0
 80027b2:	4770      	bx	lr

080027b4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80027b4:	8081      	strh	r1, [r0, #4]
    }
 80027b6:	4770      	bx	lr

080027b8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80027b8:	80c1      	strh	r1, [r0, #6]
    }
 80027ba:	4770      	bx	lr

080027bc <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80027bc:	8101      	strh	r1, [r0, #8]
    }
 80027be:	4770      	bx	lr

080027c0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80027c0:	8141      	strh	r1, [r0, #10]
    }
 80027c2:	4770      	bx	lr

080027c4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80027c4:	4770      	bx	lr

080027c6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 80027c6:	4770      	bx	lr

080027c8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 80027c8:	4770      	bx	lr

080027ca <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 80027ca:	4770      	bx	lr

080027cc <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80027cc:	4770      	bx	lr

080027ce <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80027ce:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80027d0:	88c4      	ldrh	r4, [r0, #6]
 80027d2:	6803      	ldr	r3, [r0, #0]
 80027d4:	1b12      	subs	r2, r2, r4
 80027d6:	8884      	ldrh	r4, [r0, #4]
 80027d8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80027da:	1b09      	subs	r1, r1, r4
 80027dc:	b212      	sxth	r2, r2
    }
 80027de:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80027e2:	b209      	sxth	r1, r1
 80027e4:	4718      	bx	r3

080027e6 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80027e6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027ea:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80027ec:	f04f 33ff 	mov.w	r3, #4294967295
 80027f0:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80027f2:	6813      	ldr	r3, [r2, #0]
 80027f4:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80027f6:	6010      	str	r0, [r2, #0]
    }
 80027f8:	4770      	bx	lr

080027fa <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80027fa:	4770      	bx	lr

080027fc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80027fc:	4770      	bx	lr

080027fe <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80027fe:	4770      	bx	lr

08002800 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002800:	4770      	bx	lr

08002802 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002802:	4770      	bx	lr

08002804 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002804:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002808:	b11a      	cbz	r2, 8002812 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800280a:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800280e:	b102      	cbz	r2, 8002812 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002810:	6018      	str	r0, [r3, #0]
        }
    }
 8002812:	4770      	bx	lr

08002814 <_ZN8touchgfx15AbstractPainter8setAlphaEh>:
    virtual void render(uint8_t* ptr, int x, int xAdjust, int y, unsigned count, const uint8_t* covers) = 0;

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        painterAlpha = newAlpha;
 8002814:	7241      	strb	r1, [r0, #9]
    }
 8002816:	4770      	bx	lr

08002818 <_ZNK8touchgfx15AbstractPainter8getAlphaEv>:

    /** @copydoc Image::getAlpha */
    virtual uint8_t getAlpha() const
    {
        return painterAlpha;
    }
 8002818:	7a40      	ldrb	r0, [r0, #9]
 800281a:	4770      	bx	lr

0800281c <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 800281c:	4770      	bx	lr

0800281e <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 800281e:	4770      	bx	lr

08002820 <_ZN15Screen1ViewBaseD0Ev>:
 8002820:	b510      	push	{r4, lr}
 8002822:	f44f 4187 	mov.w	r1, #17280	; 0x4380
 8002826:	4604      	mov	r4, r0
 8002828:	f01e fe53 	bl	80214d2 <_ZdlPvj>
 800282c:	4620      	mov	r0, r4
 800282e:	bd10      	pop	{r4, pc}

08002830 <_ZN15Screen1ViewBase14handleKeyEventEh>:

//Handles when a key is pressed
void Screen1ViewBase::handleKeyEvent(uint8_t key)
{
 8002830:	b508      	push	{r3, lr}
    if(0 == key)
 8002832:	b929      	cbnz	r1, 8002840 <_ZN15Screen1ViewBase14handleKeyEventEh+0x10>
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002834:	f00d fc18 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When hardware button 0 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
}
 8002838:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenNoTransition();
 800283c:	f7ff bdea 	b.w	8002414 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
}
 8002840:	bd08      	pop	{r3, pc}
	...

08002844 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8002844:	4a06      	ldr	r2, [pc, #24]	; (8002860 <_ZN8touchgfx8DrawableC1Ev+0x1c>)
 8002846:	6002      	str	r2, [r0, #0]
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 8002848:	2200      	movs	r2, #0
        this->y = y;
        this->width = width;
 800284a:	e9c0 2201 	strd	r2, r2, [r0, #4]
        width = 0;
 800284e:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8002852:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002856:	61c2      	str	r2, [r0, #28]
 8002858:	f44f 7280 	mov.w	r2, #256	; 0x100
 800285c:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 800285e:	4770      	bx	lr
 8002860:	08025fdc 	.word	0x08025fdc

08002864 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002864:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002866:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002868:	4604      	mov	r4, r0
        setX(x);
 800286a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 800286c:	4615      	mov	r5, r2
        setX(x);
 800286e:	4798      	blx	r3
        setY(y);
 8002870:	6823      	ldr	r3, [r4, #0]
 8002872:	4629      	mov	r1, r5
 8002874:	4620      	mov	r0, r4
 8002876:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 8002878:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800287c:	4718      	bx	r3

0800287e <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800287e:	b570      	push	{r4, r5, r6, lr}
 8002880:	4604      	mov	r4, r0
 8002882:	461d      	mov	r5, r3
 8002884:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002888:	f7ff ffec 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800288c:	6823      	ldr	r3, [r4, #0]
 800288e:	4629      	mov	r1, r5
 8002890:	4620      	mov	r0, r4
 8002892:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002894:	4798      	blx	r3
        setHeight(height);
 8002896:	6823      	ldr	r3, [r4, #0]
 8002898:	4631      	mov	r1, r6
 800289a:	4620      	mov	r0, r4
 800289c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 800289e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80028a2:	4718      	bx	r3

080028a4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80028a4:	4b04      	ldr	r3, [pc, #16]	; (80028b8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80028ac:	b10a      	cbz	r2, 80028b2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80028ae:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80028b0:	b900      	cbnz	r0, 80028b4 <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 80028b2:	6898      	ldr	r0, [r3, #8]
    }
 80028b4:	4770      	bx	lr
 80028b6:	bf00      	nop
 80028b8:	2000e3e0 	.word	0x2000e3e0

080028bc <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 80028bc:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 80028be:	2226      	movs	r2, #38	; 0x26
    Box()
 80028c0:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 80028c2:	2100      	movs	r1, #0
 80028c4:	f01f fcb0 	bl	8022228 <memset>
class Widget : public Drawable
 80028c8:	4620      	mov	r0, r4
 80028ca:	f7ff ffbb 	bl	8002844 <_ZN8touchgfx8DrawableC1Ev>
 80028ce:	4b04      	ldr	r3, [pc, #16]	; (80028e0 <_ZN8touchgfx3BoxC1Ev+0x24>)
 80028d0:	6023      	str	r3, [r4, #0]
 80028d2:	23ff      	movs	r3, #255	; 0xff
 80028d4:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        color = col;
 80028d8:	2300      	movs	r3, #0
 80028da:	62a3      	str	r3, [r4, #40]	; 0x28
    {
    }
 80028dc:	4620      	mov	r0, r4
 80028de:	bd10      	pop	{r4, pc}
 80028e0:	080259b4 	.word	0x080259b4

080028e4 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 80028e4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80028e6:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80028e8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80028ea:	2100      	movs	r1, #0
 80028ec:	f01f fc9c 	bl	8022228 <memset>
 80028f0:	4620      	mov	r0, r4
 80028f2:	f7ff ffa7 	bl	8002844 <_ZN8touchgfx8DrawableC1Ev>
 80028f6:	4b07      	ldr	r3, [pc, #28]	; (8002914 <_ZN8touchgfx8TextAreaC1Ev+0x30>)
 80028f8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80028fa:	4b07      	ldr	r3, [pc, #28]	; (8002918 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 80028fc:	62a3      	str	r3, [r4, #40]	; 0x28
 80028fe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002902:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002904:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002908:	2300      	movs	r3, #0
 800290a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 800290e:	8723      	strh	r3, [r4, #56]	; 0x38
    {
    }
 8002910:	4620      	mov	r0, r4
 8002912:	bd10      	pop	{r4, pc}
 8002914:	0802590c 	.word	0x0802590c
 8002918:	080238d0 	.word	0x080238d0

0800291c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
 800291c:	b510      	push	{r4, lr}
 800291e:	4604      	mov	r4, r0
        : TextArea(), wildcard(0)
 8002920:	f7ff ffe0 	bl	80028e4 <_ZN8touchgfx8TextAreaC1Ev>
 8002924:	4b02      	ldr	r3, [pc, #8]	; (8002930 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002926:	6023      	str	r3, [r4, #0]
 8002928:	2300      	movs	r3, #0
 800292a:	63e3      	str	r3, [r4, #60]	; 0x3c
    {
    }
 800292c:	4620      	mov	r0, r4
 800292e:	bd10      	pop	{r4, pc}
 8002930:	08025b6c 	.word	0x08025b6c

08002934 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
          painterAlpha(255)
 8002934:	f64f 72ff 	movw	r2, #65535	; 0xffff
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002938:	b538      	push	{r3, r4, r5, lr}
 800293a:	2300      	movs	r3, #0
 800293c:	8102      	strh	r2, [r0, #8]
        : AbstractPainter(), currentX(0), currentY(0)
 800293e:	4a10      	ldr	r2, [pc, #64]	; (8002980 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4c>)
 8002940:	6043      	str	r3, [r0, #4]
 8002942:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002946:	6002      	str	r2, [r0, #0]
    AbstractPainterRGB565()
 8002948:	4604      	mov	r4, r0
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800294a:	f7ff ffab 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800294e:	6803      	ldr	r3, [r0, #0]
 8002950:	6a1b      	ldr	r3, [r3, #32]
 8002952:	4798      	blx	r3
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002954:	4b0b      	ldr	r3, [pc, #44]	; (8002984 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8002956:	681b      	ldr	r3, [r3, #0]
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002958:	fab0 f580 	clz	r5, r0
        if (HAL::getInstance()->getAuxiliaryLCD())
 800295c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        bool compat = HAL::lcd().framebufferFormat() == format;
 800295e:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002960:	b128      	cbz	r0, 800296e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3a>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8002962:	6803      	ldr	r3, [r0, #0]
 8002964:	6a1b      	ldr	r3, [r3, #32]
 8002966:	4798      	blx	r3
 8002968:	2800      	cmp	r0, #0
 800296a:	bf08      	it	eq
 800296c:	2501      	moveq	r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800296e:	b92d      	cbnz	r5, 800297c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x48>
 8002970:	4b05      	ldr	r3, [pc, #20]	; (8002988 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8002972:	4a06      	ldr	r2, [pc, #24]	; (800298c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002974:	4806      	ldr	r0, [pc, #24]	; (8002990 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8002976:	212f      	movs	r1, #47	; 0x2f
 8002978:	f01f fbca 	bl	8022110 <__assert_func>
    }
 800297c:	4620      	mov	r0, r4
 800297e:	bd38      	pop	{r3, r4, r5, pc}
 8002980:	080254f8 	.word	0x080254f8
 8002984:	2000e3e0 	.word	0x2000e3e0
 8002988:	08023dd0 	.word	0x08023dd0
 800298c:	08023e2e 	.word	0x08023e2e
 8002990:	08023e67 	.word	0x08023e67

08002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
     *
     * @param  color The color.
     */
    void setColor(colortype color)
    {
        painterColor = color;
 8002994:	b289      	uxth	r1, r1
        painterRed = painterColor & RMASK;
 8002996:	f401 4378 	and.w	r3, r1, #63488	; 0xf800
        painterColor = color;
 800299a:	8281      	strh	r1, [r0, #20]
        painterRed = painterColor & RMASK;
 800299c:	82c3      	strh	r3, [r0, #22]
        painterGreen = painterColor & GMASK;
 800299e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
        painterBlue = painterColor & BMASK;
 80029a2:	f001 011f 	and.w	r1, r1, #31
        painterGreen = painterColor & GMASK;
 80029a6:	8303      	strh	r3, [r0, #24]
        painterBlue = painterColor & BMASK;
 80029a8:	8341      	strh	r1, [r0, #26]
    }
 80029aa:	4770      	bx	lr

080029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>:
    PainterRGB565(colortype color = 0, uint8_t alpha = 255)
 80029ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80029ae:	4604      	mov	r4, r0
 80029b0:	4615      	mov	r5, r2
 80029b2:	9101      	str	r1, [sp, #4]
        : AbstractPainterRGB565()
 80029b4:	f7ff ffbe 	bl	8002934 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80029b8:	4b04      	ldr	r3, [pc, #16]	; (80029cc <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh+0x20>)
        setColor(color);
 80029ba:	9901      	ldr	r1, [sp, #4]
        : AbstractPainterRGB565()
 80029bc:	6023      	str	r3, [r4, #0]
        setColor(color);
 80029be:	4620      	mov	r0, r4
 80029c0:	f7ff ffe8 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    }
 80029c4:	4620      	mov	r0, r4
        painterAlpha = newAlpha;
 80029c6:	7265      	strb	r5, [r4, #9]
 80029c8:	b003      	add	sp, #12
 80029ca:	bd30      	pop	{r4, r5, pc}
 80029cc:	080254d0 	.word	0x080254d0

080029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 80029d0:	4613      	mov	r3, r2
        return instance;
 80029d2:	4a0c      	ldr	r2, [pc, #48]	; (8002a04 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 80029d4:	6812      	ldr	r2, [r2, #0]
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 80029d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80029d8:	4604      	mov	r4, r0
 80029da:	460d      	mov	r5, r1
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 80029dc:	b92a      	cbnz	r2, 80029ea <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x1a>
 80029de:	4b0a      	ldr	r3, [pc, #40]	; (8002a08 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 80029e0:	4a0a      	ldr	r2, [pc, #40]	; (8002a0c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 80029e2:	480b      	ldr	r0, [pc, #44]	; (8002a10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 80029e4:	2135      	movs	r1, #53	; 0x35
 80029e6:	f01f fb93 	bl	8022110 <__assert_func>
 80029ea:	9301      	str	r3, [sp, #4]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80029ec:	f7ff ff5a 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 80029f0:	6802      	ldr	r2, [r0, #0]
 80029f2:	9b01      	ldr	r3, [sp, #4]
 80029f4:	6a96      	ldr	r6, [r2, #40]	; 0x28
 80029f6:	4621      	mov	r1, r4
 80029f8:	462a      	mov	r2, r5
 80029fa:	46b4      	mov	ip, r6
    }
 80029fc:	b002      	add	sp, #8
 80029fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002a02:	4760      	bx	ip
 8002a04:	2000e3e0 	.word	0x2000e3e0
 8002a08:	08023ec9 	.word	0x08023ec9
 8002a0c:	08023f0c 	.word	0x08023f0c
 8002a10:	08023f68 	.word	0x08023f68

08002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002a14:	0152      	lsls	r2, r2, #5
 8002a16:	0149      	lsls	r1, r1, #5
 8002a18:	f00b b800 	b.w	800da1c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002a1c:	0152      	lsls	r2, r2, #5
 8002a1e:	0149      	lsls	r1, r1, #5
 8002a20:	f00b b807 	b.w	800da32 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8002a24:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidth == widthQ5)
 8002a26:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8002a28:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5(int(value * Rasterizer::POLY_BASE_SIZE));
 8002a2c:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8002a30:	d004      	beq.n	8002a3c <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8002a32:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidth = widthQ5;
 8002a36:	6402      	str	r2, [r0, #64]	; 0x40

        updateCachedShape();
 8002a38:	f00a bee0 	b.w	800d7fc <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8002a3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002a40:	4770      	bx	lr
	...

08002a44 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 8002a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a48:	ed2d 8b10 	vpush	{d8-d15}
 8002a4c:	4604      	mov	r4, r0
 8002a4e:	b0b3      	sub	sp, #204	; 0xcc
        : presenter(0)
 8002a50:	f00e fec0 	bl	80117d4 <_ZN8touchgfx6ScreenC1Ev>
 8002a54:	4622      	mov	r2, r4
 8002a56:	2500      	movs	r5, #0
 8002a58:	4be6      	ldr	r3, [pc, #920]	; (8002df4 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
 8002a5a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002a5c:	f842 3b40 	str.w	r3, [r2], #64
 8002a60:	4610      	mov	r0, r2
 8002a62:	921c      	str	r2, [sp, #112]	; 0x70
 8002a64:	f7ff ff2a 	bl	80028bc <_ZN8touchgfx3BoxC1Ev>
 8002a68:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002a6c:	4618      	mov	r0, r3
 8002a6e:	931d      	str	r3, [sp, #116]	; 0x74
 8002a70:	f7ff ff24 	bl	80028bc <_ZN8touchgfx3BoxC1Ev>
 8002a74:	f104 0398 	add.w	r3, r4, #152	; 0x98
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 8002a78:	4618      	mov	r0, r3
 8002a7a:	9304      	str	r3, [sp, #16]
 8002a7c:	f7ff fee2 	bl	8002844 <_ZN8touchgfx8DrawableC1Ev>
 8002a80:	4bdd      	ldr	r3, [pc, #884]	; (8002df8 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002a82:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002a86:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002a8a:	4618      	mov	r0, r3
 8002a8c:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 8002a90:	9314      	str	r3, [sp, #80]	; 0x50
 8002a92:	f7ff ff27 	bl	80028e4 <_ZN8touchgfx8TextAreaC1Ev>
 8002a96:	f504 7380 	add.w	r3, r4, #256	; 0x100
 8002a9a:	4618      	mov	r0, r3
 8002a9c:	f504 76a0 	add.w	r6, r4, #320	; 0x140
 8002aa0:	9315      	str	r3, [sp, #84]	; 0x54
 8002aa2:	f504 7938 	add.w	r9, r4, #736	; 0x2e0
 8002aa6:	f7ff ff39 	bl	800291c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002aaa:	4630      	mov	r0, r6
 8002aac:	f00b fac0 	bl	800e030 <_ZN8touchgfx5GaugeC1Ev>
 8002ab0:	4648      	mov	r0, r9
 8002ab2:	f7ff fec7 	bl	8002844 <_ZN8touchgfx8DrawableC1Ev>
 8002ab6:	4bd0      	ldr	r3, [pc, #832]	; (8002df8 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002ab8:	f8c4 32e0 	str.w	r3, [r4, #736]	; 0x2e0
 8002abc:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8002ac0:	4618      	mov	r0, r3
 8002ac2:	f8c4 5308 	str.w	r5, [r4, #776]	; 0x308
 8002ac6:	9316      	str	r3, [sp, #88]	; 0x58
 8002ac8:	f7ff ff0c 	bl	80028e4 <_ZN8touchgfx8TextAreaC1Ev>
 8002acc:	f504 7352 	add.w	r3, r4, #840	; 0x348
 8002ad0:	4618      	mov	r0, r3
 8002ad2:	ee09 3a10 	vmov	s18, r3
 8002ad6:	f00a fe71 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002ada:	f504 736f 	add.w	r3, r4, #956	; 0x3bc
 8002ade:	22ff      	movs	r2, #255	; 0xff
 8002ae0:	4629      	mov	r1, r5
 8002ae2:	4618      	mov	r0, r3
 8002ae4:	f504 7876 	add.w	r8, r4, #984	; 0x3d8
 8002ae8:	931e      	str	r3, [sp, #120]	; 0x78
 8002aea:	f7ff ff5f 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002aee:	4640      	mov	r0, r8
 8002af0:	f00a fe64 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002af4:	f204 434c 	addw	r3, r4, #1100	; 0x44c
 8002af8:	22ff      	movs	r2, #255	; 0xff
 8002afa:	4629      	mov	r1, r5
 8002afc:	4618      	mov	r0, r3
 8002afe:	931f      	str	r3, [sp, #124]	; 0x7c
 8002b00:	f7ff ff54 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002b04:	f504 638d 	add.w	r3, r4, #1128	; 0x468
 8002b08:	4618      	mov	r0, r3
 8002b0a:	9317      	str	r3, [sp, #92]	; 0x5c
 8002b0c:	f7ff feea 	bl	80028e4 <_ZN8touchgfx8TextAreaC1Ev>
 8002b10:	f204 43a4 	addw	r3, r4, #1188	; 0x4a4
 8002b14:	4618      	mov	r0, r3
 8002b16:	ee09 3a90 	vmov	s19, r3
 8002b1a:	f00a fe4f 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002b1e:	f504 63a3 	add.w	r3, r4, #1304	; 0x518
 8002b22:	22ff      	movs	r2, #255	; 0xff
 8002b24:	4629      	mov	r1, r5
 8002b26:	4618      	mov	r0, r3
 8002b28:	9320      	str	r3, [sp, #128]	; 0x80
 8002b2a:	f7ff ff3f 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002b2e:	f204 5334 	addw	r3, r4, #1332	; 0x534
 8002b32:	4618      	mov	r0, r3
 8002b34:	ee0a 3a10 	vmov	s20, r3
 8002b38:	f00a fe40 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002b3c:	f504 63b5 	add.w	r3, r4, #1448	; 0x5a8
 8002b40:	22ff      	movs	r2, #255	; 0xff
 8002b42:	4629      	mov	r1, r5
 8002b44:	4618      	mov	r0, r3
 8002b46:	9321      	str	r3, [sp, #132]	; 0x84
 8002b48:	f7ff ff30 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002b4c:	f204 53c4 	addw	r3, r4, #1476	; 0x5c4
 8002b50:	4618      	mov	r0, r3
 8002b52:	ee0a 3a90 	vmov	s21, r3
 8002b56:	f00a fe31 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002b5a:	f504 63c7 	add.w	r3, r4, #1592	; 0x638
 8002b5e:	22ff      	movs	r2, #255	; 0xff
 8002b60:	4629      	mov	r1, r5
 8002b62:	4618      	mov	r0, r3
 8002b64:	9322      	str	r3, [sp, #136]	; 0x88
 8002b66:	f7ff ff21 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002b6a:	f204 6354 	addw	r3, r4, #1620	; 0x654
 8002b6e:	4618      	mov	r0, r3
 8002b70:	ee0b 3a10 	vmov	s22, r3
 8002b74:	f00a fe22 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002b78:	f504 63d9 	add.w	r3, r4, #1736	; 0x6c8
 8002b7c:	22ff      	movs	r2, #255	; 0xff
 8002b7e:	4629      	mov	r1, r5
 8002b80:	4618      	mov	r0, r3
 8002b82:	9323      	str	r3, [sp, #140]	; 0x8c
 8002b84:	f7ff ff12 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002b88:	f204 63e4 	addw	r3, r4, #1764	; 0x6e4
 8002b8c:	4618      	mov	r0, r3
 8002b8e:	ee0b 3a90 	vmov	s23, r3
 8002b92:	f00a fe13 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002b96:	f504 63eb 	add.w	r3, r4, #1880	; 0x758
 8002b9a:	22ff      	movs	r2, #255	; 0xff
 8002b9c:	4629      	mov	r1, r5
 8002b9e:	4618      	mov	r0, r3
 8002ba0:	9324      	str	r3, [sp, #144]	; 0x90
 8002ba2:	f7ff ff03 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002ba6:	f204 7374 	addw	r3, r4, #1908	; 0x774
 8002baa:	4618      	mov	r0, r3
 8002bac:	ee0c 3a10 	vmov	s24, r3
 8002bb0:	f00a fe04 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002bb4:	f504 63fd 	add.w	r3, r4, #2024	; 0x7e8
 8002bb8:	22ff      	movs	r2, #255	; 0xff
 8002bba:	4629      	mov	r1, r5
 8002bbc:	4618      	mov	r0, r3
 8002bbe:	9325      	str	r3, [sp, #148]	; 0x94
 8002bc0:	f7ff fef4 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002bc4:	f604 0304 	addw	r3, r4, #2052	; 0x804
 8002bc8:	4618      	mov	r0, r3
 8002bca:	ee0c 3a90 	vmov	s25, r3
 8002bce:	f00a fdf5 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002bd2:	f604 0378 	addw	r3, r4, #2168	; 0x878
 8002bd6:	22ff      	movs	r2, #255	; 0xff
 8002bd8:	4629      	mov	r1, r5
 8002bda:	4618      	mov	r0, r3
 8002bdc:	9326      	str	r3, [sp, #152]	; 0x98
 8002bde:	f7ff fee5 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002be2:	f604 0394 	addw	r3, r4, #2196	; 0x894
 8002be6:	4618      	mov	r0, r3
 8002be8:	ee0d 3a10 	vmov	s26, r3
 8002bec:	f00a fde6 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002bf0:	f604 1308 	addw	r3, r4, #2312	; 0x908
 8002bf4:	22ff      	movs	r2, #255	; 0xff
 8002bf6:	4629      	mov	r1, r5
 8002bf8:	4618      	mov	r0, r3
 8002bfa:	9327      	str	r3, [sp, #156]	; 0x9c
 8002bfc:	f7ff fed6 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002c00:	f604 1324 	addw	r3, r4, #2340	; 0x924
 8002c04:	4618      	mov	r0, r3
 8002c06:	9318      	str	r3, [sp, #96]	; 0x60
 8002c08:	f00a f852 	bl	800ccb0 <_ZN8touchgfx6CircleC1Ev>
 8002c0c:	f504 6317 	add.w	r3, r4, #2416	; 0x970
 8002c10:	22ff      	movs	r2, #255	; 0xff
 8002c12:	4629      	mov	r1, r5
 8002c14:	4618      	mov	r0, r3
 8002c16:	9328      	str	r3, [sp, #160]	; 0xa0
 8002c18:	f7ff fec8 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002c1c:	f604 138c 	addw	r3, r4, #2444	; 0x98c
 8002c20:	4618      	mov	r0, r3
 8002c22:	9309      	str	r3, [sp, #36]	; 0x24
 8002c24:	f7ff fe7a 	bl	800291c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002c28:	f604 13cc 	addw	r3, r4, #2508	; 0x9cc
 8002c2c:	4618      	mov	r0, r3
 8002c2e:	930a      	str	r3, [sp, #40]	; 0x28
 8002c30:	f7ff fe74 	bl	800291c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002c34:	f604 230c 	addw	r3, r4, #2572	; 0xa0c
 8002c38:	4618      	mov	r0, r3
 8002c3a:	930b      	str	r3, [sp, #44]	; 0x2c
 8002c3c:	f7ff fe6e 	bl	800291c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002c40:	f604 234c 	addw	r3, r4, #2636	; 0xa4c
 8002c44:	4618      	mov	r0, r3
 8002c46:	930c      	str	r3, [sp, #48]	; 0x30
 8002c48:	f7ff fe68 	bl	800291c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002c4c:	f604 238c 	addw	r3, r4, #2700	; 0xa8c
 8002c50:	4618      	mov	r0, r3
 8002c52:	9319      	str	r3, [sp, #100]	; 0x64
 8002c54:	f00a f82c 	bl	800ccb0 <_ZN8touchgfx6CircleC1Ev>
 8002c58:	f604 23d8 	addw	r3, r4, #2776	; 0xad8
 8002c5c:	22ff      	movs	r2, #255	; 0xff
 8002c5e:	4629      	mov	r1, r5
 8002c60:	4618      	mov	r0, r3
 8002c62:	9329      	str	r3, [sp, #164]	; 0xa4
 8002c64:	f7ff fea2 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002c68:	f604 23f4 	addw	r3, r4, #2804	; 0xaf4
 8002c6c:	4618      	mov	r0, r3
 8002c6e:	930d      	str	r3, [sp, #52]	; 0x34
 8002c70:	f7ff fe54 	bl	800291c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002c74:	f604 3334 	addw	r3, r4, #2868	; 0xb34
 8002c78:	4618      	mov	r0, r3
 8002c7a:	f604 3774 	addw	r7, r4, #2932	; 0xb74
 8002c7e:	930e      	str	r3, [sp, #56]	; 0x38
 8002c80:	f7ff fe4c 	bl	800291c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002c84:	4638      	mov	r0, r7
 8002c86:	f008 f9c3 	bl	800b010 <_ZN8touchgfx14CircleProgressC1Ev>
 8002c8a:	f604 4374 	addw	r3, r4, #3188	; 0xc74
 8002c8e:	22ff      	movs	r2, #255	; 0xff
 8002c90:	4629      	mov	r1, r5
 8002c92:	4618      	mov	r0, r3
 8002c94:	f504 6a49 	add.w	sl, r4, #3216	; 0xc90
 8002c98:	932a      	str	r3, [sp, #168]	; 0xa8
 8002c9a:	f7ff fe87 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002c9e:	4650      	mov	r0, sl
 8002ca0:	f008 f9b6 	bl	800b010 <_ZN8touchgfx14CircleProgressC1Ev>
 8002ca4:	f504 6359 	add.w	r3, r4, #3472	; 0xd90
 8002ca8:	22ff      	movs	r2, #255	; 0xff
 8002caa:	4629      	mov	r1, r5
 8002cac:	4618      	mov	r0, r3
 8002cae:	f604 5bac 	addw	fp, r4, #3500	; 0xdac
 8002cb2:	932b      	str	r3, [sp, #172]	; 0xac
 8002cb4:	f7ff fe7a 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002cb8:	4658      	mov	r0, fp
 8002cba:	f7ff fdc3 	bl	8002844 <_ZN8touchgfx8DrawableC1Ev>
 8002cbe:	4b4e      	ldr	r3, [pc, #312]	; (8002df8 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002cc0:	f8c4 3dac 	str.w	r3, [r4, #3500]	; 0xdac
 8002cc4:	f604 53d8 	addw	r3, r4, #3544	; 0xdd8
 8002cc8:	4618      	mov	r0, r3
 8002cca:	f8c4 5dd4 	str.w	r5, [r4, #3540]	; 0xdd4
 8002cce:	931a      	str	r3, [sp, #104]	; 0x68
 8002cd0:	f7ff fe08 	bl	80028e4 <_ZN8touchgfx8TextAreaC1Ev>
 8002cd4:	f604 6314 	addw	r3, r4, #3604	; 0xe14
 8002cd8:	4618      	mov	r0, r3
 8002cda:	ee0d 3a90 	vmov	s27, r3
 8002cde:	f00a fd6d 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002ce2:	f604 6388 	addw	r3, r4, #3720	; 0xe88
 8002ce6:	22ff      	movs	r2, #255	; 0xff
 8002ce8:	4629      	mov	r1, r5
 8002cea:	4618      	mov	r0, r3
 8002cec:	932c      	str	r3, [sp, #176]	; 0xb0
 8002cee:	f7ff fe5d 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002cf2:	f604 63a4 	addw	r3, r4, #3748	; 0xea4
 8002cf6:	4618      	mov	r0, r3
 8002cf8:	ee0e 3a10 	vmov	s28, r3
 8002cfc:	f00a fd5e 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002d00:	f604 7318 	addw	r3, r4, #3864	; 0xf18
 8002d04:	22ff      	movs	r2, #255	; 0xff
 8002d06:	4629      	mov	r1, r5
 8002d08:	4618      	mov	r0, r3
 8002d0a:	932d      	str	r3, [sp, #180]	; 0xb4
 8002d0c:	f7ff fe4e 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002d10:	f604 7334 	addw	r3, r4, #3892	; 0xf34
 8002d14:	4618      	mov	r0, r3
 8002d16:	ee0e 3a90 	vmov	s29, r3
 8002d1a:	f00a fd4f 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002d1e:	f604 73a8 	addw	r3, r4, #4008	; 0xfa8
 8002d22:	22ff      	movs	r2, #255	; 0xff
 8002d24:	4629      	mov	r1, r5
 8002d26:	4618      	mov	r0, r3
 8002d28:	932e      	str	r3, [sp, #184]	; 0xb8
 8002d2a:	f7ff fe3f 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002d2e:	f604 73c4 	addw	r3, r4, #4036	; 0xfc4
 8002d32:	4618      	mov	r0, r3
 8002d34:	ee0f 3a10 	vmov	s30, r3
 8002d38:	f00a fd40 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002d3c:	f504 5381 	add.w	r3, r4, #4128	; 0x1020
 8002d40:	3318      	adds	r3, #24
 8002d42:	22ff      	movs	r2, #255	; 0xff
 8002d44:	4629      	mov	r1, r5
 8002d46:	4618      	mov	r0, r3
 8002d48:	930f      	str	r3, [sp, #60]	; 0x3c
 8002d4a:	f7ff fe2f 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002d4e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002d52:	3314      	adds	r3, #20
 8002d54:	4618      	mov	r0, r3
 8002d56:	ee08 3a10 	vmov	s16, r3
 8002d5a:	f00a fd2f 	bl	800d7bc <_ZN8touchgfx4LineC1Ev>
 8002d5e:	f504 5386 	add.w	r3, r4, #4288	; 0x10c0
 8002d62:	3308      	adds	r3, #8
 8002d64:	22ff      	movs	r2, #255	; 0xff
 8002d66:	4629      	mov	r1, r5
 8002d68:	4618      	mov	r0, r3
 8002d6a:	9310      	str	r3, [sp, #64]	; 0x40
 8002d6c:	f7ff fe1e 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002d70:	f504 5387 	add.w	r3, r4, #4320	; 0x10e0
 8002d74:	3304      	adds	r3, #4
 8002d76:	4618      	mov	r0, r3
 8002d78:	ee0f 3a90 	vmov	s31, r3
 8002d7c:	f7ff fdb2 	bl	80028e4 <_ZN8touchgfx8TextAreaC1Ev>
 8002d80:	f504 5389 	add.w	r3, r4, #4384	; 0x1120
 8002d84:	4618      	mov	r0, r3
 8002d86:	931b      	str	r3, [sp, #108]	; 0x6c
 8002d88:	f7ff fdac 	bl	80028e4 <_ZN8touchgfx8TextAreaC1Ev>
 8002d8c:	f504 538a 	add.w	r3, r4, #4416	; 0x1140
 8002d90:	331c      	adds	r3, #28
 8002d92:	4618      	mov	r0, r3
 8002d94:	9302      	str	r3, [sp, #8]
 8002d96:	f7ff fda5 	bl	80028e4 <_ZN8touchgfx8TextAreaC1Ev>
 8002d9a:	f504 538c 	add.w	r3, r4, #4480	; 0x1180
 8002d9e:	3318      	adds	r3, #24
 8002da0:	4618      	mov	r0, r3
 8002da2:	9303      	str	r3, [sp, #12]
 8002da4:	f7ff fd9e 	bl	80028e4 <_ZN8touchgfx8TextAreaC1Ev>
 8002da8:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8002dac:	3314      	adds	r3, #20
 8002dae:	4618      	mov	r0, r3
 8002db0:	9305      	str	r3, [sp, #20]
 8002db2:	f009 ff7d 	bl	800ccb0 <_ZN8touchgfx6CircleC1Ev>
 8002db6:	f504 5391 	add.w	r3, r4, #4640	; 0x1220
 8002dba:	22ff      	movs	r2, #255	; 0xff
 8002dbc:	4629      	mov	r1, r5
 8002dbe:	4618      	mov	r0, r3
 8002dc0:	932f      	str	r3, [sp, #188]	; 0xbc
 8002dc2:	f7ff fdf3 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002dc6:	f504 5391 	add.w	r3, r4, #4640	; 0x1220
 8002dca:	331c      	adds	r3, #28
 8002dcc:	4618      	mov	r0, r3
 8002dce:	9306      	str	r3, [sp, #24]
 8002dd0:	f009 ff6e 	bl	800ccb0 <_ZN8touchgfx6CircleC1Ev>
 8002dd4:	f504 5394 	add.w	r3, r4, #4736	; 0x1280
 8002dd8:	3308      	adds	r3, #8
 8002dda:	22ff      	movs	r2, #255	; 0xff
 8002ddc:	4629      	mov	r1, r5
 8002dde:	4618      	mov	r0, r3
 8002de0:	9311      	str	r3, [sp, #68]	; 0x44
 8002de2:	f7ff fde3 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002de6:	f504 5395 	add.w	r3, r4, #4768	; 0x12a0
 8002dea:	3304      	adds	r3, #4
 8002dec:	4618      	mov	r0, r3
 8002dee:	9307      	str	r3, [sp, #28]
 8002df0:	e004      	b.n	8002dfc <_ZN15Screen1ViewBaseC1Ev+0x3b8>
 8002df2:	bf00      	nop
 8002df4:	080240c0 	.word	0x080240c0
 8002df8:	08024dc8 	.word	0x08024dc8
 8002dfc:	f009 ff58 	bl	800ccb0 <_ZN8touchgfx6CircleC1Ev>
 8002e00:	f504 5397 	add.w	r3, r4, #4832	; 0x12e0
 8002e04:	3310      	adds	r3, #16
 8002e06:	22ff      	movs	r2, #255	; 0xff
 8002e08:	4629      	mov	r1, r5
 8002e0a:	4618      	mov	r0, r3
 8002e0c:	9312      	str	r3, [sp, #72]	; 0x48
 8002e0e:	f7ff fdcd 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002e12:	f504 5398 	add.w	r3, r4, #4864	; 0x1300
 8002e16:	330c      	adds	r3, #12
 8002e18:	4618      	mov	r0, r3
 8002e1a:	9308      	str	r3, [sp, #32]
 8002e1c:	f009 ff48 	bl	800ccb0 <_ZN8touchgfx6CircleC1Ev>
 8002e20:	f504 539a 	add.w	r3, r4, #4928	; 0x1340
 8002e24:	3318      	adds	r3, #24
 8002e26:	22ff      	movs	r2, #255	; 0xff
 8002e28:	4629      	mov	r1, r5
 8002e2a:	4618      	mov	r0, r3
 8002e2c:	9313      	str	r3, [sp, #76]	; 0x4c
 8002e2e:	f7ff fdbd 	bl	80029ac <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 8002e32:	f504 539b 	add.w	r3, r4, #4960	; 0x1360
 8002e36:	3314      	adds	r3, #20
 8002e38:	4618      	mov	r0, r3
 8002e3a:	ee08 3a90 	vmov	s17, r3
 8002e3e:	f008 fc3b 	bl	800b6b8 <_ZN8touchgfx12DigitalClockC1Ev>
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002e42:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 8002e46:	f504 50a5 	add.w	r0, r4, #5280	; 0x14a0
 8002e4a:	f00b fc09 	bl	800e660 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 8002e4e:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002e52:	981c      	ldr	r0, [sp, #112]	; 0x70
 8002e54:	9300      	str	r3, [sp, #0]
 8002e56:	462a      	mov	r2, r5
 8002e58:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002e5c:	4629      	mov	r1, r5
 8002e5e:	f7ff fd0e 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002e62:	462a      	mov	r2, r5
 8002e64:	4629      	mov	r1, r5
 8002e66:	4628      	mov	r0, r5
 8002e68:	f7ff fdb2 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    box1.setPosition(0, 0, 800, 480);
 8002e6c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002e70:	66a0      	str	r0, [r4, #104]	; 0x68
 8002e72:	9300      	str	r3, [sp, #0]
 8002e74:	981d      	ldr	r0, [sp, #116]	; 0x74
 8002e76:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002e7a:	462a      	mov	r2, r5
 8002e7c:	4629      	mov	r1, r5
 8002e7e:	f7ff fcfe 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(7, 17, 35));
 8002e82:	2223      	movs	r2, #35	; 0x23
 8002e84:	2111      	movs	r1, #17
 8002e86:	2007      	movs	r0, #7
 8002e88:	f7ff fda2 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    container1.setPosition(239, -2, 318, 480);
 8002e8c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002e90:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 8002e94:	9300      	str	r3, [sp, #0]
 8002e96:	9804      	ldr	r0, [sp, #16]
 8002e98:	f44f 739f 	mov.w	r3, #318	; 0x13e
 8002e9c:	f06f 0201 	mvn.w	r2, #1
 8002ea0:	21ef      	movs	r1, #239	; 0xef
 8002ea2:	f7ff fcec 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea2.setXY(129, 388);
 8002ea6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8002ea8:	f44f 72c2 	mov.w	r2, #388	; 0x184
 8002eac:	2181      	movs	r1, #129	; 0x81
 8002eae:	f7ff fcd9 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002eb2:	22ff      	movs	r2, #255	; 0xff
 8002eb4:	4611      	mov	r1, r2
 8002eb6:	4610      	mov	r0, r2
 8002eb8:	f7ff fd8a 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002ebc:	4b1b      	ldr	r3, [pc, #108]	; (8002f2c <_ZN15Screen1ViewBaseC1Ev+0x4e8>)
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002ebe:	f8c4 00f4 	str.w	r0, [r4, #244]	; 0xf4
 8002ec2:	9330      	str	r3, [sp, #192]	; 0xc0
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
 8002ec4:	9814      	ldr	r0, [sp, #80]	; 0x50
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8002ec6:	f8a4 50f8 	strh.w	r5, [r4, #248]	; 0xf8
 8002eca:	f04f 0302 	mov.w	r3, #2
 8002ece:	a930      	add	r1, sp, #192	; 0xc0
 8002ed0:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
 8002ed4:	f00b f83f 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container1.add(textArea2);
 8002ed8:	9914      	ldr	r1, [sp, #80]	; 0x50
 8002eda:	9804      	ldr	r0, [sp, #16]
 8002edc:	f008 fd36 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setPosition(69, 278, 185, 114);
 8002ee0:	2372      	movs	r3, #114	; 0x72
 8002ee2:	9815      	ldr	r0, [sp, #84]	; 0x54
 8002ee4:	9300      	str	r3, [sp, #0]
 8002ee6:	f44f 728b 	mov.w	r2, #278	; 0x116
 8002eea:	23b9      	movs	r3, #185	; 0xb9
 8002eec:	2145      	movs	r1, #69	; 0x45
 8002eee:	f7ff fcc6 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002ef2:	22ff      	movs	r2, #255	; 0xff
 8002ef4:	4611      	mov	r1, r2
 8002ef6:	4610      	mov	r0, r2
 8002ef8:	f7ff fd6a 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID2).getText());
 8002efc:	f504 53a0 	add.w	r3, r4, #5120	; 0x1400
 8002f00:	9314      	str	r3, [sp, #80]	; 0x50
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002f02:	4b0b      	ldr	r3, [pc, #44]	; (8002f30 <_ZN15Screen1ViewBaseC1Ev+0x4ec>)
        this->color = color;
 8002f04:	f8c4 0130 	str.w	r0, [r4, #304]	; 0x130
 8002f08:	681b      	ldr	r3, [r3, #0]
        linespace = space;
 8002f0a:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8002f0e:	b92b      	cbnz	r3, 8002f1c <_ZN15Screen1ViewBaseC1Ev+0x4d8>
 8002f10:	4b08      	ldr	r3, [pc, #32]	; (8002f34 <_ZN15Screen1ViewBaseC1Ev+0x4f0>)
 8002f12:	4a09      	ldr	r2, [pc, #36]	; (8002f38 <_ZN15Screen1ViewBaseC1Ev+0x4f4>)
 8002f14:	21b1      	movs	r1, #177	; 0xb1
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002f16:	4809      	ldr	r0, [pc, #36]	; (8002f3c <_ZN15Screen1ViewBaseC1Ev+0x4f8>)
 8002f18:	f01f f8fa 	bl	8022110 <__assert_func>
 8002f1c:	4b08      	ldr	r3, [pc, #32]	; (8002f40 <_ZN15Screen1ViewBaseC1Ev+0x4fc>)
 8002f1e:	881b      	ldrh	r3, [r3, #0]
 8002f20:	2b01      	cmp	r3, #1
 8002f22:	d811      	bhi.n	8002f48 <_ZN15Screen1ViewBaseC1Ev+0x504>
 8002f24:	4b07      	ldr	r3, [pc, #28]	; (8002f44 <_ZN15Screen1ViewBaseC1Ev+0x500>)
 8002f26:	4a04      	ldr	r2, [pc, #16]	; (8002f38 <_ZN15Screen1ViewBaseC1Ev+0x4f4>)
 8002f28:	21b2      	movs	r1, #178	; 0xb2
 8002f2a:	e7f4      	b.n	8002f16 <_ZN15Screen1ViewBaseC1Ev+0x4d2>
 8002f2c:	080238d0 	.word	0x080238d0
 8002f30:	2000e450 	.word	0x2000e450
 8002f34:	08023fab 	.word	0x08023fab
 8002f38:	08023fed 	.word	0x08023fed
 8002f3c:	0802401b 	.word	0x0802401b
 8002f40:	2000e454 	.word	0x2000e454
 8002f44:	08024062 	.word	0x08024062
        return texts->getText(typedTextId);
 8002f48:	4be5      	ldr	r3, [pc, #916]	; (80032e0 <_ZN15Screen1ViewBaseC1Ev+0x89c>)
 8002f4a:	2101      	movs	r1, #1
 8002f4c:	6818      	ldr	r0, [r3, #0]
 8002f4e:	f001 fa25 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 8002f52:	4ae4      	ldr	r2, [pc, #912]	; (80032e4 <_ZN15Screen1ViewBaseC1Ev+0x8a0>)
 8002f54:	4603      	mov	r3, r0
 8002f56:	2114      	movs	r1, #20
 8002f58:	9814      	ldr	r0, [sp, #80]	; 0x50
 8002f5a:	f010 f8f9 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 8002f5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
        : typedTextId(id)
 8002f60:	4be1      	ldr	r3, [pc, #900]	; (80032e8 <_ZN15Screen1ViewBaseC1Ev+0x8a4>)
 8002f62:	f8c4 213c 	str.w	r2, [r4, #316]	; 0x13c
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8002f66:	9815      	ldr	r0, [sp, #84]	; 0x54
 8002f68:	9330      	str	r3, [sp, #192]	; 0xc0
 8002f6a:	a930      	add	r1, sp, #192	; 0xc0
 8002f6c:	f8ad 50c4 	strh.w	r5, [sp, #196]	; 0xc4
 8002f70:	f00a fff1 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container1.add(textArea1);
 8002f74:	9915      	ldr	r1, [sp, #84]	; 0x54
 8002f76:	9804      	ldr	r0, [sp, #16]
 8002f78:	f008 fce8 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_GAUGES_ORIGINAL_GAUGE_BACKGROUND_STYLE_00_ID));
 8002f7c:	4630      	mov	r0, r6
 8002f7e:	a930      	add	r1, sp, #192	; 0xc0
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002f80:	f8ad 50c0 	strh.w	r5, [sp, #192]	; 0xc0
 8002f84:	f008 f9dc 	bl	800b340 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    gauge1.setPosition(36, 24, 251, 251);
 8002f88:	23fb      	movs	r3, #251	; 0xfb
 8002f8a:	9300      	str	r3, [sp, #0]
 8002f8c:	4630      	mov	r0, r6
 8002f8e:	2218      	movs	r2, #24
 8002f90:	2124      	movs	r1, #36	; 0x24
 8002f92:	f7ff fc74 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    gauge1.setCenter(125, 125);
 8002f96:	227d      	movs	r2, #125	; 0x7d
 8002f98:	4611      	mov	r1, r2
 8002f9a:	4630      	mov	r0, r6
 8002f9c:	f00b f8f3 	bl	800e186 <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8002fa0:	4630      	mov	r0, r6
 8002fa2:	225a      	movs	r2, #90	; 0x5a
 8002fa4:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8002fa8:	f00b f972 	bl	800e290 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(0, 105);
 8002fac:	462b      	mov	r3, r5
 8002fae:	2269      	movs	r2, #105	; 0x69
 8002fb0:	4630      	mov	r0, r6
 8002fb2:	4629      	mov	r1, r5
 8002fb4:	9500      	str	r5, [sp, #0]
 8002fb6:	f008 f91b 	bl	800b1f0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8002fba:	4630      	mov	r0, r6
 8002fbc:	4629      	mov	r1, r5
 8002fbe:	f00b f911 	bl	800e1e4 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setEasingEquation(touchgfx::EasingEquations::linearEaseIn);
 8002fc2:	4630      	mov	r0, r6
 8002fc4:	49c9      	ldr	r1, [pc, #804]	; (80032ec <_ZN15Screen1ViewBaseC1Ev+0x8a8>)
 8002fc6:	f008 f874 	bl	800b0b2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>
    gauge1.setNeedle(BITMAP_BLUE_NEEDLES_ORIGINAL_GAUGE_NEEDLE_STYLE_00_ID, 11, 55);
 8002fca:	2337      	movs	r3, #55	; 0x37
 8002fcc:	220b      	movs	r2, #11
 8002fce:	4630      	mov	r0, r6
 8002fd0:	2101      	movs	r1, #1
 8002fd2:	f00b f8c3 	bl	800e15c <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8002fd6:	4630      	mov	r0, r6
 8002fd8:	2101      	movs	r1, #1
 8002fda:	f00b f861 	bl	800e0a0 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8002fde:	4630      	mov	r0, r6
 8002fe0:	2101      	movs	r1, #1
 8002fe2:	f00b f860 	bl	800e0a6 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    container1.add(gauge1);
 8002fe6:	4631      	mov	r1, r6
 8002fe8:	9804      	ldr	r0, [sp, #16]
 8002fea:	f008 fcaf 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    container2.setPosition(550, -7, 250, 480);
 8002fee:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002ff2:	23fa      	movs	r3, #250	; 0xfa
 8002ff4:	9200      	str	r2, [sp, #0]
 8002ff6:	f240 2126 	movw	r1, #550	; 0x226
 8002ffa:	f06f 0206 	mvn.w	r2, #6
 8002ffe:	4648      	mov	r0, r9
 8003000:	f7ff fc3d 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea3.setXY(97, 18);
 8003004:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003006:	2212      	movs	r2, #18
 8003008:	2161      	movs	r1, #97	; 0x61
 800300a:	f7ff fc2b 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    textArea3.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800300e:	22ff      	movs	r2, #255	; 0xff
 8003010:	4611      	mov	r1, r2
 8003012:	4610      	mov	r0, r2
 8003014:	f7ff fcdc 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003018:	4bb3      	ldr	r3, [pc, #716]	; (80032e8 <_ZN15Screen1ViewBaseC1Ev+0x8a4>)
        this->color = color;
 800301a:	f8c4 033c 	str.w	r0, [r4, #828]	; 0x33c
 800301e:	9330      	str	r3, [sp, #192]	; 0xc0
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 8003020:	9816      	ldr	r0, [sp, #88]	; 0x58
        linespace = space;
 8003022:	f8a4 5340 	strh.w	r5, [r4, #832]	; 0x340
 8003026:	2303      	movs	r3, #3
 8003028:	a930      	add	r1, sp, #192	; 0xc0
    line1.setPosition(-6, -13, 113, 63);
 800302a:	263f      	movs	r6, #63	; 0x3f
 800302c:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 8003030:	f00a ff91 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container2.add(textArea3);
 8003034:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003036:	4648      	mov	r0, r9
 8003038:	f008 fc88 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(-6, -13, 113, 63);
 800303c:	2371      	movs	r3, #113	; 0x71
 800303e:	ee19 0a10 	vmov	r0, s18
 8003042:	9600      	str	r6, [sp, #0]
 8003044:	f06f 020c 	mvn.w	r2, #12
 8003048:	f06f 0105 	mvn.w	r1, #5
 800304c:	f7ff fc17 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003050:	22ff      	movs	r2, #255	; 0xff
 8003052:	4611      	mov	r1, r2
 8003054:	4610      	mov	r0, r2
 8003056:	f7ff fcbb 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800305a:	4601      	mov	r1, r0
 800305c:	981e      	ldr	r0, [sp, #120]	; 0x78
 800305e:	f7ff fc99 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line1.setPainter(line1Painter);
 8003062:	991e      	ldr	r1, [sp, #120]	; 0x78
 8003064:	ee19 0a10 	vmov	r0, s18
 8003068:	f00a fa0c 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1.setStart(13, 45);
 800306c:	ee19 0a10 	vmov	r0, s18
 8003070:	222d      	movs	r2, #45	; 0x2d
 8003072:	210d      	movs	r1, #13
 8003074:	f7ff fcce 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(95, 45);
 8003078:	222d      	movs	r2, #45	; 0x2d
 800307a:	ee19 0a10 	vmov	r0, s18
 800307e:	215f      	movs	r1, #95	; 0x5f
 8003080:	f7ff fccc 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(4);
 8003084:	ee19 0a10 	vmov	r0, s18
 8003088:	2104      	movs	r1, #4
 800308a:	f7ff fccb 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800308e:	ee19 0a10 	vmov	r0, s18
 8003092:	2101      	movs	r1, #1
 8003094:	f00a fcd8 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container2.add(line1);
 8003098:	ee19 1a10 	vmov	r1, s18
 800309c:	4648      	mov	r0, r9
 800309e:	f008 fc55 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(124, -13, 121, 63);
 80030a2:	2379      	movs	r3, #121	; 0x79
 80030a4:	4640      	mov	r0, r8
 80030a6:	9600      	str	r6, [sp, #0]
 80030a8:	f06f 020c 	mvn.w	r2, #12
 80030ac:	217c      	movs	r1, #124	; 0x7c
 80030ae:	f7ff fbe6 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line1_1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80030b2:	22ff      	movs	r2, #255	; 0xff
 80030b4:	4611      	mov	r1, r2
 80030b6:	4610      	mov	r0, r2
 80030b8:	f7ff fc8a 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80030bc:	4601      	mov	r1, r0
 80030be:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80030c0:	f7ff fc68 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line1_1.setPainter(line1_1Painter);
 80030c4:	4640      	mov	r0, r8
 80030c6:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80030c8:	f00a f9dc 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1_1.setStart(16, 45);
 80030cc:	4640      	mov	r0, r8
 80030ce:	222d      	movs	r2, #45	; 0x2d
 80030d0:	2110      	movs	r1, #16
 80030d2:	f7ff fc9f 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(94, 45);
 80030d6:	222d      	movs	r2, #45	; 0x2d
 80030d8:	4640      	mov	r0, r8
 80030da:	215e      	movs	r1, #94	; 0x5e
 80030dc:	f7ff fc9e 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(4);
 80030e0:	4640      	mov	r0, r8
 80030e2:	2104      	movs	r1, #4
 80030e4:	f7ff fc9e 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80030e8:	4640      	mov	r0, r8
 80030ea:	2101      	movs	r1, #1
 80030ec:	f00a fcac 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container2.add(line1_1);
 80030f0:	4641      	mov	r1, r8
 80030f2:	4648      	mov	r0, r9
 80030f4:	f008 fc2a 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(99, 245);
 80030f8:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80030fa:	22f5      	movs	r2, #245	; 0xf5
 80030fc:	2163      	movs	r1, #99	; 0x63
 80030fe:	f7ff fbb1 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    textArea3_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003102:	22ff      	movs	r2, #255	; 0xff
 8003104:	4611      	mov	r1, r2
 8003106:	4610      	mov	r0, r2
 8003108:	f7ff fc62 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800310c:	f04f 0804 	mov.w	r8, #4
 8003110:	4b75      	ldr	r3, [pc, #468]	; (80032e8 <_ZN15Screen1ViewBaseC1Ev+0x8a4>)
        this->color = color;
 8003112:	f8c4 0498 	str.w	r0, [r4, #1176]	; 0x498
    textArea3_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));
 8003116:	a930      	add	r1, sp, #192	; 0xc0
 8003118:	9817      	ldr	r0, [sp, #92]	; 0x5c
        linespace = space;
 800311a:	f8a4 549c 	strh.w	r5, [r4, #1180]	; 0x49c
 800311e:	9330      	str	r3, [sp, #192]	; 0xc0
 8003120:	f8ad 80c4 	strh.w	r8, [sp, #196]	; 0xc4
 8003124:	f00a ff17 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container2.add(textArea3_1);
 8003128:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800312a:	4648      	mov	r0, r9
 800312c:	f008 fc0e 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2.setPosition(-6, 214, 113, 63);
 8003130:	2371      	movs	r3, #113	; 0x71
 8003132:	ee19 0a90 	vmov	r0, s19
 8003136:	9600      	str	r6, [sp, #0]
 8003138:	22d6      	movs	r2, #214	; 0xd6
 800313a:	f06f 0105 	mvn.w	r1, #5
 800313e:	f7ff fb9e 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line1_2Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003142:	22ff      	movs	r2, #255	; 0xff
 8003144:	4611      	mov	r1, r2
 8003146:	4610      	mov	r0, r2
 8003148:	f7ff fc42 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800314c:	4601      	mov	r1, r0
 800314e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8003150:	f7ff fc20 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line1_2.setPainter(line1_2Painter);
 8003154:	9920      	ldr	r1, [sp, #128]	; 0x80
 8003156:	ee19 0a90 	vmov	r0, s19
 800315a:	f00a f993 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1_2.setStart(13, 45);
 800315e:	ee19 0a90 	vmov	r0, s19
 8003162:	222d      	movs	r2, #45	; 0x2d
 8003164:	210d      	movs	r1, #13
 8003166:	f7ff fc55 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2.setEnd(95, 45);
 800316a:	222d      	movs	r2, #45	; 0x2d
 800316c:	ee19 0a90 	vmov	r0, s19
 8003170:	215f      	movs	r1, #95	; 0x5f
 8003172:	f7ff fc53 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2.setLineWidth(4);
 8003176:	ee19 0a90 	vmov	r0, s19
 800317a:	4641      	mov	r1, r8
 800317c:	f7ff fc52 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003180:	ee19 0a90 	vmov	r0, s19
 8003184:	2101      	movs	r1, #1
 8003186:	f00a fc5f 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container2.add(line1_2);
 800318a:	ee19 1a90 	vmov	r1, s19
 800318e:	4648      	mov	r0, r9
 8003190:	f008 fbdc 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_1.setPosition(124, 214, 121, 63);
 8003194:	2379      	movs	r3, #121	; 0x79
 8003196:	ee1a 0a10 	vmov	r0, s20
 800319a:	9600      	str	r6, [sp, #0]
 800319c:	22d6      	movs	r2, #214	; 0xd6
 800319e:	217c      	movs	r1, #124	; 0x7c
 80031a0:	f7ff fb6d 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line1_1_1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80031a4:	22ff      	movs	r2, #255	; 0xff
 80031a6:	4611      	mov	r1, r2
 80031a8:	4610      	mov	r0, r2
 80031aa:	f7ff fc11 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80031ae:	4601      	mov	r1, r0
 80031b0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80031b2:	f7ff fbef 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line1_1_1.setPainter(line1_1_1Painter);
 80031b6:	9921      	ldr	r1, [sp, #132]	; 0x84
 80031b8:	ee1a 0a10 	vmov	r0, s20
 80031bc:	f00a f962 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1_1_1.setStart(16, 45);
 80031c0:	ee1a 0a10 	vmov	r0, s20
 80031c4:	222d      	movs	r2, #45	; 0x2d
 80031c6:	2110      	movs	r1, #16
 80031c8:	f7ff fc24 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_1.setEnd(94, 45);
 80031cc:	222d      	movs	r2, #45	; 0x2d
 80031ce:	ee1a 0a10 	vmov	r0, s20
 80031d2:	215e      	movs	r1, #94	; 0x5e
 80031d4:	f7ff fc22 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_1.setLineWidth(4);
 80031d8:	ee1a 0a10 	vmov	r0, s20
 80031dc:	4641      	mov	r1, r8
 80031de:	f7ff fc21 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80031e2:	ee1a 0a10 	vmov	r0, s20
 80031e6:	2101      	movs	r1, #1
 80031e8:	f00a fc2e 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container2.add(line1_1_1);
 80031ec:	ee1a 1a10 	vmov	r1, s20
 80031f0:	4648      	mov	r0, r9
 80031f2:	f008 fbab 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(2, 24, 105, 209);
 80031f6:	23d1      	movs	r3, #209	; 0xd1
 80031f8:	ee1a 0a90 	vmov	r0, s21
 80031fc:	9300      	str	r3, [sp, #0]
 80031fe:	2218      	movs	r2, #24
 8003200:	2369      	movs	r3, #105	; 0x69
 8003202:	2102      	movs	r1, #2
 8003204:	f7ff fb3b 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line2Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003208:	22ff      	movs	r2, #255	; 0xff
 800320a:	4611      	mov	r1, r2
 800320c:	4610      	mov	r0, r2
 800320e:	f7ff fbdf 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003212:	4601      	mov	r1, r0
 8003214:	9822      	ldr	r0, [sp, #136]	; 0x88
 8003216:	f7ff fbbd 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line2.setPainter(line2Painter);
 800321a:	9922      	ldr	r1, [sp, #136]	; 0x88
 800321c:	ee1a 0a90 	vmov	r0, s21
 8003220:	f00a f930 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line2.setStart(5, 8);
 8003224:	ee1a 0a90 	vmov	r0, s21
 8003228:	2208      	movs	r2, #8
 800322a:	2105      	movs	r1, #5
 800322c:	f7ff fbf2 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line2.setEnd(5, 198);
 8003230:	22c6      	movs	r2, #198	; 0xc6
 8003232:	ee1a 0a90 	vmov	r0, s21
 8003236:	2105      	movs	r1, #5
 8003238:	f7ff fbf0 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line2.setLineWidth(4);
 800323c:	ee1a 0a90 	vmov	r0, s21
 8003240:	4641      	mov	r1, r8
 8003242:	f7ff fbef 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003246:	ee1a 0a90 	vmov	r0, s21
 800324a:	2101      	movs	r1, #1
 800324c:	f00a fbfc 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container2.add(line2);
 8003250:	ee1a 1a90 	vmov	r1, s21
 8003254:	4648      	mov	r0, r9
 8003256:	f008 fb79 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2_1.setPosition(213, 27, 105, 218);
 800325a:	23da      	movs	r3, #218	; 0xda
 800325c:	ee1b 0a10 	vmov	r0, s22
 8003260:	9300      	str	r3, [sp, #0]
 8003262:	221b      	movs	r2, #27
 8003264:	2369      	movs	r3, #105	; 0x69
 8003266:	21d5      	movs	r1, #213	; 0xd5
 8003268:	f7ff fb09 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line2_1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800326c:	22ff      	movs	r2, #255	; 0xff
 800326e:	4611      	mov	r1, r2
 8003270:	4610      	mov	r0, r2
 8003272:	f7ff fbad 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003276:	4601      	mov	r1, r0
 8003278:	9823      	ldr	r0, [sp, #140]	; 0x8c
 800327a:	f7ff fb8b 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line2_1.setPainter(line2_1Painter);
 800327e:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8003280:	ee1b 0a10 	vmov	r0, s22
 8003284:	f00a f8fe 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line2_1.setStart(5, 5);
 8003288:	2205      	movs	r2, #5
 800328a:	4611      	mov	r1, r2
 800328c:	ee1b 0a10 	vmov	r0, s22
 8003290:	f7ff fbc0 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line2_1.setEnd(5, 196);
 8003294:	22c4      	movs	r2, #196	; 0xc4
 8003296:	ee1b 0a10 	vmov	r0, s22
 800329a:	2105      	movs	r1, #5
 800329c:	f7ff fbbe 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line2_1.setLineWidth(4);
 80032a0:	ee1b 0a10 	vmov	r0, s22
 80032a4:	4641      	mov	r1, r8
 80032a6:	f7ff fbbd 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80032aa:	ee1b 0a10 	vmov	r0, s22
 80032ae:	2101      	movs	r1, #1
 80032b0:	f00a fbca 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    line2_2.setPosition(2, 258, 105, 216);
 80032b4:	26d8      	movs	r6, #216	; 0xd8
    container2.add(line2_1);
 80032b6:	ee1b 1a10 	vmov	r1, s22
 80032ba:	4648      	mov	r0, r9
 80032bc:	f008 fb46 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2_2.setPosition(2, 258, 105, 216);
 80032c0:	2369      	movs	r3, #105	; 0x69
 80032c2:	ee1b 0a90 	vmov	r0, s23
 80032c6:	9600      	str	r6, [sp, #0]
 80032c8:	f44f 7281 	mov.w	r2, #258	; 0x102
 80032cc:	2102      	movs	r1, #2
 80032ce:	f7ff fad6 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line2_2Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80032d2:	22ff      	movs	r2, #255	; 0xff
 80032d4:	4611      	mov	r1, r2
 80032d6:	4610      	mov	r0, r2
 80032d8:	f7ff fb7a 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80032dc:	4601      	mov	r1, r0
 80032de:	e007      	b.n	80032f0 <_ZN15Screen1ViewBaseC1Ev+0x8ac>
 80032e0:	2000e45c 	.word	0x2000e45c
 80032e4:	080240b4 	.word	0x080240b4
 80032e8:	080238d0 	.word	0x080238d0
 80032ec:	08011b35 	.word	0x08011b35
 80032f0:	9824      	ldr	r0, [sp, #144]	; 0x90
 80032f2:	f7ff fb4f 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line2_2.setPainter(line2_2Painter);
 80032f6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80032f8:	ee1b 0a90 	vmov	r0, s23
 80032fc:	f00a f8c2 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line2_2.setStart(5, 0);
 8003300:	ee1b 0a90 	vmov	r0, s23
 8003304:	462a      	mov	r2, r5
 8003306:	2105      	movs	r1, #5
 8003308:	f7ff fb84 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line2_2.setEnd(5, 199);
 800330c:	22c7      	movs	r2, #199	; 0xc7
 800330e:	ee1b 0a90 	vmov	r0, s23
 8003312:	2105      	movs	r1, #5
 8003314:	f7ff fb82 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line2_2.setLineWidth(4);
 8003318:	ee1b 0a90 	vmov	r0, s23
 800331c:	4641      	mov	r1, r8
 800331e:	f7ff fb81 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003322:	ee1b 0a90 	vmov	r0, s23
 8003326:	2101      	movs	r1, #1
 8003328:	f00a fb8e 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container2.add(line2_2);
 800332c:	ee1b 1a90 	vmov	r1, s23
 8003330:	4648      	mov	r0, r9
 8003332:	f008 fb0b 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2_3.setPosition(213, 258, 105, 216);
 8003336:	2369      	movs	r3, #105	; 0x69
 8003338:	ee1c 0a10 	vmov	r0, s24
 800333c:	9600      	str	r6, [sp, #0]
 800333e:	f44f 7281 	mov.w	r2, #258	; 0x102
 8003342:	21d5      	movs	r1, #213	; 0xd5
 8003344:	f7ff fa9b 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line2_3Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003348:	22ff      	movs	r2, #255	; 0xff
 800334a:	4611      	mov	r1, r2
 800334c:	4610      	mov	r0, r2
 800334e:	f7ff fb3f 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003352:	4601      	mov	r1, r0
 8003354:	9825      	ldr	r0, [sp, #148]	; 0x94
 8003356:	f7ff fb1d 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line2_3.setPainter(line2_3Painter);
 800335a:	9925      	ldr	r1, [sp, #148]	; 0x94
 800335c:	ee1c 0a10 	vmov	r0, s24
 8003360:	f00a f890 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line2_3.setStart(5, 0);
 8003364:	ee1c 0a10 	vmov	r0, s24
 8003368:	462a      	mov	r2, r5
 800336a:	2105      	movs	r1, #5
 800336c:	f7ff fb52 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line2_3.setEnd(5, 199);
 8003370:	22c7      	movs	r2, #199	; 0xc7
 8003372:	ee1c 0a10 	vmov	r0, s24
 8003376:	2105      	movs	r1, #5
 8003378:	f7ff fb50 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line2_3.setLineWidth(4);
 800337c:	ee1c 0a10 	vmov	r0, s24
 8003380:	4641      	mov	r1, r8
 8003382:	f7ff fb4f 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2_3.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003386:	ee1c 0a10 	vmov	r0, s24
 800338a:	2101      	movs	r1, #1
 800338c:	f00a fb5c 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container2.add(line2_3);
 8003390:	ee1c 1a10 	vmov	r1, s24
 8003394:	4648      	mov	r0, r9
 8003396:	f008 fad9 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line3.setPosition(2, 203, 226, 50);
 800339a:	2332      	movs	r3, #50	; 0x32
 800339c:	ee1c 0a90 	vmov	r0, s25
 80033a0:	9300      	str	r3, [sp, #0]
 80033a2:	22cb      	movs	r2, #203	; 0xcb
 80033a4:	23e2      	movs	r3, #226	; 0xe2
 80033a6:	2102      	movs	r1, #2
 80033a8:	f7ff fa69 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line3Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80033ac:	22ff      	movs	r2, #255	; 0xff
 80033ae:	4611      	mov	r1, r2
 80033b0:	4610      	mov	r0, r2
 80033b2:	f7ff fb0d 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80033b6:	4601      	mov	r1, r0
 80033b8:	9826      	ldr	r0, [sp, #152]	; 0x98
 80033ba:	f7ff faeb 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line3.setPainter(line3Painter);
 80033be:	9926      	ldr	r1, [sp, #152]	; 0x98
 80033c0:	ee1c 0a90 	vmov	r0, s25
 80033c4:	f00a f85e 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line3.setStart(5, 20);
 80033c8:	ee1c 0a90 	vmov	r0, s25
 80033cc:	2214      	movs	r2, #20
 80033ce:	2105      	movs	r1, #5
 80033d0:	f7ff fb20 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line3.setEnd(215, 20);
 80033d4:	2214      	movs	r2, #20
 80033d6:	ee1c 0a90 	vmov	r0, s25
 80033da:	21d7      	movs	r1, #215	; 0xd7
 80033dc:	f7ff fb1e 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line3.setLineWidth(4);
 80033e0:	ee1c 0a90 	vmov	r0, s25
 80033e4:	4641      	mov	r1, r8
 80033e6:	f7ff fb1d 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line3.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80033ea:	ee1c 0a90 	vmov	r0, s25
 80033ee:	2101      	movs	r1, #1
 80033f0:	f00a fb2a 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container2.add(line3);
 80033f4:	ee1c 1a90 	vmov	r1, s25
 80033f8:	4648      	mov	r0, r9
 80033fa:	f008 faa7 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line3_1.setPosition(2, 437, 226, 48);
 80033fe:	2330      	movs	r3, #48	; 0x30
 8003400:	ee1d 0a10 	vmov	r0, s26
 8003404:	9300      	str	r3, [sp, #0]
 8003406:	f240 12b5 	movw	r2, #437	; 0x1b5
 800340a:	23e2      	movs	r3, #226	; 0xe2
 800340c:	2102      	movs	r1, #2
 800340e:	f7ff fa36 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line3_1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003412:	22ff      	movs	r2, #255	; 0xff
 8003414:	4611      	mov	r1, r2
 8003416:	4610      	mov	r0, r2
 8003418:	f7ff fada 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800341c:	4601      	mov	r1, r0
 800341e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8003420:	f7ff fab8 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line3_1.setPainter(line3_1Painter);
 8003424:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8003426:	ee1d 0a10 	vmov	r0, s26
 800342a:	f00a f82b 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line3_1.setStart(5, 20);
 800342e:	ee1d 0a10 	vmov	r0, s26
 8003432:	2214      	movs	r2, #20
 8003434:	2105      	movs	r1, #5
 8003436:	f7ff faed 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line3_1.setEnd(215, 20);
 800343a:	2214      	movs	r2, #20
 800343c:	ee1d 0a10 	vmov	r0, s26
 8003440:	21d7      	movs	r1, #215	; 0xd7
 8003442:	f7ff faeb 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line3_1.setLineWidth(4);
 8003446:	ee1d 0a10 	vmov	r0, s26
 800344a:	4641      	mov	r1, r8
 800344c:	f7ff faea 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line3_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003450:	ee1d 0a10 	vmov	r0, s26
 8003454:	2101      	movs	r1, #1
 8003456:	f00a faf7 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container2.add(line3_1);
 800345a:	ee1d 1a10 	vmov	r1, s26
 800345e:	4648      	mov	r0, r9
 8003460:	f008 fa74 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle1.setPosition(136, 314, 86, 104);
 8003464:	2368      	movs	r3, #104	; 0x68
 8003466:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003468:	9300      	str	r3, [sp, #0]
 800346a:	f44f 729d 	mov.w	r2, #314	; 0x13a
 800346e:	2356      	movs	r3, #86	; 0x56
 8003470:	2188      	movs	r1, #136	; 0x88
 8003472:	f7ff fa04 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setCenter(const T x, const T y)
    {
        this->circleCenterX = CWRUtil::toQ5(x);
 8003476:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 800347a:	f8c4 3954 	str.w	r3, [r4, #2388]	; 0x954
        this->circleCenterY = CWRUtil::toQ5(y);
 800347e:	f8c4 3958 	str.w	r3, [r4, #2392]	; 0x958
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
 8003482:	2340      	movs	r3, #64	; 0x40
 8003484:	f8c4 395c 	str.w	r3, [r4, #2396]	; 0x95c
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
 8003488:	f06f 031f 	mvn.w	r3, #31
    circle1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800348c:	22ff      	movs	r2, #255	; 0xff
 800348e:	f8c4 3968 	str.w	r3, [r4, #2408]	; 0x968
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003492:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8003496:	f8c4 3964 	str.w	r3, [r4, #2404]	; 0x964
 800349a:	4611      	mov	r1, r2
 800349c:	4610      	mov	r0, r2
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800349e:	f8c4 5960 	str.w	r5, [r4, #2400]	; 0x960
 80034a2:	f7ff fa95 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80034a6:	4601      	mov	r1, r0
 80034a8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80034aa:	f7ff fa73 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    circle1.setPainter(circle1Painter);
 80034ae:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80034b0:	9818      	ldr	r0, [sp, #96]	; 0x60
 80034b2:	f009 ffe7 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    container2.add(circle1);
 80034b6:	9918      	ldr	r1, [sp, #96]	; 0x60
 80034b8:	4648      	mov	r0, r9
 80034ba:	f008 fa47 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_LV.setXY(17, 286);
 80034be:	9809      	ldr	r0, [sp, #36]	; 0x24
 80034c0:	f44f 728f 	mov.w	r2, #286	; 0x11e
 80034c4:	2111      	movs	r1, #17
 80034c6:	f7ff f9cd 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    voltage_LV.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80034ca:	22ff      	movs	r2, #255	; 0xff
 80034cc:	4611      	mov	r1, r2
 80034ce:	4610      	mov	r0, r2
 80034d0:	f7ff fa7e 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80034d4:	4ad0      	ldr	r2, [pc, #832]	; (8003818 <_ZN15Screen1ViewBaseC1Ev+0xdd4>)
        this->color = color;
 80034d6:	f8c4 09bc 	str.w	r0, [r4, #2492]	; 0x9bc
 80034da:	6813      	ldr	r3, [r2, #0]
        linespace = space;
 80034dc:	f8a4 59c0 	strh.w	r5, [r4, #2496]	; 0x9c0
    Unicode::snprintf(voltage_LVBuffer, VOLTAGE_LV_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID10).getText());
 80034e0:	f504 56a1 	add.w	r6, r4, #5152	; 0x1420
 80034e4:	3608      	adds	r6, #8
 80034e6:	2b00      	cmp	r3, #0
 80034e8:	f43f ad12 	beq.w	8002f10 <_ZN15Screen1ViewBaseC1Ev+0x4cc>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80034ec:	49cb      	ldr	r1, [pc, #812]	; (800381c <_ZN15Screen1ViewBaseC1Ev+0xdd8>)
 80034ee:	880b      	ldrh	r3, [r1, #0]
 80034f0:	2b06      	cmp	r3, #6
 80034f2:	f67f ad17 	bls.w	8002f24 <_ZN15Screen1ViewBaseC1Ev+0x4e0>
        return texts->getText(typedTextId);
 80034f6:	48ca      	ldr	r0, [pc, #808]	; (8003820 <_ZN15Screen1ViewBaseC1Ev+0xddc>)
 80034f8:	2106      	movs	r1, #6
 80034fa:	6800      	ldr	r0, [r0, #0]
 80034fc:	f000 ff4e 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 8003500:	4ac8      	ldr	r2, [pc, #800]	; (8003824 <_ZN15Screen1ViewBaseC1Ev+0xde0>)
 8003502:	4603      	mov	r3, r0
 8003504:	210a      	movs	r1, #10
 8003506:	4630      	mov	r0, r6
 8003508:	f00f fe22 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    voltage_LV.resizeToCurrentText();
 800350c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800350e:	f8c4 69c8 	str.w	r6, [r4, #2504]	; 0x9c8
 8003512:	f00a fd03 	bl	800df1c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    voltage_LV.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
 8003516:	ae30      	add	r6, sp, #192	; 0xc0
        : typedTextId(id)
 8003518:	4bc3      	ldr	r3, [pc, #780]	; (8003828 <_ZN15Screen1ViewBaseC1Ev+0xde4>)
 800351a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800351c:	9330      	str	r3, [sp, #192]	; 0xc0
 800351e:	4631      	mov	r1, r6
 8003520:	2305      	movs	r3, #5
 8003522:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
 8003526:	f00a fd16 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container2.add(voltage_LV);
 800352a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800352c:	4648      	mov	r0, r9
 800352e:	f008 fa0d 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_LV.setXY(18, 345);
 8003532:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003534:	f240 1259 	movw	r2, #345	; 0x159
 8003538:	2112      	movs	r1, #18
 800353a:	f7ff f993 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    temp_LV.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800353e:	22ff      	movs	r2, #255	; 0xff
 8003540:	4611      	mov	r1, r2
 8003542:	4610      	mov	r0, r2
 8003544:	f7ff fa44 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003548:	4ab3      	ldr	r2, [pc, #716]	; (8003818 <_ZN15Screen1ViewBaseC1Ev+0xdd4>)
        this->color = color;
 800354a:	f8c4 09fc 	str.w	r0, [r4, #2556]	; 0x9fc
 800354e:	6813      	ldr	r3, [r2, #0]
        linespace = space;
 8003550:	f8a4 5a00 	strh.w	r5, [r4, #2560]	; 0xa00
    Unicode::snprintf(temp_LVBuffer, TEMP_LV_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID20).getText());
 8003554:	f504 56a1 	add.w	r6, r4, #5152	; 0x1420
 8003558:	361c      	adds	r6, #28
 800355a:	2b00      	cmp	r3, #0
 800355c:	f43f acd8 	beq.w	8002f10 <_ZN15Screen1ViewBaseC1Ev+0x4cc>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003560:	49ae      	ldr	r1, [pc, #696]	; (800381c <_ZN15Screen1ViewBaseC1Ev+0xdd8>)
 8003562:	880b      	ldrh	r3, [r1, #0]
 8003564:	2b08      	cmp	r3, #8
 8003566:	f67f acdd 	bls.w	8002f24 <_ZN15Screen1ViewBaseC1Ev+0x4e0>
        return texts->getText(typedTextId);
 800356a:	48ad      	ldr	r0, [pc, #692]	; (8003820 <_ZN15Screen1ViewBaseC1Ev+0xddc>)
 800356c:	2108      	movs	r1, #8
 800356e:	6800      	ldr	r0, [r0, #0]
 8003570:	f000 ff14 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 8003574:	4aab      	ldr	r2, [pc, #684]	; (8003824 <_ZN15Screen1ViewBaseC1Ev+0xde0>)
 8003576:	4603      	mov	r3, r0
 8003578:	210a      	movs	r1, #10
 800357a:	4630      	mov	r0, r6
 800357c:	f00f fde8 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    temp_LV.resizeToCurrentText();
 8003580:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003582:	f8c4 6a08 	str.w	r6, [r4, #2568]	; 0xa08
 8003586:	f00a fcc9 	bl	800df1c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    temp_LV.setTypedText(touchgfx::TypedText(T_SINGLEUSEID19));
 800358a:	ae30      	add	r6, sp, #192	; 0xc0
        : typedTextId(id)
 800358c:	4ba6      	ldr	r3, [pc, #664]	; (8003828 <_ZN15Screen1ViewBaseC1Ev+0xde4>)
 800358e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003590:	9330      	str	r3, [sp, #192]	; 0xc0
 8003592:	4631      	mov	r1, r6
 8003594:	2307      	movs	r3, #7
 8003596:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
 800359a:	f00a fcdc 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container2.add(temp_LV);
 800359e:	990a      	ldr	r1, [sp, #40]	; 0x28
 80035a0:	4648      	mov	r0, r9
 80035a2:	f008 f9d3 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_HV.setXY(17, 59);
 80035a6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80035a8:	223b      	movs	r2, #59	; 0x3b
 80035aa:	2111      	movs	r1, #17
 80035ac:	f7ff f95a 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    voltage_HV.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80035b0:	22ff      	movs	r2, #255	; 0xff
 80035b2:	4611      	mov	r1, r2
 80035b4:	4610      	mov	r0, r2
 80035b6:	f7ff fa0b 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80035ba:	4a97      	ldr	r2, [pc, #604]	; (8003818 <_ZN15Screen1ViewBaseC1Ev+0xdd4>)
        this->color = color;
 80035bc:	f8c4 0a3c 	str.w	r0, [r4, #2620]	; 0xa3c
 80035c0:	6813      	ldr	r3, [r2, #0]
        linespace = space;
 80035c2:	f8a4 5a40 	strh.w	r5, [r4, #2624]	; 0xa40
    Unicode::snprintf(voltage_HVBuffer, VOLTAGE_HV_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID22).getText());
 80035c6:	f504 56a2 	add.w	r6, r4, #5184	; 0x1440
 80035ca:	3610      	adds	r6, #16
 80035cc:	2b00      	cmp	r3, #0
 80035ce:	f43f ac9f 	beq.w	8002f10 <_ZN15Screen1ViewBaseC1Ev+0x4cc>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80035d2:	4992      	ldr	r1, [pc, #584]	; (800381c <_ZN15Screen1ViewBaseC1Ev+0xdd8>)
 80035d4:	880b      	ldrh	r3, [r1, #0]
 80035d6:	2b0a      	cmp	r3, #10
 80035d8:	f67f aca4 	bls.w	8002f24 <_ZN15Screen1ViewBaseC1Ev+0x4e0>
        return texts->getText(typedTextId);
 80035dc:	4890      	ldr	r0, [pc, #576]	; (8003820 <_ZN15Screen1ViewBaseC1Ev+0xddc>)
 80035de:	210a      	movs	r1, #10
 80035e0:	6800      	ldr	r0, [r0, #0]
 80035e2:	f000 fedb 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 80035e6:	4a8f      	ldr	r2, [pc, #572]	; (8003824 <_ZN15Screen1ViewBaseC1Ev+0xde0>)
 80035e8:	4603      	mov	r3, r0
 80035ea:	210a      	movs	r1, #10
 80035ec:	4630      	mov	r0, r6
 80035ee:	f00f fdaf 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    voltage_HV.resizeToCurrentText();
 80035f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80035f4:	f8c4 6a48 	str.w	r6, [r4, #2632]	; 0xa48
 80035f8:	f00a fc90 	bl	800df1c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80035fc:	4b8a      	ldr	r3, [pc, #552]	; (8003828 <_ZN15Screen1ViewBaseC1Ev+0xde4>)
 80035fe:	9330      	str	r3, [sp, #192]	; 0xc0
 8003600:	2309      	movs	r3, #9
 8003602:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
    voltage_HV.setTypedText(touchgfx::TypedText(T_SINGLEUSEID21));
 8003606:	ab30      	add	r3, sp, #192	; 0xc0
 8003608:	4619      	mov	r1, r3
 800360a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800360c:	f00a fca3 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container2.add(voltage_HV);
 8003610:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003612:	4648      	mov	r0, r9
 8003614:	f008 f99a 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    temp_HV.setXY(18, 113);
 8003618:	980c      	ldr	r0, [sp, #48]	; 0x30
 800361a:	2271      	movs	r2, #113	; 0x71
 800361c:	2112      	movs	r1, #18
 800361e:	f7ff f921 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    temp_HV.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003622:	22ff      	movs	r2, #255	; 0xff
 8003624:	4611      	mov	r1, r2
 8003626:	4610      	mov	r0, r2
 8003628:	f7ff f9d2 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800362c:	4a7a      	ldr	r2, [pc, #488]	; (8003818 <_ZN15Screen1ViewBaseC1Ev+0xdd4>)
        this->color = color;
 800362e:	f8c4 0a7c 	str.w	r0, [r4, #2684]	; 0xa7c
 8003632:	6813      	ldr	r3, [r2, #0]
 8003634:	487a      	ldr	r0, [pc, #488]	; (8003820 <_ZN15Screen1ViewBaseC1Ev+0xddc>)
        linespace = space;
 8003636:	f8a4 5a80 	strh.w	r5, [r4, #2688]	; 0xa80
    Unicode::snprintf(temp_HVBuffer, TEMP_HV_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID24).getText());
 800363a:	f504 55a3 	add.w	r5, r4, #5216	; 0x1460
 800363e:	4445      	add	r5, r8
 8003640:	9009      	str	r0, [sp, #36]	; 0x24
 8003642:	2b00      	cmp	r3, #0
 8003644:	f43f ac64 	beq.w	8002f10 <_ZN15Screen1ViewBaseC1Ev+0x4cc>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003648:	4974      	ldr	r1, [pc, #464]	; (800381c <_ZN15Screen1ViewBaseC1Ev+0xdd8>)
 800364a:	880b      	ldrh	r3, [r1, #0]
 800364c:	2b0c      	cmp	r3, #12
 800364e:	f67f ac69 	bls.w	8002f24 <_ZN15Screen1ViewBaseC1Ev+0x4e0>
        return texts->getText(typedTextId);
 8003652:	210c      	movs	r1, #12
 8003654:	6800      	ldr	r0, [r0, #0]
        : typedTextId(id)
 8003656:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 8003828 <_ZN15Screen1ViewBaseC1Ev+0xde4>
        return texts->getText(typedTextId);
 800365a:	f000 fe9f 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 800365e:	4a71      	ldr	r2, [pc, #452]	; (8003824 <_ZN15Screen1ViewBaseC1Ev+0xde0>)
 8003660:	4603      	mov	r3, r0
 8003662:	210a      	movs	r1, #10
 8003664:	4628      	mov	r0, r5
 8003666:	f00f fd73 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    temp_HV.resizeToCurrentText();
 800366a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800366c:	f8c4 5a88 	str.w	r5, [r4, #2696]	; 0xa88
 8003670:	f00a fc54 	bl	800df1c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003674:	230b      	movs	r3, #11
 8003676:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
    temp_HV.setTypedText(touchgfx::TypedText(T_SINGLEUSEID23));
 800367a:	ab30      	add	r3, sp, #192	; 0xc0
 800367c:	4619      	mov	r1, r3
 800367e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003680:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
 8003684:	f00a fc67 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container2.add(temp_HV);
 8003688:	990c      	ldr	r1, [sp, #48]	; 0x30
 800368a:	4648      	mov	r0, r9
 800368c:	f008 f95e 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle1_1.setPosition(138, 81, 92, 61);
 8003690:	233d      	movs	r3, #61	; 0x3d
 8003692:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003694:	9300      	str	r3, [sp, #0]
 8003696:	2251      	movs	r2, #81	; 0x51
 8003698:	235c      	movs	r3, #92	; 0x5c
 800369a:	218a      	movs	r1, #138	; 0x8a
 800369c:	f7ff f8ef 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 80036a0:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 80036a4:	f8c4 3abc 	str.w	r3, [r4, #2748]	; 0xabc
        this->circleCenterY = CWRUtil::toQ5(y);
 80036a8:	f8c4 3ac0 	str.w	r3, [r4, #2752]	; 0xac0
        this->circleRadius = CWRUtil::toQ5(r);
 80036ac:	2340      	movs	r3, #64	; 0x40
 80036ae:	f8c4 3ac4 	str.w	r3, [r4, #2756]	; 0xac4
        this->circleLineWidth = CWRUtil::toQ5(width);
 80036b2:	f06f 031f 	mvn.w	r3, #31
    circle1_1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80036b6:	22ff      	movs	r2, #255	; 0xff
 80036b8:	f8c4 3ad0 	str.w	r3, [r4, #2768]	; 0xad0
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80036bc:	2500      	movs	r5, #0
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 80036be:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80036c2:	f8c4 3acc 	str.w	r3, [r4, #2764]	; 0xacc
 80036c6:	4611      	mov	r1, r2
 80036c8:	4610      	mov	r0, r2
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80036ca:	f8c4 5ac8 	str.w	r5, [r4, #2760]	; 0xac8
 80036ce:	f7ff f97f 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80036d2:	4601      	mov	r1, r0
 80036d4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80036d6:	f7ff f95d 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    circle1_1.setPainter(circle1_1Painter);
 80036da:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80036dc:	9819      	ldr	r0, [sp, #100]	; 0x64
 80036de:	f009 fed1 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    container2.add(circle1_1);
 80036e2:	9919      	ldr	r1, [sp, #100]	; 0x64
 80036e4:	4648      	mov	r0, r9
 80036e6:	f008 f931 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_HV_1.setXY(18, 172);
 80036ea:	980d      	ldr	r0, [sp, #52]	; 0x34
 80036ec:	22ac      	movs	r2, #172	; 0xac
 80036ee:	2112      	movs	r1, #18
 80036f0:	f7ff f8b8 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    voltage_HV_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80036f4:	22ff      	movs	r2, #255	; 0xff
 80036f6:	4611      	mov	r1, r2
 80036f8:	4610      	mov	r0, r2
 80036fa:	f7ff f969 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80036fe:	4a46      	ldr	r2, [pc, #280]	; (8003818 <_ZN15Screen1ViewBaseC1Ev+0xdd4>)
        this->color = color;
 8003700:	f8c4 0b24 	str.w	r0, [r4, #2852]	; 0xb24
 8003704:	6813      	ldr	r3, [r2, #0]
        linespace = space;
 8003706:	f8a4 5b28 	strh.w	r5, [r4, #2856]	; 0xb28
    Unicode::snprintf(voltage_HV_1Buffer, VOLTAGE_HV_1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID26).getText());
 800370a:	f504 56a3 	add.w	r6, r4, #5216	; 0x1460
 800370e:	3618      	adds	r6, #24
 8003710:	2b00      	cmp	r3, #0
 8003712:	f43f abfd 	beq.w	8002f10 <_ZN15Screen1ViewBaseC1Ev+0x4cc>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003716:	4941      	ldr	r1, [pc, #260]	; (800381c <_ZN15Screen1ViewBaseC1Ev+0xdd8>)
 8003718:	880b      	ldrh	r3, [r1, #0]
 800371a:	2b0e      	cmp	r3, #14
 800371c:	f67f ac02 	bls.w	8002f24 <_ZN15Screen1ViewBaseC1Ev+0x4e0>
        return texts->getText(typedTextId);
 8003720:	4b3f      	ldr	r3, [pc, #252]	; (8003820 <_ZN15Screen1ViewBaseC1Ev+0xddc>)
 8003722:	210e      	movs	r1, #14
 8003724:	6818      	ldr	r0, [r3, #0]
 8003726:	f000 fe39 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 800372a:	4a3e      	ldr	r2, [pc, #248]	; (8003824 <_ZN15Screen1ViewBaseC1Ev+0xde0>)
 800372c:	4603      	mov	r3, r0
 800372e:	210a      	movs	r1, #10
 8003730:	4630      	mov	r0, r6
 8003732:	f00f fd0d 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    voltage_HV_1.resizeToCurrentText();
 8003736:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003738:	f8c4 6b30 	str.w	r6, [r4, #2864]	; 0xb30
 800373c:	f00a fbee 	bl	800df1c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003740:	f04f 030d 	mov.w	r3, #13
 8003744:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
    voltage_HV_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID25));
 8003748:	ab30      	add	r3, sp, #192	; 0xc0
 800374a:	4619      	mov	r1, r3
 800374c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800374e:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
 8003752:	f00a fc00 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container2.add(voltage_HV_1);
 8003756:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003758:	4648      	mov	r0, r9
 800375a:	f008 f8f7 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    voltage_HV_1_1.setXY(18, 405);
 800375e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003760:	f240 1295 	movw	r2, #405	; 0x195
 8003764:	2112      	movs	r1, #18
 8003766:	f7ff f87d 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    voltage_HV_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800376a:	22ff      	movs	r2, #255	; 0xff
 800376c:	4611      	mov	r1, r2
 800376e:	4610      	mov	r0, r2
 8003770:	f7ff f92e 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003774:	4a28      	ldr	r2, [pc, #160]	; (8003818 <_ZN15Screen1ViewBaseC1Ev+0xdd4>)
        this->color = color;
 8003776:	f8c4 0b64 	str.w	r0, [r4, #2916]	; 0xb64
 800377a:	6813      	ldr	r3, [r2, #0]
        linespace = space;
 800377c:	f8a4 5b68 	strh.w	r5, [r4, #2920]	; 0xb68
    Unicode::snprintf(voltage_HV_1_1Buffer, VOLTAGE_HV_1_1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID28).getText());
 8003780:	f504 56a4 	add.w	r6, r4, #5248	; 0x1480
 8003784:	360c      	adds	r6, #12
 8003786:	2b00      	cmp	r3, #0
 8003788:	f43f abc2 	beq.w	8002f10 <_ZN15Screen1ViewBaseC1Ev+0x4cc>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800378c:	4923      	ldr	r1, [pc, #140]	; (800381c <_ZN15Screen1ViewBaseC1Ev+0xdd8>)
 800378e:	880b      	ldrh	r3, [r1, #0]
 8003790:	2b10      	cmp	r3, #16
 8003792:	f67f abc7 	bls.w	8002f24 <_ZN15Screen1ViewBaseC1Ev+0x4e0>
        return texts->getText(typedTextId);
 8003796:	4b22      	ldr	r3, [pc, #136]	; (8003820 <_ZN15Screen1ViewBaseC1Ev+0xddc>)
 8003798:	2110      	movs	r1, #16
 800379a:	6818      	ldr	r0, [r3, #0]
 800379c:	f000 fdfe 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 80037a0:	4a20      	ldr	r2, [pc, #128]	; (8003824 <_ZN15Screen1ViewBaseC1Ev+0xde0>)
 80037a2:	4603      	mov	r3, r0
 80037a4:	210a      	movs	r1, #10
 80037a6:	4630      	mov	r0, r6
 80037a8:	f00f fcd2 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    voltage_HV_1_1.resizeToCurrentText();
 80037ac:	980e      	ldr	r0, [sp, #56]	; 0x38
 80037ae:	f8c4 6b70 	str.w	r6, [r4, #2928]	; 0xb70
 80037b2:	f00a fbb3 	bl	800df1c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80037b6:	230f      	movs	r3, #15
    voltage_HV_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID27));
 80037b8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80037ba:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
 80037be:	a930      	add	r1, sp, #192	; 0xc0
 80037c0:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
 80037c4:	f00a fbc7 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container2.add(voltage_HV_1_1);
 80037c8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80037ca:	4648      	mov	r0, r9
 80037cc:	f008 f8be 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    soc_lv.setProgressIndicatorPosition(0, 0, 54, 54);
 80037d0:	2636      	movs	r6, #54	; 0x36
    soc_lv.setXY(157, 393);
 80037d2:	4638      	mov	r0, r7
 80037d4:	f240 1289 	movw	r2, #393	; 0x189
 80037d8:	219d      	movs	r1, #157	; 0x9d
 80037da:	f7ff f843 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    soc_lv.setProgressIndicatorPosition(0, 0, 54, 54);
 80037de:	9600      	str	r6, [sp, #0]
 80037e0:	4633      	mov	r3, r6
 80037e2:	462a      	mov	r2, r5
 80037e4:	4629      	mov	r1, r5
 80037e6:	4638      	mov	r0, r7
 80037e8:	f007 fba8 	bl	800af3c <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>
    soc_lv.setRange(0, 100);
 80037ec:	462b      	mov	r3, r5
 80037ee:	4629      	mov	r1, r5
 80037f0:	4638      	mov	r0, r7
 80037f2:	9500      	str	r5, [sp, #0]
 80037f4:	2264      	movs	r2, #100	; 0x64
 80037f6:	f007 fcfb 	bl	800b1f0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    soc_lv.setCenter(27, 27);
 80037fa:	221b      	movs	r2, #27
 80037fc:	4611      	mov	r1, r2
 80037fe:	4638      	mov	r0, r7
 8003800:	f007 fb52 	bl	800aea8 <_ZN8touchgfx14CircleProgress9setCenterEii>
    soc_lv.setRadius(20);
 8003804:	4638      	mov	r0, r7
 8003806:	2114      	movs	r1, #20
 8003808:	f007 fb62 	bl	800aed0 <_ZN8touchgfx14CircleProgress9setRadiusEi>
    soc_lv.setLineWidth(10);
 800380c:	4638      	mov	r0, r7
 800380e:	210a      	movs	r1, #10
 8003810:	f007 fb68 	bl	800aee4 <_ZN8touchgfx14CircleProgress12setLineWidthEi>
 8003814:	e00a      	b.n	800382c <_ZN15Screen1ViewBaseC1Ev+0xde8>
 8003816:	bf00      	nop
 8003818:	2000e450 	.word	0x2000e450
 800381c:	2000e454 	.word	0x2000e454
 8003820:	2000e45c 	.word	0x2000e45c
 8003824:	080240b4 	.word	0x080240b4
 8003828:	080238d0 	.word	0x080238d0
    soc_lv.setStartEndAngle(0, 360);
 800382c:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8003830:	4629      	mov	r1, r5
 8003832:	4638      	mov	r0, r7
 8003834:	f007 fbcc 	bl	800afd0 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
    soc_lv.setCapPrecision(180);
 8003838:	4638      	mov	r0, r7
 800383a:	21b4      	movs	r1, #180	; 0xb4
 800383c:	f007 fb70 	bl	800af20 <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>
 8003840:	f04f 0302 	mov.w	r3, #2
    soc_lv.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_SMALL_CIRCLE_INDICATOR_BG_LINE_FULL_ID));
 8003844:	a930      	add	r1, sp, #192	; 0xc0
 8003846:	4638      	mov	r0, r7
 8003848:	f8ad 30c0 	strh.w	r3, [sp, #192]	; 0xc0
 800384c:	f007 fd78 	bl	800b340 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    soc_lvPainter.setColor(touchgfx::Color::getColorFrom24BitRGB(17, 80, 29));
 8003850:	221d      	movs	r2, #29
 8003852:	2150      	movs	r1, #80	; 0x50
 8003854:	2011      	movs	r0, #17
 8003856:	f7ff f8bb 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800385a:	4601      	mov	r1, r0
 800385c:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800385e:	f7ff f899 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    soc_lv.setPainter(soc_lvPainter);
 8003862:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8003864:	4638      	mov	r0, r7
 8003866:	f007 fb58 	bl	800af1a <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>
    soc_lv.setValue(60);
 800386a:	4638      	mov	r0, r7
 800386c:	213c      	movs	r1, #60	; 0x3c
 800386e:	f007 fb92 	bl	800af96 <_ZN8touchgfx14CircleProgress8setValueEi>
    container2.add(soc_lv);
 8003872:	4639      	mov	r1, r7
 8003874:	4648      	mov	r0, r9
 8003876:	f008 f869 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    soc_hv.setXY(157, 160);
 800387a:	4650      	mov	r0, sl
 800387c:	22a0      	movs	r2, #160	; 0xa0
 800387e:	219d      	movs	r1, #157	; 0x9d
 8003880:	f7fe fff0 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    soc_hv.setProgressIndicatorPosition(0, 0, 54, 54);
 8003884:	9600      	str	r6, [sp, #0]
 8003886:	4633      	mov	r3, r6
 8003888:	462a      	mov	r2, r5
 800388a:	4629      	mov	r1, r5
 800388c:	4650      	mov	r0, sl
 800388e:	f007 fb55 	bl	800af3c <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>
    soc_hv.setRange(0, 100);
 8003892:	462b      	mov	r3, r5
 8003894:	4629      	mov	r1, r5
 8003896:	4650      	mov	r0, sl
 8003898:	9500      	str	r5, [sp, #0]
 800389a:	2264      	movs	r2, #100	; 0x64
 800389c:	f007 fca8 	bl	800b1f0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    soc_hv.setCenter(27, 27);
 80038a0:	221b      	movs	r2, #27
 80038a2:	4611      	mov	r1, r2
 80038a4:	4650      	mov	r0, sl
 80038a6:	f007 faff 	bl	800aea8 <_ZN8touchgfx14CircleProgress9setCenterEii>
    soc_hv.setRadius(20);
 80038aa:	4650      	mov	r0, sl
 80038ac:	2114      	movs	r1, #20
 80038ae:	f007 fb0f 	bl	800aed0 <_ZN8touchgfx14CircleProgress9setRadiusEi>
    soc_hv.setLineWidth(10);
 80038b2:	4650      	mov	r0, sl
 80038b4:	210a      	movs	r1, #10
 80038b6:	f007 fb15 	bl	800aee4 <_ZN8touchgfx14CircleProgress12setLineWidthEi>
    soc_hv.setStartEndAngle(0, 360);
 80038ba:	f44f 72b4 	mov.w	r2, #360	; 0x168
 80038be:	4629      	mov	r1, r5
 80038c0:	4650      	mov	r0, sl
 80038c2:	f007 fb85 	bl	800afd0 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
    soc_hv.setCapPrecision(180);
 80038c6:	4650      	mov	r0, sl
 80038c8:	21b4      	movs	r1, #180	; 0xb4
 80038ca:	f007 fb29 	bl	800af20 <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>
 80038ce:	f04f 0302 	mov.w	r3, #2
    soc_hv.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_SMALL_CIRCLE_INDICATOR_BG_LINE_FULL_ID));
 80038d2:	a930      	add	r1, sp, #192	; 0xc0
 80038d4:	4650      	mov	r0, sl
 80038d6:	f8ad 30c0 	strh.w	r3, [sp, #192]	; 0xc0
 80038da:	f007 fd31 	bl	800b340 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    soc_hvPainter.setColor(touchgfx::Color::getColorFrom24BitRGB(17, 80, 29));
 80038de:	221d      	movs	r2, #29
 80038e0:	2150      	movs	r1, #80	; 0x50
 80038e2:	2011      	movs	r0, #17
 80038e4:	f7ff f874 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80038e8:	4601      	mov	r1, r0
 80038ea:	982b      	ldr	r0, [sp, #172]	; 0xac
 80038ec:	f7ff f852 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    soc_hv.setPainter(soc_hvPainter);
 80038f0:	992b      	ldr	r1, [sp, #172]	; 0xac
 80038f2:	4650      	mov	r0, sl
 80038f4:	f007 fb11 	bl	800af1a <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>
    soc_hv.setValue(60);
 80038f8:	4650      	mov	r0, sl
 80038fa:	213c      	movs	r1, #60	; 0x3c
 80038fc:	f007 fb4b 	bl	800af96 <_ZN8touchgfx14CircleProgress8setValueEi>
    container2.add(soc_hv);
 8003900:	4651      	mov	r1, sl
 8003902:	4648      	mov	r0, r9
 8003904:	f008 f822 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    container3.setPosition(20, 105, 241, 271);
 8003908:	f240 130f 	movw	r3, #271	; 0x10f
 800390c:	9300      	str	r3, [sp, #0]
 800390e:	4658      	mov	r0, fp
 8003910:	23f1      	movs	r3, #241	; 0xf1
 8003912:	2269      	movs	r2, #105	; 0x69
 8003914:	2114      	movs	r1, #20
 8003916:	f7fe ffb2 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea3_2.setXY(46, 30);
 800391a:	981a      	ldr	r0, [sp, #104]	; 0x68
 800391c:	221e      	movs	r2, #30
 800391e:	212e      	movs	r1, #46	; 0x2e
 8003920:	f7fe ffa0 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    textArea3_2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003924:	22ff      	movs	r2, #255	; 0xff
 8003926:	4611      	mov	r1, r2
 8003928:	4610      	mov	r0, r2
 800392a:	f7ff f851 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800392e:	2311      	movs	r3, #17
        this->color = color;
 8003930:	f8c4 0e08 	str.w	r0, [r4, #3592]	; 0xe08
    textArea3_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID29));
 8003934:	a930      	add	r1, sp, #192	; 0xc0
 8003936:	981a      	ldr	r0, [sp, #104]	; 0x68
        linespace = space;
 8003938:	f8a4 5e0c 	strh.w	r5, [r4, #3596]	; 0xe0c
 800393c:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
    line1_3.setPosition(0, -4, 113, 63);
 8003940:	263f      	movs	r6, #63	; 0x3f
 8003942:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
    textArea3_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID29));
 8003946:	f00a fb06 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container3.add(textArea3_2);
 800394a:	991a      	ldr	r1, [sp, #104]	; 0x68
 800394c:	4658      	mov	r0, fp
 800394e:	f007 fffd 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_3.setPosition(0, -4, 113, 63);
 8003952:	2371      	movs	r3, #113	; 0x71
 8003954:	ee1d 0a90 	vmov	r0, s27
 8003958:	9600      	str	r6, [sp, #0]
 800395a:	4629      	mov	r1, r5
 800395c:	f06f 0203 	mvn.w	r2, #3
 8003960:	f7fe ff8d 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line1_3Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003964:	22ff      	movs	r2, #255	; 0xff
 8003966:	4611      	mov	r1, r2
 8003968:	4610      	mov	r0, r2
 800396a:	f7ff f831 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800396e:	4601      	mov	r1, r0
 8003970:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8003972:	f7ff f80f 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line1_3.setPainter(line1_3Painter);
 8003976:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8003978:	ee1d 0a90 	vmov	r0, s27
 800397c:	f009 fd82 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1_3.setStart(13, 45);
 8003980:	ee1d 0a90 	vmov	r0, s27
 8003984:	222d      	movs	r2, #45	; 0x2d
 8003986:	210d      	movs	r1, #13
 8003988:	f7ff f844 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_3.setEnd(43, 45);
 800398c:	222d      	movs	r2, #45	; 0x2d
 800398e:	ee1d 0a90 	vmov	r0, s27
 8003992:	212b      	movs	r1, #43	; 0x2b
 8003994:	f7ff f842 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_3.setLineWidth(4);
 8003998:	ee1d 0a90 	vmov	r0, s27
 800399c:	2104      	movs	r1, #4
 800399e:	f7ff f841 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_3.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80039a2:	ee1d 0a90 	vmov	r0, s27
 80039a6:	2101      	movs	r1, #1
 80039a8:	f00a f84e 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container3.add(line1_3);
 80039ac:	ee1d 1a90 	vmov	r1, s27
 80039b0:	4658      	mov	r0, fp
 80039b2:	f007 ffcb 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_2.setPosition(130, -4, 121, 63);
 80039b6:	2379      	movs	r3, #121	; 0x79
 80039b8:	ee1e 0a10 	vmov	r0, s28
 80039bc:	9600      	str	r6, [sp, #0]
 80039be:	f06f 0203 	mvn.w	r2, #3
 80039c2:	2182      	movs	r1, #130	; 0x82
 80039c4:	f7fe ff5b 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line1_1_2Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80039c8:	22ff      	movs	r2, #255	; 0xff
 80039ca:	4611      	mov	r1, r2
 80039cc:	4610      	mov	r0, r2
 80039ce:	f7fe ffff 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80039d2:	4601      	mov	r1, r0
 80039d4:	982d      	ldr	r0, [sp, #180]	; 0xb4
 80039d6:	f7fe ffdd 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line1_1_2.setPainter(line1_1_2Painter);
 80039da:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80039dc:	ee1e 0a10 	vmov	r0, s28
 80039e0:	f009 fd50 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line1_1_2.setStart(75, 45);
 80039e4:	ee1e 0a10 	vmov	r0, s28
 80039e8:	222d      	movs	r2, #45	; 0x2d
 80039ea:	214b      	movs	r1, #75	; 0x4b
 80039ec:	f7ff f812 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_2.setEnd(94, 45);
 80039f0:	222d      	movs	r2, #45	; 0x2d
 80039f2:	ee1e 0a10 	vmov	r0, s28
 80039f6:	215e      	movs	r1, #94	; 0x5e
 80039f8:	f7ff f810 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_2.setLineWidth(4);
 80039fc:	ee1e 0a10 	vmov	r0, s28
 8003a00:	2104      	movs	r1, #4
 8003a02:	f7ff f80f 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003a06:	ee1e 0a10 	vmov	r0, s28
 8003a0a:	2101      	movs	r1, #1
 8003a0c:	f00a f81c 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container3.add(line1_1_2);
 8003a10:	ee1e 1a10 	vmov	r1, s28
 8003a14:	4658      	mov	r0, fp
 8003a16:	f007 ff99 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2_4.setPosition(8, 40, 19, 290);
 8003a1a:	f44f 7391 	mov.w	r3, #290	; 0x122
 8003a1e:	ee1e 0a90 	vmov	r0, s29
 8003a22:	9300      	str	r3, [sp, #0]
 8003a24:	2228      	movs	r2, #40	; 0x28
 8003a26:	2313      	movs	r3, #19
 8003a28:	2108      	movs	r1, #8
 8003a2a:	f7fe ff28 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line2_4Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003a2e:	22ff      	movs	r2, #255	; 0xff
 8003a30:	4611      	mov	r1, r2
 8003a32:	4610      	mov	r0, r2
 8003a34:	f7fe ffcc 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003a38:	4601      	mov	r1, r0
 8003a3a:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8003a3c:	f7fe ffaa 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line2_4.setPainter(line2_4Painter);
 8003a40:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8003a42:	ee1e 0a90 	vmov	r0, s29
 8003a46:	f009 fd1d 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line2_4.setStart(5, 0);
 8003a4a:	ee1e 0a90 	vmov	r0, s29
 8003a4e:	462a      	mov	r2, r5
 8003a50:	2105      	movs	r1, #5
 8003a52:	f7fe ffdf 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line2_4.setEnd(5, 220);
 8003a56:	22dc      	movs	r2, #220	; 0xdc
 8003a58:	ee1e 0a90 	vmov	r0, s29
 8003a5c:	2105      	movs	r1, #5
 8003a5e:	f7fe ffdd 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line2_4.setLineWidth(4);
 8003a62:	ee1e 0a90 	vmov	r0, s29
 8003a66:	2104      	movs	r1, #4
 8003a68:	f7fe ffdc 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2_4.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003a6c:	ee1e 0a90 	vmov	r0, s29
 8003a70:	2101      	movs	r1, #1
 8003a72:	f009 ffe9 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container3.add(line2_4);
 8003a76:	ee1e 1a90 	vmov	r1, s29
 8003a7a:	4658      	mov	r0, fp
 8003a7c:	f007 ff66 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2_4_1.setPosition(219, 39, 22, 232);
 8003a80:	23e8      	movs	r3, #232	; 0xe8
 8003a82:	ee1f 0a10 	vmov	r0, s30
 8003a86:	9300      	str	r3, [sp, #0]
 8003a88:	2227      	movs	r2, #39	; 0x27
 8003a8a:	2316      	movs	r3, #22
 8003a8c:	21db      	movs	r1, #219	; 0xdb
 8003a8e:	f7fe fef6 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line2_4_1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003a92:	22ff      	movs	r2, #255	; 0xff
 8003a94:	4611      	mov	r1, r2
 8003a96:	4610      	mov	r0, r2
 8003a98:	f7fe ff9a 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003a9c:	4601      	mov	r1, r0
 8003a9e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003aa0:	f7fe ff78 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line2_4_1.setPainter(line2_4_1Painter);
 8003aa4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003aa6:	ee1f 0a10 	vmov	r0, s30
 8003aaa:	f009 fceb 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line2_4_1.setStart(5, 4);
 8003aae:	ee1f 0a10 	vmov	r0, s30
 8003ab2:	2204      	movs	r2, #4
 8003ab4:	2105      	movs	r1, #5
 8003ab6:	f7fe ffad 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line2_4_1.setEnd(5, 220);
 8003aba:	22dc      	movs	r2, #220	; 0xdc
 8003abc:	ee1f 0a10 	vmov	r0, s30
 8003ac0:	2105      	movs	r1, #5
 8003ac2:	f7fe ffab 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line2_4_1.setLineWidth(4);
 8003ac6:	ee1f 0a10 	vmov	r0, s30
 8003aca:	2104      	movs	r1, #4
 8003acc:	f7fe ffaa 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line2_4_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003ad0:	ee1f 0a10 	vmov	r0, s30
 8003ad4:	2101      	movs	r1, #1
 8003ad6:	f009 ffb7 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container3.add(line2_4_1);
 8003ada:	ee1f 1a10 	vmov	r1, s30
 8003ade:	4658      	mov	r0, fp
 8003ae0:	f007 ff34 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line3_2.setPosition(8, 239, 221, 32);
 8003ae4:	2320      	movs	r3, #32
 8003ae6:	ee18 0a10 	vmov	r0, s16
 8003aea:	9300      	str	r3, [sp, #0]
 8003aec:	22ef      	movs	r2, #239	; 0xef
 8003aee:	23dd      	movs	r3, #221	; 0xdd
 8003af0:	2108      	movs	r1, #8
 8003af2:	f7fe fec4 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    line3_2Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003af6:	22ff      	movs	r2, #255	; 0xff
 8003af8:	4611      	mov	r1, r2
 8003afa:	4610      	mov	r0, r2
 8003afc:	f7fe ff68 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003b00:	4601      	mov	r1, r0
 8003b02:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003b04:	f7fe ff46 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    line3_2.setPainter(line3_2Painter);
 8003b08:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003b0a:	ee18 0a10 	vmov	r0, s16
 8003b0e:	f009 fcb9 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    line3_2.setStart(5, 20);
 8003b12:	ee18 0a10 	vmov	r0, s16
 8003b16:	2214      	movs	r2, #20
 8003b18:	2105      	movs	r1, #5
 8003b1a:	f7fe ff7b 	bl	8002a14 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line3_2.setEnd(215, 20);
 8003b1e:	2214      	movs	r2, #20
 8003b20:	ee18 0a10 	vmov	r0, s16
 8003b24:	21d7      	movs	r1, #215	; 0xd7
 8003b26:	f7fe ff79 	bl	8002a1c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line3_2.setLineWidth(4);
 8003b2a:	ee18 0a10 	vmov	r0, s16
 8003b2e:	2104      	movs	r1, #4
 8003b30:	f7fe ff78 	bl	8002a24 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line3_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003b34:	ee18 0a10 	vmov	r0, s16
 8003b38:	2101      	movs	r1, #1
 8003b3a:	f009 ff85 	bl	800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    container3.add(line3_2);
 8003b3e:	ee18 1a10 	vmov	r1, s16
 8003b42:	4658      	mov	r0, fp
 8003b44:	f007 ff02 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    system1.setXY(98, 82);
 8003b48:	ee1f 0a90 	vmov	r0, s31
 8003b4c:	2252      	movs	r2, #82	; 0x52
 8003b4e:	2162      	movs	r1, #98	; 0x62
 8003b50:	f7fe fe88 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    system1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003b54:	22ff      	movs	r2, #255	; 0xff
 8003b56:	4611      	mov	r1, r2
 8003b58:	4610      	mov	r0, r2
 8003b5a:	f7fe ff39 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        this->color = color;
 8003b5e:	f241 1314 	movw	r3, #4372	; 0x1114
    system1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID30));
 8003b62:	a930      	add	r1, sp, #192	; 0xc0
 8003b64:	50e0      	str	r0, [r4, r3]
        linespace = space;
 8003b66:	ee1f 3a90 	vmov	r3, s31
 8003b6a:	ee1f 0a90 	vmov	r0, s31
 8003b6e:	869d      	strh	r5, [r3, #52]	; 0x34
 8003b70:	2312      	movs	r3, #18
 8003b72:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
 8003b76:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
 8003b7a:	f00a f9ec 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container3.add(system1);
 8003b7e:	ee1f 1a90 	vmov	r1, s31
 8003b82:	4658      	mov	r0, fp
 8003b84:	f007 fee2 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    system1_1.setXY(100, 113);
 8003b88:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003b8a:	2271      	movs	r2, #113	; 0x71
 8003b8c:	2164      	movs	r1, #100	; 0x64
 8003b8e:	f7fe fe69 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    system1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003b92:	22ff      	movs	r2, #255	; 0xff
 8003b94:	4611      	mov	r1, r2
 8003b96:	4610      	mov	r0, r2
 8003b98:	f7fe ff1a 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        this->color = color;
 8003b9c:	f241 1350 	movw	r3, #4432	; 0x1150
    system1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID31));
 8003ba0:	a930      	add	r1, sp, #192	; 0xc0
 8003ba2:	50e0      	str	r0, [r4, r3]
        linespace = space;
 8003ba4:	f504 5389 	add.w	r3, r4, #4384	; 0x1120
 8003ba8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003baa:	869d      	strh	r5, [r3, #52]	; 0x34
 8003bac:	2313      	movs	r3, #19
 8003bae:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
 8003bb2:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
 8003bb6:	f00a f9ce 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container3.add(system1_1);
 8003bba:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003bbc:	4658      	mov	r0, fp
 8003bbe:	f007 fec5 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    system1_2.setXY(100, 146);
 8003bc2:	9802      	ldr	r0, [sp, #8]
 8003bc4:	2292      	movs	r2, #146	; 0x92
 8003bc6:	2164      	movs	r1, #100	; 0x64
 8003bc8:	f7fe fe4c 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    system1_2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003bcc:	22ff      	movs	r2, #255	; 0xff
 8003bce:	4611      	mov	r1, r2
 8003bd0:	4610      	mov	r0, r2
 8003bd2:	f7fe fefd 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        this->color = color;
 8003bd6:	f241 138c 	movw	r3, #4492	; 0x118c
    system1_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID32));
 8003bda:	a930      	add	r1, sp, #192	; 0xc0
 8003bdc:	50e0      	str	r0, [r4, r3]
        linespace = space;
 8003bde:	9b02      	ldr	r3, [sp, #8]
 8003be0:	9802      	ldr	r0, [sp, #8]
 8003be2:	869d      	strh	r5, [r3, #52]	; 0x34
 8003be4:	2314      	movs	r3, #20
 8003be6:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
 8003bea:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
 8003bee:	f00a f9b2 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container3.add(system1_2);
 8003bf2:	9902      	ldr	r1, [sp, #8]
 8003bf4:	4658      	mov	r0, fp
 8003bf6:	f007 fea9 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    system1_3.setXY(100, 178);
 8003bfa:	9803      	ldr	r0, [sp, #12]
 8003bfc:	22b2      	movs	r2, #178	; 0xb2
 8003bfe:	2164      	movs	r1, #100	; 0x64
 8003c00:	f7fe fe30 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
    system1_3.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003c04:	22ff      	movs	r2, #255	; 0xff
 8003c06:	4611      	mov	r1, r2
 8003c08:	4610      	mov	r0, r2
 8003c0a:	f7fe fee1 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        this->color = color;
 8003c0e:	f241 13c8 	movw	r3, #4552	; 0x11c8
 8003c12:	f04f 0a15 	mov.w	sl, #21
 8003c16:	50e0      	str	r0, [r4, r3]
        linespace = space;
 8003c18:	9b03      	ldr	r3, [sp, #12]
 8003c1a:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
 8003c1e:	869d      	strh	r5, [r3, #52]	; 0x34
    system1_3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID33));
 8003c20:	4618      	mov	r0, r3
 8003c22:	a930      	add	r1, sp, #192	; 0xc0
    circle5.setPosition(34, 58, 57, 55);
 8003c24:	2737      	movs	r7, #55	; 0x37
 8003c26:	f8ad a0c4 	strh.w	sl, [sp, #196]	; 0xc4
    system1_3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID33));
 8003c2a:	f00a f994 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container3.add(system1_3);
 8003c2e:	9903      	ldr	r1, [sp, #12]
 8003c30:	4658      	mov	r0, fp
 8003c32:	f007 fe8b 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5.setPosition(34, 58, 57, 55);
 8003c36:	9805      	ldr	r0, [sp, #20]
 8003c38:	9700      	str	r7, [sp, #0]
 8003c3a:	2339      	movs	r3, #57	; 0x39
 8003c3c:	223a      	movs	r2, #58	; 0x3a
 8003c3e:	2122      	movs	r1, #34	; 0x22
 8003c40:	f7fe fe1d 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8003c44:	f241 2304 	movw	r3, #4612	; 0x1204
 8003c48:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8003c4c:	50e2      	str	r2, [r4, r3]
        this->circleCenterY = CWRUtil::toQ5(y);
 8003c4e:	f241 2308 	movw	r3, #4616	; 0x1208
        this->circleRadius = CWRUtil::toQ5(r);
 8003c52:	f44f 76b0 	mov.w	r6, #352	; 0x160
        this->circleCenterY = CWRUtil::toQ5(y);
 8003c56:	50e2      	str	r2, [r4, r3]
        this->circleRadius = CWRUtil::toQ5(r);
 8003c58:	f241 230c 	movw	r3, #4620	; 0x120c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003c5c:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
        this->circleRadius = CWRUtil::toQ5(r);
 8003c60:	50e6      	str	r6, [r4, r3]
        this->circleLineWidth = CWRUtil::toQ5(width);
 8003c62:	f241 2318 	movw	r3, #4632	; 0x1218
    circle5Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(220, 0, 0));
 8003c66:	4629      	mov	r1, r5
 8003c68:	50e5      	str	r5, [r4, r3]
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8003c6a:	f241 2310 	movw	r3, #4624	; 0x1210
 8003c6e:	20dc      	movs	r0, #220	; 0xdc
 8003c70:	50e5      	str	r5, [r4, r3]
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003c72:	f241 2314 	movw	r3, #4628	; 0x1214
 8003c76:	50e2      	str	r2, [r4, r3]
 8003c78:	462a      	mov	r2, r5
 8003c7a:	f7fe fea9 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003c7e:	4601      	mov	r1, r0
 8003c80:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8003c82:	f7fe fe87 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    circle5.setPainter(circle5Painter);
 8003c86:	992f      	ldr	r1, [sp, #188]	; 0xbc
 8003c88:	9805      	ldr	r0, [sp, #20]
 8003c8a:	f009 fbfb 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    container3.add(circle5);
 8003c8e:	9905      	ldr	r1, [sp, #20]
 8003c90:	4658      	mov	r0, fp
 8003c92:	f007 fe5b 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1.setPosition(34, 89, 57, 55);
 8003c96:	9806      	ldr	r0, [sp, #24]
 8003c98:	9700      	str	r7, [sp, #0]
 8003c9a:	2339      	movs	r3, #57	; 0x39
 8003c9c:	2259      	movs	r2, #89	; 0x59
 8003c9e:	2122      	movs	r1, #34	; 0x22
 8003ca0:	f7fe fded 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8003ca4:	f241 236c 	movw	r3, #4716	; 0x126c
 8003ca8:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8003cac:	50e2      	str	r2, [r4, r3]
        this->circleCenterY = CWRUtil::toQ5(y);
 8003cae:	f241 2370 	movw	r3, #4720	; 0x1270
    circle5_1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(220, 0, 0));
 8003cb2:	4629      	mov	r1, r5
 8003cb4:	50e2      	str	r2, [r4, r3]
        this->circleRadius = CWRUtil::toQ5(r);
 8003cb6:	f241 2374 	movw	r3, #4724	; 0x1274
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003cba:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
        this->circleRadius = CWRUtil::toQ5(r);
 8003cbe:	50e6      	str	r6, [r4, r3]
        this->circleLineWidth = CWRUtil::toQ5(width);
 8003cc0:	f504 5394 	add.w	r3, r4, #4736	; 0x1280
 8003cc4:	20dc      	movs	r0, #220	; 0xdc
 8003cc6:	601d      	str	r5, [r3, #0]
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8003cc8:	f241 2378 	movw	r3, #4728	; 0x1278
 8003ccc:	50e5      	str	r5, [r4, r3]
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003cce:	f241 237c 	movw	r3, #4732	; 0x127c
 8003cd2:	50e2      	str	r2, [r4, r3]
 8003cd4:	462a      	mov	r2, r5
 8003cd6:	f7fe fe7b 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003cda:	4601      	mov	r1, r0
 8003cdc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003cde:	f7fe fe59 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    circle5_1.setPainter(circle5_1Painter);
 8003ce2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8003ce4:	9806      	ldr	r0, [sp, #24]
 8003ce6:	f009 fbcd 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    container3.add(circle5_1);
 8003cea:	9906      	ldr	r1, [sp, #24]
 8003cec:	4658      	mov	r0, fp
 8003cee:	f007 fe2d 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_2.setPosition(34, 122, 57, 55);
 8003cf2:	9807      	ldr	r0, [sp, #28]
 8003cf4:	9700      	str	r7, [sp, #0]
 8003cf6:	2339      	movs	r3, #57	; 0x39
 8003cf8:	227a      	movs	r2, #122	; 0x7a
 8003cfa:	2122      	movs	r1, #34	; 0x22
 8003cfc:	f7fe fdbf 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8003d00:	f241 23d4 	movw	r3, #4820	; 0x12d4
 8003d04:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8003d08:	50e2      	str	r2, [r4, r3]
        this->circleCenterY = CWRUtil::toQ5(y);
 8003d0a:	f241 23d8 	movw	r3, #4824	; 0x12d8
    circle5_2Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(220, 0, 0));
 8003d0e:	4629      	mov	r1, r5
 8003d10:	50e2      	str	r2, [r4, r3]
        this->circleRadius = CWRUtil::toQ5(r);
 8003d12:	f241 23dc 	movw	r3, #4828	; 0x12dc
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003d16:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
        this->circleRadius = CWRUtil::toQ5(r);
 8003d1a:	50e6      	str	r6, [r4, r3]
        this->circleLineWidth = CWRUtil::toQ5(width);
 8003d1c:	f241 23e8 	movw	r3, #4840	; 0x12e8
 8003d20:	20dc      	movs	r0, #220	; 0xdc
 8003d22:	50e5      	str	r5, [r4, r3]
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8003d24:	f504 5397 	add.w	r3, r4, #4832	; 0x12e0
 8003d28:	601d      	str	r5, [r3, #0]
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003d2a:	f241 23e4 	movw	r3, #4836	; 0x12e4
 8003d2e:	50e2      	str	r2, [r4, r3]
 8003d30:	462a      	mov	r2, r5
 8003d32:	f7fe fe4d 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003d36:	4601      	mov	r1, r0
 8003d38:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003d3a:	f7fe fe2b 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    circle5_2.setPainter(circle5_2Painter);
 8003d3e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8003d40:	9807      	ldr	r0, [sp, #28]
 8003d42:	f009 fb9f 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    container3.add(circle5_2);
 8003d46:	9907      	ldr	r1, [sp, #28]
 8003d48:	4658      	mov	r0, fp
 8003d4a:	f007 fdff 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_3.setPosition(34, 154, 57, 55);
 8003d4e:	9808      	ldr	r0, [sp, #32]
 8003d50:	9700      	str	r7, [sp, #0]
 8003d52:	2339      	movs	r3, #57	; 0x39
 8003d54:	229a      	movs	r2, #154	; 0x9a
 8003d56:	2122      	movs	r1, #34	; 0x22
 8003d58:	f7fe fd91 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8003d5c:	f241 333c 	movw	r3, #4924	; 0x133c
 8003d60:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8003d64:	50e2      	str	r2, [r4, r3]
        this->circleCenterY = CWRUtil::toQ5(y);
 8003d66:	f504 539a 	add.w	r3, r4, #4928	; 0x1340
    circle5_3Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(220, 0, 0));
 8003d6a:	4629      	mov	r1, r5
 8003d6c:	601a      	str	r2, [r3, #0]
        this->circleRadius = CWRUtil::toQ5(r);
 8003d6e:	f241 3344 	movw	r3, #4932	; 0x1344
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003d72:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
        this->circleRadius = CWRUtil::toQ5(r);
 8003d76:	50e6      	str	r6, [r4, r3]
        this->circleLineWidth = CWRUtil::toQ5(width);
 8003d78:	f241 3350 	movw	r3, #4944	; 0x1350
 8003d7c:	20dc      	movs	r0, #220	; 0xdc
 8003d7e:	50e5      	str	r5, [r4, r3]
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8003d80:	f241 3348 	movw	r3, #4936	; 0x1348
 8003d84:	50e5      	str	r5, [r4, r3]
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003d86:	f241 334c 	movw	r3, #4940	; 0x134c
 8003d8a:	50e2      	str	r2, [r4, r3]
 8003d8c:	462a      	mov	r2, r5
 8003d8e:	f7fe fe1f 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003d92:	4601      	mov	r1, r0
 8003d94:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8003d96:	f7fe fdfd 	bl	8002994 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    circle5_3.setPainter(circle5_3Painter);
 8003d9a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003d9c:	9808      	ldr	r0, [sp, #32]
 8003d9e:	f009 fb71 	bl	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    container3.add(circle5_3);
 8003da2:	9908      	ldr	r1, [sp, #32]
 8003da4:	4658      	mov	r0, fp
 8003da6:	f007 fdd1 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    digitalClock1.setPosition(12, 7, 50, 21);
 8003daa:	2332      	movs	r3, #50	; 0x32
 8003dac:	ee18 0a90 	vmov	r0, s17
 8003db0:	f8cd a000 	str.w	sl, [sp]
 8003db4:	2207      	movs	r2, #7
 8003db6:	210c      	movs	r1, #12
 8003db8:	f7fe fd61 	bl	800287e <_ZN8touchgfx8Drawable11setPositionEssss>
    digitalClock1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003dbc:	22ff      	movs	r2, #255	; 0xff
 8003dbe:	4611      	mov	r1, r2
 8003dc0:	4610      	mov	r0, r2
 8003dc2:	f7fe fe05 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003dc6:	4601      	mov	r1, r0
 8003dc8:	ee18 0a90 	vmov	r0, s17
 8003dcc:	f007 fb31 	bl	800b432 <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>
 8003dd0:	2316      	movs	r3, #22
    digitalClock1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID34));
 8003dd2:	ee18 0a90 	vmov	r0, s17
 8003dd6:	a930      	add	r1, sp, #192	; 0xc0
 8003dd8:	f8ad 30c4 	strh.w	r3, [sp, #196]	; 0xc4
 8003ddc:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
 8003de0:	f007 fb74 	bl	800b4cc <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>
    digitalClock1.displayLeadingZeroForHourIndicator(true);
 8003de4:	ee18 0a90 	vmov	r0, s17
 8003de8:	2101      	movs	r1, #1
 8003dea:	f007 fca7 	bl	800b73c <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>
     *
     * @see DisplayMode, getDisplayMode
     */
    virtual void setDisplayMode(DisplayMode dm)
    {
        displayMode = dm;
 8003dee:	ee18 2a90 	vmov	r2, s17
 8003df2:	2301      	movs	r3, #1
    digitalClock1.setTime24Hour(13, 51, 6);
 8003df4:	ee18 0a90 	vmov	r0, s17
 8003df8:	f882 302f 	strb.w	r3, [r2, #47]	; 0x2f
 8003dfc:	210d      	movs	r1, #13
 8003dfe:	2306      	movs	r3, #6
 8003e00:	2233      	movs	r2, #51	; 0x33
 8003e02:	f007 fc9e 	bl	800b742 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003e06:	1d20      	adds	r0, r4, #4
 8003e08:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003e0a:	9002      	str	r0, [sp, #8]
 8003e0c:	f007 fd9e 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003e10:	991d      	ldr	r1, [sp, #116]	; 0x74
 8003e12:	9802      	ldr	r0, [sp, #8]
 8003e14:	f007 fd9a 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003e18:	9904      	ldr	r1, [sp, #16]
 8003e1a:	9802      	ldr	r0, [sp, #8]
 8003e1c:	f007 fd96 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003e20:	9802      	ldr	r0, [sp, #8]
 8003e22:	4649      	mov	r1, r9
 8003e24:	f007 fd92 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003e28:	9802      	ldr	r0, [sp, #8]
 8003e2a:	4659      	mov	r1, fp
 8003e2c:	f007 fd8e 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003e30:	9802      	ldr	r0, [sp, #8]
 8003e32:	ee18 1a90 	vmov	r1, s17
 8003e36:	f007 fd89 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003e3a:	4620      	mov	r0, r4
 8003e3c:	b033      	add	sp, #204	; 0xcc
 8003e3e:	ecbd 8b10 	vpop	{d8-d15}
 8003e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e46:	bf00      	nop

08003e48 <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 8003e48:	4770      	bx	lr

08003e4a <_ZN15Screen2ViewBase11setupScreenEv>:
}

void Screen2ViewBase::setupScreen()
{

}
 8003e4a:	4770      	bx	lr

08003e4c <_ZN15Screen2ViewBaseD0Ev>:
 8003e4c:	b510      	push	{r4, lr}
 8003e4e:	21a0      	movs	r1, #160	; 0xa0
 8003e50:	4604      	mov	r4, r0
 8003e52:	f01d fb3e 	bl	80214d2 <_ZdlPvj>
 8003e56:	4620      	mov	r0, r4
 8003e58:	bd10      	pop	{r4, pc}

08003e5a <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 8003e5a:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 8003e5c:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 8003e5e:	4604      	mov	r4, r0
        setWidth(width);
 8003e60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    void setWidthHeight(int16_t width, int16_t height)
 8003e62:	4615      	mov	r5, r2
        setWidth(width);
 8003e64:	4798      	blx	r3
        setHeight(height);
 8003e66:	6823      	ldr	r3, [r4, #0]
 8003e68:	4629      	mov	r1, r5
 8003e6a:	4620      	mov	r0, r4
 8003e6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 8003e6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8003e72:	4718      	bx	r3

08003e74 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase()
 8003e74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003e76:	4604      	mov	r4, r0
 8003e78:	4626      	mov	r6, r4
 8003e7a:	2500      	movs	r5, #0
 8003e7c:	f00d fcaa 	bl	80117d4 <_ZN8touchgfx6ScreenC1Ev>
 8003e80:	4b25      	ldr	r3, [pc, #148]	; (8003f18 <_ZN15Screen2ViewBaseC1Ev+0xa4>)
 8003e82:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003e84:	f846 3b40 	str.w	r3, [r6], #64
 8003e88:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8003e8c:	4630      	mov	r0, r6
 8003e8e:	f7fe fd15 	bl	80028bc <_ZN8touchgfx3BoxC1Ev>
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 8003e92:	4638      	mov	r0, r7
 8003e94:	f7fe fd12 	bl	80028bc <_ZN8touchgfx3BoxC1Ev>
 8003e98:	4b20      	ldr	r3, [pc, #128]	; (8003f1c <_ZN15Screen2ViewBaseC1Ev+0xa8>)
 8003e9a:	66e3      	str	r3, [r4, #108]	; 0x6c
        setX(x);
 8003e9c:	4629      	mov	r1, r5
 8003e9e:	4630      	mov	r0, r6
 8003ea0:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 8003ea4:	f8a4 509c 	strh.w	r5, [r4, #156]	; 0x9c
 8003ea8:	f7fe fc84 	bl	80027b4 <_ZN8touchgfx8Drawable4setXEs>
        setY(y);
 8003eac:	4629      	mov	r1, r5
 8003eae:	4630      	mov	r0, r6
 8003eb0:	f7fe fc82 	bl	80027b8 <_ZN8touchgfx8Drawable4setYEs>
        setWidthHeight(width, height);
 8003eb4:	4630      	mov	r0, r6
 8003eb6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003eba:	f44f 7148 	mov.w	r1, #800	; 0x320
 8003ebe:	f7ff ffcc 	bl	8003e5a <_ZN8touchgfx8Drawable14setWidthHeightEss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003ec2:	462a      	mov	r2, r5
 8003ec4:	4629      	mov	r1, r5
 8003ec6:	4628      	mov	r0, r5
 8003ec8:	f7fe fd82 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        rect.x = x;
 8003ecc:	6725      	str	r5, [r4, #112]	; 0x70
 8003ece:	66a0      	str	r0, [r4, #104]	; 0x68
        setWidthHeight(width, height);
 8003ed0:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003ed4:	4638      	mov	r0, r7
 8003ed6:	f44f 7148 	mov.w	r1, #800	; 0x320
 8003eda:	f7ff ffbe 	bl	8003e5a <_ZN8touchgfx8Drawable14setWidthHeightEss>
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(90, 38, 38));
 8003ede:	2226      	movs	r2, #38	; 0x26
 8003ee0:	4611      	mov	r1, r2
 8003ee2:	205a      	movs	r0, #90	; 0x5a
 8003ee4:	f7fe fd74 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003ee8:	462a      	mov	r2, r5
 8003eea:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 8003eee:	4629      	mov	r1, r5
 8003ef0:	4628      	mov	r0, r5
 8003ef2:	f7fe fd6d 	bl	80029d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003ef6:	2305      	movs	r3, #5
        borderColor = color;
 8003ef8:	f8c4 0098 	str.w	r0, [r4, #152]	; 0x98
        borderSize = size;
 8003efc:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
 8003f00:	1d20      	adds	r0, r4, #4
 8003f02:	4631      	mov	r1, r6
 8003f04:	9001      	str	r0, [sp, #4]
 8003f06:	f007 fd21 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f0a:	9801      	ldr	r0, [sp, #4]
 8003f0c:	4639      	mov	r1, r7
 8003f0e:	f007 fd1d 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003f12:	4620      	mov	r0, r4
 8003f14:	b003      	add	sp, #12
 8003f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f18:	080240f4 	.word	0x080240f4
 8003f1c:	08025c14 	.word	0x08025c14

08003f20 <__tcf_0>:

touchgfx::GeneratedFont& getFont_PALSCRI_TTF_32_4bpp();

touchgfx::GeneratedFont& getFont_PALSCRI_TTF_32_4bpp()
{
    static touchgfx::GeneratedFont PALSCRI_TTF_32_4bpp(glyphs_PALSCRI_TTF_32_4bpp, 1, 32, 0, 4, 1, 0, 1, unicodes_PALSCRI_TTF_32_4bpp, kerning_PALSCRI_TTF_32_4bpp, 63, 0, 0);
 8003f20:	4770      	bx	lr
	...

08003f24 <_Z27getFont_PALSCRI_TTF_32_4bppv>:
{
 8003f24:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont PALSCRI_TTF_32_4bpp(glyphs_PALSCRI_TTF_32_4bpp, 1, 32, 0, 4, 1, 0, 1, unicodes_PALSCRI_TTF_32_4bpp, kerning_PALSCRI_TTF_32_4bpp, 63, 0, 0);
 8003f26:	4d14      	ldr	r5, [pc, #80]	; (8003f78 <_Z27getFont_PALSCRI_TTF_32_4bppv+0x54>)
 8003f28:	782c      	ldrb	r4, [r5, #0]
 8003f2a:	f3bf 8f5b 	dmb	ish
 8003f2e:	f014 0401 	ands.w	r4, r4, #1
{
 8003f32:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont PALSCRI_TTF_32_4bpp(glyphs_PALSCRI_TTF_32_4bpp, 1, 32, 0, 4, 1, 0, 1, unicodes_PALSCRI_TTF_32_4bpp, kerning_PALSCRI_TTF_32_4bpp, 63, 0, 0);
 8003f34:	d11d      	bne.n	8003f72 <_Z27getFont_PALSCRI_TTF_32_4bppv+0x4e>
 8003f36:	4628      	mov	r0, r5
 8003f38:	f01d facd 	bl	80214d6 <__cxa_guard_acquire>
 8003f3c:	b1c8      	cbz	r0, 8003f72 <_Z27getFont_PALSCRI_TTF_32_4bppv+0x4e>
 8003f3e:	233f      	movs	r3, #63	; 0x3f
 8003f40:	9307      	str	r3, [sp, #28]
 8003f42:	4b0e      	ldr	r3, [pc, #56]	; (8003f7c <_Z27getFont_PALSCRI_TTF_32_4bppv+0x58>)
 8003f44:	9306      	str	r3, [sp, #24]
 8003f46:	4b0e      	ldr	r3, [pc, #56]	; (8003f80 <_Z27getFont_PALSCRI_TTF_32_4bppv+0x5c>)
 8003f48:	9305      	str	r3, [sp, #20]
 8003f4a:	2201      	movs	r2, #1
 8003f4c:	2304      	movs	r3, #4
 8003f4e:	e9cd 4203 	strd	r4, r2, [sp, #12]
 8003f52:	e9cd 4300 	strd	r4, r3, [sp]
 8003f56:	490b      	ldr	r1, [pc, #44]	; (8003f84 <_Z27getFont_PALSCRI_TTF_32_4bppv+0x60>)
 8003f58:	9202      	str	r2, [sp, #8]
 8003f5a:	2320      	movs	r3, #32
 8003f5c:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003f60:	4809      	ldr	r0, [pc, #36]	; (8003f88 <_Z27getFont_PALSCRI_TTF_32_4bppv+0x64>)
 8003f62:	f7fe fbfd 	bl	8002760 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8003f66:	4628      	mov	r0, r5
 8003f68:	f01d fac1 	bl	80214ee <__cxa_guard_release>
 8003f6c:	4807      	ldr	r0, [pc, #28]	; (8003f8c <_Z27getFont_PALSCRI_TTF_32_4bppv+0x68>)
 8003f6e:	f01e f8ed 	bl	802214c <atexit>
    return PALSCRI_TTF_32_4bpp;
}
 8003f72:	4805      	ldr	r0, [pc, #20]	; (8003f88 <_Z27getFont_PALSCRI_TTF_32_4bppv+0x64>)
 8003f74:	b00b      	add	sp, #44	; 0x2c
 8003f76:	bd30      	pop	{r4, r5, pc}
 8003f78:	200053ec 	.word	0x200053ec
 8003f7c:	08027b60 	.word	0x08027b60
 8003f80:	08024120 	.word	0x08024120
 8003f84:	90047550 	.word	0x90047550
 8003f88:	200053f0 	.word	0x200053f0
 8003f8c:	08003f21 	.word	0x08003f21

08003f90 <__tcf_0>:

touchgfx::GeneratedFont& getFont_ROCK_TTF_20_4bpp();

touchgfx::GeneratedFont& getFont_ROCK_TTF_20_4bpp()
{
    static touchgfx::GeneratedFont ROCK_TTF_20_4bpp(glyphs_ROCK_TTF_20_4bpp, 21, 20, 0, 4, 1, 1, 1, unicodes_ROCK_TTF_20_4bpp, kerning_ROCK_TTF_20_4bpp, 63, 0, 0);
 8003f90:	4770      	bx	lr
	...

08003f94 <_Z24getFont_ROCK_TTF_20_4bppv>:
{
 8003f94:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ROCK_TTF_20_4bpp(glyphs_ROCK_TTF_20_4bpp, 21, 20, 0, 4, 1, 1, 1, unicodes_ROCK_TTF_20_4bpp, kerning_ROCK_TTF_20_4bpp, 63, 0, 0);
 8003f96:	4d15      	ldr	r5, [pc, #84]	; (8003fec <_Z24getFont_ROCK_TTF_20_4bppv+0x58>)
 8003f98:	782c      	ldrb	r4, [r5, #0]
 8003f9a:	f3bf 8f5b 	dmb	ish
 8003f9e:	f014 0401 	ands.w	r4, r4, #1
{
 8003fa2:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont ROCK_TTF_20_4bpp(glyphs_ROCK_TTF_20_4bpp, 21, 20, 0, 4, 1, 1, 1, unicodes_ROCK_TTF_20_4bpp, kerning_ROCK_TTF_20_4bpp, 63, 0, 0);
 8003fa4:	d11e      	bne.n	8003fe4 <_Z24getFont_ROCK_TTF_20_4bppv+0x50>
 8003fa6:	4628      	mov	r0, r5
 8003fa8:	f01d fa95 	bl	80214d6 <__cxa_guard_acquire>
 8003fac:	b1d0      	cbz	r0, 8003fe4 <_Z24getFont_ROCK_TTF_20_4bppv+0x50>
 8003fae:	233f      	movs	r3, #63	; 0x3f
 8003fb0:	9307      	str	r3, [sp, #28]
 8003fb2:	4b0f      	ldr	r3, [pc, #60]	; (8003ff0 <_Z24getFont_ROCK_TTF_20_4bppv+0x5c>)
 8003fb4:	9306      	str	r3, [sp, #24]
 8003fb6:	4b0f      	ldr	r3, [pc, #60]	; (8003ff4 <_Z24getFont_ROCK_TTF_20_4bppv+0x60>)
 8003fb8:	9305      	str	r3, [sp, #20]
 8003fba:	2301      	movs	r3, #1
 8003fbc:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8003fc0:	9302      	str	r3, [sp, #8]
 8003fc2:	2304      	movs	r3, #4
 8003fc4:	e9cd 4300 	strd	r4, r3, [sp]
 8003fc8:	490b      	ldr	r1, [pc, #44]	; (8003ff8 <_Z24getFont_ROCK_TTF_20_4bppv+0x64>)
 8003fca:	480c      	ldr	r0, [pc, #48]	; (8003ffc <_Z24getFont_ROCK_TTF_20_4bppv+0x68>)
 8003fcc:	2314      	movs	r3, #20
 8003fce:	2215      	movs	r2, #21
 8003fd0:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003fd4:	f7fe fbc4 	bl	8002760 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8003fd8:	4628      	mov	r0, r5
 8003fda:	f01d fa88 	bl	80214ee <__cxa_guard_release>
 8003fde:	4808      	ldr	r0, [pc, #32]	; (8004000 <_Z24getFont_ROCK_TTF_20_4bppv+0x6c>)
 8003fe0:	f01e f8b4 	bl	802214c <atexit>
    return ROCK_TTF_20_4bpp;
}
 8003fe4:	4805      	ldr	r0, [pc, #20]	; (8003ffc <_Z24getFont_ROCK_TTF_20_4bppv+0x68>)
 8003fe6:	b00b      	add	sp, #44	; 0x2c
 8003fe8:	bd30      	pop	{r4, r5, pc}
 8003fea:	bf00      	nop
 8003fec:	20005414 	.word	0x20005414
 8003ff0:	08027b64 	.word	0x08027b64
 8003ff4:	08024124 	.word	0x08024124
 8003ff8:	90047560 	.word	0x90047560
 8003ffc:	20005418 	.word	0x20005418
 8004000:	08003f91 	.word	0x08003f91

08004004 <__tcf_0>:

touchgfx::GeneratedFont& getFont_ROCK_TTF_26_4bpp();

touchgfx::GeneratedFont& getFont_ROCK_TTF_26_4bpp()
{
    static touchgfx::GeneratedFont ROCK_TTF_26_4bpp(glyphs_ROCK_TTF_26_4bpp, 29, 26, 6, 4, 1, 1, 1, unicodes_ROCK_TTF_26_4bpp, kerning_ROCK_TTF_26_4bpp, 63, 0, 0);
 8004004:	4770      	bx	lr
	...

08004008 <_Z24getFont_ROCK_TTF_26_4bppv>:
{
 8004008:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ROCK_TTF_26_4bpp(glyphs_ROCK_TTF_26_4bpp, 29, 26, 6, 4, 1, 1, 1, unicodes_ROCK_TTF_26_4bpp, kerning_ROCK_TTF_26_4bpp, 63, 0, 0);
 800400a:	4d15      	ldr	r5, [pc, #84]	; (8004060 <_Z24getFont_ROCK_TTF_26_4bppv+0x58>)
 800400c:	782c      	ldrb	r4, [r5, #0]
 800400e:	f3bf 8f5b 	dmb	ish
 8004012:	f014 0401 	ands.w	r4, r4, #1
{
 8004016:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont ROCK_TTF_26_4bpp(glyphs_ROCK_TTF_26_4bpp, 29, 26, 6, 4, 1, 1, 1, unicodes_ROCK_TTF_26_4bpp, kerning_ROCK_TTF_26_4bpp, 63, 0, 0);
 8004018:	d11f      	bne.n	800405a <_Z24getFont_ROCK_TTF_26_4bppv+0x52>
 800401a:	4628      	mov	r0, r5
 800401c:	f01d fa5b 	bl	80214d6 <__cxa_guard_acquire>
 8004020:	b1d8      	cbz	r0, 800405a <_Z24getFont_ROCK_TTF_26_4bppv+0x52>
 8004022:	233f      	movs	r3, #63	; 0x3f
 8004024:	9307      	str	r3, [sp, #28]
 8004026:	4b0f      	ldr	r3, [pc, #60]	; (8004064 <_Z24getFont_ROCK_TTF_26_4bppv+0x5c>)
 8004028:	9306      	str	r3, [sp, #24]
 800402a:	4b0f      	ldr	r3, [pc, #60]	; (8004068 <_Z24getFont_ROCK_TTF_26_4bppv+0x60>)
 800402c:	9305      	str	r3, [sp, #20]
 800402e:	2301      	movs	r3, #1
 8004030:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8004034:	9302      	str	r3, [sp, #8]
 8004036:	2204      	movs	r2, #4
 8004038:	2306      	movs	r3, #6
 800403a:	e9cd 3200 	strd	r3, r2, [sp]
 800403e:	490b      	ldr	r1, [pc, #44]	; (800406c <_Z24getFont_ROCK_TTF_26_4bppv+0x64>)
 8004040:	480b      	ldr	r0, [pc, #44]	; (8004070 <_Z24getFont_ROCK_TTF_26_4bppv+0x68>)
 8004042:	231a      	movs	r3, #26
 8004044:	221d      	movs	r2, #29
 8004046:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800404a:	f7fe fb89 	bl	8002760 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800404e:	4628      	mov	r0, r5
 8004050:	f01d fa4d 	bl	80214ee <__cxa_guard_release>
 8004054:	4807      	ldr	r0, [pc, #28]	; (8004074 <_Z24getFont_ROCK_TTF_26_4bppv+0x6c>)
 8004056:	f01e f879 	bl	802214c <atexit>
    return ROCK_TTF_26_4bpp;
}
 800405a:	4805      	ldr	r0, [pc, #20]	; (8004070 <_Z24getFont_ROCK_TTF_26_4bppv+0x68>)
 800405c:	b00b      	add	sp, #44	; 0x2c
 800405e:	bd30      	pop	{r4, r5, pc}
 8004060:	2000543c 	.word	0x2000543c
 8004064:	08027b80 	.word	0x08027b80
 8004068:	08024128 	.word	0x08024128
 800406c:	90047688 	.word	0x90047688
 8004070:	20005440 	.word	0x20005440
 8004074:	08004005 	.word	0x08004005

08004078 <__tcf_0>:

touchgfx::GeneratedFont& getFont_ROCK_TTF_99_4bpp();

touchgfx::GeneratedFont& getFont_ROCK_TTF_99_4bpp()
{
    static touchgfx::GeneratedFont ROCK_TTF_99_4bpp(glyphs_ROCK_TTF_99_4bpp, 11, 99, 1, 4, 1, 0, 0, unicodes_ROCK_TTF_99_4bpp, kerning_ROCK_TTF_99_4bpp, 63, 0, 0);
 8004078:	4770      	bx	lr
	...

0800407c <_Z24getFont_ROCK_TTF_99_4bppv>:
{
 800407c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ROCK_TTF_99_4bpp(glyphs_ROCK_TTF_99_4bpp, 11, 99, 1, 4, 1, 0, 0, unicodes_ROCK_TTF_99_4bpp, kerning_ROCK_TTF_99_4bpp, 63, 0, 0);
 800407e:	4d15      	ldr	r5, [pc, #84]	; (80040d4 <_Z24getFont_ROCK_TTF_99_4bppv+0x58>)
 8004080:	782c      	ldrb	r4, [r5, #0]
 8004082:	f3bf 8f5b 	dmb	ish
 8004086:	f014 0401 	ands.w	r4, r4, #1
{
 800408a:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont ROCK_TTF_99_4bpp(glyphs_ROCK_TTF_99_4bpp, 11, 99, 1, 4, 1, 0, 0, unicodes_ROCK_TTF_99_4bpp, kerning_ROCK_TTF_99_4bpp, 63, 0, 0);
 800408c:	d11e      	bne.n	80040cc <_Z24getFont_ROCK_TTF_99_4bppv+0x50>
 800408e:	4628      	mov	r0, r5
 8004090:	f01d fa21 	bl	80214d6 <__cxa_guard_acquire>
 8004094:	b1d0      	cbz	r0, 80040cc <_Z24getFont_ROCK_TTF_99_4bppv+0x50>
 8004096:	233f      	movs	r3, #63	; 0x3f
 8004098:	9307      	str	r3, [sp, #28]
 800409a:	4b0f      	ldr	r3, [pc, #60]	; (80040d8 <_Z24getFont_ROCK_TTF_99_4bppv+0x5c>)
 800409c:	9306      	str	r3, [sp, #24]
 800409e:	4b0f      	ldr	r3, [pc, #60]	; (80040dc <_Z24getFont_ROCK_TTF_99_4bppv+0x60>)
 80040a0:	490f      	ldr	r1, [pc, #60]	; (80040e0 <_Z24getFont_ROCK_TTF_99_4bppv+0x64>)
 80040a2:	4810      	ldr	r0, [pc, #64]	; (80040e4 <_Z24getFont_ROCK_TTF_99_4bppv+0x68>)
 80040a4:	9403      	str	r4, [sp, #12]
 80040a6:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80040aa:	2204      	movs	r2, #4
 80040ac:	2301      	movs	r3, #1
 80040ae:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80040b2:	9300      	str	r3, [sp, #0]
 80040b4:	220b      	movs	r2, #11
 80040b6:	2363      	movs	r3, #99	; 0x63
 80040b8:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80040bc:	f7fe fb50 	bl	8002760 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80040c0:	4628      	mov	r0, r5
 80040c2:	f01d fa14 	bl	80214ee <__cxa_guard_release>
 80040c6:	4808      	ldr	r0, [pc, #32]	; (80040e8 <_Z24getFont_ROCK_TTF_99_4bppv+0x6c>)
 80040c8:	f01e f840 	bl	802214c <atexit>
    return ROCK_TTF_99_4bpp;
}
 80040cc:	4805      	ldr	r0, [pc, #20]	; (80040e4 <_Z24getFont_ROCK_TTF_99_4bppv+0x68>)
 80040ce:	b00b      	add	sp, #44	; 0x2c
 80040d0:	bd30      	pop	{r4, r5, pc}
 80040d2:	bf00      	nop
 80040d4:	20005464 	.word	0x20005464
 80040d8:	08027bd8 	.word	0x08027bd8
 80040dc:	0802412c 	.word	0x0802412c
 80040e0:	90047820 	.word	0x90047820
 80040e4:	20005468 	.word	0x20005468
 80040e8:	08004079 	.word	0x08004079

080040ec <__tcf_0>:

touchgfx::GeneratedFont& getFont_seguisb_22_4bpp();

touchgfx::GeneratedFont& getFont_seguisb_22_4bpp()
{
    static touchgfx::GeneratedFont seguisb_22_4bpp(glyphs_seguisb_22_4bpp, 1, 22, 0, 4, 1, 0, 0, unicodes_seguisb_22_4bpp, kerning_seguisb_22_4bpp, 63, 0, 0);
 80040ec:	4770      	bx	lr
	...

080040f0 <_Z23getFont_seguisb_22_4bppv>:
{
 80040f0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont seguisb_22_4bpp(glyphs_seguisb_22_4bpp, 1, 22, 0, 4, 1, 0, 0, unicodes_seguisb_22_4bpp, kerning_seguisb_22_4bpp, 63, 0, 0);
 80040f2:	4d14      	ldr	r5, [pc, #80]	; (8004144 <_Z23getFont_seguisb_22_4bppv+0x54>)
 80040f4:	782c      	ldrb	r4, [r5, #0]
 80040f6:	f3bf 8f5b 	dmb	ish
 80040fa:	f014 0401 	ands.w	r4, r4, #1
{
 80040fe:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont seguisb_22_4bpp(glyphs_seguisb_22_4bpp, 1, 22, 0, 4, 1, 0, 0, unicodes_seguisb_22_4bpp, kerning_seguisb_22_4bpp, 63, 0, 0);
 8004100:	d11d      	bne.n	800413e <_Z23getFont_seguisb_22_4bppv+0x4e>
 8004102:	4628      	mov	r0, r5
 8004104:	f01d f9e7 	bl	80214d6 <__cxa_guard_acquire>
 8004108:	b1c8      	cbz	r0, 800413e <_Z23getFont_seguisb_22_4bppv+0x4e>
 800410a:	233f      	movs	r3, #63	; 0x3f
 800410c:	9307      	str	r3, [sp, #28]
 800410e:	4b0e      	ldr	r3, [pc, #56]	; (8004148 <_Z23getFont_seguisb_22_4bppv+0x58>)
 8004110:	9306      	str	r3, [sp, #24]
 8004112:	4b0e      	ldr	r3, [pc, #56]	; (800414c <_Z23getFont_seguisb_22_4bppv+0x5c>)
 8004114:	490e      	ldr	r1, [pc, #56]	; (8004150 <_Z23getFont_seguisb_22_4bppv+0x60>)
 8004116:	480f      	ldr	r0, [pc, #60]	; (8004154 <_Z23getFont_seguisb_22_4bppv+0x64>)
 8004118:	9403      	str	r4, [sp, #12]
 800411a:	2201      	movs	r2, #1
 800411c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004120:	2304      	movs	r3, #4
 8004122:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8004126:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800412a:	2316      	movs	r3, #22
 800412c:	9400      	str	r4, [sp, #0]
 800412e:	f7fe fb17 	bl	8002760 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8004132:	4628      	mov	r0, r5
 8004134:	f01d f9db 	bl	80214ee <__cxa_guard_release>
 8004138:	4807      	ldr	r0, [pc, #28]	; (8004158 <_Z23getFont_seguisb_22_4bppv+0x68>)
 800413a:	f01e f807 	bl	802214c <atexit>
    return seguisb_22_4bpp;
}
 800413e:	4805      	ldr	r0, [pc, #20]	; (8004154 <_Z23getFont_seguisb_22_4bppv+0x64>)
 8004140:	b00b      	add	sp, #44	; 0x2c
 8004142:	bd30      	pop	{r4, r5, pc}
 8004144:	2000548c 	.word	0x2000548c
 8004148:	08027bdc 	.word	0x08027bdc
 800414c:	08024130 	.word	0x08024130
 8004150:	900478bc 	.word	0x900478bc
 8004154:	20005490 	.word	0x20005490
 8004158:	080040ed 	.word	0x080040ed

0800415c <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 800415c:	4770      	bx	lr
	...

08004160 <_Z23getFont_verdana_10_4bppv>:
{
 8004160:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8004162:	4d14      	ldr	r5, [pc, #80]	; (80041b4 <_Z23getFont_verdana_10_4bppv+0x54>)
 8004164:	782c      	ldrb	r4, [r5, #0]
 8004166:	f3bf 8f5b 	dmb	ish
 800416a:	f014 0401 	ands.w	r4, r4, #1
{
 800416e:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8004170:	d11d      	bne.n	80041ae <_Z23getFont_verdana_10_4bppv+0x4e>
 8004172:	4628      	mov	r0, r5
 8004174:	f01d f9af 	bl	80214d6 <__cxa_guard_acquire>
 8004178:	b1c8      	cbz	r0, 80041ae <_Z23getFont_verdana_10_4bppv+0x4e>
 800417a:	233f      	movs	r3, #63	; 0x3f
 800417c:	9307      	str	r3, [sp, #28]
 800417e:	4b0e      	ldr	r3, [pc, #56]	; (80041b8 <_Z23getFont_verdana_10_4bppv+0x58>)
 8004180:	9306      	str	r3, [sp, #24]
 8004182:	4b0e      	ldr	r3, [pc, #56]	; (80041bc <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004184:	490e      	ldr	r1, [pc, #56]	; (80041c0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004186:	480f      	ldr	r0, [pc, #60]	; (80041c4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8004188:	9403      	str	r4, [sp, #12]
 800418a:	2201      	movs	r2, #1
 800418c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004190:	2304      	movs	r3, #4
 8004192:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8004196:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800419a:	230a      	movs	r3, #10
 800419c:	9400      	str	r4, [sp, #0]
 800419e:	f7fe fadf 	bl	8002760 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80041a2:	4628      	mov	r0, r5
 80041a4:	f01d f9a3 	bl	80214ee <__cxa_guard_release>
 80041a8:	4807      	ldr	r0, [pc, #28]	; (80041c8 <_Z23getFont_verdana_10_4bppv+0x68>)
 80041aa:	f01d ffcf 	bl	802214c <atexit>
    return verdana_10_4bpp;
}
 80041ae:	4805      	ldr	r0, [pc, #20]	; (80041c4 <_Z23getFont_verdana_10_4bppv+0x64>)
 80041b0:	b00b      	add	sp, #44	; 0x2c
 80041b2:	bd30      	pop	{r4, r5, pc}
 80041b4:	200054b4 	.word	0x200054b4
 80041b8:	08027be0 	.word	0x08027be0
 80041bc:	08024134 	.word	0x08024134
 80041c0:	900478cc 	.word	0x900478cc
 80041c4:	200054b8 	.word	0x200054b8
 80041c8:	0800415d 	.word	0x0800415d

080041cc <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80041cc:	4770      	bx	lr
	...

080041d0 <_Z23getFont_verdana_40_4bppv>:
{
 80041d0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80041d2:	4d14      	ldr	r5, [pc, #80]	; (8004224 <_Z23getFont_verdana_40_4bppv+0x54>)
 80041d4:	782c      	ldrb	r4, [r5, #0]
 80041d6:	f3bf 8f5b 	dmb	ish
 80041da:	f014 0401 	ands.w	r4, r4, #1
{
 80041de:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80041e0:	d11d      	bne.n	800421e <_Z23getFont_verdana_40_4bppv+0x4e>
 80041e2:	4628      	mov	r0, r5
 80041e4:	f01d f977 	bl	80214d6 <__cxa_guard_acquire>
 80041e8:	b1c8      	cbz	r0, 800421e <_Z23getFont_verdana_40_4bppv+0x4e>
 80041ea:	233f      	movs	r3, #63	; 0x3f
 80041ec:	9307      	str	r3, [sp, #28]
 80041ee:	4b0e      	ldr	r3, [pc, #56]	; (8004228 <_Z23getFont_verdana_40_4bppv+0x58>)
 80041f0:	9306      	str	r3, [sp, #24]
 80041f2:	4b0e      	ldr	r3, [pc, #56]	; (800422c <_Z23getFont_verdana_40_4bppv+0x5c>)
 80041f4:	490e      	ldr	r1, [pc, #56]	; (8004230 <_Z23getFont_verdana_40_4bppv+0x60>)
 80041f6:	480f      	ldr	r0, [pc, #60]	; (8004234 <_Z23getFont_verdana_40_4bppv+0x64>)
 80041f8:	9403      	str	r4, [sp, #12]
 80041fa:	2201      	movs	r2, #1
 80041fc:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004200:	2304      	movs	r3, #4
 8004202:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8004206:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800420a:	2328      	movs	r3, #40	; 0x28
 800420c:	9400      	str	r4, [sp, #0]
 800420e:	f7fe faa7 	bl	8002760 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8004212:	4628      	mov	r0, r5
 8004214:	f01d f96b 	bl	80214ee <__cxa_guard_release>
 8004218:	4807      	ldr	r0, [pc, #28]	; (8004238 <_Z23getFont_verdana_40_4bppv+0x68>)
 800421a:	f01d ff97 	bl	802214c <atexit>
    return verdana_40_4bpp;
}
 800421e:	4805      	ldr	r0, [pc, #20]	; (8004234 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004220:	b00b      	add	sp, #44	; 0x2c
 8004222:	bd30      	pop	{r4, r5, pc}
 8004224:	200054dc 	.word	0x200054dc
 8004228:	08027be4 	.word	0x08027be4
 800422c:	08024138 	.word	0x08024138
 8004230:	900478dc 	.word	0x900478dc
 8004234:	200054e0 	.word	0x200054e0
 8004238:	080041cd 	.word	0x080041cd

0800423c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800423c:	2000      	movs	r0, #0
 800423e:	4770      	bx	lr

08004240 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004240:	b40e      	push	{r1, r2, r3}
 8004242:	b503      	push	{r0, r1, lr}
 8004244:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004246:	2100      	movs	r1, #0
{
 8004248:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800424c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800424e:	f00c fda5 	bl	8010d9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004252:	b002      	add	sp, #8
 8004254:	f85d eb04 	ldr.w	lr, [sp], #4
 8004258:	b003      	add	sp, #12
 800425a:	4770      	bx	lr

0800425c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800425c:	b40c      	push	{r2, r3}
 800425e:	b507      	push	{r0, r1, r2, lr}
 8004260:	ab04      	add	r3, sp, #16
 8004262:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004266:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004268:	f00c fd98 	bl	8010d9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800426c:	b003      	add	sp, #12
 800426e:	f85d eb04 	ldr.w	lr, [sp], #4
 8004272:	b002      	add	sp, #8
 8004274:	4770      	bx	lr
	...

08004278 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004278:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 800427a:	b510      	push	{r4, lr}
 800427c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800427e:	b373      	cbz	r3, 80042de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004280:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8004282:	b92b      	cbnz	r3, 8004290 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004284:	4b18      	ldr	r3, [pc, #96]	; (80042e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004286:	4a19      	ldr	r2, [pc, #100]	; (80042ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004288:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800428a:	4819      	ldr	r0, [pc, #100]	; (80042f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800428c:	f01d ff40 	bl	8022110 <__assert_func>
            return buffer[pos];
 8004290:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8004292:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004296:	8b5b      	ldrh	r3, [r3, #26]
 8004298:	b30b      	cbz	r3, 80042de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800429a:	f00e f99f 	bl	80125dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800429e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80042a0:	2b01      	cmp	r3, #1
 80042a2:	d803      	bhi.n	80042ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80042a4:	4b13      	ldr	r3, [pc, #76]	; (80042f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80042a6:	4a14      	ldr	r2, [pc, #80]	; (80042f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80042a8:	21c5      	movs	r1, #197	; 0xc5
 80042aa:	e7ee      	b.n	800428a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80042ac:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80042ae:	1c53      	adds	r3, r2, #1
 80042b0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80042b2:	2b09      	cmp	r3, #9
 80042b4:	4619      	mov	r1, r3
 80042b6:	bf88      	it	hi
 80042b8:	f1a3 010a 	subhi.w	r1, r3, #10
 80042bc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 80042c0:	f640 103f 	movw	r0, #2367	; 0x93f
 80042c4:	8b49      	ldrh	r1, [r1, #26]
 80042c6:	4281      	cmp	r1, r0
 80042c8:	d109      	bne.n	80042de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80042ca:	2b0a      	cmp	r3, #10
 80042cc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80042d0:	bf28      	it	cs
 80042d2:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80042d4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80042d8:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 80042da:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 80042dc:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80042de:	4620      	mov	r0, r4
}
 80042e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80042e4:	f00e b85e 	b.w	80123a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80042e8:	0802413c 	.word	0x0802413c
 80042ec:	08024145 	.word	0x08024145
 80042f0:	080241f0 	.word	0x080241f0
 80042f4:	0802423a 	.word	0x0802423a
 80042f8:	08024248 	.word	0x08024248

080042fc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80042fc:	f00e b80c 	b.w	8012318 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004300 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004300:	b510      	push	{r4, lr}
 8004302:	b086      	sub	sp, #24
 8004304:	ac02      	add	r4, sp, #8
 8004306:	e884 0006 	stmia.w	r4, {r1, r2}
 800430a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800430c:	ab0a      	add	r3, sp, #40	; 0x28
 800430e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004310:	9301      	str	r3, [sp, #4]
 8004312:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004314:	9300      	str	r3, [sp, #0]
 8004316:	4621      	mov	r1, r4
 8004318:	9b08      	ldr	r3, [sp, #32]
 800431a:	f00b fa5e 	bl	800f7da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800431e:	b006      	add	sp, #24
 8004320:	bd10      	pop	{r4, pc}
	...

08004324 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004324:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004326:	bb18      	cbnz	r0, 8004370 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004328:	4b12      	ldr	r3, [pc, #72]	; (8004374 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800432a:	4813      	ldr	r0, [pc, #76]	; (8004378 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	4913      	ldr	r1, [pc, #76]	; (800437c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004330:	b1b3      	cbz	r3, 8004360 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004332:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004334:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004336:	441a      	add	r2, r3
 8004338:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800433a:	685a      	ldr	r2, [r3, #4]
 800433c:	441a      	add	r2, r3
 800433e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004340:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004342:	4b0f      	ldr	r3, [pc, #60]	; (8004380 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004344:	2200      	movs	r2, #0
 8004346:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004348:	f000 f838 	bl	80043bc <_ZN17TypedTextDatabase8getFontsEv>
 800434c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800434e:	f000 f833 	bl	80043b8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004352:	4b0c      	ldr	r3, [pc, #48]	; (8004384 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004354:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004356:	4b0c      	ldr	r3, [pc, #48]	; (8004388 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004358:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800435a:	4b0c      	ldr	r3, [pc, #48]	; (800438c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800435c:	8018      	strh	r0, [r3, #0]
    }
}
 800435e:	e007      	b.n	8004370 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004360:	4b0b      	ldr	r3, [pc, #44]	; (8004390 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004362:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004364:	4b0b      	ldr	r3, [pc, #44]	; (8004394 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004366:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004368:	4b0b      	ldr	r3, [pc, #44]	; (8004398 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800436a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800436c:	2c00      	cmp	r4, #0
 800436e:	d1e8      	bne.n	8004342 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004370:	bd38      	pop	{r3, r4, r5, pc}
 8004372:	bf00      	nop
 8004374:	20005504 	.word	0x20005504
 8004378:	20005508 	.word	0x20005508
 800437c:	2000550c 	.word	0x2000550c
 8004380:	20005510 	.word	0x20005510
 8004384:	2000e450 	.word	0x2000e450
 8004388:	2000e458 	.word	0x2000e458
 800438c:	2000e454 	.word	0x2000e454
 8004390:	90047948 	.word	0x90047948
 8004394:	900478ec 	.word	0x900478ec
 8004398:	90047a38 	.word	0x90047a38

0800439c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800439c:	4b04      	ldr	r3, [pc, #16]	; (80043b0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80043a4:	4b03      	ldr	r3, [pc, #12]	; (80043b4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80043a6:	681b      	ldr	r3, [r3, #0]
}
 80043a8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80043ac:	4770      	bx	lr
 80043ae:	bf00      	nop
 80043b0:	2000550c 	.word	0x2000550c
 80043b4:	20005508 	.word	0x20005508

080043b8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80043b8:	2017      	movs	r0, #23
 80043ba:	4770      	bx	lr

080043bc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80043bc:	4800      	ldr	r0, [pc, #0]	; (80043c0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80043be:	4770      	bx	lr
 80043c0:	20005514 	.word	0x20005514

080043c4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 6:
        touchgfx_fonts[6] = &(getFont_ROCK_TTF_20_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 80043c4:	b510      	push	{r4, lr}
    &(getFont_seguisb_22_4bpp()),
 80043c6:	f7ff fe93 	bl	80040f0 <_Z23getFont_seguisb_22_4bppv>
};
 80043ca:	4c0a      	ldr	r4, [pc, #40]	; (80043f4 <_GLOBAL__sub_I_touchgfx_fonts+0x30>)
 80043cc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80043ce:	f7ff feff 	bl	80041d0 <_Z23getFont_verdana_40_4bppv>
};
 80043d2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80043d4:	f7ff fec4 	bl	8004160 <_Z23getFont_verdana_10_4bppv>
};
 80043d8:	60a0      	str	r0, [r4, #8]
    &(getFont_ROCK_TTF_99_4bpp()),
 80043da:	f7ff fe4f 	bl	800407c <_Z24getFont_ROCK_TTF_99_4bppv>
};
 80043de:	60e0      	str	r0, [r4, #12]
    &(getFont_ROCK_TTF_26_4bpp()),
 80043e0:	f7ff fe12 	bl	8004008 <_Z24getFont_ROCK_TTF_26_4bppv>
};
 80043e4:	6120      	str	r0, [r4, #16]
    &(getFont_PALSCRI_TTF_32_4bpp()),
 80043e6:	f7ff fd9d 	bl	8003f24 <_Z27getFont_PALSCRI_TTF_32_4bppv>
};
 80043ea:	6160      	str	r0, [r4, #20]
    &(getFont_ROCK_TTF_20_4bpp())
 80043ec:	f7ff fdd2 	bl	8003f94 <_Z24getFont_ROCK_TTF_20_4bppv>
};
 80043f0:	61a0      	str	r0, [r4, #24]
}  // namespace TypedTextDatabase
 80043f2:	bd10      	pop	{r4, pc}
 80043f4:	20005514 	.word	0x20005514

080043f8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80043f8:	4770      	bx	lr

080043fa <_ZN19FrontendApplicationD0Ev>:
 80043fa:	b510      	push	{r4, lr}
 80043fc:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004400:	4604      	mov	r4, r0
 8004402:	f01d f866 	bl	80214d2 <_ZdlPvj>
 8004406:	4620      	mov	r0, r4
 8004408:	bd10      	pop	{r4, pc}

0800440a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800440a:	b510      	push	{r4, lr}
 800440c:	4604      	mov	r4, r0
    {
        model.tick();
 800440e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004412:	f000 f812 	bl	800443a <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004416:	4620      	mov	r0, r4
    }
 8004418:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800441c:	f00b bd42 	b.w	800fea4 <_ZN8touchgfx11Application15handleTickEventEv>

08004420 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004420:	b510      	push	{r4, lr}
 8004422:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004424:	f7fd ffb6 	bl	8002394 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004428:	4b01      	ldr	r3, [pc, #4]	; (8004430 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800442a:	6023      	str	r3, [r4, #0]
{

}
 800442c:	4620      	mov	r0, r4
 800442e:	bd10      	pop	{r4, pc}
 8004430:	08024324 	.word	0x08024324

08004434 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8004434:	2200      	movs	r2, #0
 8004436:	6002      	str	r2, [r0, #0]
{

}
 8004438:	4770      	bx	lr

0800443a <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800443a:	4770      	bx	lr

0800443c <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 800443c:	4770      	bx	lr

0800443e <_ZThn4_N16Screen1PresenterD1Ev>:
 800443e:	3804      	subs	r0, #4
 8004440:	4770      	bx	lr

08004442 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004442:	4770      	bx	lr

08004444 <_ZN16Screen1PresenterD0Ev>:
 8004444:	b510      	push	{r4, lr}
 8004446:	2110      	movs	r1, #16
 8004448:	4604      	mov	r4, r0
 800444a:	f01d f842 	bl	80214d2 <_ZdlPvj>
 800444e:	4620      	mov	r0, r4
 8004450:	bd10      	pop	{r4, pc}

08004452 <_ZThn4_N16Screen1PresenterD0Ev>:
 8004452:	f1a0 0004 	sub.w	r0, r0, #4
 8004456:	e7f5      	b.n	8004444 <_ZN16Screen1PresenterD0Ev>

08004458 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004458:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800445a:	2200      	movs	r2, #0
 800445c:	6082      	str	r2, [r0, #8]
    : view(v)
 800445e:	4a04      	ldr	r2, [pc, #16]	; (8004470 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004460:	60c1      	str	r1, [r0, #12]
 8004462:	f102 0408 	add.w	r4, r2, #8
 8004466:	3220      	adds	r2, #32
 8004468:	6004      	str	r4, [r0, #0]
 800446a:	6042      	str	r2, [r0, #4]
}
 800446c:	bd10      	pop	{r4, pc}
 800446e:	bf00      	nop
 8004470:	08024360 	.word	0x08024360

08004474 <_ZN11Screen1ViewD1Ev>:
class Screen1View : public Screen1ViewBase
{
public:
	int tickCounter = 0;
    Screen1View();
    virtual ~Screen1View() {}
 8004474:	4770      	bx	lr

08004476 <_ZN11Screen1View13buttonPressedEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004476:	4770      	bx	lr

08004478 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004478:	f7fe b9d1 	b.w	800281e <_ZN15Screen1ViewBase11setupScreenEv>

0800447c <_ZN11Screen1ViewD0Ev>:
 800447c:	b510      	push	{r4, lr}
 800447e:	f244 3184 	movw	r1, #17284	; 0x4384
 8004482:	4604      	mov	r4, r0
 8004484:	f01d f825 	bl	80214d2 <_ZdlPvj>
 8004488:	4620      	mov	r0, r4
 800448a:	bd10      	pop	{r4, pc}

0800448c <_ZN11Screen1View15handleTickEventEv>:

void Screen1View::handleTickEvent()
{
 800448c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    tickCounter++;
 800448e:	f500 4587 	add.w	r5, r0, #17280	; 0x4380
{
 8004492:	4604      	mov	r4, r0
    tickCounter++;
 8004494:	682b      	ldr	r3, [r5, #0]
 8004496:	3301      	adds	r3, #1
 8004498:	602b      	str	r3, [r5, #0]

   if(screen == 2) {
 800449a:	4b18      	ldr	r3, [pc, #96]	; (80044fc <_ZN11Screen1View15handleTickEventEv+0x70>)
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	2b02      	cmp	r3, #2
 80044a0:	d103      	bne.n	80044aa <_ZN11Screen1View15handleTickEventEv+0x1e>
 80044a2:	f00b fde1 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
	   application().gotoScreen2ScreenNoTransition();
 80044a6:	f7fd ffb5 	bl	8002414 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>




    // Change value every 20 tick.
    if (tickCounter % 20 == 0)
 80044aa:	682a      	ldr	r2, [r5, #0]
 80044ac:	2514      	movs	r5, #20
 80044ae:	fb92 f3f5 	sdiv	r3, r2, r5
 80044b2:	fb05 2313 	mls	r3, r5, r3, r2
 80044b6:	b9fb      	cbnz	r3, 80044f8 <_ZN11Screen1View15handleTickEventEv+0x6c>
    {
    	uint32_t speed = (rxData[3] << 24) + (rxData[2] << 16) + (rxData[1] << 8) + rxData[0];
 80044b8:	4a11      	ldr	r2, [pc, #68]	; (8004500 <_ZN11Screen1View15handleTickEventEv+0x74>)
 80044ba:	7893      	ldrb	r3, [r2, #2]
 80044bc:	78d1      	ldrb	r1, [r2, #3]
 80044be:	041b      	lsls	r3, r3, #16
 80044c0:	eb03 6301 	add.w	r3, r3, r1, lsl #24
 80044c4:	7851      	ldrb	r1, [r2, #1]
 80044c6:	eb03 2301 	add.w	r3, r3, r1, lsl #8
 80044ca:	7811      	ldrb	r1, [r2, #0]
 80044cc:	440b      	add	r3, r1
      // Insert data point
      gauge1.updateValue(speed, 20); // animates needle and arc to new value with a duration of 30 ticks
 80044ce:	462a      	mov	r2, r5
 80044d0:	4619      	mov	r1, r3
 80044d2:	f504 70a0 	add.w	r0, r4, #320	; 0x140
 80044d6:	9301      	str	r3, [sp, #4]
 80044d8:	f006 fe28 	bl	800b12c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
      Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", speed);
 80044dc:	9b01      	ldr	r3, [sp, #4]
 80044de:	4a09      	ldr	r2, [pc, #36]	; (8004504 <_ZN11Screen1View15handleTickEventEv+0x78>)
 80044e0:	4629      	mov	r1, r5
 80044e2:	f504 50a0 	add.w	r0, r4, #5120	; 0x1400
 80044e6:	f00e fe33 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
      textArea1.invalidate();
 80044ea:	f504 7080 	add.w	r0, r4, #256	; 0x100
    }
}
 80044ee:	b003      	add	sp, #12
 80044f0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      textArea1.invalidate();
 80044f4:	f00c bd5b 	b.w	8010fae <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80044f8:	b003      	add	sp, #12
 80044fa:	bd30      	pop	{r4, r5, pc}
 80044fc:	2000e6a4 	.word	0x2000e6a4
 8004500:	2000e69c 	.word	0x2000e69c
 8004504:	08024388 	.word	0x08024388

08004508 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8004508:	b510      	push	{r4, lr}
 800450a:	4604      	mov	r4, r0
 800450c:	f7fe fa9a 	bl	8002a44 <_ZN15Screen1ViewBaseC1Ev>
 8004510:	4b03      	ldr	r3, [pc, #12]	; (8004520 <_ZN11Screen1ViewC1Ev+0x18>)
 8004512:	6023      	str	r3, [r4, #0]
 8004514:	f504 4387 	add.w	r3, r4, #17280	; 0x4380
 8004518:	2200      	movs	r2, #0
 800451a:	601a      	str	r2, [r3, #0]
}
 800451c:	4620      	mov	r0, r4
 800451e:	bd10      	pop	{r4, pc}
 8004520:	08024394 	.word	0x08024394

08004524 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 8004524:	4770      	bx	lr

08004526 <_ZThn4_N16Screen2PresenterD1Ev>:
 8004526:	3804      	subs	r0, #4
 8004528:	4770      	bx	lr

0800452a <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 800452a:	4770      	bx	lr

0800452c <_ZN16Screen2PresenterD0Ev>:
 800452c:	b510      	push	{r4, lr}
 800452e:	2110      	movs	r1, #16
 8004530:	4604      	mov	r4, r0
 8004532:	f01c ffce 	bl	80214d2 <_ZdlPvj>
 8004536:	4620      	mov	r0, r4
 8004538:	bd10      	pop	{r4, pc}

0800453a <_ZThn4_N16Screen2PresenterD0Ev>:
 800453a:	f1a0 0004 	sub.w	r0, r0, #4
 800453e:	e7f5      	b.n	800452c <_ZN16Screen2PresenterD0Ev>

08004540 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 8004540:	b510      	push	{r4, lr}
 8004542:	2200      	movs	r2, #0
 8004544:	6082      	str	r2, [r0, #8]
    : view(v)
 8004546:	4a04      	ldr	r2, [pc, #16]	; (8004558 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 8004548:	60c1      	str	r1, [r0, #12]
 800454a:	f102 0408 	add.w	r4, r2, #8
 800454e:	3220      	adds	r2, #32
 8004550:	6004      	str	r4, [r0, #0]
 8004552:	6042      	str	r2, [r0, #4]
}
 8004554:	bd10      	pop	{r4, pc}
 8004556:	bf00      	nop
 8004558:	080243c0 	.word	0x080243c0

0800455c <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 800455c:	4770      	bx	lr

0800455e <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 800455e:	4770      	bx	lr

08004560 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 8004560:	f7ff bc73 	b.w	8003e4a <_ZN15Screen2ViewBase11setupScreenEv>

08004564 <_ZN11Screen2ViewD0Ev>:
 8004564:	b510      	push	{r4, lr}
 8004566:	21a0      	movs	r1, #160	; 0xa0
 8004568:	4604      	mov	r4, r0
 800456a:	f01c ffb2 	bl	80214d2 <_ZdlPvj>
 800456e:	4620      	mov	r0, r4
 8004570:	bd10      	pop	{r4, pc}
	...

08004574 <_ZN11Screen2View15handleTickEventEv>:

void Screen2View::handleTickEvent()
{
 8004574:	b508      	push	{r3, lr}
	if(screen == 1) {
 8004576:	4b05      	ldr	r3, [pc, #20]	; (800458c <_ZN11Screen2View15handleTickEventEv+0x18>)
 8004578:	681b      	ldr	r3, [r3, #0]
 800457a:	2b01      	cmp	r3, #1
 800457c:	d105      	bne.n	800458a <_ZN11Screen2View15handleTickEventEv+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800457e:	f00b fd73 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
		application().gotoScreen1ScreenNoTransition();
	}
}
 8004582:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
		application().gotoScreen1ScreenNoTransition();
 8004586:	f7fd bf35 	b.w	80023f4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 800458a:	bd08      	pop	{r3, pc}
 800458c:	2000e6a4 	.word	0x2000e6a4

08004590 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8004590:	b510      	push	{r4, lr}
 8004592:	4604      	mov	r4, r0
 8004594:	f7ff fc6e 	bl	8003e74 <_ZN15Screen2ViewBaseC1Ev>
 8004598:	4b01      	ldr	r3, [pc, #4]	; (80045a0 <_ZN11Screen2ViewC1Ev+0x10>)
 800459a:	6023      	str	r3, [r4, #0]
}
 800459c:	4620      	mov	r0, r4
 800459e:	bd10      	pop	{r4, pc}
 80045a0:	080243f0 	.word	0x080243f0

080045a4 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 80045a4:	4770      	bx	lr

080045a6 <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 80045a6:	2000      	movs	r0, #0
 80045a8:	4770      	bx	lr

080045aa <ft6x06_ReadID>:
{
 80045aa:	b510      	push	{r4, lr}
 80045ac:	4604      	mov	r4, r0
  TS_IO_Init();
 80045ae:	f000 fb7d 	bl	8004cac <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 80045b2:	21a8      	movs	r1, #168	; 0xa8
 80045b4:	b2e0      	uxtb	r0, r4
 80045b6:	f000 fb93 	bl	8004ce0 <TS_IO_Read>
}
 80045ba:	b280      	uxth	r0, r0
 80045bc:	bd10      	pop	{r4, pc}
	...

080045c0 <ft6x06_TS_DetectTouch>:
{
 80045c0:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 80045c2:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80045c4:	2102      	movs	r1, #2
 80045c6:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 80045c8:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80045cc:	f000 fb88 	bl	8004ce0 <TS_IO_Read>
 80045d0:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 80045d4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80045d8:	f003 030f 	and.w	r3, r3, #15
 80045dc:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 80045e0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80045e4:	2b02      	cmp	r3, #2
    nbTouch = 0;
 80045e6:	bf88      	it	hi
 80045e8:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80045ec:	4b04      	ldr	r3, [pc, #16]	; (8004600 <ft6x06_TS_DetectTouch+0x40>)
 80045ee:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 80045f2:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80045f6:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 80045f8:	2200      	movs	r2, #0
 80045fa:	709a      	strb	r2, [r3, #2]
}
 80045fc:	b002      	add	sp, #8
 80045fe:	bd10      	pop	{r4, pc}
 8004600:	20005532 	.word	0x20005532

08004604 <ft6x06_TS_GetXY>:
{
 8004604:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8004606:	4c15      	ldr	r4, [pc, #84]	; (800465c <ft6x06_TS_GetXY+0x58>)
{
 8004608:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800460a:	78a3      	ldrb	r3, [r4, #2]
 800460c:	7862      	ldrb	r2, [r4, #1]
 800460e:	429a      	cmp	r2, r3
{
 8004610:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8004612:	d91f      	bls.n	8004654 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8004614:	b303      	cbz	r3, 8004658 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8004616:	2b01      	cmp	r3, #1
 8004618:	bf14      	ite	ne
 800461a:	2100      	movne	r1, #0
 800461c:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 800461e:	2304      	movs	r3, #4
 8004620:	eb0d 0203 	add.w	r2, sp, r3
 8004624:	b2c0      	uxtb	r0, r0
 8004626:	f000 fb77 	bl	8004d18 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 800462a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800462e:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8004632:	021b      	lsls	r3, r3, #8
 8004634:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8004638:	4313      	orrs	r3, r2
 800463a:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 800463c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8004640:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8004644:	021b      	lsls	r3, r3, #8
 8004646:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800464a:	4313      	orrs	r3, r2
 800464c:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 800464e:	78a3      	ldrb	r3, [r4, #2]
 8004650:	3301      	adds	r3, #1
 8004652:	70a3      	strb	r3, [r4, #2]
}
 8004654:	b002      	add	sp, #8
 8004656:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8004658:	2103      	movs	r1, #3
 800465a:	e7e0      	b.n	800461e <ft6x06_TS_GetXY+0x1a>
 800465c:	20005532 	.word	0x20005532

08004660 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8004660:	2201      	movs	r2, #1
 8004662:	21a4      	movs	r1, #164	; 0xa4
 8004664:	b2c0      	uxtb	r0, r0
 8004666:	f000 bb23 	b.w	8004cb0 <TS_IO_Write>

0800466a <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800466a:	2200      	movs	r2, #0
 800466c:	21a4      	movs	r1, #164	; 0xa4
 800466e:	b2c0      	uxtb	r0, r0
 8004670:	f000 bb1e 	b.w	8004cb0 <TS_IO_Write>

08004674 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8004674:	f7ff bff9 	b.w	800466a <ft6x06_TS_DisableIT>

08004678 <ft6x06_TS_ClearIT>:
 8004678:	4770      	bx	lr
	...

0800467c <ft6x06_Init>:
{  
 800467c:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 800467e:	4b09      	ldr	r3, [pc, #36]	; (80046a4 <ft6x06_Init+0x28>)
 8004680:	781a      	ldrb	r2, [r3, #0]
 8004682:	4290      	cmp	r0, r2
 8004684:	d00a      	beq.n	800469c <ft6x06_Init+0x20>
 8004686:	7859      	ldrb	r1, [r3, #1]
 8004688:	4288      	cmp	r0, r1
 800468a:	d007      	beq.n	800469c <ft6x06_Init+0x20>
 800468c:	b10a      	cbz	r2, 8004692 <ft6x06_Init+0x16>
 800468e:	b929      	cbnz	r1, 800469c <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8004690:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8004692:	5498      	strb	r0, [r3, r2]
}
 8004694:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8004698:	f000 bb08 	b.w	8004cac <TS_IO_Init>
}
 800469c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80046a0:	4770      	bx	lr
 80046a2:	bf00      	nop
 80046a4:	20005530 	.word	0x20005530

080046a8 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 80046a8:	b538      	push	{r3, r4, r5, lr}
 80046aa:	4604      	mov	r4, r0
 80046ac:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80046ae:	2000      	movs	r0, #0
 80046b0:	49cb      	ldr	r1, [pc, #812]	; (80049e0 <OTM8009A_Init+0x338>)
 80046b2:	f7fc f9b1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 80046b6:	49cb      	ldr	r1, [pc, #812]	; (80049e4 <OTM8009A_Init+0x33c>)
 80046b8:	2003      	movs	r0, #3
 80046ba:	f7fc f9ad 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 80046be:	49ca      	ldr	r1, [pc, #808]	; (80049e8 <OTM8009A_Init+0x340>)
 80046c0:	2000      	movs	r0, #0
 80046c2:	f7fc f9a9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 80046c6:	49c9      	ldr	r1, [pc, #804]	; (80049ec <OTM8009A_Init+0x344>)
 80046c8:	2002      	movs	r0, #2
 80046ca:	f7fc f9a5 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80046ce:	49c6      	ldr	r1, [pc, #792]	; (80049e8 <OTM8009A_Init+0x340>)
 80046d0:	2000      	movs	r0, #0
 80046d2:	f7fc f9a1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 80046d6:	49c6      	ldr	r1, [pc, #792]	; (80049f0 <OTM8009A_Init+0x348>)
 80046d8:	2000      	movs	r0, #0
 80046da:	f7fc f99d 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80046de:	200a      	movs	r0, #10
 80046e0:	f000 fb30 	bl	8004d44 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 80046e4:	49c3      	ldr	r1, [pc, #780]	; (80049f4 <OTM8009A_Init+0x34c>)
 80046e6:	2000      	movs	r0, #0
 80046e8:	f7fc f996 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 80046ec:	49c2      	ldr	r1, [pc, #776]	; (80049f8 <OTM8009A_Init+0x350>)
 80046ee:	2000      	movs	r0, #0
 80046f0:	f7fc f992 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80046f4:	200a      	movs	r0, #10
 80046f6:	f000 fb25 	bl	8004d44 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 80046fa:	49c0      	ldr	r1, [pc, #768]	; (80049fc <OTM8009A_Init+0x354>)
 80046fc:	2000      	movs	r0, #0
 80046fe:	f7fc f98b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8004702:	49bf      	ldr	r1, [pc, #764]	; (8004a00 <OTM8009A_Init+0x358>)
 8004704:	2000      	movs	r0, #0
 8004706:	f7fc f987 	bl	8000a18 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 800470a:	49be      	ldr	r1, [pc, #760]	; (8004a04 <OTM8009A_Init+0x35c>)
 800470c:	2000      	movs	r0, #0
 800470e:	f7fc f983 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8004712:	49bd      	ldr	r1, [pc, #756]	; (8004a08 <OTM8009A_Init+0x360>)
 8004714:	2000      	movs	r0, #0
 8004716:	f7fc f97f 	bl	8000a18 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 800471a:	49bc      	ldr	r1, [pc, #752]	; (8004a0c <OTM8009A_Init+0x364>)
 800471c:	2000      	movs	r0, #0
 800471e:	f7fc f97b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8004722:	49bb      	ldr	r1, [pc, #748]	; (8004a10 <OTM8009A_Init+0x368>)
 8004724:	2000      	movs	r0, #0
 8004726:	f7fc f977 	bl	8000a18 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800472a:	49ad      	ldr	r1, [pc, #692]	; (80049e0 <OTM8009A_Init+0x338>)
 800472c:	2000      	movs	r0, #0
 800472e:	f7fc f973 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8004732:	49b8      	ldr	r1, [pc, #736]	; (8004a14 <OTM8009A_Init+0x36c>)
 8004734:	2000      	movs	r0, #0
 8004736:	f7fc f96f 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800473a:	49b7      	ldr	r1, [pc, #732]	; (8004a18 <OTM8009A_Init+0x370>)
 800473c:	2000      	movs	r0, #0
 800473e:	f7fc f96b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8004742:	49b6      	ldr	r1, [pc, #728]	; (8004a1c <OTM8009A_Init+0x374>)
 8004744:	2000      	movs	r0, #0
 8004746:	f7fc f967 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800474a:	49b5      	ldr	r1, [pc, #724]	; (8004a20 <OTM8009A_Init+0x378>)
 800474c:	2000      	movs	r0, #0
 800474e:	f7fc f963 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8004752:	49b4      	ldr	r1, [pc, #720]	; (8004a24 <OTM8009A_Init+0x37c>)
 8004754:	2000      	movs	r0, #0
 8004756:	f7fc f95f 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 800475a:	49b3      	ldr	r1, [pc, #716]	; (8004a28 <OTM8009A_Init+0x380>)
 800475c:	2000      	movs	r0, #0
 800475e:	f7fc f95b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8004762:	49b2      	ldr	r1, [pc, #712]	; (8004a2c <OTM8009A_Init+0x384>)
 8004764:	2000      	movs	r0, #0
 8004766:	f7fc f957 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 800476a:	49b1      	ldr	r1, [pc, #708]	; (8004a30 <OTM8009A_Init+0x388>)
 800476c:	2000      	movs	r0, #0
 800476e:	f7fc f953 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8004772:	49a5      	ldr	r1, [pc, #660]	; (8004a08 <OTM8009A_Init+0x360>)
 8004774:	2000      	movs	r0, #0
 8004776:	f7fc f94f 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800477a:	4999      	ldr	r1, [pc, #612]	; (80049e0 <OTM8009A_Init+0x338>)
 800477c:	2000      	movs	r0, #0
 800477e:	f7fc f94b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8004782:	49ac      	ldr	r1, [pc, #688]	; (8004a34 <OTM8009A_Init+0x38c>)
 8004784:	2002      	movs	r0, #2
 8004786:	f7fc f947 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 800478a:	49ab      	ldr	r1, [pc, #684]	; (8004a38 <OTM8009A_Init+0x390>)
 800478c:	2000      	movs	r0, #0
 800478e:	f7fc f943 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8004792:	49aa      	ldr	r1, [pc, #680]	; (8004a3c <OTM8009A_Init+0x394>)
 8004794:	2000      	movs	r0, #0
 8004796:	f7fc f93f 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 800479a:	49a9      	ldr	r1, [pc, #676]	; (8004a40 <OTM8009A_Init+0x398>)
 800479c:	2000      	movs	r0, #0
 800479e:	f7fc f93b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 80047a2:	49a8      	ldr	r1, [pc, #672]	; (8004a44 <OTM8009A_Init+0x39c>)
 80047a4:	2000      	movs	r0, #0
 80047a6:	f7fc f937 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 80047aa:	49a7      	ldr	r1, [pc, #668]	; (8004a48 <OTM8009A_Init+0x3a0>)
 80047ac:	2000      	movs	r0, #0
 80047ae:	f7fc f933 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 80047b2:	49a6      	ldr	r1, [pc, #664]	; (8004a4c <OTM8009A_Init+0x3a4>)
 80047b4:	2000      	movs	r0, #0
 80047b6:	f7fc f92f 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80047ba:	4997      	ldr	r1, [pc, #604]	; (8004a18 <OTM8009A_Init+0x370>)
 80047bc:	2000      	movs	r0, #0
 80047be:	f7fc f92b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 80047c2:	49a3      	ldr	r1, [pc, #652]	; (8004a50 <OTM8009A_Init+0x3a8>)
 80047c4:	2000      	movs	r0, #0
 80047c6:	f7fc f927 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 80047ca:	4995      	ldr	r1, [pc, #596]	; (8004a20 <OTM8009A_Init+0x378>)
 80047cc:	2000      	movs	r0, #0
 80047ce:	f7fc f923 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 80047d2:	49a0      	ldr	r1, [pc, #640]	; (8004a54 <OTM8009A_Init+0x3ac>)
 80047d4:	2000      	movs	r0, #0
 80047d6:	f7fc f91f 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 80047da:	499f      	ldr	r1, [pc, #636]	; (8004a58 <OTM8009A_Init+0x3b0>)
 80047dc:	2000      	movs	r0, #0
 80047de:	f7fc f91b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 80047e2:	499e      	ldr	r1, [pc, #632]	; (8004a5c <OTM8009A_Init+0x3b4>)
 80047e4:	2002      	movs	r0, #2
 80047e6:	f7fc f917 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80047ea:	497f      	ldr	r1, [pc, #508]	; (80049e8 <OTM8009A_Init+0x340>)
 80047ec:	2000      	movs	r0, #0
 80047ee:	f7fc f913 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 80047f2:	499b      	ldr	r1, [pc, #620]	; (8004a60 <OTM8009A_Init+0x3b8>)
 80047f4:	2006      	movs	r0, #6
 80047f6:	f7fc f90f 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80047fa:	499a      	ldr	r1, [pc, #616]	; (8004a64 <OTM8009A_Init+0x3bc>)
 80047fc:	2000      	movs	r0, #0
 80047fe:	f7fc f90b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8004802:	4999      	ldr	r1, [pc, #612]	; (8004a68 <OTM8009A_Init+0x3c0>)
 8004804:	200e      	movs	r0, #14
 8004806:	f7fc f907 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800480a:	4998      	ldr	r1, [pc, #608]	; (8004a6c <OTM8009A_Init+0x3c4>)
 800480c:	2000      	movs	r0, #0
 800480e:	f7fc f903 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8004812:	4997      	ldr	r1, [pc, #604]	; (8004a70 <OTM8009A_Init+0x3c8>)
 8004814:	200e      	movs	r0, #14
 8004816:	f7fc f8ff 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800481a:	4996      	ldr	r1, [pc, #600]	; (8004a74 <OTM8009A_Init+0x3cc>)
 800481c:	2000      	movs	r0, #0
 800481e:	f7fc f8fb 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8004822:	4995      	ldr	r1, [pc, #596]	; (8004a78 <OTM8009A_Init+0x3d0>)
 8004824:	200a      	movs	r0, #10
 8004826:	f7fc f8f7 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800482a:	4994      	ldr	r1, [pc, #592]	; (8004a7c <OTM8009A_Init+0x3d4>)
 800482c:	2000      	movs	r0, #0
 800482e:	f7fc f8f3 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8004832:	4993      	ldr	r1, [pc, #588]	; (8004a80 <OTM8009A_Init+0x3d8>)
 8004834:	2000      	movs	r0, #0
 8004836:	f7fc f8ef 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800483a:	496b      	ldr	r1, [pc, #428]	; (80049e8 <OTM8009A_Init+0x340>)
 800483c:	2000      	movs	r0, #0
 800483e:	f7fc f8eb 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8004842:	4990      	ldr	r1, [pc, #576]	; (8004a84 <OTM8009A_Init+0x3dc>)
 8004844:	200a      	movs	r0, #10
 8004846:	f7fc f8e7 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800484a:	498f      	ldr	r1, [pc, #572]	; (8004a88 <OTM8009A_Init+0x3e0>)
 800484c:	2000      	movs	r0, #0
 800484e:	f7fc f8e3 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8004852:	498e      	ldr	r1, [pc, #568]	; (8004a8c <OTM8009A_Init+0x3e4>)
 8004854:	200f      	movs	r0, #15
 8004856:	f7fc f8df 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800485a:	4982      	ldr	r1, [pc, #520]	; (8004a64 <OTM8009A_Init+0x3bc>)
 800485c:	2000      	movs	r0, #0
 800485e:	f7fc f8db 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8004862:	498b      	ldr	r1, [pc, #556]	; (8004a90 <OTM8009A_Init+0x3e8>)
 8004864:	200f      	movs	r0, #15
 8004866:	f7fc f8d7 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800486a:	4980      	ldr	r1, [pc, #512]	; (8004a6c <OTM8009A_Init+0x3c4>)
 800486c:	2000      	movs	r0, #0
 800486e:	f7fc f8d3 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8004872:	4988      	ldr	r1, [pc, #544]	; (8004a94 <OTM8009A_Init+0x3ec>)
 8004874:	200a      	movs	r0, #10
 8004876:	f7fc f8cf 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800487a:	497e      	ldr	r1, [pc, #504]	; (8004a74 <OTM8009A_Init+0x3cc>)
 800487c:	2000      	movs	r0, #0
 800487e:	f7fc f8cb 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8004882:	4985      	ldr	r1, [pc, #532]	; (8004a98 <OTM8009A_Init+0x3f0>)
 8004884:	200f      	movs	r0, #15
 8004886:	f7fc f8c7 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800488a:	497c      	ldr	r1, [pc, #496]	; (8004a7c <OTM8009A_Init+0x3d4>)
 800488c:	2000      	movs	r0, #0
 800488e:	f7fc f8c3 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8004892:	4982      	ldr	r1, [pc, #520]	; (8004a9c <OTM8009A_Init+0x3f4>)
 8004894:	200f      	movs	r0, #15
 8004896:	f7fc f8bf 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 800489a:	4981      	ldr	r1, [pc, #516]	; (8004aa0 <OTM8009A_Init+0x3f8>)
 800489c:	2000      	movs	r0, #0
 800489e:	f7fc f8bb 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 80048a2:	4980      	ldr	r1, [pc, #512]	; (8004aa4 <OTM8009A_Init+0x3fc>)
 80048a4:	200a      	movs	r0, #10
 80048a6:	f7fc f8b7 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 80048aa:	497f      	ldr	r1, [pc, #508]	; (8004aa8 <OTM8009A_Init+0x400>)
 80048ac:	2000      	movs	r0, #0
 80048ae:	f7fc f8b3 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 80048b2:	497e      	ldr	r1, [pc, #504]	; (8004aac <OTM8009A_Init+0x404>)
 80048b4:	200a      	movs	r0, #10
 80048b6:	f7fc f8af 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80048ba:	494b      	ldr	r1, [pc, #300]	; (80049e8 <OTM8009A_Init+0x340>)
 80048bc:	2000      	movs	r0, #0
 80048be:	f7fc f8ab 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 80048c2:	497b      	ldr	r1, [pc, #492]	; (8004ab0 <OTM8009A_Init+0x408>)
 80048c4:	200a      	movs	r0, #10
 80048c6:	f7fc f8a7 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 80048ca:	496f      	ldr	r1, [pc, #444]	; (8004a88 <OTM8009A_Init+0x3e0>)
 80048cc:	2000      	movs	r0, #0
 80048ce:	f7fc f8a3 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 80048d2:	4978      	ldr	r1, [pc, #480]	; (8004ab4 <OTM8009A_Init+0x40c>)
 80048d4:	200f      	movs	r0, #15
 80048d6:	f7fc f89f 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80048da:	4962      	ldr	r1, [pc, #392]	; (8004a64 <OTM8009A_Init+0x3bc>)
 80048dc:	2000      	movs	r0, #0
 80048de:	f7fc f89b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 80048e2:	4975      	ldr	r1, [pc, #468]	; (8004ab8 <OTM8009A_Init+0x410>)
 80048e4:	200f      	movs	r0, #15
 80048e6:	f7fc f897 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80048ea:	4960      	ldr	r1, [pc, #384]	; (8004a6c <OTM8009A_Init+0x3c4>)
 80048ec:	2000      	movs	r0, #0
 80048ee:	f7fc f893 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 80048f2:	4972      	ldr	r1, [pc, #456]	; (8004abc <OTM8009A_Init+0x414>)
 80048f4:	200a      	movs	r0, #10
 80048f6:	f7fc f88f 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80048fa:	495e      	ldr	r1, [pc, #376]	; (8004a74 <OTM8009A_Init+0x3cc>)
 80048fc:	2000      	movs	r0, #0
 80048fe:	f7fc f88b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8004902:	496f      	ldr	r1, [pc, #444]	; (8004ac0 <OTM8009A_Init+0x418>)
 8004904:	200f      	movs	r0, #15
 8004906:	f7fc f887 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800490a:	495c      	ldr	r1, [pc, #368]	; (8004a7c <OTM8009A_Init+0x3d4>)
 800490c:	2000      	movs	r0, #0
 800490e:	f7fc f883 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8004912:	496c      	ldr	r1, [pc, #432]	; (8004ac4 <OTM8009A_Init+0x41c>)
 8004914:	200f      	movs	r0, #15
 8004916:	f7fc f87f 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800491a:	493f      	ldr	r1, [pc, #252]	; (8004a18 <OTM8009A_Init+0x370>)
 800491c:	2000      	movs	r0, #0
 800491e:	f7fc f87b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8004922:	4969      	ldr	r1, [pc, #420]	; (8004ac8 <OTM8009A_Init+0x420>)
 8004924:	2000      	movs	r0, #0
 8004926:	f7fc f877 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 800492a:	4968      	ldr	r1, [pc, #416]	; (8004acc <OTM8009A_Init+0x424>)
 800492c:	2000      	movs	r0, #0
 800492e:	f7fc f873 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8004932:	4967      	ldr	r1, [pc, #412]	; (8004ad0 <OTM8009A_Init+0x428>)
 8004934:	2000      	movs	r0, #0
 8004936:	f7fc f86f 	bl	8000a18 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 800493a:	4966      	ldr	r1, [pc, #408]	; (8004ad4 <OTM8009A_Init+0x42c>)
 800493c:	2000      	movs	r0, #0
 800493e:	f7fc f86b 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8004942:	4965      	ldr	r1, [pc, #404]	; (8004ad8 <OTM8009A_Init+0x430>)
 8004944:	2000      	movs	r0, #0
 8004946:	f7fc f867 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800494a:	4925      	ldr	r1, [pc, #148]	; (80049e0 <OTM8009A_Init+0x338>)
 800494c:	2000      	movs	r0, #0
 800494e:	f7fc f863 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8004952:	4962      	ldr	r1, [pc, #392]	; (8004adc <OTM8009A_Init+0x434>)
 8004954:	2003      	movs	r0, #3
 8004956:	f7fc f85f 	bl	8000a18 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800495a:	4921      	ldr	r1, [pc, #132]	; (80049e0 <OTM8009A_Init+0x338>)
 800495c:	2000      	movs	r0, #0
 800495e:	f7fc f85b 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8004962:	491f      	ldr	r1, [pc, #124]	; (80049e0 <OTM8009A_Init+0x338>)
 8004964:	2000      	movs	r0, #0
 8004966:	f7fc f857 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 800496a:	495d      	ldr	r1, [pc, #372]	; (8004ae0 <OTM8009A_Init+0x438>)
 800496c:	2010      	movs	r0, #16
 800496e:	f7fc f853 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8004972:	491b      	ldr	r1, [pc, #108]	; (80049e0 <OTM8009A_Init+0x338>)
 8004974:	2000      	movs	r0, #0
 8004976:	f7fc f84f 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 800497a:	495a      	ldr	r1, [pc, #360]	; (8004ae4 <OTM8009A_Init+0x43c>)
 800497c:	2010      	movs	r0, #16
 800497e:	f7fc f84b 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 8004982:	2000      	movs	r0, #0
 8004984:	4958      	ldr	r1, [pc, #352]	; (8004ae8 <OTM8009A_Init+0x440>)
 8004986:	f7fc f847 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 800498a:	2078      	movs	r0, #120	; 0x78
 800498c:	f000 f9da 	bl	8004d44 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8004990:	2c00      	cmp	r4, #0
 8004992:	f000 80c9 	beq.w	8004b28 <OTM8009A_Init+0x480>
 8004996:	2c02      	cmp	r4, #2
 8004998:	d103      	bne.n	80049a2 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 800499a:	4954      	ldr	r1, [pc, #336]	; (8004aec <OTM8009A_Init+0x444>)
 800499c:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 800499e:	f7fc f83b 	bl	8000a18 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 80049a2:	2d01      	cmp	r5, #1
 80049a4:	d10b      	bne.n	80049be <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 80049a6:	4952      	ldr	r1, [pc, #328]	; (8004af0 <OTM8009A_Init+0x448>)
 80049a8:	2000      	movs	r0, #0
 80049aa:	f7fc f835 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 80049ae:	4951      	ldr	r1, [pc, #324]	; (8004af4 <OTM8009A_Init+0x44c>)
 80049b0:	2004      	movs	r0, #4
 80049b2:	f7fc f831 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 80049b6:	4950      	ldr	r1, [pc, #320]	; (8004af8 <OTM8009A_Init+0x450>)
 80049b8:	2004      	movs	r0, #4
 80049ba:	f7fc f82d 	bl	8000a18 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 80049be:	494f      	ldr	r1, [pc, #316]	; (8004afc <OTM8009A_Init+0x454>)
 80049c0:	2000      	movs	r0, #0
 80049c2:	f7fc f829 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 80049c6:	494e      	ldr	r1, [pc, #312]	; (8004b00 <OTM8009A_Init+0x458>)
 80049c8:	2000      	movs	r0, #0
 80049ca:	f7fc f825 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 80049ce:	494d      	ldr	r1, [pc, #308]	; (8004b04 <OTM8009A_Init+0x45c>)
 80049d0:	2000      	movs	r0, #0
 80049d2:	f7fc f821 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 80049d6:	494c      	ldr	r1, [pc, #304]	; (8004b08 <OTM8009A_Init+0x460>)
 80049d8:	2000      	movs	r0, #0
 80049da:	f7fc f81d 	bl	8000a18 <DSI_IO_WriteCmd>
 80049de:	e095      	b.n	8004b0c <OTM8009A_Init+0x464>
 80049e0:	0802441c 	.word	0x0802441c
 80049e4:	08024482 	.word	0x08024482
 80049e8:	08024432 	.word	0x08024432
 80049ec:	08024508 	.word	0x08024508
 80049f0:	08024448 	.word	0x08024448
 80049f4:	0802445e 	.word	0x0802445e
 80049f8:	08024474 	.word	0x08024474
 80049fc:	0802447a 	.word	0x0802447a
 8004a00:	0802447c 	.word	0x0802447c
 8004a04:	0802447e 	.word	0x0802447e
 8004a08:	08024480 	.word	0x08024480
 8004a0c:	0802441e 	.word	0x0802441e
 8004a10:	08024420 	.word	0x08024420
 8004a14:	08024422 	.word	0x08024422
 8004a18:	08024424 	.word	0x08024424
 8004a1c:	08024426 	.word	0x08024426
 8004a20:	08024428 	.word	0x08024428
 8004a24:	0802442a 	.word	0x0802442a
 8004a28:	0802442c 	.word	0x0802442c
 8004a2c:	0802442e 	.word	0x0802442e
 8004a30:	08024430 	.word	0x08024430
 8004a34:	08024586 	.word	0x08024586
 8004a38:	08024434 	.word	0x08024434
 8004a3c:	08024436 	.word	0x08024436
 8004a40:	08024438 	.word	0x08024438
 8004a44:	0802443a 	.word	0x0802443a
 8004a48:	0802443c 	.word	0x0802443c
 8004a4c:	0802443e 	.word	0x0802443e
 8004a50:	08024440 	.word	0x08024440
 8004a54:	08024442 	.word	0x08024442
 8004a58:	08024444 	.word	0x08024444
 8004a5c:	08024589 	.word	0x08024589
 8004a60:	0802458c 	.word	0x0802458c
 8004a64:	08024446 	.word	0x08024446
 8004a68:	08024593 	.word	0x08024593
 8004a6c:	0802444a 	.word	0x0802444a
 8004a70:	080245a2 	.word	0x080245a2
 8004a74:	0802444c 	.word	0x0802444c
 8004a78:	08024486 	.word	0x08024486
 8004a7c:	0802444e 	.word	0x0802444e
 8004a80:	0802446c 	.word	0x0802446c
 8004a84:	08024491 	.word	0x08024491
 8004a88:	08024450 	.word	0x08024450
 8004a8c:	0802449c 	.word	0x0802449c
 8004a90:	080244ac 	.word	0x080244ac
 8004a94:	080244bc 	.word	0x080244bc
 8004a98:	080244c7 	.word	0x080244c7
 8004a9c:	080244d7 	.word	0x080244d7
 8004aa0:	08024452 	.word	0x08024452
 8004aa4:	080244e7 	.word	0x080244e7
 8004aa8:	08024454 	.word	0x08024454
 8004aac:	080244f2 	.word	0x080244f2
 8004ab0:	080244fd 	.word	0x080244fd
 8004ab4:	0802450b 	.word	0x0802450b
 8004ab8:	0802451b 	.word	0x0802451b
 8004abc:	0802452b 	.word	0x0802452b
 8004ac0:	08024536 	.word	0x08024536
 8004ac4:	08024546 	.word	0x08024546
 8004ac8:	0802446e 	.word	0x0802446e
 8004acc:	08024470 	.word	0x08024470
 8004ad0:	08024472 	.word	0x08024472
 8004ad4:	08024476 	.word	0x08024476
 8004ad8:	08024478 	.word	0x08024478
 8004adc:	08024556 	.word	0x08024556
 8004ae0:	08024564 	.word	0x08024564
 8004ae4:	08024575 	.word	0x08024575
 8004ae8:	08024456 	.word	0x08024456
 8004aec:	08024458 	.word	0x08024458
 8004af0:	0802445c 	.word	0x0802445c
 8004af4:	0802455a 	.word	0x0802455a
 8004af8:	0802455f 	.word	0x0802455f
 8004afc:	08024460 	.word	0x08024460
 8004b00:	08024462 	.word	0x08024462
 8004b04:	08024464 	.word	0x08024464
 8004b08:	08024466 	.word	0x08024466

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8004b0c:	4908      	ldr	r1, [pc, #32]	; (8004b30 <OTM8009A_Init+0x488>)
 8004b0e:	2000      	movs	r0, #0
 8004b10:	f7fb ff82 	bl	8000a18 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8004b14:	4907      	ldr	r1, [pc, #28]	; (8004b34 <OTM8009A_Init+0x48c>)
 8004b16:	2000      	movs	r0, #0
 8004b18:	f7fb ff7e 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8004b1c:	4906      	ldr	r1, [pc, #24]	; (8004b38 <OTM8009A_Init+0x490>)
 8004b1e:	2000      	movs	r0, #0
 8004b20:	f7fb ff7a 	bl	8000a18 <DSI_IO_WriteCmd>

  return 0;
}
 8004b24:	2000      	movs	r0, #0
 8004b26:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8004b28:	4904      	ldr	r1, [pc, #16]	; (8004b3c <OTM8009A_Init+0x494>)
 8004b2a:	4620      	mov	r0, r4
 8004b2c:	e737      	b.n	800499e <OTM8009A_Init+0x2f6>
 8004b2e:	bf00      	nop
 8004b30:	08024468 	.word	0x08024468
 8004b34:	0802441c 	.word	0x0802441c
 8004b38:	0802446a 	.word	0x0802446a
 8004b3c:	0802445a 	.word	0x0802445a

08004b40 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8004b40:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8004b42:	4d2e      	ldr	r5, [pc, #184]	; (8004bfc <I2C1_Init+0xbc>)
{
 8004b44:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8004b46:	4628      	mov	r0, r5
 8004b48:	f002 fc9c 	bl	8007484 <HAL_I2C_GetState>
 8004b4c:	4604      	mov	r4, r0
 8004b4e:	2800      	cmp	r0, #0
 8004b50:	d151      	bne.n	8004bf6 <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8004b52:	4a2b      	ldr	r2, [pc, #172]	; (8004c00 <I2C1_Init+0xc0>)
 8004b54:	4b2b      	ldr	r3, [pc, #172]	; (8004c04 <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8004b56:	4e2c      	ldr	r6, [pc, #176]	; (8004c08 <I2C1_Init+0xc8>)
 8004b58:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8004b5a:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8004b5e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8004b62:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8004b66:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8004b6a:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8004b6e:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8004b70:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8004b72:	f043 0302 	orr.w	r3, r3, #2
 8004b76:	6333      	str	r3, [r6, #48]	; 0x30
 8004b78:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8004b7a:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8004b7c:	f003 0302 	and.w	r3, r3, #2
 8004b80:	9301      	str	r3, [sp, #4]
 8004b82:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8004b84:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004b88:	2312      	movs	r3, #18
 8004b8a:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8004b8e:	2002      	movs	r0, #2
 8004b90:	2304      	movs	r3, #4
 8004b92:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004b96:	a903      	add	r1, sp, #12
 8004b98:	481c      	ldr	r0, [pc, #112]	; (8004c0c <I2C1_Init+0xcc>)
 8004b9a:	f001 fe93 	bl	80068c4 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8004b9e:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004ba2:	481a      	ldr	r0, [pc, #104]	; (8004c0c <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8004ba4:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004ba6:	a903      	add	r1, sp, #12
 8004ba8:	f001 fe8c 	bl	80068c4 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8004bac:	9402      	str	r4, [sp, #8]
 8004bae:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8004bb0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004bb4:	6433      	str	r3, [r6, #64]	; 0x40
 8004bb6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8004bb8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004bbc:	9302      	str	r3, [sp, #8]
 8004bbe:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8004bc0:	6a33      	ldr	r3, [r6, #32]
 8004bc2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004bc6:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8004bc8:	6a33      	ldr	r3, [r6, #32]
 8004bca:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8004bce:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8004bd0:	4622      	mov	r2, r4
 8004bd2:	2105      	movs	r1, #5
 8004bd4:	201f      	movs	r0, #31
 8004bd6:	f001 f841 	bl	8005c5c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8004bda:	201f      	movs	r0, #31
 8004bdc:	f001 f870 	bl	8005cc0 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8004be0:	4622      	mov	r2, r4
 8004be2:	2105      	movs	r1, #5
 8004be4:	2020      	movs	r0, #32
 8004be6:	f001 f839 	bl	8005c5c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8004bea:	2020      	movs	r0, #32
 8004bec:	f001 f868 	bl	8005cc0 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8004bf0:	4628      	mov	r0, r5
 8004bf2:	f002 f9ed 	bl	8006fd0 <HAL_I2C_Init>
  }
}
 8004bf6:	b008      	add	sp, #32
 8004bf8:	bd70      	pop	{r4, r5, r6, pc}
 8004bfa:	bf00      	nop
 8004bfc:	20005538 	.word	0x20005538
 8004c00:	40005400 	.word	0x40005400
 8004c04:	00061a80 	.word	0x00061a80
 8004c08:	40023800 	.word	0x40023800
 8004c0c:	40020400 	.word	0x40020400

08004c10 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 8004c10:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 8004c12:	4803      	ldr	r0, [pc, #12]	; (8004c20 <I2C1_Error.isra.0+0x10>)
 8004c14:	f002 fa84 	bl	8007120 <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 8004c18:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 8004c1c:	f7ff bf90 	b.w	8004b40 <I2C1_Init>
 8004c20:	20005538 	.word	0x20005538

08004c24 <BSP_PB_Init>:
{
 8004c24:	b510      	push	{r4, lr}
 8004c26:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8004c28:	4b18      	ldr	r3, [pc, #96]	; (8004c8c <BSP_PB_Init+0x68>)
 8004c2a:	2400      	movs	r4, #0
 8004c2c:	9400      	str	r4, [sp, #0]
 8004c2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004c30:	f042 0201 	orr.w	r2, r2, #1
 8004c34:	631a      	str	r2, [r3, #48]	; 0x30
 8004c36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c38:	f003 0301 	and.w	r3, r3, #1
 8004c3c:	9300      	str	r3, [sp, #0]
 8004c3e:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8004c40:	b969      	cbnz	r1, 8004c5e <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8004c42:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8004c44:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8004c48:	2302      	movs	r3, #2
 8004c4a:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004c4c:	4b10      	ldr	r3, [pc, #64]	; (8004c90 <BSP_PB_Init+0x6c>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8004c4e:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004c50:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8004c54:	a901      	add	r1, sp, #4
 8004c56:	f001 fe35 	bl	80068c4 <HAL_GPIO_Init>
}
 8004c5a:	b006      	add	sp, #24
 8004c5c:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8004c5e:	2901      	cmp	r1, #1
 8004c60:	d1fb      	bne.n	8004c5a <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8004c62:	2302      	movs	r3, #2
 8004c64:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8004c66:	4b0b      	ldr	r3, [pc, #44]	; (8004c94 <BSP_PB_Init+0x70>)
 8004c68:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004c6a:	4b09      	ldr	r3, [pc, #36]	; (8004c90 <BSP_PB_Init+0x6c>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8004c6c:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004c6e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8004c72:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004c74:	a901      	add	r1, sp, #4
 8004c76:	f001 fe25 	bl	80068c4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8004c7a:	4622      	mov	r2, r4
 8004c7c:	210f      	movs	r1, #15
 8004c7e:	2006      	movs	r0, #6
 8004c80:	f000 ffec 	bl	8005c5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8004c84:	2006      	movs	r0, #6
 8004c86:	f001 f81b 	bl	8005cc0 <HAL_NVIC_EnableIRQ>
}
 8004c8a:	e7e6      	b.n	8004c5a <BSP_PB_Init+0x36>
 8004c8c:	40023800 	.word	0x40023800
 8004c90:	20000048 	.word	0x20000048
 8004c94:	10110000 	.word	0x10110000

08004c98 <BSP_PB_GetState>:
{
 8004c98:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8004c9a:	4b03      	ldr	r3, [pc, #12]	; (8004ca8 <BSP_PB_GetState+0x10>)
 8004c9c:	2101      	movs	r1, #1
 8004c9e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8004ca2:	f001 ff9b 	bl	8006bdc <HAL_GPIO_ReadPin>
}
 8004ca6:	bd08      	pop	{r3, pc}
 8004ca8:	20000048 	.word	0x20000048

08004cac <TS_IO_Init>:
 8004cac:	f7ff bf48 	b.w	8004b40 <I2C1_Init>

08004cb0 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8004cb0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8004cb2:	2301      	movs	r3, #1
 8004cb4:	f88d 2017 	strb.w	r2, [sp, #23]
 8004cb8:	2264      	movs	r2, #100	; 0x64
 8004cba:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8004cbe:	f10d 0217 	add.w	r2, sp, #23
 8004cc2:	9200      	str	r2, [sp, #0]
 8004cc4:	460a      	mov	r2, r1
 8004cc6:	4601      	mov	r1, r0
 8004cc8:	4804      	ldr	r0, [pc, #16]	; (8004cdc <TS_IO_Write+0x2c>)
 8004cca:	f002 fa43 	bl	8007154 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8004cce:	b108      	cbz	r0, 8004cd4 <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 8004cd0:	f7ff ff9e 	bl	8004c10 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 8004cd4:	b007      	add	sp, #28
 8004cd6:	f85d fb04 	ldr.w	pc, [sp], #4
 8004cda:	bf00      	nop
 8004cdc:	20005538 	.word	0x20005538

08004ce0 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8004ce0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8004ce2:	2300      	movs	r3, #0
{
 8004ce4:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8004ce6:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8004cea:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004cee:	2301      	movs	r3, #1
 8004cf0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8004cf4:	f10d 0117 	add.w	r1, sp, #23
 8004cf8:	9100      	str	r1, [sp, #0]
 8004cfa:	4601      	mov	r1, r0
 8004cfc:	4805      	ldr	r0, [pc, #20]	; (8004d14 <TS_IO_Read+0x34>)
 8004cfe:	f002 fab9 	bl	8007274 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8004d02:	b108      	cbz	r0, 8004d08 <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 8004d04:	f7ff ff84 	bl	8004c10 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 8004d08:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8004d0c:	b007      	add	sp, #28
 8004d0e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004d12:	bf00      	nop
 8004d14:	20005538 	.word	0x20005538

08004d18 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8004d18:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8004d1a:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8004d1e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004d22:	9200      	str	r2, [sp, #0]
 8004d24:	2301      	movs	r3, #1
 8004d26:	460a      	mov	r2, r1
 8004d28:	4601      	mov	r1, r0
 8004d2a:	4805      	ldr	r0, [pc, #20]	; (8004d40 <TS_IO_ReadMultiple+0x28>)
 8004d2c:	f002 faa2 	bl	8007274 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8004d30:	4604      	mov	r4, r0
 8004d32:	b108      	cbz	r0, 8004d38 <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 8004d34:	f7ff ff6c 	bl	8004c10 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8004d38:	b2a0      	uxth	r0, r4
 8004d3a:	b004      	add	sp, #16
 8004d3c:	bd10      	pop	{r4, pc}
 8004d3e:	bf00      	nop
 8004d40:	20005538 	.word	0x20005538

08004d44 <OTM8009A_IO_Delay>:
 8004d44:	f000 bc40 	b.w	80055c8 <HAL_Delay>

08004d48 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8004d48:	b500      	push	{lr}
 8004d4a:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004d4c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004d50:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004d52:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8004d56:	2205      	movs	r2, #5
 8004d58:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004d5a:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004d5c:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8004d5e:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8004d60:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004d64:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004d68:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8004d6c:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004d6e:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8004d70:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8004d72:	2210      	movs	r2, #16
 8004d74:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8004d76:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8004d7a:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8004d7c:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8004d7e:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8004d80:	a906      	add	r1, sp, #24
 8004d82:	466a      	mov	r2, sp
 8004d84:	4804      	ldr	r0, [pc, #16]	; (8004d98 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8004d86:	f002 ff00 	bl	8007b8a <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8004d8a:	3800      	subs	r0, #0
 8004d8c:	bf18      	it	ne
 8004d8e:	2001      	movne	r0, #1
 8004d90:	b015      	add	sp, #84	; 0x54
 8004d92:	f85d fb04 	ldr.w	pc, [sp], #4
 8004d96:	bf00      	nop
 8004d98:	2000e8f8 	.word	0x2000e8f8

08004d9c <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8004d9c:	b500      	push	{lr}
 8004d9e:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004da0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004da4:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8004da6:	2306      	movs	r3, #6
 8004da8:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004daa:	4817      	ldr	r0, [pc, #92]	; (8004e08 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004dac:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004dae:	f241 3288 	movw	r2, #5000	; 0x1388
 8004db2:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004db4:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004db8:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8004dbc:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8004dbe:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004dc0:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004dc2:	f002 fe9e 	bl	8007b02 <HAL_QSPI_Command>
 8004dc6:	b9e0      	cbnz	r0, 8004e02 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8004dc8:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8004dca:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8004dce:	2201      	movs	r2, #1
 8004dd0:	2310      	movs	r3, #16
 8004dd2:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8004dd6:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8004dda:	2305      	movs	r3, #5
 8004ddc:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8004de0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8004de4:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8004de6:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004de8:	4807      	ldr	r0, [pc, #28]	; (8004e08 <QSPI_WriteEnable.constprop.0+0x6c>)
 8004dea:	f241 3388 	movw	r3, #5000	; 0x1388
 8004dee:	466a      	mov	r2, sp
 8004df0:	a906      	add	r1, sp, #24
 8004df2:	f002 feca 	bl	8007b8a <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8004df6:	3800      	subs	r0, #0
 8004df8:	bf18      	it	ne
 8004dfa:	2001      	movne	r0, #1
}
 8004dfc:	b015      	add	sp, #84	; 0x54
 8004dfe:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8004e02:	2001      	movs	r0, #1
 8004e04:	e7fa      	b.n	8004dfc <QSPI_WriteEnable.constprop.0+0x60>
 8004e06:	bf00      	nop
 8004e08:	2000e8f8 	.word	0x2000e8f8

08004e0c <BSP_QSPI_EnableMemoryMappedMode>:
{
 8004e0c:	b500      	push	{lr}
 8004e0e:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004e10:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004e14:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8004e16:	23eb      	movs	r3, #235	; 0xeb
 8004e18:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8004e1a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8004e1e:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8004e20:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8004e24:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8004e26:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8004e2a:	2300      	movs	r3, #0
 8004e2c:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8004e30:	220a      	movs	r2, #10
 8004e32:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004e34:	a902      	add	r1, sp, #8
 8004e36:	466a      	mov	r2, sp
 8004e38:	4806      	ldr	r0, [pc, #24]	; (8004e54 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004e3a:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004e3c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8004e40:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004e42:	f002 fef2 	bl	8007c2a <HAL_QSPI_MemoryMapped>
}
 8004e46:	3800      	subs	r0, #0
 8004e48:	bf18      	it	ne
 8004e4a:	2001      	movne	r0, #1
 8004e4c:	b011      	add	sp, #68	; 0x44
 8004e4e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004e52:	bf00      	nop
 8004e54:	2000e8f8 	.word	0x2000e8f8

08004e58 <BSP_QSPI_MspInit>:
{
 8004e58:	b570      	push	{r4, r5, r6, lr}
 8004e5a:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8004e5c:	4b2c      	ldr	r3, [pc, #176]	; (8004f10 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004e5e:	482d      	ldr	r0, [pc, #180]	; (8004f14 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8004e60:	2400      	movs	r4, #0
 8004e62:	9400      	str	r4, [sp, #0]
 8004e64:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004e66:	f042 0202 	orr.w	r2, r2, #2
 8004e6a:	639a      	str	r2, [r3, #56]	; 0x38
 8004e6c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004e6e:	f002 0202 	and.w	r2, r2, #2
 8004e72:	9200      	str	r2, [sp, #0]
 8004e74:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8004e76:	699a      	ldr	r2, [r3, #24]
 8004e78:	f042 0202 	orr.w	r2, r2, #2
 8004e7c:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8004e7e:	699a      	ldr	r2, [r3, #24]
 8004e80:	f022 0202 	bic.w	r2, r2, #2
 8004e84:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8004e86:	9401      	str	r4, [sp, #4]
 8004e88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004e8a:	f042 0202 	orr.w	r2, r2, #2
 8004e8e:	631a      	str	r2, [r3, #48]	; 0x30
 8004e90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004e92:	f002 0202 	and.w	r2, r2, #2
 8004e96:	9201      	str	r2, [sp, #4]
 8004e98:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8004e9a:	9402      	str	r4, [sp, #8]
 8004e9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004e9e:	f042 0220 	orr.w	r2, r2, #32
 8004ea2:	631a      	str	r2, [r3, #48]	; 0x30
 8004ea4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ea6:	f003 0320 	and.w	r3, r3, #32
 8004eaa:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004eac:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8004eae:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004eb0:	2302      	movs	r3, #2
 8004eb2:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8004eb6:	2101      	movs	r1, #1
 8004eb8:	2303      	movs	r3, #3
 8004eba:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8004ebe:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004ec0:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8004ec2:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8004ec4:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004ec6:	f001 fcfd 	bl	80068c4 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8004eca:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004ece:	a903      	add	r1, sp, #12
 8004ed0:	4811      	ldr	r0, [pc, #68]	; (8004f18 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8004ed2:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004ed4:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8004ed6:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004ed8:	f001 fcf4 	bl	80068c4 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8004edc:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004ee0:	a903      	add	r1, sp, #12
 8004ee2:	480d      	ldr	r0, [pc, #52]	; (8004f18 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8004ee4:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8004ee6:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004ee8:	f001 fcec 	bl	80068c4 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8004eec:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004eee:	a903      	add	r1, sp, #12
 8004ef0:	4809      	ldr	r0, [pc, #36]	; (8004f18 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8004ef2:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8004ef4:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004ef6:	f001 fce5 	bl	80068c4 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8004efa:	4622      	mov	r2, r4
 8004efc:	210f      	movs	r1, #15
 8004efe:	205b      	movs	r0, #91	; 0x5b
 8004f00:	f000 feac 	bl	8005c5c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8004f04:	205b      	movs	r0, #91	; 0x5b
 8004f06:	f000 fedb 	bl	8005cc0 <HAL_NVIC_EnableIRQ>
}
 8004f0a:	b008      	add	sp, #32
 8004f0c:	bd70      	pop	{r4, r5, r6, pc}
 8004f0e:	bf00      	nop
 8004f10:	40023800 	.word	0x40023800
 8004f14:	40020400 	.word	0x40020400
 8004f18:	40021400 	.word	0x40021400

08004f1c <BSP_QSPI_Init>:
{
 8004f1c:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8004f1e:	4c48      	ldr	r4, [pc, #288]	; (8005040 <BSP_QSPI_Init+0x124>)
 8004f20:	4b48      	ldr	r3, [pc, #288]	; (8005044 <BSP_QSPI_Init+0x128>)
 8004f22:	6023      	str	r3, [r4, #0]
{
 8004f24:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8004f26:	4620      	mov	r0, r4
 8004f28:	f002 fdd8 	bl	8007adc <HAL_QSPI_DeInit>
 8004f2c:	4605      	mov	r5, r0
 8004f2e:	b110      	cbz	r0, 8004f36 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8004f30:	2001      	movs	r0, #1
}
 8004f32:	b011      	add	sp, #68	; 0x44
 8004f34:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8004f36:	4601      	mov	r1, r0
 8004f38:	4620      	mov	r0, r4
 8004f3a:	f7ff ff8d 	bl	8004e58 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8004f3e:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8004f40:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8004f42:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8004f46:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004f48:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8004f4c:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8004f50:	fab3 f383 	clz	r3, r3
 8004f54:	3b01      	subs	r3, #1
 8004f56:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8004f58:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8004f5a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8004f5e:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8004f62:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8004f66:	f002 fd65 	bl	8007a34 <HAL_QSPI_Init>
 8004f6a:	2800      	cmp	r0, #0
 8004f6c:	d1e0      	bne.n	8004f30 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004f6e:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004f72:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004f76:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8004f7a:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8004f7c:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8004f7e:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004f80:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004f82:	f241 3288 	movw	r2, #5000	; 0x1388
 8004f86:	a902      	add	r1, sp, #8
 8004f88:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004f8a:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8004f8c:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004f8e:	f002 fdb8 	bl	8007b02 <HAL_QSPI_Command>
 8004f92:	b108      	cbz	r0, 8004f98 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8004f94:	2004      	movs	r0, #4
 8004f96:	e7cc      	b.n	8004f32 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8004f98:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004f9a:	f241 3288 	movw	r2, #5000	; 0x1388
 8004f9e:	a902      	add	r1, sp, #8
 8004fa0:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8004fa2:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004fa4:	f002 fdad 	bl	8007b02 <HAL_QSPI_Command>
 8004fa8:	2800      	cmp	r0, #0
 8004faa:	d1f3      	bne.n	8004f94 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8004fac:	f241 3088 	movw	r0, #5000	; 0x1388
 8004fb0:	f7ff feca 	bl	8004d48 <QSPI_AutoPollingMemReady.constprop.0>
 8004fb4:	2800      	cmp	r0, #0
 8004fb6:	d1ed      	bne.n	8004f94 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004fb8:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8004fbc:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004fc0:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004fc4:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8004fc6:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004fc8:	f241 3288 	movw	r2, #5000	; 0x1388
 8004fcc:	a902      	add	r1, sp, #8
 8004fce:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004fd0:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004fd2:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004fd4:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004fd6:	f002 fd94 	bl	8007b02 <HAL_QSPI_Command>
 8004fda:	2800      	cmp	r0, #0
 8004fdc:	d1da      	bne.n	8004f94 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004fde:	f241 3288 	movw	r2, #5000	; 0x1388
 8004fe2:	f10d 0107 	add.w	r1, sp, #7
 8004fe6:	4620      	mov	r0, r4
 8004fe8:	f002 fefe 	bl	8007de8 <HAL_QSPI_Receive>
 8004fec:	2800      	cmp	r0, #0
 8004fee:	d1d1      	bne.n	8004f94 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8004ff0:	f7ff fed4 	bl	8004d9c <QSPI_WriteEnable.constprop.0>
 8004ff4:	2800      	cmp	r0, #0
 8004ff6:	d1cd      	bne.n	8004f94 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8004ff8:	2381      	movs	r3, #129	; 0x81
 8004ffa:	9302      	str	r3, [sp, #8]
 8004ffc:	22f0      	movs	r2, #240	; 0xf0
 8004ffe:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8005002:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8005006:	210a      	movs	r1, #10
 8005008:	fab2 f282 	clz	r2, r2
 800500c:	fa01 f202 	lsl.w	r2, r1, r2
 8005010:	f003 030f 	and.w	r3, r3, #15
 8005014:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005016:	a902      	add	r1, sp, #8
 8005018:	f241 3288 	movw	r2, #5000	; 0x1388
 800501c:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800501e:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005022:	f002 fd6e 	bl	8007b02 <HAL_QSPI_Command>
 8005026:	2800      	cmp	r0, #0
 8005028:	d1b4      	bne.n	8004f94 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800502a:	f241 3288 	movw	r2, #5000	; 0x1388
 800502e:	f10d 0107 	add.w	r1, sp, #7
 8005032:	4620      	mov	r0, r4
 8005034:	f002 fe7c 	bl	8007d30 <HAL_QSPI_Transmit>
 8005038:	2800      	cmp	r0, #0
 800503a:	f43f af7a 	beq.w	8004f32 <BSP_QSPI_Init+0x16>
 800503e:	e7a9      	b.n	8004f94 <BSP_QSPI_Init+0x78>
 8005040:	2000e8f8 	.word	0x2000e8f8
 8005044:	a0001000 	.word	0xa0001000

08005048 <BSP_QSPI_MspDeInit>:
{
 8005048:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800504a:	205b      	movs	r0, #91	; 0x5b
 800504c:	f000 fe46 	bl	8005cdc <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8005050:	4814      	ldr	r0, [pc, #80]	; (80050a4 <BSP_QSPI_MspDeInit+0x5c>)
 8005052:	2140      	movs	r1, #64	; 0x40
 8005054:	f001 fd20 	bl	8006a98 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8005058:	4813      	ldr	r0, [pc, #76]	; (80050a8 <BSP_QSPI_MspDeInit+0x60>)
 800505a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800505e:	f001 fd1b 	bl	8006a98 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8005062:	4811      	ldr	r0, [pc, #68]	; (80050a8 <BSP_QSPI_MspDeInit+0x60>)
 8005064:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005068:	f001 fd16 	bl	8006a98 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 800506c:	480e      	ldr	r0, [pc, #56]	; (80050a8 <BSP_QSPI_MspDeInit+0x60>)
 800506e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8005072:	f001 fd11 	bl	8006a98 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 8005076:	480c      	ldr	r0, [pc, #48]	; (80050a8 <BSP_QSPI_MspDeInit+0x60>)
 8005078:	2180      	movs	r1, #128	; 0x80
 800507a:	f001 fd0d 	bl	8006a98 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 800507e:	480a      	ldr	r0, [pc, #40]	; (80050a8 <BSP_QSPI_MspDeInit+0x60>)
 8005080:	2140      	movs	r1, #64	; 0x40
 8005082:	f001 fd09 	bl	8006a98 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 8005086:	4b09      	ldr	r3, [pc, #36]	; (80050ac <BSP_QSPI_MspDeInit+0x64>)
 8005088:	699a      	ldr	r2, [r3, #24]
 800508a:	f042 0202 	orr.w	r2, r2, #2
 800508e:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8005090:	699a      	ldr	r2, [r3, #24]
 8005092:	f022 0202 	bic.w	r2, r2, #2
 8005096:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8005098:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800509a:	f022 0202 	bic.w	r2, r2, #2
 800509e:	639a      	str	r2, [r3, #56]	; 0x38
}
 80050a0:	bd08      	pop	{r3, pc}
 80050a2:	bf00      	nop
 80050a4:	40020400 	.word	0x40020400
 80050a8:	40021400 	.word	0x40021400
 80050ac:	40023800 	.word	0x40023800

080050b0 <BSP_QSPI_DeInit>:
{
 80050b0:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 80050b2:	4d08      	ldr	r5, [pc, #32]	; (80050d4 <BSP_QSPI_DeInit+0x24>)
 80050b4:	4b08      	ldr	r3, [pc, #32]	; (80050d8 <BSP_QSPI_DeInit+0x28>)
 80050b6:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80050b8:	4628      	mov	r0, r5
 80050ba:	f002 fd0f 	bl	8007adc <HAL_QSPI_DeInit>
 80050be:	4604      	mov	r4, r0
 80050c0:	b928      	cbnz	r0, 80050ce <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 80050c2:	4601      	mov	r1, r0
 80050c4:	4628      	mov	r0, r5
 80050c6:	f7ff ffbf 	bl	8005048 <BSP_QSPI_MspDeInit>
}
 80050ca:	4620      	mov	r0, r4
 80050cc:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 80050ce:	2401      	movs	r4, #1
 80050d0:	e7fb      	b.n	80050ca <BSP_QSPI_DeInit+0x1a>
 80050d2:	bf00      	nop
 80050d4:	2000e8f8 	.word	0x2000e8f8
 80050d8:	a0001000 	.word	0xa0001000

080050dc <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 80050dc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80050e0:	4c21      	ldr	r4, [pc, #132]	; (8005168 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80050e2:	4d22      	ldr	r5, [pc, #136]	; (800516c <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80050e4:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 80050e6:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80050ea:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80050ec:	4621      	mov	r1, r4
{
 80050ee:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80050f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80050f4:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80050f6:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80050fa:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 80050fe:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005102:	f003 fae1 	bl	80086c8 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 8005106:	4630      	mov	r0, r6
 8005108:	f000 fa5e 	bl	80055c8 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 800510c:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800510e:	4621      	mov	r1, r4
 8005110:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005114:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8005116:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800511a:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800511e:	f003 fad3 	bl	80086c8 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8005122:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8005124:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005128:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 800512a:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800512c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005130:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8005132:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005136:	f003 fac7 	bl	80086c8 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800513a:	f44f 730c 	mov.w	r3, #560	; 0x230
 800513e:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8005140:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8005142:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005146:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8005148:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800514a:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800514c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005150:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8005152:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005154:	f003 fab8 	bl	80086c8 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8005158:	4649      	mov	r1, r9
 800515a:	4628      	mov	r0, r5
}
 800515c:	b003      	add	sp, #12
 800515e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8005162:	f003 bac8 	b.w	80086f6 <HAL_SDRAM_ProgramRefreshRate>
 8005166:	bf00      	nop
 8005168:	2000558c 	.word	0x2000558c
 800516c:	20005678 	.word	0x20005678

08005170 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8005170:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8005172:	4606      	mov	r6, r0
{
 8005174:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8005176:	2800      	cmp	r0, #0
 8005178:	f000 80bd 	beq.w	80052f6 <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 800517c:	4b5f      	ldr	r3, [pc, #380]	; (80052fc <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800517e:	4860      	ldr	r0, [pc, #384]	; (8005300 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8005180:	4c60      	ldr	r4, [pc, #384]	; (8005304 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8005182:	2500      	movs	r5, #0
 8005184:	9500      	str	r5, [sp, #0]
 8005186:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005188:	f042 0201 	orr.w	r2, r2, #1
 800518c:	639a      	str	r2, [r3, #56]	; 0x38
 800518e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005190:	f002 0201 	and.w	r2, r2, #1
 8005194:	9200      	str	r2, [sp, #0]
 8005196:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8005198:	9501      	str	r5, [sp, #4]
 800519a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800519c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80051a0:	631a      	str	r2, [r3, #48]	; 0x30
 80051a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051a4:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80051a8:	9201      	str	r2, [sp, #4]
 80051aa:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80051ac:	9502      	str	r5, [sp, #8]
 80051ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051b0:	f042 0204 	orr.w	r2, r2, #4
 80051b4:	631a      	str	r2, [r3, #48]	; 0x30
 80051b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051b8:	f002 0204 	and.w	r2, r2, #4
 80051bc:	9202      	str	r2, [sp, #8]
 80051be:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80051c0:	9503      	str	r5, [sp, #12]
 80051c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051c4:	f042 0208 	orr.w	r2, r2, #8
 80051c8:	631a      	str	r2, [r3, #48]	; 0x30
 80051ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051cc:	f002 0208 	and.w	r2, r2, #8
 80051d0:	9203      	str	r2, [sp, #12]
 80051d2:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80051d4:	9504      	str	r5, [sp, #16]
 80051d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051d8:	f042 0210 	orr.w	r2, r2, #16
 80051dc:	631a      	str	r2, [r3, #48]	; 0x30
 80051de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051e0:	f002 0210 	and.w	r2, r2, #16
 80051e4:	9204      	str	r2, [sp, #16]
 80051e6:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80051e8:	9505      	str	r5, [sp, #20]
 80051ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051ec:	f042 0220 	orr.w	r2, r2, #32
 80051f0:	631a      	str	r2, [r3, #48]	; 0x30
 80051f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80051f4:	f002 0220 	and.w	r2, r2, #32
 80051f8:	9205      	str	r2, [sp, #20]
 80051fa:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80051fc:	9506      	str	r5, [sp, #24]
 80051fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005200:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005204:	631a      	str	r2, [r3, #48]	; 0x30
 8005206:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005208:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800520c:	9206      	str	r2, [sp, #24]
 800520e:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8005210:	9507      	str	r5, [sp, #28]
 8005212:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005214:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005218:	631a      	str	r2, [r3, #48]	; 0x30
 800521a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800521c:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8005220:	9207      	str	r2, [sp, #28]
 8005222:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8005224:	9508      	str	r5, [sp, #32]
 8005226:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005228:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800522c:	631a      	str	r2, [r3, #48]	; 0x30
 800522e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005230:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005234:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8005236:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8005238:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800523a:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800523c:	2301      	movs	r3, #1
 800523e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8005242:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8005244:	220c      	movs	r2, #12
 8005246:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8005248:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800524a:	f001 fb3b 	bl	80068c4 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800524e:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8005252:	482d      	ldr	r0, [pc, #180]	; (8005308 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8005254:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8005256:	a909      	add	r1, sp, #36	; 0x24
 8005258:	f001 fb34 	bl	80068c4 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800525c:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8005260:	482a      	ldr	r0, [pc, #168]	; (800530c <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8005262:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8005264:	a909      	add	r1, sp, #36	; 0x24
 8005266:	f001 fb2d 	bl	80068c4 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800526a:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800526e:	4828      	ldr	r0, [pc, #160]	; (8005310 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8005270:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8005272:	a909      	add	r1, sp, #36	; 0x24
 8005274:	f001 fb26 	bl	80068c4 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8005278:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800527c:	4825      	ldr	r0, [pc, #148]	; (8005314 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800527e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8005280:	a909      	add	r1, sp, #36	; 0x24
 8005282:	f001 fb1f 	bl	80068c4 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8005286:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800528a:	4823      	ldr	r0, [pc, #140]	; (8005318 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800528c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800528e:	a909      	add	r1, sp, #36	; 0x24
 8005290:	f001 fb18 	bl	80068c4 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8005294:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8005298:	4820      	ldr	r0, [pc, #128]	; (800531c <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800529a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800529c:	a909      	add	r1, sp, #36	; 0x24
 800529e:	f001 fb11 	bl	80068c4 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 80052a2:	2280      	movs	r2, #128	; 0x80
 80052a4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80052a8:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80052ac:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80052b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80052b4:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 80052b8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 80052bc:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 80052c0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 80052c4:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 80052c8:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 80052ca:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 80052ce:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80052d0:	4b13      	ldr	r3, [pc, #76]	; (8005320 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80052d2:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 80052d4:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80052d6:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80052d8:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80052da:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 80052dc:	f000 fdb8 	bl	8005e50 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 80052e0:	4620      	mov	r0, r4
 80052e2:	f000 fd35 	bl	8005d50 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 80052e6:	2038      	movs	r0, #56	; 0x38
 80052e8:	462a      	mov	r2, r5
 80052ea:	2105      	movs	r1, #5
 80052ec:	f000 fcb6 	bl	8005c5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 80052f0:	2038      	movs	r0, #56	; 0x38
 80052f2:	f000 fce5 	bl	8005cc0 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80052f6:	b00e      	add	sp, #56	; 0x38
 80052f8:	bd70      	pop	{r4, r5, r6, pc}
 80052fa:	bf00      	nop
 80052fc:	40023800 	.word	0x40023800
 8005300:	40020800 	.word	0x40020800
 8005304:	200055b8 	.word	0x200055b8
 8005308:	40020c00 	.word	0x40020c00
 800530c:	40021000 	.word	0x40021000
 8005310:	40021400 	.word	0x40021400
 8005314:	40021800 	.word	0x40021800
 8005318:	40021c00 	.word	0x40021c00
 800531c:	40022000 	.word	0x40022000
 8005320:	40026410 	.word	0x40026410

08005324 <BSP_SDRAM_Init>:
{
 8005324:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8005326:	4c19      	ldr	r4, [pc, #100]	; (800538c <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8005328:	4d19      	ldr	r5, [pc, #100]	; (8005390 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800532a:	4b1a      	ldr	r3, [pc, #104]	; (8005394 <BSP_SDRAM_Init+0x70>)
 800532c:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 800532e:	2107      	movs	r1, #7
 8005330:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8005332:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8005334:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8005338:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 800533c:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8005340:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8005342:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8005344:	2340      	movs	r3, #64	; 0x40
 8005346:	2220      	movs	r2, #32
 8005348:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 800534c:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 800534e:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8005352:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8005356:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800535a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800535e:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8005362:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8005364:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8005368:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800536a:	f7ff ff01 	bl	8005170 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 800536e:	4629      	mov	r1, r5
 8005370:	4620      	mov	r0, r4
 8005372:	f003 f97b 	bl	800866c <HAL_SDRAM_Init>
 8005376:	4c08      	ldr	r4, [pc, #32]	; (8005398 <BSP_SDRAM_Init+0x74>)
 8005378:	3800      	subs	r0, #0
 800537a:	bf18      	it	ne
 800537c:	2001      	movne	r0, #1
 800537e:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8005380:	f240 5069 	movw	r0, #1385	; 0x569
 8005384:	f7ff feaa 	bl	80050dc <BSP_SDRAM_Initialization_sequence>
}
 8005388:	7820      	ldrb	r0, [r4, #0]
 800538a:	bd38      	pop	{r3, r4, r5, pc}
 800538c:	20005678 	.word	0x20005678
 8005390:	2000559c 	.word	0x2000559c
 8005394:	a0000140 	.word	0xa0000140
 8005398:	2000004c 	.word	0x2000004c

0800539c <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 800539c:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800539e:	b148      	cbz	r0, 80053b4 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 80053a0:	2038      	movs	r0, #56	; 0x38
 80053a2:	f000 fc9b 	bl	8005cdc <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 80053a6:	4804      	ldr	r0, [pc, #16]	; (80053b8 <BSP_SDRAM_MspDeInit+0x1c>)
 80053a8:	4b04      	ldr	r3, [pc, #16]	; (80053bc <BSP_SDRAM_MspDeInit+0x20>)
 80053aa:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80053ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 80053b0:	f000 bd4e 	b.w	8005e50 <HAL_DMA_DeInit>
}
 80053b4:	bd08      	pop	{r3, pc}
 80053b6:	bf00      	nop
 80053b8:	20005618 	.word	0x20005618
 80053bc:	40026410 	.word	0x40026410

080053c0 <BSP_SDRAM_DeInit>:
{
 80053c0:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80053c2:	4c07      	ldr	r4, [pc, #28]	; (80053e0 <BSP_SDRAM_DeInit+0x20>)
 80053c4:	4b07      	ldr	r3, [pc, #28]	; (80053e4 <BSP_SDRAM_DeInit+0x24>)
 80053c6:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 80053c8:	4620      	mov	r0, r4
 80053ca:	f003 f96f 	bl	80086ac <HAL_SDRAM_DeInit>
 80053ce:	4d06      	ldr	r5, [pc, #24]	; (80053e8 <BSP_SDRAM_DeInit+0x28>)
 80053d0:	4601      	mov	r1, r0
 80053d2:	b918      	cbnz	r0, 80053dc <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 80053d4:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 80053d6:	4620      	mov	r0, r4
 80053d8:	f7ff ffe0 	bl	800539c <BSP_SDRAM_MspDeInit>
}
 80053dc:	7828      	ldrb	r0, [r5, #0]
 80053de:	bd38      	pop	{r3, r4, r5, pc}
 80053e0:	20005678 	.word	0x20005678
 80053e4:	a0000140 	.word	0xa0000140
 80053e8:	2000004d 	.word	0x2000004d

080053ec <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 80053ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 80053f0:	4d19      	ldr	r5, [pc, #100]	; (8005458 <BSP_TS_Init+0x6c>)
 80053f2:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8005464 <BSP_TS_Init+0x78>
 80053f6:	682b      	ldr	r3, [r5, #0]
{
 80053f8:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 80053fa:	f898 0000 	ldrb.w	r0, [r8]
{
 80053fe:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8005400:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8005402:	686b      	ldr	r3, [r5, #4]
 8005404:	2054      	movs	r0, #84	; 0x54
 8005406:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8005408:	b2c0      	uxtb	r0, r0
 800540a:	2811      	cmp	r0, #17
 800540c:	4646      	mov	r6, r8
 800540e:	46a9      	mov	r9, r5
 8005410:	d00b      	beq.n	800542a <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8005412:	686b      	ldr	r3, [r5, #4]
 8005414:	2070      	movs	r0, #112	; 0x70
 8005416:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8005418:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800541a:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800541c:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800541e:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8005422:	d005      	beq.n	8005430 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8005424:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8005426:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 800542a:	2354      	movs	r3, #84	; 0x54
 800542c:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 8005430:	4b0a      	ldr	r3, [pc, #40]	; (800545c <BSP_TS_Init+0x70>)
 8005432:	4d0b      	ldr	r5, [pc, #44]	; (8005460 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 8005434:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 8005436:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 800543a:	42bc      	cmp	r4, r7
 800543c:	bf34      	ite	cc
 800543e:	2101      	movcc	r1, #1
 8005440:	210c      	movcs	r1, #12
 8005442:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8005444:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8005448:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 800544a:	682b      	ldr	r3, [r5, #0]
 800544c:	7830      	ldrb	r0, [r6, #0]
 800544e:	68db      	ldr	r3, [r3, #12]
 8005450:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8005452:	2000      	movs	r0, #0
 8005454:	e7e7      	b.n	8005426 <BSP_TS_Init+0x3a>
 8005456:	bf00      	nop
 8005458:	20000020 	.word	0x20000020
 800545c:	200056c4 	.word	0x200056c4
 8005460:	200056c0 	.word	0x200056c0
 8005464:	200056ac 	.word	0x200056ac

08005468 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8005468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800546c:	4c34      	ldr	r4, [pc, #208]	; (8005540 <BSP_TS_GetState+0xd8>)
 800546e:	4d35      	ldr	r5, [pc, #212]	; (8005544 <BSP_TS_GetState+0xdc>)
 8005470:	6823      	ldr	r3, [r4, #0]
{
 8005472:	b085      	sub	sp, #20
 8005474:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8005476:	691b      	ldr	r3, [r3, #16]
 8005478:	7828      	ldrb	r0, [r5, #0]
 800547a:	4798      	blx	r3
 800547c:	46a1      	mov	r9, r4
 800547e:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8005480:	9501      	str	r5, [sp, #4]
 8005482:	b158      	cbz	r0, 800549c <BSP_TS_GetState+0x34>
 8005484:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005550 <BSP_TS_GetState+0xe8>
 8005488:	4f2f      	ldr	r7, [pc, #188]	; (8005548 <BSP_TS_GetState+0xe0>)
 800548a:	f106 0b02 	add.w	fp, r6, #2
 800548e:	ad03      	add	r5, sp, #12
 8005490:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8005492:	f04f 0a00 	mov.w	sl, #0
 8005496:	7833      	ldrb	r3, [r6, #0]
 8005498:	4553      	cmp	r3, sl
 800549a:	d803      	bhi.n	80054a4 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 800549c:	2000      	movs	r0, #0
 800549e:	b005      	add	sp, #20
 80054a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 80054a4:	f8d9 3000 	ldr.w	r3, [r9]
 80054a8:	9801      	ldr	r0, [sp, #4]
 80054aa:	695b      	ldr	r3, [r3, #20]
 80054ac:	7800      	ldrb	r0, [r0, #0]
 80054ae:	9100      	str	r1, [sp, #0]
 80054b0:	462a      	mov	r2, r5
 80054b2:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 80054b4:	4b25      	ldr	r3, [pc, #148]	; (800554c <BSP_TS_GetState+0xe4>)
 80054b6:	9900      	ldr	r1, [sp, #0]
 80054b8:	781b      	ldrb	r3, [r3, #0]
 80054ba:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 80054be:	bf1f      	itttt	ne
 80054c0:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 80054c2:	8828      	ldrhne	r0, [r5, #0]
 80054c4:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 80054c6:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 80054c8:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 80054ca:	bf41      	itttt	mi
 80054cc:	880a      	ldrhmi	r2, [r1, #0]
 80054ce:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 80054d2:	3203      	addmi	r2, #3
 80054d4:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 80054d6:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80054d8:	bf48      	it	mi
 80054da:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80054dc:	f8d8 2000 	ldr.w	r2, [r8]
 80054e0:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80054e4:	bf42      	ittt	mi
 80054e6:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 80054ea:	3301      	addmi	r3, #1
 80054ec:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80054ee:	b293      	uxth	r3, r2
 80054f0:	4290      	cmp	r0, r2
 80054f2:	bf8c      	ite	hi
 80054f4:	1ac3      	subhi	r3, r0, r3
 80054f6:	1a1b      	subls	r3, r3, r0
 80054f8:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80054fa:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80054fe:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8005500:	683b      	ldr	r3, [r7, #0]
 8005502:	b29c      	uxth	r4, r3
 8005504:	429a      	cmp	r2, r3
 8005506:	bf88      	it	hi
 8005508:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 800550a:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800550c:	bf98      	it	ls
 800550e:	1aa4      	subls	r4, r4, r2
 8005510:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8005512:	441c      	add	r4, r3
 8005514:	46c4      	mov	ip, r8
 8005516:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8005518:	bfc8      	it	gt
 800551a:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 800551e:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8005522:	bfc8      	it	gt
 8005524:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8005526:	46be      	mov	lr, r7
 8005528:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 800552c:	f8de 3000 	ldr.w	r3, [lr]
 8005530:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8005534:	f108 0804 	add.w	r8, r8, #4
 8005538:	3704      	adds	r7, #4
 800553a:	f10a 0a01 	add.w	sl, sl, #1
 800553e:	e7aa      	b.n	8005496 <BSP_TS_GetState+0x2e>
 8005540:	200056c0 	.word	0x200056c0
 8005544:	200056ac 	.word	0x200056ac
 8005548:	200056b8 	.word	0x200056b8
 800554c:	200056c4 	.word	0x200056c4
 8005550:	200056b0 	.word	0x200056b0

08005554 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005554:	4b05      	ldr	r3, [pc, #20]	; (800556c <SystemInit+0x18>)
 8005556:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800555a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800555e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005562:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005566:	609a      	str	r2, [r3, #8]
#endif
}
 8005568:	4770      	bx	lr
 800556a:	bf00      	nop
 800556c:	e000ed00 	.word	0xe000ed00

08005570 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005570:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005572:	4b0b      	ldr	r3, [pc, #44]	; (80055a0 <HAL_Init+0x30>)
 8005574:	681a      	ldr	r2, [r3, #0]
 8005576:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800557a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800557c:	681a      	ldr	r2, [r3, #0]
 800557e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005582:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005584:	681a      	ldr	r2, [r3, #0]
 8005586:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800558a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800558c:	2003      	movs	r0, #3
 800558e:	f000 fb53 	bl	8005c38 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005592:	2000      	movs	r0, #0
 8005594:	f7fc fd6e 	bl	8002074 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005598:	f7fc fac6 	bl	8001b28 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800559c:	2000      	movs	r0, #0
 800559e:	bd08      	pop	{r3, pc}
 80055a0:	40023c00 	.word	0x40023c00

080055a4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80055a4:	4a03      	ldr	r2, [pc, #12]	; (80055b4 <HAL_IncTick+0x10>)
 80055a6:	4b04      	ldr	r3, [pc, #16]	; (80055b8 <HAL_IncTick+0x14>)
 80055a8:	6811      	ldr	r1, [r2, #0]
 80055aa:	781b      	ldrb	r3, [r3, #0]
 80055ac:	440b      	add	r3, r1
 80055ae:	6013      	str	r3, [r2, #0]
}
 80055b0:	4770      	bx	lr
 80055b2:	bf00      	nop
 80055b4:	2000e944 	.word	0x2000e944
 80055b8:	20000054 	.word	0x20000054

080055bc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80055bc:	4b01      	ldr	r3, [pc, #4]	; (80055c4 <HAL_GetTick+0x8>)
 80055be:	6818      	ldr	r0, [r3, #0]
}
 80055c0:	4770      	bx	lr
 80055c2:	bf00      	nop
 80055c4:	2000e944 	.word	0x2000e944

080055c8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80055c8:	b538      	push	{r3, r4, r5, lr}
 80055ca:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80055cc:	f7ff fff6 	bl	80055bc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80055d0:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80055d2:	bf1c      	itt	ne
 80055d4:	4b05      	ldrne	r3, [pc, #20]	; (80055ec <HAL_Delay+0x24>)
 80055d6:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80055d8:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80055da:	bf18      	it	ne
 80055dc:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80055de:	f7ff ffed 	bl	80055bc <HAL_GetTick>
 80055e2:	1b43      	subs	r3, r0, r5
 80055e4:	42a3      	cmp	r3, r4
 80055e6:	d3fa      	bcc.n	80055de <HAL_Delay+0x16>
  {
  }
}
 80055e8:	bd38      	pop	{r3, r4, r5, pc}
 80055ea:	bf00      	nop
 80055ec:	20000054 	.word	0x20000054

080055f0 <HAL_CAN_Init>:
  * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
  *         the configuration information for the specified CAN.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
{
 80055f0:	b538      	push	{r3, r4, r5, lr}
  uint32_t tickstart;

  /* Check CAN handle */
  if (hcan == NULL)
 80055f2:	4604      	mov	r4, r0
 80055f4:	2800      	cmp	r0, #0
 80055f6:	d06e      	beq.n	80056d6 <HAL_CAN_Init+0xe6>
    /* Init the low level hardware: CLOCK, NVIC */
    hcan->MspInitCallback(hcan);
  }

#else
  if (hcan->State == HAL_CAN_STATE_RESET)
 80055f8:	f890 3020 	ldrb.w	r3, [r0, #32]
 80055fc:	b90b      	cbnz	r3, 8005602 <HAL_CAN_Init+0x12>
  {
    /* Init the low level hardware: CLOCK, NVIC */
    HAL_CAN_MspInit(hcan);
 80055fe:	f7fc fab3 	bl	8001b68 <HAL_CAN_MspInit>
  }
#endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */

  /* Exit from sleep mode */
  CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 8005602:	6822      	ldr	r2, [r4, #0]
 8005604:	6813      	ldr	r3, [r2, #0]
 8005606:	f023 0302 	bic.w	r3, r3, #2
 800560a:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 800560c:	f7ff ffd6 	bl	80055bc <HAL_GetTick>
 8005610:	4605      	mov	r5, r0

  /* Check Sleep mode leave acknowledge */
  while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 8005612:	6823      	ldr	r3, [r4, #0]
 8005614:	685a      	ldr	r2, [r3, #4]
 8005616:	0791      	lsls	r1, r2, #30
 8005618:	d451      	bmi.n	80056be <HAL_CAN_Init+0xce>
      return HAL_ERROR;
    }
  }

  /* Request initialisation */
  SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 800561a:	681a      	ldr	r2, [r3, #0]
 800561c:	f042 0201 	orr.w	r2, r2, #1
 8005620:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8005622:	f7ff ffcb 	bl	80055bc <HAL_GetTick>
 8005626:	4605      	mov	r5, r0

  /* Wait initialisation acknowledge */
  while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 8005628:	6823      	ldr	r3, [r4, #0]
 800562a:	685a      	ldr	r2, [r3, #4]
 800562c:	07d2      	lsls	r2, r2, #31
 800562e:	d554      	bpl.n	80056da <HAL_CAN_Init+0xea>
      return HAL_ERROR;
    }
  }

  /* Set the time triggered communication mode */
  if (hcan->Init.TimeTriggeredMode == ENABLE)
 8005630:	7e22      	ldrb	r2, [r4, #24]
 8005632:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 8005634:	681a      	ldr	r2, [r3, #0]
 8005636:	bf0c      	ite	eq
 8005638:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 800563c:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 8005640:	601a      	str	r2, [r3, #0]
  }

  /* Set the automatic bus-off management */
  if (hcan->Init.AutoBusOff == ENABLE)
 8005642:	7e62      	ldrb	r2, [r4, #25]
 8005644:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 8005646:	681a      	ldr	r2, [r3, #0]
 8005648:	bf0c      	ite	eq
 800564a:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 800564e:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 8005652:	601a      	str	r2, [r3, #0]
  }

  /* Set the automatic wake-up mode */
  if (hcan->Init.AutoWakeUp == ENABLE)
 8005654:	7ea2      	ldrb	r2, [r4, #26]
 8005656:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 8005658:	681a      	ldr	r2, [r3, #0]
 800565a:	bf0c      	ite	eq
 800565c:	f042 0220 	orreq.w	r2, r2, #32
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 8005660:	f022 0220 	bicne.w	r2, r2, #32
 8005664:	601a      	str	r2, [r3, #0]
  }

  /* Set the automatic retransmission */
  if (hcan->Init.AutoRetransmission == ENABLE)
 8005666:	7ee2      	ldrb	r2, [r4, #27]
 8005668:	2a01      	cmp	r2, #1
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 800566a:	681a      	ldr	r2, [r3, #0]
 800566c:	bf0c      	ite	eq
 800566e:	f022 0210 	biceq.w	r2, r2, #16
  }
  else
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 8005672:	f042 0210 	orrne.w	r2, r2, #16
 8005676:	601a      	str	r2, [r3, #0]
  }

  /* Set the receive FIFO locked mode */
  if (hcan->Init.ReceiveFifoLocked == ENABLE)
 8005678:	7f22      	ldrb	r2, [r4, #28]
 800567a:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 800567c:	681a      	ldr	r2, [r3, #0]
 800567e:	bf0c      	ite	eq
 8005680:	f042 0208 	orreq.w	r2, r2, #8
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 8005684:	f022 0208 	bicne.w	r2, r2, #8
 8005688:	601a      	str	r2, [r3, #0]
  }

  /* Set the transmit FIFO priority */
  if (hcan->Init.TransmitFifoPriority == ENABLE)
 800568a:	7f62      	ldrb	r2, [r4, #29]
 800568c:	2a01      	cmp	r2, #1
  {
    SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 800568e:	681a      	ldr	r2, [r3, #0]
 8005690:	bf0c      	ite	eq
 8005692:	f042 0204 	orreq.w	r2, r2, #4
  }
  else
  {
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 8005696:	f022 0204 	bicne.w	r2, r2, #4
 800569a:	601a      	str	r2, [r3, #0]
  }

  /* Set the bit timing register */
  WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 800569c:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 80056a0:	430a      	orrs	r2, r1
 80056a2:	6921      	ldr	r1, [r4, #16]
 80056a4:	430a      	orrs	r2, r1
 80056a6:	6961      	ldr	r1, [r4, #20]
 80056a8:	430a      	orrs	r2, r1
 80056aa:	6861      	ldr	r1, [r4, #4]
 80056ac:	3901      	subs	r1, #1
 80056ae:	430a      	orrs	r2, r1
 80056b0:	61da      	str	r2, [r3, #28]
                                            hcan->Init.TimeSeg1       |
                                            hcan->Init.TimeSeg2       |
                                            (hcan->Init.Prescaler - 1U)));

  /* Initialize the error code */
  hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 80056b2:	2000      	movs	r0, #0

  /* Initialize the CAN state */
  hcan->State = HAL_CAN_STATE_READY;
 80056b4:	2301      	movs	r3, #1
  hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 80056b6:	6260      	str	r0, [r4, #36]	; 0x24
  hcan->State = HAL_CAN_STATE_READY;
 80056b8:	f884 3020 	strb.w	r3, [r4, #32]

  /* Return function status */
  return HAL_OK;
}
 80056bc:	bd38      	pop	{r3, r4, r5, pc}
    if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 80056be:	f7ff ff7d 	bl	80055bc <HAL_GetTick>
 80056c2:	1b40      	subs	r0, r0, r5
 80056c4:	280a      	cmp	r0, #10
 80056c6:	d9a4      	bls.n	8005612 <HAL_CAN_Init+0x22>
      hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 80056c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80056ca:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80056ce:	6263      	str	r3, [r4, #36]	; 0x24
      hcan->State = HAL_CAN_STATE_ERROR;
 80056d0:	2305      	movs	r3, #5
 80056d2:	f884 3020 	strb.w	r3, [r4, #32]
    return HAL_ERROR;
 80056d6:	2001      	movs	r0, #1
 80056d8:	e7f0      	b.n	80056bc <HAL_CAN_Init+0xcc>
    if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 80056da:	f7ff ff6f 	bl	80055bc <HAL_GetTick>
 80056de:	1b40      	subs	r0, r0, r5
 80056e0:	280a      	cmp	r0, #10
 80056e2:	d9a1      	bls.n	8005628 <HAL_CAN_Init+0x38>
 80056e4:	e7f0      	b.n	80056c8 <HAL_CAN_Init+0xd8>
	...

080056e8 <HAL_CAN_ConfigFilter>:
  * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
  *         contains the filter configuration information.
  * @retval None
  */
HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, CAN_FilterTypeDef *sFilterConfig)
{
 80056e8:	b530      	push	{r4, r5, lr}
  uint32_t filternbrbitpos;
  CAN_TypeDef *can_ip = hcan->Instance;
  HAL_CAN_StateTypeDef state = hcan->State;
 80056ea:	f890 3020 	ldrb.w	r3, [r0, #32]

  if ((state == HAL_CAN_STATE_READY) ||
 80056ee:	3b01      	subs	r3, #1
 80056f0:	2b01      	cmp	r3, #1
 80056f2:	d878      	bhi.n	80057e6 <HAL_CAN_ConfigFilter+0xfe>
    /* Check the parameters */
    assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
#endif

    /* Initialisation mode for the filter */
    SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 80056f4:	4b3f      	ldr	r3, [pc, #252]	; (80057f4 <HAL_CAN_ConfigFilter+0x10c>)
 80056f6:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 80056fa:	f042 0201 	orr.w	r2, r2, #1
 80056fe:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
      SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
    }

#elif defined(CAN2)
    /* Select the start filter number of CAN2 slave instance */
    CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 8005702:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 8005706:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 800570a:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
    SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 800570e:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 8005712:	6a48      	ldr	r0, [r1, #36]	; 0x24
 8005714:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8005718:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200

#endif
    /* Convert filter number into bit position */
    filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 800571c:	694a      	ldr	r2, [r1, #20]

    /* Filter Deactivation */
    CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 800571e:	f8d3 521c 	ldr.w	r5, [r3, #540]	; 0x21c
    filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 8005722:	2401      	movs	r4, #1
 8005724:	f002 001f 	and.w	r0, r2, #31
 8005728:	fa04 f000 	lsl.w	r0, r4, r0
    CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 800572c:	ea25 0500 	bic.w	r5, r5, r0
 8005730:	f8c3 521c 	str.w	r5, [r3, #540]	; 0x21c

    /* Filter Scale */
    if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 8005734:	69cd      	ldr	r5, [r1, #28]
    CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 8005736:	43c4      	mvns	r4, r0
    if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 8005738:	2d00      	cmp	r5, #0
 800573a:	d135      	bne.n	80057a8 <HAL_CAN_ConfigFilter+0xc0>
    {
      /* 16-bit scale for the filter */
      CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 800573c:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 8005740:	4025      	ands	r5, r4
 8005742:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c

      /* First 16-bit identifier and First 16-bit mask */
      /* Or First 16-bit identifier and Second 16-bit identifier */
      can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 8005746:	68cb      	ldr	r3, [r1, #12]
        (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 8005748:	888d      	ldrh	r5, [r1, #4]
        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 800574a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 800574e:	00d3      	lsls	r3, r2, #3
 8005750:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8005754:	f503 43c8 	add.w	r3, r3, #25600	; 0x6400

      /* Second 16-bit identifier and Second 16-bit mask */
      /* Or Third 16-bit identifier and Fourth 16-bit identifier */
      can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
        (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 8005758:	880a      	ldrh	r2, [r1, #0]
      can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 800575a:	f8c3 5240 	str.w	r5, [r3, #576]	; 0x240
        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 800575e:	688d      	ldr	r5, [r1, #8]
        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
        (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);

      /* 32-bit mask or Second 32-bit identifier */
      can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 8005760:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
      can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 8005764:	f8c3 2244 	str.w	r2, [r3, #580]	; 0x244
        (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
    }

    /* Filter Mode */
    if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 8005768:	698a      	ldr	r2, [r1, #24]
 800576a:	4b22      	ldr	r3, [pc, #136]	; (80057f4 <HAL_CAN_ConfigFilter+0x10c>)
 800576c:	bb8a      	cbnz	r2, 80057d2 <HAL_CAN_ConfigFilter+0xea>
    {
      /* Id/Mask mode for the filter*/
      CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 800576e:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8005772:	4022      	ands	r2, r4
    }
    else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
    {
      /* Identifier list mode for the filter*/
      SET_BIT(can_ip->FM1R, filternbrbitpos);
 8005774:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
    }

    /* Filter FIFO assignment */
    if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 8005778:	690a      	ldr	r2, [r1, #16]
 800577a:	bb72      	cbnz	r2, 80057da <HAL_CAN_ConfigFilter+0xf2>
    {
      /* FIFO 0 assignation for the filter */
      CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 800577c:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 8005780:	4014      	ands	r4, r2
 8005782:	f8c3 4214 	str.w	r4, [r3, #532]	; 0x214
      /* FIFO 1 assignation for the filter */
      SET_BIT(can_ip->FFA1R, filternbrbitpos);
    }

    /* Filter activation */
    if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 8005786:	6a0b      	ldr	r3, [r1, #32]
 8005788:	2b01      	cmp	r3, #1
 800578a:	4b1a      	ldr	r3, [pc, #104]	; (80057f4 <HAL_CAN_ConfigFilter+0x10c>)
    {
      SET_BIT(can_ip->FA1R, filternbrbitpos);
 800578c:	bf02      	ittt	eq
 800578e:	f8d3 221c 	ldreq.w	r2, [r3, #540]	; 0x21c
 8005792:	4310      	orreq	r0, r2
 8005794:	f8c3 021c 	streq.w	r0, [r3, #540]	; 0x21c
    }

    /* Leave the initialisation mode for the filter */
    CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 8005798:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 800579c:	f022 0201 	bic.w	r2, r2, #1
 80057a0:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200

    /* Return function status */
    return HAL_OK;
 80057a4:	2000      	movs	r0, #0
    /* Update error code */
    hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;

    return HAL_ERROR;
  }
}
 80057a6:	bd30      	pop	{r4, r5, pc}
    if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 80057a8:	2d01      	cmp	r5, #1
 80057aa:	d1dd      	bne.n	8005768 <HAL_CAN_ConfigFilter+0x80>
      SET_BIT(can_ip->FS1R, filternbrbitpos);
 80057ac:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 80057b0:	4305      	orrs	r5, r0
 80057b2:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 80057b6:	680b      	ldr	r3, [r1, #0]
        (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 80057b8:	888d      	ldrh	r5, [r1, #4]
        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 80057ba:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 80057be:	00d3      	lsls	r3, r2, #3
 80057c0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80057c4:	f503 43c8 	add.w	r3, r3, #25600	; 0x6400
        (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 80057c8:	898a      	ldrh	r2, [r1, #12]
      can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 80057ca:	f8c3 5240 	str.w	r5, [r3, #576]	; 0x240
        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 80057ce:	688d      	ldr	r5, [r1, #8]
 80057d0:	e7c6      	b.n	8005760 <HAL_CAN_ConfigFilter+0x78>
      SET_BIT(can_ip->FM1R, filternbrbitpos);
 80057d2:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 80057d6:	4302      	orrs	r2, r0
 80057d8:	e7cc      	b.n	8005774 <HAL_CAN_ConfigFilter+0x8c>
      SET_BIT(can_ip->FFA1R, filternbrbitpos);
 80057da:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 80057de:	4302      	orrs	r2, r0
 80057e0:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 80057e4:	e7cf      	b.n	8005786 <HAL_CAN_ConfigFilter+0x9e>
    hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 80057e6:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80057e8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80057ec:	6243      	str	r3, [r0, #36]	; 0x24
    return HAL_ERROR;
 80057ee:	2001      	movs	r0, #1
 80057f0:	e7d9      	b.n	80057a6 <HAL_CAN_ConfigFilter+0xbe>
 80057f2:	bf00      	nop
 80057f4:	40006400 	.word	0x40006400

080057f8 <HAL_CAN_Start>:
  * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
  *         the configuration information for the specified CAN.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
{
 80057f8:	b570      	push	{r4, r5, r6, lr}
  uint32_t tickstart;

  if (hcan->State == HAL_CAN_STATE_READY)
 80057fa:	f890 3020 	ldrb.w	r3, [r0, #32]
 80057fe:	2b01      	cmp	r3, #1
{
 8005800:	4604      	mov	r4, r0
  if (hcan->State == HAL_CAN_STATE_READY)
 8005802:	b2dd      	uxtb	r5, r3
 8005804:	d120      	bne.n	8005848 <HAL_CAN_Start+0x50>
  {
    /* Change CAN peripheral state */
    hcan->State = HAL_CAN_STATE_LISTENING;

    /* Request leave initialisation */
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 8005806:	6802      	ldr	r2, [r0, #0]
    hcan->State = HAL_CAN_STATE_LISTENING;
 8005808:	2302      	movs	r3, #2
 800580a:	f880 3020 	strb.w	r3, [r0, #32]
    CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 800580e:	6813      	ldr	r3, [r2, #0]
 8005810:	f023 0301 	bic.w	r3, r3, #1
 8005814:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8005816:	f7ff fed1 	bl	80055bc <HAL_GetTick>
 800581a:	4606      	mov	r6, r0

    /* Wait the acknowledge */
    while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
 800581c:	6823      	ldr	r3, [r4, #0]
 800581e:	685b      	ldr	r3, [r3, #4]
 8005820:	f013 0301 	ands.w	r3, r3, #1
 8005824:	d102      	bne.n	800582c <HAL_CAN_Start+0x34>
        return HAL_ERROR;
      }
    }

    /* Reset the CAN ErrorCode */
    hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 8005826:	6263      	str	r3, [r4, #36]	; 0x24

    /* Return function status */
    return HAL_OK;
 8005828:	461d      	mov	r5, r3
 800582a:	e00b      	b.n	8005844 <HAL_CAN_Start+0x4c>
      if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 800582c:	f7ff fec6 	bl	80055bc <HAL_GetTick>
 8005830:	1b80      	subs	r0, r0, r6
 8005832:	280a      	cmp	r0, #10
 8005834:	d9f2      	bls.n	800581c <HAL_CAN_Start+0x24>
        hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 8005836:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005838:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800583c:	6263      	str	r3, [r4, #36]	; 0x24
        hcan->State = HAL_CAN_STATE_ERROR;
 800583e:	2305      	movs	r3, #5
 8005840:	f884 3020 	strb.w	r3, [r4, #32]
    /* Update error code */
    hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;

    return HAL_ERROR;
  }
}
 8005844:	4628      	mov	r0, r5
 8005846:	bd70      	pop	{r4, r5, r6, pc}
    hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 8005848:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800584a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800584e:	6243      	str	r3, [r0, #36]	; 0x24
    return HAL_ERROR;
 8005850:	2501      	movs	r5, #1
 8005852:	e7f7      	b.n	8005844 <HAL_CAN_Start+0x4c>

08005854 <HAL_CAN_AddTxMessage>:
  *         the TxMailbox used to store the Tx message.
  *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, CAN_TxHeaderTypeDef *pHeader, uint8_t aData[], uint32_t *pTxMailbox)
{
 8005854:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t transmitmailbox;
  HAL_CAN_StateTypeDef state = hcan->State;
 8005856:	f890 5020 	ldrb.w	r5, [r0, #32]
  uint32_t tsr = READ_REG(hcan->Instance->TSR);
 800585a:	6806      	ldr	r6, [r0, #0]
  {
    assert_param(IS_CAN_EXTID(pHeader->ExtId));
  }
  assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));

  if ((state == HAL_CAN_STATE_READY) ||
 800585c:	3d01      	subs	r5, #1
 800585e:	2d01      	cmp	r5, #1
  uint32_t tsr = READ_REG(hcan->Instance->TSR);
 8005860:	68b4      	ldr	r4, [r6, #8]
  if ((state == HAL_CAN_STATE_READY) ||
 8005862:	d843      	bhi.n	80058ec <HAL_CAN_AddTxMessage+0x98>
      (state == HAL_CAN_STATE_LISTENING))
  {
    /* Check that all the Tx mailboxes are not full */
    if (((tsr & CAN_TSR_TME0) != 0U) ||
 8005864:	f014 5fe0 	tst.w	r4, #469762048	; 0x1c000000
 8005868:	d03c      	beq.n	80058e4 <HAL_CAN_AddTxMessage+0x90>
        ((tsr & CAN_TSR_TME1) != 0U) ||
        ((tsr & CAN_TSR_TME2) != 0U))
    {
      /* Select an empty transmit mailbox */
      transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 800586a:	f3c4 6401 	ubfx	r4, r4, #24, #2

      /* Check transmit mailbox value */
      if (transmitmailbox > 2U)
 800586e:	2c03      	cmp	r4, #3
 8005870:	f04f 0501 	mov.w	r5, #1
 8005874:	d105      	bne.n	8005882 <HAL_CAN_AddTxMessage+0x2e>
      {
        /* Update error code */
        hcan->ErrorCode |= HAL_CAN_ERROR_INTERNAL;
 8005876:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8005878:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
    }
  }
  else
  {
    /* Update error code */
    hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 800587c:	6243      	str	r3, [r0, #36]	; 0x24

    return HAL_ERROR;
 800587e:	2001      	movs	r0, #1
 8005880:	e02a      	b.n	80058d8 <HAL_CAN_AddTxMessage+0x84>
      *pTxMailbox = (uint32_t)1 << transmitmailbox;
 8005882:	40a5      	lsls	r5, r4
 8005884:	601d      	str	r5, [r3, #0]
      if (pHeader->IDE == CAN_ID_STD)
 8005886:	e9d1 0702 	ldrd	r0, r7, [r1, #8]
 800588a:	f104 0318 	add.w	r3, r4, #24
 800588e:	bb20      	cbnz	r0, 80058da <HAL_CAN_AddTxMessage+0x86>
        hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 8005890:	6808      	ldr	r0, [r1, #0]
 8005892:	ea47 5040 	orr.w	r0, r7, r0, lsl #21
        hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
 8005896:	011b      	lsls	r3, r3, #4
 8005898:	50f0      	str	r0, [r6, r3]
      hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 800589a:	eb06 1304 	add.w	r3, r6, r4, lsl #4
 800589e:	690d      	ldr	r5, [r1, #16]
 80058a0:	f8c3 5184 	str.w	r5, [r3, #388]	; 0x184
      if (pHeader->TransmitGlobalTime == ENABLE)
 80058a4:	7d09      	ldrb	r1, [r1, #20]
 80058a6:	2901      	cmp	r1, #1
        SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
 80058a8:	bf08      	it	eq
 80058aa:	f8d3 1184 	ldreq.w	r1, [r3, #388]	; 0x184
 80058ae:	ea4f 1004 	mov.w	r0, r4, lsl #4
 80058b2:	bf04      	itt	eq
 80058b4:	f441 7180 	orreq.w	r1, r1, #256	; 0x100
 80058b8:	f8c3 1184 	streq.w	r1, [r3, #388]	; 0x184
      WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 80058bc:	4406      	add	r6, r0
 80058be:	6851      	ldr	r1, [r2, #4]
 80058c0:	f8c6 118c 	str.w	r1, [r6, #396]	; 0x18c
      WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 80058c4:	6812      	ldr	r2, [r2, #0]
 80058c6:	f8c6 2188 	str.w	r2, [r6, #392]	; 0x188
      SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 80058ca:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 80058ce:	f042 0201 	orr.w	r2, r2, #1
 80058d2:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
      return HAL_OK;
 80058d6:	2000      	movs	r0, #0
  }
}
 80058d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
 80058da:	684d      	ldr	r5, [r1, #4]
                                                           pHeader->IDE |
 80058dc:	4338      	orrs	r0, r7
 80058de:	ea40 00c5 	orr.w	r0, r0, r5, lsl #3
 80058e2:	e7d8      	b.n	8005896 <HAL_CAN_AddTxMessage+0x42>
      hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 80058e4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80058e6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80058ea:	e7c7      	b.n	800587c <HAL_CAN_AddTxMessage+0x28>
    hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 80058ec:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80058ee:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80058f2:	e7c3      	b.n	800587c <HAL_CAN_AddTxMessage+0x28>

080058f4 <HAL_CAN_IsTxMessagePending>:
  *                Tx Mailbox.
  */
uint32_t HAL_CAN_IsTxMessagePending(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
{
  uint32_t status = 0U;
  HAL_CAN_StateTypeDef state = hcan->State;
 80058f4:	f890 3020 	ldrb.w	r3, [r0, #32]

  /* Check function parameters */
  assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));

  if ((state == HAL_CAN_STATE_READY) ||
 80058f8:	3b01      	subs	r3, #1
 80058fa:	2b01      	cmp	r3, #1
 80058fc:	d809      	bhi.n	8005912 <HAL_CAN_IsTxMessagePending+0x1e>
      (state == HAL_CAN_STATE_LISTENING))
  {
    /* Check pending transmission request on the selected Tx Mailboxes */
    if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_Pos))
 80058fe:	6803      	ldr	r3, [r0, #0]
 8005900:	689b      	ldr	r3, [r3, #8]
 8005902:	ea03 6381 	and.w	r3, r3, r1, lsl #26
 8005906:	ebb3 6f81 	cmp.w	r3, r1, lsl #26
 800590a:	bf14      	ite	ne
 800590c:	2001      	movne	r0, #1
 800590e:	2000      	moveq	r0, #0
 8005910:	4770      	bx	lr
  uint32_t status = 0U;
 8005912:	2000      	movs	r0, #0
    }
  }

  /* Return status */
  return status;
}
 8005914:	4770      	bx	lr

08005916 <HAL_CAN_GetRxMessage>:
  *         of the Rx frame will be stored.
  * @param  aData array where the payload of the Rx frame will be stored.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo, CAN_RxHeaderTypeDef *pHeader, uint8_t aData[])
{
 8005916:	b5f0      	push	{r4, r5, r6, r7, lr}
  HAL_CAN_StateTypeDef state = hcan->State;
 8005918:	f890 4020 	ldrb.w	r4, [r0, #32]

  assert_param(IS_CAN_RX_FIFO(RxFifo));

  if ((state == HAL_CAN_STATE_READY) ||
 800591c:	3c01      	subs	r4, #1
 800591e:	2c01      	cmp	r4, #1
 8005920:	d86c      	bhi.n	80059fc <HAL_CAN_GetRxMessage+0xe6>
      (state == HAL_CAN_STATE_LISTENING))
  {
    /* Check the Rx FIFO */
    if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 8005922:	6806      	ldr	r6, [r0, #0]
 8005924:	b941      	cbnz	r1, 8005938 <HAL_CAN_GetRxMessage+0x22>
    {
      /* Check that the Rx FIFO 0 is not empty */
      if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
 8005926:	68f4      	ldr	r4, [r6, #12]
      }
    }
    else /* Rx element is assigned to Rx FIFO 1 */
    {
      /* Check that the Rx FIFO 1 is not empty */
      if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 8005928:	07a4      	lsls	r4, r4, #30
 800592a:	d107      	bne.n	800593c <HAL_CAN_GetRxMessage+0x26>
      {
        /* Update error code */
        hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 800592c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800592e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
    return HAL_OK;
  }
  else
  {
    /* Update error code */
    hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 8005932:	6243      	str	r3, [r0, #36]	; 0x24

    return HAL_ERROR;
 8005934:	2001      	movs	r0, #1
 8005936:	e056      	b.n	80059e6 <HAL_CAN_GetRxMessage+0xd0>
      if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 8005938:	6934      	ldr	r4, [r6, #16]
 800593a:	e7f5      	b.n	8005928 <HAL_CAN_GetRxMessage+0x12>
    pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 800593c:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 8005940:	010c      	lsls	r4, r1, #4
 8005942:	f8d5 71b0 	ldr.w	r7, [r5, #432]	; 0x1b0
 8005946:	f007 0704 	and.w	r7, r7, #4
 800594a:	6097      	str	r7, [r2, #8]
    if (pHeader->IDE == CAN_ID_STD)
 800594c:	2f00      	cmp	r7, #0
 800594e:	d14b      	bne.n	80059e8 <HAL_CAN_GetRxMessage+0xd2>
      pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_Pos;
 8005950:	f8d5 71b0 	ldr.w	r7, [r5, #432]	; 0x1b0
 8005954:	0d7f      	lsrs	r7, r7, #21
 8005956:	6017      	str	r7, [r2, #0]
    pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 8005958:	f8d5 71b0 	ldr.w	r7, [r5, #432]	; 0x1b0
 800595c:	f007 0702 	and.w	r7, r7, #2
 8005960:	60d7      	str	r7, [r2, #12]
    pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos;
 8005962:	f8d5 71b4 	ldr.w	r7, [r5, #436]	; 0x1b4
 8005966:	f007 070f 	and.w	r7, r7, #15
 800596a:	6117      	str	r7, [r2, #16]
    pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_FMI_Pos;
 800596c:	f8d5 71b4 	ldr.w	r7, [r5, #436]	; 0x1b4
    pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_TIME_Pos;
 8005970:	f8d5 51b4 	ldr.w	r5, [r5, #436]	; 0x1b4
    aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R_DATA0_Pos);
 8005974:	4426      	add	r6, r4
    pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_FMI_Pos;
 8005976:	f3c7 2707 	ubfx	r7, r7, #8, #8
    pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_TIME_Pos;
 800597a:	0c2d      	lsrs	r5, r5, #16
    pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_FMI_Pos;
 800597c:	6197      	str	r7, [r2, #24]
    pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_TIME_Pos;
 800597e:	6155      	str	r5, [r2, #20]
    aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R_DATA0_Pos);
 8005980:	f8d6 21b8 	ldr.w	r2, [r6, #440]	; 0x1b8
 8005984:	701a      	strb	r2, [r3, #0]
    aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R_DATA1_Pos);
 8005986:	6802      	ldr	r2, [r0, #0]
 8005988:	4422      	add	r2, r4
 800598a:	f8d2 21b8 	ldr.w	r2, [r2, #440]	; 0x1b8
 800598e:	0a12      	lsrs	r2, r2, #8
 8005990:	705a      	strb	r2, [r3, #1]
    aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R_DATA2_Pos);
 8005992:	6802      	ldr	r2, [r0, #0]
 8005994:	4422      	add	r2, r4
 8005996:	f8d2 21b8 	ldr.w	r2, [r2, #440]	; 0x1b8
 800599a:	0c12      	lsrs	r2, r2, #16
 800599c:	709a      	strb	r2, [r3, #2]
    aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R_DATA3_Pos);
 800599e:	6802      	ldr	r2, [r0, #0]
 80059a0:	4422      	add	r2, r4
 80059a2:	f8d2 21b8 	ldr.w	r2, [r2, #440]	; 0x1b8
 80059a6:	0e12      	lsrs	r2, r2, #24
 80059a8:	70da      	strb	r2, [r3, #3]
    aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R_DATA4_Pos);
 80059aa:	6802      	ldr	r2, [r0, #0]
 80059ac:	4422      	add	r2, r4
 80059ae:	f8d2 21bc 	ldr.w	r2, [r2, #444]	; 0x1bc
 80059b2:	711a      	strb	r2, [r3, #4]
    aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R_DATA5_Pos);
 80059b4:	6802      	ldr	r2, [r0, #0]
 80059b6:	4422      	add	r2, r4
 80059b8:	f8d2 21bc 	ldr.w	r2, [r2, #444]	; 0x1bc
 80059bc:	0a12      	lsrs	r2, r2, #8
 80059be:	715a      	strb	r2, [r3, #5]
    aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R_DATA6_Pos);
 80059c0:	6802      	ldr	r2, [r0, #0]
 80059c2:	4422      	add	r2, r4
 80059c4:	f8d2 21bc 	ldr.w	r2, [r2, #444]	; 0x1bc
 80059c8:	0c12      	lsrs	r2, r2, #16
 80059ca:	719a      	strb	r2, [r3, #6]
    aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R_DATA7_Pos);
 80059cc:	6802      	ldr	r2, [r0, #0]
 80059ce:	4414      	add	r4, r2
 80059d0:	f8d4 21bc 	ldr.w	r2, [r4, #444]	; 0x1bc
 80059d4:	0e12      	lsrs	r2, r2, #24
 80059d6:	71da      	strb	r2, [r3, #7]
    if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 80059d8:	6803      	ldr	r3, [r0, #0]
 80059da:	b951      	cbnz	r1, 80059f2 <HAL_CAN_GetRxMessage+0xdc>
      SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 80059dc:	68da      	ldr	r2, [r3, #12]
 80059de:	f042 0220 	orr.w	r2, r2, #32
 80059e2:	60da      	str	r2, [r3, #12]
    return HAL_OK;
 80059e4:	2000      	movs	r0, #0
  }
}
 80059e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 80059e8:	f8d5 71b0 	ldr.w	r7, [r5, #432]	; 0x1b0
 80059ec:	08ff      	lsrs	r7, r7, #3
 80059ee:	6057      	str	r7, [r2, #4]
 80059f0:	e7b2      	b.n	8005958 <HAL_CAN_GetRxMessage+0x42>
      SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
 80059f2:	691a      	ldr	r2, [r3, #16]
 80059f4:	f042 0220 	orr.w	r2, r2, #32
 80059f8:	611a      	str	r2, [r3, #16]
 80059fa:	e7f3      	b.n	80059e4 <HAL_CAN_GetRxMessage+0xce>
    hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 80059fc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80059fe:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005a02:	e796      	b.n	8005932 <HAL_CAN_GetRxMessage+0x1c>

08005a04 <HAL_CAN_ActivateNotification>:
  *         This parameter can be any combination of @arg CAN_Interrupts.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
{
  HAL_CAN_StateTypeDef state = hcan->State;
 8005a04:	f890 3020 	ldrb.w	r3, [r0, #32]

  /* Check function parameters */
  assert_param(IS_CAN_IT(ActiveITs));

  if ((state == HAL_CAN_STATE_READY) ||
 8005a08:	3b01      	subs	r3, #1
 8005a0a:	2b01      	cmp	r3, #1
 8005a0c:	d805      	bhi.n	8005a1a <HAL_CAN_ActivateNotification+0x16>
      (state == HAL_CAN_STATE_LISTENING))
  {
    /* Enable the selected interrupts */
    __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
 8005a0e:	6802      	ldr	r2, [r0, #0]
 8005a10:	6953      	ldr	r3, [r2, #20]
 8005a12:	4319      	orrs	r1, r3
 8005a14:	6151      	str	r1, [r2, #20]

    /* Return function status */
    return HAL_OK;
 8005a16:	2000      	movs	r0, #0
 8005a18:	4770      	bx	lr
  }
  else
  {
    /* Update error code */
    hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 8005a1a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8005a1c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005a20:	6243      	str	r3, [r0, #36]	; 0x24

    return HAL_ERROR;
 8005a22:	2001      	movs	r0, #1
  }
}
 8005a24:	4770      	bx	lr

08005a26 <HAL_CAN_TxMailbox0CompleteCallback>:
 8005a26:	4770      	bx	lr

08005a28 <HAL_CAN_TxMailbox1CompleteCallback>:
 8005a28:	4770      	bx	lr

08005a2a <HAL_CAN_TxMailbox2CompleteCallback>:
 8005a2a:	4770      	bx	lr

08005a2c <HAL_CAN_TxMailbox0AbortCallback>:
 8005a2c:	4770      	bx	lr

08005a2e <HAL_CAN_TxMailbox1AbortCallback>:
 8005a2e:	4770      	bx	lr

08005a30 <HAL_CAN_TxMailbox2AbortCallback>:
 8005a30:	4770      	bx	lr

08005a32 <HAL_CAN_RxFifo0FullCallback>:
 8005a32:	4770      	bx	lr

08005a34 <HAL_CAN_RxFifo1FullCallback>:
 8005a34:	4770      	bx	lr

08005a36 <HAL_CAN_SleepCallback>:
 8005a36:	4770      	bx	lr

08005a38 <HAL_CAN_WakeUpFromRxMsgCallback>:
 8005a38:	4770      	bx	lr

08005a3a <HAL_CAN_ErrorCallback>:
 8005a3a:	4770      	bx	lr

08005a3c <HAL_CAN_IRQHandler>:
  * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
  *         the configuration information for the specified CAN.
  * @retval None
  */
void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
{
 8005a3c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t errorcode = HAL_CAN_ERROR_NONE;
  uint32_t interrupts = READ_REG(hcan->Instance->IER);
 8005a40:	6803      	ldr	r3, [r0, #0]
 8005a42:	695e      	ldr	r6, [r3, #20]
  uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 8005a44:	f8d3 9004 	ldr.w	r9, [r3, #4]
  uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 8005a48:	689f      	ldr	r7, [r3, #8]
  uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 8005a4a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
  uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 8005a4e:	f8d3 a010 	ldr.w	sl, [r3, #16]
  uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 8005a52:	f8d3 8018 	ldr.w	r8, [r3, #24]

  /* Transmit Mailbox empty interrupt management *****************************/
  if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
 8005a56:	f016 0401 	ands.w	r4, r6, #1
{
 8005a5a:	4605      	mov	r5, r0
  if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
 8005a5c:	d022      	beq.n	8005aa4 <HAL_CAN_IRQHandler+0x68>
  {
    /* Transmit Mailbox 0 management *****************************************/
    if ((tsrflags & CAN_TSR_RQCP0) != 0U)
 8005a5e:	f017 0401 	ands.w	r4, r7, #1
 8005a62:	d007      	beq.n	8005a74 <HAL_CAN_IRQHandler+0x38>
    {
      /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
 8005a64:	2201      	movs	r2, #1

      if ((tsrflags & CAN_TSR_TXOK0) != 0U)
 8005a66:	07b9      	lsls	r1, r7, #30
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
 8005a68:	609a      	str	r2, [r3, #8]
      if ((tsrflags & CAN_TSR_TXOK0) != 0U)
 8005a6a:	f140 80a5 	bpl.w	8005bb8 <HAL_CAN_IRQHandler+0x17c>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
        /* Call registered callback*/
        hcan->TxMailbox0CompleteCallback(hcan);
#else
        /* Call weak (surcharged) callback */
        HAL_CAN_TxMailbox0CompleteCallback(hcan);
 8005a6e:	f7ff ffda 	bl	8005a26 <HAL_CAN_TxMailbox0CompleteCallback>
  uint32_t errorcode = HAL_CAN_ERROR_NONE;
 8005a72:	2400      	movs	r4, #0
        }
      }
    }

    /* Transmit Mailbox 1 management *****************************************/
    if ((tsrflags & CAN_TSR_RQCP1) != 0U)
 8005a74:	05fb      	lsls	r3, r7, #23
 8005a76:	d509      	bpl.n	8005a8c <HAL_CAN_IRQHandler+0x50>
    {
      /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
 8005a78:	682b      	ldr	r3, [r5, #0]
 8005a7a:	f44f 7280 	mov.w	r2, #256	; 0x100

      if ((tsrflags & CAN_TSR_TXOK1) != 0U)
 8005a7e:	05b8      	lsls	r0, r7, #22
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
 8005a80:	609a      	str	r2, [r3, #8]
      if ((tsrflags & CAN_TSR_TXOK1) != 0U)
 8005a82:	f140 80a7 	bpl.w	8005bd4 <HAL_CAN_IRQHandler+0x198>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
        /* Call registered callback*/
        hcan->TxMailbox1CompleteCallback(hcan);
#else
        /* Call weak (surcharged) callback */
        HAL_CAN_TxMailbox1CompleteCallback(hcan);
 8005a86:	4628      	mov	r0, r5
 8005a88:	f7ff ffce 	bl	8005a28 <HAL_CAN_TxMailbox1CompleteCallback>
        }
      }
    }

    /* Transmit Mailbox 2 management *****************************************/
    if ((tsrflags & CAN_TSR_RQCP2) != 0U)
 8005a8c:	03fb      	lsls	r3, r7, #15
 8005a8e:	d509      	bpl.n	8005aa4 <HAL_CAN_IRQHandler+0x68>
    {
      /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
 8005a90:	682b      	ldr	r3, [r5, #0]
 8005a92:	f44f 3280 	mov.w	r2, #65536	; 0x10000

      if ((tsrflags & CAN_TSR_TXOK2) != 0U)
 8005a96:	03b8      	lsls	r0, r7, #14
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
 8005a98:	609a      	str	r2, [r3, #8]
      if ((tsrflags & CAN_TSR_TXOK2) != 0U)
 8005a9a:	f140 80a9 	bpl.w	8005bf0 <HAL_CAN_IRQHandler+0x1b4>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
        /* Call registered callback*/
        hcan->TxMailbox2CompleteCallback(hcan);
#else
        /* Call weak (surcharged) callback */
        HAL_CAN_TxMailbox2CompleteCallback(hcan);
 8005a9e:	4628      	mov	r0, r5
 8005aa0:	f7ff ffc3 	bl	8005a2a <HAL_CAN_TxMailbox2CompleteCallback>
      }
    }
  }

  /* Receive FIFO 0 overrun interrupt management *****************************/
  if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
 8005aa4:	0733      	lsls	r3, r6, #28
 8005aa6:	d507      	bpl.n	8005ab8 <HAL_CAN_IRQHandler+0x7c>
  {
    if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
 8005aa8:	f01b 0f10 	tst.w	fp, #16
    {
      /* Set CAN error code to Rx Fifo 0 overrun error */
      errorcode |= HAL_CAN_ERROR_RX_FOV0;

      /* Clear FIFO0 Overrun Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
 8005aac:	bf1f      	itttt	ne
 8005aae:	682b      	ldrne	r3, [r5, #0]
 8005ab0:	2210      	movne	r2, #16
      errorcode |= HAL_CAN_ERROR_RX_FOV0;
 8005ab2:	f444 7400 	orrne.w	r4, r4, #512	; 0x200
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
 8005ab6:	60da      	strne	r2, [r3, #12]
    }
  }

  /* Receive FIFO 0 full interrupt management ********************************/
  if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
 8005ab8:	0777      	lsls	r7, r6, #29
 8005aba:	d508      	bpl.n	8005ace <HAL_CAN_IRQHandler+0x92>
  {
    if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
 8005abc:	f01b 0f08 	tst.w	fp, #8
 8005ac0:	d005      	beq.n	8005ace <HAL_CAN_IRQHandler+0x92>
    {
      /* Clear FIFO 0 full Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
 8005ac2:	682b      	ldr	r3, [r5, #0]
 8005ac4:	2208      	movs	r2, #8
 8005ac6:	60da      	str	r2, [r3, #12]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo0FullCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo0FullCallback(hcan);
 8005ac8:	4628      	mov	r0, r5
 8005aca:	f7ff ffb2 	bl	8005a32 <HAL_CAN_RxFifo0FullCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Receive FIFO 0 message pending interrupt management *********************/
  if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
 8005ace:	07b0      	lsls	r0, r6, #30
 8005ad0:	d506      	bpl.n	8005ae0 <HAL_CAN_IRQHandler+0xa4>
  {
    /* Check if message is still pending */
    if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
 8005ad2:	682b      	ldr	r3, [r5, #0]
 8005ad4:	68db      	ldr	r3, [r3, #12]
 8005ad6:	0799      	lsls	r1, r3, #30
 8005ad8:	d002      	beq.n	8005ae0 <HAL_CAN_IRQHandler+0xa4>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo0MsgPendingCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo0MsgPendingCallback(hcan);
 8005ada:	4628      	mov	r0, r5
 8005adc:	f7fb fcb2 	bl	8001444 <HAL_CAN_RxFifo0MsgPendingCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Receive FIFO 1 overrun interrupt management *****************************/
  if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
 8005ae0:	0672      	lsls	r2, r6, #25
 8005ae2:	d507      	bpl.n	8005af4 <HAL_CAN_IRQHandler+0xb8>
  {
    if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
 8005ae4:	f01a 0f10 	tst.w	sl, #16
    {
      /* Set CAN error code to Rx Fifo 1 overrun error */
      errorcode |= HAL_CAN_ERROR_RX_FOV1;

      /* Clear FIFO1 Overrun Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
 8005ae8:	bf1f      	itttt	ne
 8005aea:	682b      	ldrne	r3, [r5, #0]
 8005aec:	2210      	movne	r2, #16
      errorcode |= HAL_CAN_ERROR_RX_FOV1;
 8005aee:	f444 6480 	orrne.w	r4, r4, #1024	; 0x400
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
 8005af2:	611a      	strne	r2, [r3, #16]
    }
  }

  /* Receive FIFO 1 full interrupt management ********************************/
  if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
 8005af4:	06b3      	lsls	r3, r6, #26
 8005af6:	d508      	bpl.n	8005b0a <HAL_CAN_IRQHandler+0xce>
  {
    if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
 8005af8:	f01a 0f08 	tst.w	sl, #8
 8005afc:	d005      	beq.n	8005b0a <HAL_CAN_IRQHandler+0xce>
    {
      /* Clear FIFO 1 full Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
 8005afe:	682b      	ldr	r3, [r5, #0]
 8005b00:	2208      	movs	r2, #8
 8005b02:	611a      	str	r2, [r3, #16]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo1FullCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo1FullCallback(hcan);
 8005b04:	4628      	mov	r0, r5
 8005b06:	f7ff ff95 	bl	8005a34 <HAL_CAN_RxFifo1FullCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Receive FIFO 1 message pending interrupt management *********************/
  if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
 8005b0a:	06f7      	lsls	r7, r6, #27
 8005b0c:	d506      	bpl.n	8005b1c <HAL_CAN_IRQHandler+0xe0>
  {
    /* Check if message is still pending */
    if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
 8005b0e:	682b      	ldr	r3, [r5, #0]
 8005b10:	691b      	ldr	r3, [r3, #16]
 8005b12:	0798      	lsls	r0, r3, #30
 8005b14:	d002      	beq.n	8005b1c <HAL_CAN_IRQHandler+0xe0>
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->RxFifo1MsgPendingCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_RxFifo1MsgPendingCallback(hcan);
 8005b16:	4628      	mov	r0, r5
 8005b18:	f7fb fca4 	bl	8001464 <HAL_CAN_RxFifo1MsgPendingCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Sleep interrupt management *********************************************/
  if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
 8005b1c:	03b1      	lsls	r1, r6, #14
 8005b1e:	d508      	bpl.n	8005b32 <HAL_CAN_IRQHandler+0xf6>
  {
    if ((msrflags & CAN_MSR_SLAKI) != 0U)
 8005b20:	f019 0f10 	tst.w	r9, #16
 8005b24:	d005      	beq.n	8005b32 <HAL_CAN_IRQHandler+0xf6>
    {
      /* Clear Sleep interrupt Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
 8005b26:	682b      	ldr	r3, [r5, #0]
 8005b28:	2210      	movs	r2, #16
 8005b2a:	605a      	str	r2, [r3, #4]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->SleepCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_SleepCallback(hcan);
 8005b2c:	4628      	mov	r0, r5
 8005b2e:	f7ff ff82 	bl	8005a36 <HAL_CAN_SleepCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* WakeUp interrupt management *********************************************/
  if ((interrupts & CAN_IT_WAKEUP) != 0U)
 8005b32:	03f2      	lsls	r2, r6, #15
 8005b34:	d508      	bpl.n	8005b48 <HAL_CAN_IRQHandler+0x10c>
  {
    if ((msrflags & CAN_MSR_WKUI) != 0U)
 8005b36:	f019 0f08 	tst.w	r9, #8
 8005b3a:	d005      	beq.n	8005b48 <HAL_CAN_IRQHandler+0x10c>
    {
      /* Clear WakeUp Flag */
      __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
 8005b3c:	682b      	ldr	r3, [r5, #0]
 8005b3e:	2208      	movs	r2, #8
 8005b40:	605a      	str	r2, [r3, #4]
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
      /* Call registered callback*/
      hcan->WakeUpFromRxMsgCallback(hcan);
#else
      /* Call weak (surcharged) callback */
      HAL_CAN_WakeUpFromRxMsgCallback(hcan);
 8005b42:	4628      	mov	r0, r5
 8005b44:	f7ff ff78 	bl	8005a38 <HAL_CAN_WakeUpFromRxMsgCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
    }
  }

  /* Error interrupts management *********************************************/
  if ((interrupts & CAN_IT_ERROR) != 0U)
 8005b48:	0433      	lsls	r3, r6, #16
 8005b4a:	d52c      	bpl.n	8005ba6 <HAL_CAN_IRQHandler+0x16a>
  {
    if ((msrflags & CAN_MSR_ERRI) != 0U)
 8005b4c:	f019 0f04 	tst.w	r9, #4
 8005b50:	682a      	ldr	r2, [r5, #0]
 8005b52:	d026      	beq.n	8005ba2 <HAL_CAN_IRQHandler+0x166>
    {
      /* Check Error Warning Flag */
      if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
 8005b54:	05f7      	lsls	r7, r6, #23
 8005b56:	d504      	bpl.n	8005b62 <HAL_CAN_IRQHandler+0x126>
 8005b58:	f018 0f01 	tst.w	r8, #1
          ((esrflags & CAN_ESR_EWGF) != 0U))
      {
        /* Set CAN error code to Error Warning */
        errorcode |= HAL_CAN_ERROR_EWG;
 8005b5c:	bf18      	it	ne
 8005b5e:	f044 0401 	orrne.w	r4, r4, #1

        /* No need for clear of Error Warning Flag as read-only */
      }

      /* Check Error Passive Flag */
      if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
 8005b62:	05b0      	lsls	r0, r6, #22
 8005b64:	d504      	bpl.n	8005b70 <HAL_CAN_IRQHandler+0x134>
 8005b66:	f018 0f02 	tst.w	r8, #2
          ((esrflags & CAN_ESR_EPVF) != 0U))
      {
        /* Set CAN error code to Error Passive */
        errorcode |= HAL_CAN_ERROR_EPV;
 8005b6a:	bf18      	it	ne
 8005b6c:	f044 0402 	orrne.w	r4, r4, #2

        /* No need for clear of Error Passive Flag as read-only */
      }

      /* Check Bus-off Flag */
      if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
 8005b70:	0571      	lsls	r1, r6, #21
 8005b72:	d504      	bpl.n	8005b7e <HAL_CAN_IRQHandler+0x142>
 8005b74:	f018 0f04 	tst.w	r8, #4
          ((esrflags & CAN_ESR_BOFF) != 0U))
      {
        /* Set CAN error code to Bus-Off */
        errorcode |= HAL_CAN_ERROR_BOF;
 8005b78:	bf18      	it	ne
 8005b7a:	f044 0404 	orrne.w	r4, r4, #4

        /* No need for clear of Error Bus-Off as read-only */
      }

      /* Check Last Error Code Flag */
      if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
 8005b7e:	0533      	lsls	r3, r6, #20
 8005b80:	d50f      	bpl.n	8005ba2 <HAL_CAN_IRQHandler+0x166>
 8005b82:	f018 0370 	ands.w	r3, r8, #112	; 0x70
 8005b86:	d00c      	beq.n	8005ba2 <HAL_CAN_IRQHandler+0x166>
          ((esrflags & CAN_ESR_LEC) != 0U))
      {
        switch (esrflags & CAN_ESR_LEC)
 8005b88:	2b40      	cmp	r3, #64	; 0x40
 8005b8a:	d04f      	beq.n	8005c2c <HAL_CAN_IRQHandler+0x1f0>
 8005b8c:	d83e      	bhi.n	8005c0c <HAL_CAN_IRQHandler+0x1d0>
 8005b8e:	2b20      	cmp	r3, #32
 8005b90:	d046      	beq.n	8005c20 <HAL_CAN_IRQHandler+0x1e4>
 8005b92:	2b30      	cmp	r3, #48	; 0x30
 8005b94:	d047      	beq.n	8005c26 <HAL_CAN_IRQHandler+0x1ea>
 8005b96:	2b10      	cmp	r3, #16
 8005b98:	d03f      	beq.n	8005c1a <HAL_CAN_IRQHandler+0x1de>
          default:
            break;
        }

        /* Clear Last error code Flag */
        CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
 8005b9a:	6993      	ldr	r3, [r2, #24]
 8005b9c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005ba0:	6193      	str	r3, [r2, #24]
      }
    }

    /* Clear ERRI Flag */
    __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
 8005ba2:	2304      	movs	r3, #4
 8005ba4:	6053      	str	r3, [r2, #4]
  }

  /* Call the Error call Back in case of Errors */
  if (errorcode != HAL_CAN_ERROR_NONE)
 8005ba6:	b12c      	cbz	r4, 8005bb4 <HAL_CAN_IRQHandler+0x178>
  {
    /* Update error code in handle */
    hcan->ErrorCode |= errorcode;
 8005ba8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005baa:	431c      	orrs	r4, r3
 8005bac:	626c      	str	r4, [r5, #36]	; 0x24
#if USE_HAL_CAN_REGISTER_CALLBACKS == 1
    /* Call registered callback*/
    hcan->ErrorCallback(hcan);
#else
    /* Call weak (surcharged) callback */
    HAL_CAN_ErrorCallback(hcan);
 8005bae:	4628      	mov	r0, r5
 8005bb0:	f7ff ff43 	bl	8005a3a <HAL_CAN_ErrorCallback>
#endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
  }
}
 8005bb4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        if ((tsrflags & CAN_TSR_ALST0) != 0U)
 8005bb8:	077a      	lsls	r2, r7, #29
 8005bba:	d405      	bmi.n	8005bc8 <HAL_CAN_IRQHandler+0x18c>
        else if ((tsrflags & CAN_TSR_TERR0) != 0U)
 8005bbc:	f017 0408 	ands.w	r4, r7, #8
 8005bc0:	d105      	bne.n	8005bce <HAL_CAN_IRQHandler+0x192>
          HAL_CAN_TxMailbox0AbortCallback(hcan);
 8005bc2:	f7ff ff33 	bl	8005a2c <HAL_CAN_TxMailbox0AbortCallback>
 8005bc6:	e755      	b.n	8005a74 <HAL_CAN_IRQHandler+0x38>
          errorcode |= HAL_CAN_ERROR_TX_ALST0;
 8005bc8:	f44f 6400 	mov.w	r4, #2048	; 0x800
 8005bcc:	e752      	b.n	8005a74 <HAL_CAN_IRQHandler+0x38>
          errorcode |= HAL_CAN_ERROR_TX_TERR0;
 8005bce:	f44f 5480 	mov.w	r4, #4096	; 0x1000
 8005bd2:	e74f      	b.n	8005a74 <HAL_CAN_IRQHandler+0x38>
        if ((tsrflags & CAN_TSR_ALST1) != 0U)
 8005bd4:	0579      	lsls	r1, r7, #21
 8005bd6:	d502      	bpl.n	8005bde <HAL_CAN_IRQHandler+0x1a2>
          errorcode |= HAL_CAN_ERROR_TX_ALST1;
 8005bd8:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
 8005bdc:	e756      	b.n	8005a8c <HAL_CAN_IRQHandler+0x50>
        else if ((tsrflags & CAN_TSR_TERR1) != 0U)
 8005bde:	053a      	lsls	r2, r7, #20
 8005be0:	d502      	bpl.n	8005be8 <HAL_CAN_IRQHandler+0x1ac>
          errorcode |= HAL_CAN_ERROR_TX_TERR1;
 8005be2:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8005be6:	e751      	b.n	8005a8c <HAL_CAN_IRQHandler+0x50>
          HAL_CAN_TxMailbox1AbortCallback(hcan);
 8005be8:	4628      	mov	r0, r5
 8005bea:	f7ff ff20 	bl	8005a2e <HAL_CAN_TxMailbox1AbortCallback>
 8005bee:	e74d      	b.n	8005a8c <HAL_CAN_IRQHandler+0x50>
        if ((tsrflags & CAN_TSR_ALST2) != 0U)
 8005bf0:	0379      	lsls	r1, r7, #13
 8005bf2:	d502      	bpl.n	8005bfa <HAL_CAN_IRQHandler+0x1be>
          errorcode |= HAL_CAN_ERROR_TX_ALST2;
 8005bf4:	f444 4400 	orr.w	r4, r4, #32768	; 0x8000
 8005bf8:	e754      	b.n	8005aa4 <HAL_CAN_IRQHandler+0x68>
        else if ((tsrflags & CAN_TSR_TERR2) != 0U)
 8005bfa:	033a      	lsls	r2, r7, #12
 8005bfc:	d502      	bpl.n	8005c04 <HAL_CAN_IRQHandler+0x1c8>
          errorcode |= HAL_CAN_ERROR_TX_TERR2;
 8005bfe:	f444 3480 	orr.w	r4, r4, #65536	; 0x10000
 8005c02:	e74f      	b.n	8005aa4 <HAL_CAN_IRQHandler+0x68>
          HAL_CAN_TxMailbox2AbortCallback(hcan);
 8005c04:	4628      	mov	r0, r5
 8005c06:	f7ff ff13 	bl	8005a30 <HAL_CAN_TxMailbox2AbortCallback>
 8005c0a:	e74b      	b.n	8005aa4 <HAL_CAN_IRQHandler+0x68>
        switch (esrflags & CAN_ESR_LEC)
 8005c0c:	2b50      	cmp	r3, #80	; 0x50
 8005c0e:	d010      	beq.n	8005c32 <HAL_CAN_IRQHandler+0x1f6>
 8005c10:	2b60      	cmp	r3, #96	; 0x60
 8005c12:	d1c2      	bne.n	8005b9a <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_CRC;
 8005c14:	f444 7480 	orr.w	r4, r4, #256	; 0x100
            break;
 8005c18:	e7bf      	b.n	8005b9a <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_STF;
 8005c1a:	f044 0408 	orr.w	r4, r4, #8
            break;
 8005c1e:	e7bc      	b.n	8005b9a <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_FOR;
 8005c20:	f044 0410 	orr.w	r4, r4, #16
            break;
 8005c24:	e7b9      	b.n	8005b9a <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_ACK;
 8005c26:	f044 0420 	orr.w	r4, r4, #32
            break;
 8005c2a:	e7b6      	b.n	8005b9a <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_BR;
 8005c2c:	f044 0440 	orr.w	r4, r4, #64	; 0x40
            break;
 8005c30:	e7b3      	b.n	8005b9a <HAL_CAN_IRQHandler+0x15e>
            errorcode |= HAL_CAN_ERROR_BD;
 8005c32:	f044 0480 	orr.w	r4, r4, #128	; 0x80
            break;
 8005c36:	e7b0      	b.n	8005b9a <HAL_CAN_IRQHandler+0x15e>

08005c38 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005c38:	4907      	ldr	r1, [pc, #28]	; (8005c58 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8005c3a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005c3c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005c40:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005c42:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005c44:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005c48:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8005c4a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8005c4c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005c50:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8005c54:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8005c56:	4770      	bx	lr
 8005c58:	e000ed00 	.word	0xe000ed00

08005c5c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8005c5c:	4b16      	ldr	r3, [pc, #88]	; (8005cb8 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8005c5e:	b530      	push	{r4, r5, lr}
 8005c60:	68dc      	ldr	r4, [r3, #12]
 8005c62:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005c66:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005c6a:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005c6c:	2d04      	cmp	r5, #4
 8005c6e:	bf28      	it	cs
 8005c70:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005c72:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005c74:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005c78:	bf8c      	ite	hi
 8005c7a:	3c03      	subhi	r4, #3
 8005c7c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005c7e:	fa03 f505 	lsl.w	r5, r3, r5
 8005c82:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005c86:	40a3      	lsls	r3, r4
 8005c88:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005c8c:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8005c8e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005c90:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005c94:	bfac      	ite	ge
 8005c96:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005c9a:	4a08      	ldrlt	r2, [pc, #32]	; (8005cbc <HAL_NVIC_SetPriority+0x60>)
 8005c9c:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8005ca0:	bfb8      	it	lt
 8005ca2:	f000 000f 	andlt.w	r0, r0, #15
 8005ca6:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005ca8:	bfaa      	itet	ge
 8005caa:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005cae:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005cb0:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005cb4:	bd30      	pop	{r4, r5, pc}
 8005cb6:	bf00      	nop
 8005cb8:	e000ed00 	.word	0xe000ed00
 8005cbc:	e000ed14 	.word	0xe000ed14

08005cc0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005cc0:	2800      	cmp	r0, #0
 8005cc2:	db08      	blt.n	8005cd6 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005cc4:	0942      	lsrs	r2, r0, #5
 8005cc6:	2301      	movs	r3, #1
 8005cc8:	f000 001f 	and.w	r0, r0, #31
 8005ccc:	fa03 f000 	lsl.w	r0, r3, r0
 8005cd0:	4b01      	ldr	r3, [pc, #4]	; (8005cd8 <HAL_NVIC_EnableIRQ+0x18>)
 8005cd2:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8005cd6:	4770      	bx	lr
 8005cd8:	e000e100 	.word	0xe000e100

08005cdc <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005cdc:	2800      	cmp	r0, #0
 8005cde:	db0d      	blt.n	8005cfc <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005ce0:	0943      	lsrs	r3, r0, #5
 8005ce2:	2201      	movs	r2, #1
 8005ce4:	f000 001f 	and.w	r0, r0, #31
 8005ce8:	fa02 f000 	lsl.w	r0, r2, r0
 8005cec:	3320      	adds	r3, #32
 8005cee:	4a04      	ldr	r2, [pc, #16]	; (8005d00 <HAL_NVIC_DisableIRQ+0x24>)
 8005cf0:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8005cf4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8005cf8:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8005cfc:	4770      	bx	lr
 8005cfe:	bf00      	nop
 8005d00:	e000e100 	.word	0xe000e100

08005d04 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005d04:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8005d06:	4604      	mov	r4, r0
 8005d08:	b150      	cbz	r0, 8005d20 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8005d0a:	7943      	ldrb	r3, [r0, #5]
 8005d0c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005d10:	b913      	cbnz	r3, 8005d18 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8005d12:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8005d14:	f7fb ff82 	bl	8001c1c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8005d18:	2301      	movs	r3, #1
 8005d1a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8005d1c:	2000      	movs	r0, #0
}
 8005d1e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005d20:	2001      	movs	r0, #1
 8005d22:	e7fc      	b.n	8005d1e <HAL_CRC_Init+0x1a>

08005d24 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8005d24:	6803      	ldr	r3, [r0, #0]
{
 8005d26:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8005d28:	4c08      	ldr	r4, [pc, #32]	; (8005d4c <DMA_CalcBaseAndBitshift+0x28>)
{
 8005d2a:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8005d2c:	b2d9      	uxtb	r1, r3
 8005d2e:	3910      	subs	r1, #16
 8005d30:	2018      	movs	r0, #24
 8005d32:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8005d36:	5c20      	ldrb	r0, [r4, r0]
 8005d38:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 8005d3a:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8005d3e:	f020 0003 	bic.w	r0, r0, #3
 8005d42:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8005d44:	bf88      	it	hi
 8005d46:	3004      	addhi	r0, #4
 8005d48:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8005d4a:	bd10      	pop	{r4, pc}
 8005d4c:	080245c9 	.word	0x080245c9

08005d50 <HAL_DMA_Init>:
{
 8005d50:	b570      	push	{r4, r5, r6, lr}
 8005d52:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005d54:	f7ff fc32 	bl	80055bc <HAL_GetTick>
 8005d58:	4605      	mov	r5, r0
  if(hdma == NULL)
 8005d5a:	2c00      	cmp	r4, #0
 8005d5c:	d073      	beq.n	8005e46 <HAL_DMA_Init+0xf6>
  __HAL_UNLOCK(hdma);
 8005d5e:	2300      	movs	r3, #0
 8005d60:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8005d64:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8005d66:	2302      	movs	r3, #2
 8005d68:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8005d6c:	6813      	ldr	r3, [r2, #0]
 8005d6e:	f023 0301 	bic.w	r3, r3, #1
 8005d72:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8005d74:	6821      	ldr	r1, [r4, #0]
 8005d76:	680b      	ldr	r3, [r1, #0]
 8005d78:	07d8      	lsls	r0, r3, #31
 8005d7a:	d42f      	bmi.n	8005ddc <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8005d7c:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8005d7e:	4d33      	ldr	r5, [pc, #204]	; (8005e4c <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8005d80:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8005d82:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8005d84:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8005d88:	4313      	orrs	r3, r2
 8005d8a:	68e2      	ldr	r2, [r4, #12]
 8005d8c:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8005d8e:	6922      	ldr	r2, [r4, #16]
 8005d90:	4313      	orrs	r3, r2
 8005d92:	6962      	ldr	r2, [r4, #20]
 8005d94:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8005d96:	69e2      	ldr	r2, [r4, #28]
 8005d98:	4303      	orrs	r3, r0
 8005d9a:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8005d9c:	6a22      	ldr	r2, [r4, #32]
 8005d9e:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8005da0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005da2:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8005da4:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8005da8:	bf02      	ittt	eq
 8005daa:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8005dae:	4335      	orreq	r5, r6
 8005db0:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8005db2:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8005db4:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8005db6:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8005db8:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8005dbc:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8005dc0:	d133      	bne.n	8005e2a <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8005dc2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8005dc4:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8005dc6:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8005dc8:	b37d      	cbz	r5, 8005e2a <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8005dca:	b990      	cbnz	r0, 8005df2 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8005dcc:	2a01      	cmp	r2, #1
 8005dce:	d021      	beq.n	8005e14 <HAL_DMA_Init+0xc4>
 8005dd0:	f032 0202 	bics.w	r2, r2, #2
 8005dd4:	d129      	bne.n	8005e2a <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005dd6:	01ea      	lsls	r2, r5, #7
 8005dd8:	d527      	bpl.n	8005e2a <HAL_DMA_Init+0xda>
 8005dda:	e01e      	b.n	8005e1a <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8005ddc:	f7ff fbee 	bl	80055bc <HAL_GetTick>
 8005de0:	1b40      	subs	r0, r0, r5
 8005de2:	2805      	cmp	r0, #5
 8005de4:	d9c6      	bls.n	8005d74 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8005de6:	2320      	movs	r3, #32
 8005de8:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8005dea:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8005dec:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8005df0:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8005df2:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8005df6:	d114      	bne.n	8005e22 <HAL_DMA_Init+0xd2>
    switch (tmp)
 8005df8:	2a03      	cmp	r2, #3
 8005dfa:	d816      	bhi.n	8005e2a <HAL_DMA_Init+0xda>
 8005dfc:	a001      	add	r0, pc, #4	; (adr r0, 8005e04 <HAL_DMA_Init+0xb4>)
 8005dfe:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8005e02:	bf00      	nop
 8005e04:	08005e1b 	.word	0x08005e1b
 8005e08:	08005dd7 	.word	0x08005dd7
 8005e0c:	08005e1b 	.word	0x08005e1b
 8005e10:	08005e15 	.word	0x08005e15
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8005e14:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8005e18:	d107      	bne.n	8005e2a <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8005e1a:	2340      	movs	r3, #64	; 0x40
 8005e1c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8005e1e:	2001      	movs	r0, #1
 8005e20:	e7e4      	b.n	8005dec <HAL_DMA_Init+0x9c>
    switch (tmp)
 8005e22:	2a02      	cmp	r2, #2
 8005e24:	d9f9      	bls.n	8005e1a <HAL_DMA_Init+0xca>
 8005e26:	2a03      	cmp	r2, #3
 8005e28:	d0d5      	beq.n	8005dd6 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8005e2a:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8005e2c:	4620      	mov	r0, r4
 8005e2e:	f7ff ff79 	bl	8005d24 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8005e32:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8005e34:	233f      	movs	r3, #63	; 0x3f
 8005e36:	4093      	lsls	r3, r2
 8005e38:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8005e3a:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8005e3c:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8005e3e:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8005e40:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8005e44:	e7d4      	b.n	8005df0 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8005e46:	2001      	movs	r0, #1
 8005e48:	e7d2      	b.n	8005df0 <HAL_DMA_Init+0xa0>
 8005e4a:	bf00      	nop
 8005e4c:	f010803f 	.word	0xf010803f

08005e50 <HAL_DMA_DeInit>:
{
 8005e50:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8005e52:	4605      	mov	r5, r0
 8005e54:	b320      	cbz	r0, 8005ea0 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8005e56:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8005e5a:	2b02      	cmp	r3, #2
 8005e5c:	b2dc      	uxtb	r4, r3
 8005e5e:	d01d      	beq.n	8005e9c <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8005e60:	6803      	ldr	r3, [r0, #0]
 8005e62:	681a      	ldr	r2, [r3, #0]
 8005e64:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8005e68:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8005e6a:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8005e6c:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8005e6e:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8005e70:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8005e72:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8005e74:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8005e76:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8005e78:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8005e7a:	f7ff ff53 	bl	8005d24 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8005e7e:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8005e80:	233f      	movs	r3, #63	; 0x3f
 8005e82:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8005e84:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8005e88:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8005e8c:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8005e90:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8005e92:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8005e94:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8005e98:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8005e9c:	4620      	mov	r0, r4
 8005e9e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005ea0:	2401      	movs	r4, #1
 8005ea2:	e7fb      	b.n	8005e9c <HAL_DMA_DeInit+0x4c>

08005ea4 <HAL_DMA_Abort>:
{
 8005ea4:	b570      	push	{r4, r5, r6, lr}
 8005ea6:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8005ea8:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8005eaa:	f7ff fb87 	bl	80055bc <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8005eae:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8005eb2:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8005eb4:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8005eb6:	d006      	beq.n	8005ec6 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8005eb8:	2380      	movs	r3, #128	; 0x80
 8005eba:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8005ebc:	2300      	movs	r3, #0
 8005ebe:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8005ec2:	2001      	movs	r0, #1
}
 8005ec4:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8005ec6:	6823      	ldr	r3, [r4, #0]
 8005ec8:	681a      	ldr	r2, [r3, #0]
 8005eca:	f022 0216 	bic.w	r2, r2, #22
 8005ece:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8005ed0:	695a      	ldr	r2, [r3, #20]
 8005ed2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005ed6:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8005ed8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005eda:	b90a      	cbnz	r2, 8005ee0 <HAL_DMA_Abort+0x3c>
 8005edc:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005ede:	b11a      	cbz	r2, 8005ee8 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8005ee0:	681a      	ldr	r2, [r3, #0]
 8005ee2:	f022 0208 	bic.w	r2, r2, #8
 8005ee6:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8005ee8:	681a      	ldr	r2, [r3, #0]
 8005eea:	f022 0201 	bic.w	r2, r2, #1
 8005eee:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8005ef0:	6823      	ldr	r3, [r4, #0]
 8005ef2:	681b      	ldr	r3, [r3, #0]
 8005ef4:	f013 0301 	ands.w	r3, r3, #1
 8005ef8:	d10a      	bne.n	8005f10 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8005efa:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8005efc:	223f      	movs	r2, #63	; 0x3f
 8005efe:	408a      	lsls	r2, r1
 8005f00:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8005f02:	2201      	movs	r2, #1
    __HAL_UNLOCK(hdma);
 8005f04:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    hdma->State = HAL_DMA_STATE_READY;
 8005f08:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
  return HAL_OK;
 8005f0c:	4618      	mov	r0, r3
 8005f0e:	e7d9      	b.n	8005ec4 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8005f10:	f7ff fb54 	bl	80055bc <HAL_GetTick>
 8005f14:	1b40      	subs	r0, r0, r5
 8005f16:	2805      	cmp	r0, #5
 8005f18:	d9ea      	bls.n	8005ef0 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8005f1a:	2320      	movs	r3, #32
 8005f1c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8005f1e:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8005f20:	2300      	movs	r3, #0
 8005f22:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8005f26:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        return HAL_TIMEOUT;
 8005f2a:	e7cb      	b.n	8005ec4 <HAL_DMA_Abort+0x20>

08005f2c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8005f2c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8005f2e:	4604      	mov	r4, r0
 8005f30:	b330      	cbz	r0, 8005f80 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005f32:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8005f36:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005f3a:	b91b      	cbnz	r3, 8005f44 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8005f3c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8005f40:	f7fb fe84 	bl	8001c4c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005f44:	6822      	ldr	r2, [r4, #0]
 8005f46:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005f48:	2302      	movs	r3, #2
 8005f4a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005f4e:	6813      	ldr	r3, [r2, #0]
 8005f50:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005f54:	430b      	orrs	r3, r1
 8005f56:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8005f58:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005f5a:	68a1      	ldr	r1, [r4, #8]
 8005f5c:	f023 0307 	bic.w	r3, r3, #7
 8005f60:	430b      	orrs	r3, r1
 8005f62:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005f64:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8005f66:	68e1      	ldr	r1, [r4, #12]
 8005f68:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8005f6c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005f70:	430b      	orrs	r3, r1
 8005f72:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005f74:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005f76:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005f78:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005f7a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8005f7e:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8005f80:	2001      	movs	r0, #1
 8005f82:	e7fc      	b.n	8005f7e <HAL_DMA2D_Init+0x52>

08005f84 <HAL_DMA2D_LineEventCallback>:
 8005f84:	4770      	bx	lr

08005f86 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8005f86:	4770      	bx	lr

08005f88 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005f88:	6803      	ldr	r3, [r0, #0]
{
 8005f8a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005f8c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8005f8e:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005f90:	07f2      	lsls	r2, r6, #31
{
 8005f92:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005f94:	d514      	bpl.n	8005fc0 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8005f96:	05e9      	lsls	r1, r5, #23
 8005f98:	d512      	bpl.n	8005fc0 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8005f9a:	681a      	ldr	r2, [r3, #0]
 8005f9c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005fa0:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8005fa2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8005fa4:	f042 0201 	orr.w	r2, r2, #1
 8005fa8:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8005faa:	2201      	movs	r2, #1
 8005fac:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005fae:	2304      	movs	r3, #4
 8005fb0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005fb4:	2300      	movs	r3, #0
 8005fb6:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8005fba:	6943      	ldr	r3, [r0, #20]
 8005fbc:	b103      	cbz	r3, 8005fc0 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005fbe:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8005fc0:	06b2      	lsls	r2, r6, #26
 8005fc2:	d516      	bpl.n	8005ff2 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8005fc4:	04ab      	lsls	r3, r5, #18
 8005fc6:	d514      	bpl.n	8005ff2 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8005fc8:	6823      	ldr	r3, [r4, #0]
 8005fca:	681a      	ldr	r2, [r3, #0]
 8005fcc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005fd0:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8005fd2:	2220      	movs	r2, #32
 8005fd4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8005fd6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005fd8:	f043 0302 	orr.w	r3, r3, #2
 8005fdc:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005fde:	2304      	movs	r3, #4
 8005fe0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005fe4:	2300      	movs	r3, #0
 8005fe6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8005fea:	6963      	ldr	r3, [r4, #20]
 8005fec:	b10b      	cbz	r3, 8005ff2 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005fee:	4620      	mov	r0, r4
 8005ff0:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005ff2:	0730      	lsls	r0, r6, #28
 8005ff4:	d516      	bpl.n	8006024 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005ff6:	0529      	lsls	r1, r5, #20
 8005ff8:	d514      	bpl.n	8006024 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8005ffa:	6823      	ldr	r3, [r4, #0]
 8005ffc:	681a      	ldr	r2, [r3, #0]
 8005ffe:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006002:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006004:	2208      	movs	r2, #8
 8006006:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8006008:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800600a:	f043 0304 	orr.w	r3, r3, #4
 800600e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006010:	2304      	movs	r3, #4
 8006012:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006016:	2300      	movs	r3, #0
 8006018:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800601c:	6963      	ldr	r3, [r4, #20]
 800601e:	b10b      	cbz	r3, 8006024 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006020:	4620      	mov	r0, r4
 8006022:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006024:	0772      	lsls	r2, r6, #29
 8006026:	d50b      	bpl.n	8006040 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006028:	056b      	lsls	r3, r5, #21
 800602a:	d509      	bpl.n	8006040 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800602c:	6823      	ldr	r3, [r4, #0]
 800602e:	681a      	ldr	r2, [r3, #0]
 8006030:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006034:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006036:	2204      	movs	r2, #4
 8006038:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800603a:	4620      	mov	r0, r4
 800603c:	f7ff ffa2 	bl	8005f84 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8006040:	07b0      	lsls	r0, r6, #30
 8006042:	d514      	bpl.n	800606e <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006044:	05a9      	lsls	r1, r5, #22
 8006046:	d512      	bpl.n	800606e <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8006048:	6823      	ldr	r3, [r4, #0]
 800604a:	681a      	ldr	r2, [r3, #0]
 800604c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006050:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006052:	2202      	movs	r2, #2
 8006054:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006056:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006058:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800605a:	2301      	movs	r3, #1
 800605c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006060:	2300      	movs	r3, #0
 8006062:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8006066:	6923      	ldr	r3, [r4, #16]
 8006068:	b10b      	cbz	r3, 800606e <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800606a:	4620      	mov	r0, r4
 800606c:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800606e:	06f2      	lsls	r2, r6, #27
 8006070:	d513      	bpl.n	800609a <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8006072:	04eb      	lsls	r3, r5, #19
 8006074:	d511      	bpl.n	800609a <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8006076:	6823      	ldr	r3, [r4, #0]
 8006078:	681a      	ldr	r2, [r3, #0]
 800607a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800607e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8006080:	2210      	movs	r2, #16
 8006082:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006084:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006086:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006088:	2301      	movs	r3, #1
 800608a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800608e:	2300      	movs	r3, #0
 8006090:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8006094:	4620      	mov	r0, r4
 8006096:	f7ff ff76 	bl	8005f86 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800609a:	bd70      	pop	{r4, r5, r6, pc}

0800609c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800609c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800609e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80060a2:	2b01      	cmp	r3, #1
 80060a4:	f04f 0302 	mov.w	r3, #2
 80060a8:	d02b      	beq.n	8006102 <HAL_DMA2D_ConfigLayer+0x66>
 80060aa:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80060ac:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80060b0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80060b4:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80060b8:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80060bc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80060be:	4f18      	ldr	r7, [pc, #96]	; (8006120 <HAL_DMA2D_ConfigLayer+0x84>)
 80060c0:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80060c4:	3c09      	subs	r4, #9
 80060c6:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80060c8:	bf9c      	itt	ls
 80060ca:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80060ce:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80060d0:	ea4f 1601 	mov.w	r6, r1, lsl #4
 80060d4:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80060d6:	bf88      	it	hi
 80060d8:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80060dc:	b999      	cbnz	r1, 8006106 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80060de:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80060e0:	4039      	ands	r1, r7
 80060e2:	430a      	orrs	r2, r1
 80060e4:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80060e6:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80060e8:	6982      	ldr	r2, [r0, #24]
 80060ea:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80060ec:	d803      	bhi.n	80060f6 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80060ee:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80060f0:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80060f4:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80060f6:	2301      	movs	r3, #1
 80060f8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80060fc:	2300      	movs	r3, #0
 80060fe:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8006102:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006104:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8006106:	69d9      	ldr	r1, [r3, #28]
 8006108:	4039      	ands	r1, r7
 800610a:	430a      	orrs	r2, r1
 800610c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800610e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006110:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006112:	6992      	ldr	r2, [r2, #24]
 8006114:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8006116:	bf9c      	itt	ls
 8006118:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800611c:	621d      	strls	r5, [r3, #32]
 800611e:	e7ea      	b.n	80060f6 <HAL_DMA2D_ConfigLayer+0x5a>
 8006120:	00fcfff0 	.word	0x00fcfff0

08006124 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8006124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006128:	4607      	mov	r7, r0
 800612a:	460d      	mov	r5, r1
 800612c:	4614      	mov	r4, r2
 800612e:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8006130:	f7ff fa44 	bl	80055bc <HAL_GetTick>
 8006134:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8006136:	683a      	ldr	r2, [r7, #0]
 8006138:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800613a:	07db      	lsls	r3, r3, #31
 800613c:	d50a      	bpl.n	8006154 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800613e:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 8006142:	9c06      	ldr	r4, [sp, #24]
 8006144:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8006148:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800614c:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 800614e:	2000      	movs	r0, #0
}
 8006150:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 8006154:	f7ff fa32 	bl	80055bc <HAL_GetTick>
 8006158:	eba0 0008 	sub.w	r0, r0, r8
 800615c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006160:	d9e9      	bls.n	8006136 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8006162:	2003      	movs	r0, #3
 8006164:	e7f4      	b.n	8006150 <DSI_ShortWrite+0x2c>

08006166 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006166:	7c03      	ldrb	r3, [r0, #16]
 8006168:	2b01      	cmp	r3, #1
 800616a:	d05d      	beq.n	8006228 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 800616c:	6803      	ldr	r3, [r0, #0]
 800616e:	2200      	movs	r2, #0
 8006170:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8006174:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8006178:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800617a:	bf48      	it	mi
 800617c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8006180:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8006182:	bf42      	ittt	mi
 8006184:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8006188:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 800618c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8006190:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8006192:	bf42      	ittt	mi
 8006194:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8006198:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800619c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 80061a0:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 80061a2:	bf42      	ittt	mi
 80061a4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80061a8:	f042 0201 	orrmi.w	r2, r2, #1
 80061ac:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 80061b0:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 80061b2:	bf42      	ittt	mi
 80061b4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80061b8:	f042 0202 	orrmi.w	r2, r2, #2
 80061bc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 80061c0:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 80061c2:	bf42      	ittt	mi
 80061c4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80061c8:	f042 020c 	orrmi.w	r2, r2, #12
 80061cc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 80061d0:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 80061d2:	bf42      	ittt	mi
 80061d4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80061d8:	f042 0210 	orrmi.w	r2, r2, #16
 80061dc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 80061e0:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 80061e2:	bf42      	ittt	mi
 80061e4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80061e8:	f042 0220 	orrmi.w	r2, r2, #32
 80061ec:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 80061f0:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 80061f2:	bf42      	ittt	mi
 80061f4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80061f8:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 80061fc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8006200:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8006202:	bf42      	ittt	mi
 8006204:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8006208:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800620c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8006210:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8006212:	bf42      	ittt	mi
 8006214:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8006218:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 800621c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8006220:	2300      	movs	r3, #0
 8006222:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006224:	4618      	mov	r0, r3
 8006226:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006228:	2002      	movs	r0, #2
}
 800622a:	4770      	bx	lr

0800622c <HAL_DSI_Init>:
{
 800622c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800622e:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8006230:	4604      	mov	r4, r0
 8006232:	2800      	cmp	r0, #0
 8006234:	f000 80a7 	beq.w	8006386 <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8006238:	7c43      	ldrb	r3, [r0, #17]
 800623a:	b90b      	cbnz	r3, 8006240 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 800623c:	f7fb fd28 	bl	8001c90 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8006240:	2303      	movs	r3, #3
 8006242:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8006244:	2300      	movs	r3, #0
 8006246:	9300      	str	r3, [sp, #0]
 8006248:	6823      	ldr	r3, [r4, #0]
 800624a:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800624e:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006252:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8006256:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800625a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800625e:	9300      	str	r3, [sp, #0]
 8006260:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 8006262:	f7ff f9ab 	bl	80055bc <HAL_GetTick>
 8006266:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8006268:	6822      	ldr	r2, [r4, #0]
 800626a:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800626e:	04d9      	lsls	r1, r3, #19
 8006270:	d578      	bpl.n	8006364 <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8006272:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8006276:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800627a:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800627e:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 8006282:	e9d5 0300 	ldrd	r0, r3, [r5]
 8006286:	02db      	lsls	r3, r3, #11
 8006288:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 800628c:	68a8      	ldr	r0, [r5, #8]
 800628e:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 8006292:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8006296:	430b      	orrs	r3, r1
 8006298:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800629c:	2300      	movs	r3, #0
 800629e:	9301      	str	r3, [sp, #4]
 80062a0:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80062a4:	f043 0301 	orr.w	r3, r3, #1
 80062a8:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 80062ac:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80062b0:	f003 0301 	and.w	r3, r3, #1
 80062b4:	9301      	str	r3, [sp, #4]
 80062b6:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 80062b8:	f7ff f980 	bl	80055bc <HAL_GetTick>
 80062bc:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 80062be:	6823      	ldr	r3, [r4, #0]
 80062c0:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80062c4:	05d2      	lsls	r2, r2, #23
 80062c6:	d557      	bpl.n	8006378 <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 80062c8:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 80062cc:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 80062ce:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 80062d0:	f042 0206 	orr.w	r2, r2, #6
 80062d4:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 80062d8:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80062dc:	f022 0203 	bic.w	r2, r2, #3
 80062e0:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 80062e4:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80062e8:	430a      	orrs	r2, r1
 80062ea:	f042 0201 	orr.w	r2, r2, #1
 80062ee:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 80062f2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 80062f6:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 80062f8:	f022 0203 	bic.w	r2, r2, #3
 80062fc:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8006300:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8006304:	430a      	orrs	r2, r1
 8006306:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800630a:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800630c:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800630e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8006312:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8006314:	689a      	ldr	r2, [r3, #8]
 8006316:	430a      	orrs	r2, r1
 8006318:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800631a:	686a      	ldr	r2, [r5, #4]
 800631c:	2a01      	cmp	r2, #1
 800631e:	bf38      	it	cc
 8006320:	2201      	movcc	r2, #1
 8006322:	4611      	mov	r1, r2
 8006324:	4a19      	ldr	r2, [pc, #100]	; (800638c <HAL_DSI_Init+0x160>)
 8006326:	434a      	muls	r2, r1
 8006328:	68a9      	ldr	r1, [r5, #8]
 800632a:	f001 0103 	and.w	r1, r1, #3
 800632e:	408a      	lsls	r2, r1
 8006330:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 8006334:	4341      	muls	r1, r0
 8006336:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800633a:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800633e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8006342:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8006346:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800634a:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800634c:	430a      	orrs	r2, r1
 800634e:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8006352:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8006356:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 800635a:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 800635c:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800635e:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8006360:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 8006362:	e007      	b.n	8006374 <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8006364:	f7ff f92a 	bl	80055bc <HAL_GetTick>
 8006368:	1b80      	subs	r0, r0, r6
 800636a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800636e:	f67f af7b 	bls.w	8006268 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8006372:	2003      	movs	r0, #3
}
 8006374:	b002      	add	sp, #8
 8006376:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8006378:	f7ff f920 	bl	80055bc <HAL_GetTick>
 800637c:	1b80      	subs	r0, r0, r6
 800637e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006382:	d99c      	bls.n	80062be <HAL_DSI_Init+0x92>
 8006384:	e7f5      	b.n	8006372 <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 8006386:	2001      	movs	r0, #1
 8006388:	e7f4      	b.n	8006374 <HAL_DSI_Init+0x148>
 800638a:	bf00      	nop
 800638c:	003d0900 	.word	0x003d0900

08006390 <HAL_DSI_ErrorCallback>:
 8006390:	4770      	bx	lr

08006392 <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8006392:	6803      	ldr	r3, [r0, #0]
 8006394:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8006398:	07d1      	lsls	r1, r2, #31
{
 800639a:	b510      	push	{r4, lr}
 800639c:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800639e:	d508      	bpl.n	80063b2 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 80063a0:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80063a4:	07d2      	lsls	r2, r2, #31
 80063a6:	d504      	bpl.n	80063b2 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 80063a8:	2201      	movs	r2, #1
 80063aa:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 80063ae:	f7fa fb87 	bl	8000ac0 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 80063b2:	6823      	ldr	r3, [r4, #0]
 80063b4:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80063b8:	0791      	lsls	r1, r2, #30
 80063ba:	d509      	bpl.n	80063d0 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 80063bc:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80063c0:	0792      	lsls	r2, r2, #30
 80063c2:	d505      	bpl.n	80063d0 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 80063c4:	2202      	movs	r2, #2
 80063c6:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 80063ca:	4620      	mov	r0, r4
 80063cc:	f7fa fbac 	bl	8000b28 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 80063d0:	69a3      	ldr	r3, [r4, #24]
 80063d2:	2b00      	cmp	r3, #0
 80063d4:	d04e      	beq.n	8006474 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 80063d6:	6821      	ldr	r1, [r4, #0]
 80063d8:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80063dc:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 80063e0:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80063e4:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80063e6:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80063ea:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80063ec:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80063ee:	b119      	cbz	r1, 80063f8 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 80063f0:	6961      	ldr	r1, [r4, #20]
 80063f2:	f041 0101 	orr.w	r1, r1, #1
 80063f6:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 80063f8:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 80063fc:	bf1e      	ittt	ne
 80063fe:	6962      	ldrne	r2, [r4, #20]
 8006400:	f042 0202 	orrne.w	r2, r2, #2
 8006404:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8006406:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8006408:	bf42      	ittt	mi
 800640a:	6962      	ldrmi	r2, [r4, #20]
 800640c:	f042 0204 	orrmi.w	r2, r2, #4
 8006410:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 8006412:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8006414:	bf42      	ittt	mi
 8006416:	6962      	ldrmi	r2, [r4, #20]
 8006418:	f042 0208 	orrmi.w	r2, r2, #8
 800641c:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800641e:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 8006422:	bf1e      	ittt	ne
 8006424:	6962      	ldrne	r2, [r4, #20]
 8006426:	f042 0210 	orrne.w	r2, r2, #16
 800642a:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800642c:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800642e:	bf42      	ittt	mi
 8006430:	6962      	ldrmi	r2, [r4, #20]
 8006432:	f042 0220 	orrmi.w	r2, r2, #32
 8006436:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8006438:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800643a:	bf42      	ittt	mi
 800643c:	6962      	ldrmi	r2, [r4, #20]
 800643e:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8006442:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8006444:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 8006446:	bf42      	ittt	mi
 8006448:	6962      	ldrmi	r2, [r4, #20]
 800644a:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800644e:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8006450:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 8006452:	bf42      	ittt	mi
 8006454:	6962      	ldrmi	r2, [r4, #20]
 8006456:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800645a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 800645c:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8006460:	bf1e      	ittt	ne
 8006462:	6963      	ldrne	r3, [r4, #20]
 8006464:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8006468:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800646a:	6963      	ldr	r3, [r4, #20]
 800646c:	b113      	cbz	r3, 8006474 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800646e:	4620      	mov	r0, r4
 8006470:	f7ff ff8e 	bl	8006390 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8006474:	bd10      	pop	{r4, pc}

08006476 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006476:	7c03      	ldrb	r3, [r0, #16]
 8006478:	2b01      	cmp	r3, #1
 800647a:	d00b      	beq.n	8006494 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800647c:	6803      	ldr	r3, [r0, #0]
 800647e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006480:	f022 0203 	bic.w	r2, r2, #3
 8006484:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8006486:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006488:	4311      	orrs	r1, r2
 800648a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800648c:	2300      	movs	r3, #0
 800648e:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006490:	4618      	mov	r0, r3
 8006492:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006494:	2002      	movs	r0, #2
}
 8006496:	4770      	bx	lr

08006498 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8006498:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800649a:	7c03      	ldrb	r3, [r0, #16]
 800649c:	2b01      	cmp	r3, #1
 800649e:	d06a      	beq.n	8006576 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80064a0:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80064a2:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80064a4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80064a6:	f042 0201 	orr.w	r2, r2, #1
 80064aa:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 80064ac:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80064b0:	f022 0201 	bic.w	r2, r2, #1
 80064b4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 80064b8:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80064bc:	f042 0201 	orr.w	r2, r2, #1
 80064c0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 80064c4:	68da      	ldr	r2, [r3, #12]
 80064c6:	f022 0203 	bic.w	r2, r2, #3
 80064ca:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80064cc:	68da      	ldr	r2, [r3, #12]
 80064ce:	4322      	orrs	r2, r4
 80064d0:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 80064d2:	695a      	ldr	r2, [r3, #20]
 80064d4:	f022 0207 	bic.w	r2, r2, #7
 80064d8:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 80064da:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 80064de:	432a      	orrs	r2, r5
 80064e0:	694d      	ldr	r5, [r1, #20]
 80064e2:	695c      	ldr	r4, [r3, #20]
 80064e4:	432a      	orrs	r2, r5
 80064e6:	4322      	orrs	r2, r4
 80064e8:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80064ea:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80064ec:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80064ee:	f022 020f 	bic.w	r2, r2, #15
 80064f2:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80064f4:	691c      	ldr	r4, [r3, #16]
 80064f6:	432c      	orrs	r4, r5
 80064f8:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 80064fa:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80064fe:	f024 040e 	bic.w	r4, r4, #14
 8006502:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8006506:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800650a:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800650c:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8006510:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8006514:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8006516:	0c12      	lsrs	r2, r2, #16
 8006518:	0412      	lsls	r2, r2, #16
 800651a:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800651c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800651e:	4322      	orrs	r2, r4
 8006520:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 8006522:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8006526:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800652a:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800652e:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 8006532:	432a      	orrs	r2, r5
 8006534:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8006536:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800653a:	432a      	orrs	r2, r5
 800653c:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800653e:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8006540:	432a      	orrs	r2, r5
 8006542:	4322      	orrs	r2, r4
 8006544:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8006548:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800654a:	f022 0201 	bic.w	r2, r2, #1
 800654e:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8006550:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8006552:	430a      	orrs	r2, r1
 8006554:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 8006556:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800655a:	f042 0201 	orr.w	r2, r2, #1
 800655e:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 8006562:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8006566:	f042 0202 	orr.w	r2, r2, #2
 800656a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800656e:	2300      	movs	r3, #0
 8006570:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006572:	4618      	mov	r0, r3
}
 8006574:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006576:	2002      	movs	r0, #2
 8006578:	e7fc      	b.n	8006574 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800657c <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800657c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800657e:	7c03      	ldrb	r3, [r0, #16]
 8006580:	2b01      	cmp	r3, #1
 8006582:	d02a      	beq.n	80065da <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8006584:	6802      	ldr	r2, [r0, #0]
 8006586:	4b16      	ldr	r3, [pc, #88]	; (80065e0 <HAL_DSI_ConfigCommand+0x64>)
 8006588:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800658a:	4023      	ands	r3, r4
 800658c:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800658e:	e9d1 3500 	ldrd	r3, r5, [r1]
 8006592:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8006594:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8006596:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8006598:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800659a:	68cd      	ldr	r5, [r1, #12]
 800659c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800659e:	690d      	ldr	r5, [r1, #16]
 80065a0:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 80065a2:	694d      	ldr	r5, [r1, #20]
 80065a4:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 80065a6:	698d      	ldr	r5, [r1, #24]
 80065a8:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 80065aa:	69cd      	ldr	r5, [r1, #28]
 80065ac:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 80065ae:	6a0d      	ldr	r5, [r1, #32]
 80065b0:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 80065b2:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80065b4:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 80065b6:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80065b8:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 80065ba:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80065bc:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 80065be:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80065c0:	4323      	orrs	r3, r4
 80065c2:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 80065c4:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80065c6:	f023 0302 	bic.w	r3, r3, #2
 80065ca:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80065cc:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80065ce:	430b      	orrs	r3, r1
 80065d0:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80065d2:	2300      	movs	r3, #0
 80065d4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80065d6:	4618      	mov	r0, r3
}
 80065d8:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80065da:	2002      	movs	r0, #2
 80065dc:	e7fc      	b.n	80065d8 <HAL_DSI_ConfigCommand+0x5c>
 80065de:	bf00      	nop
 80065e0:	fef080ff 	.word	0xfef080ff

080065e4 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80065e4:	7c03      	ldrb	r3, [r0, #16]
 80065e6:	2b01      	cmp	r3, #1
 80065e8:	d00b      	beq.n	8006602 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 80065ea:	6803      	ldr	r3, [r0, #0]
 80065ec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80065ee:	f022 021f 	bic.w	r2, r2, #31
 80065f2:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 80065f4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80065f6:	4311      	orrs	r1, r2
 80065f8:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80065fa:	2300      	movs	r3, #0
 80065fc:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80065fe:	4618      	mov	r0, r3
 8006600:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006602:	2002      	movs	r0, #2
}
 8006604:	4770      	bx	lr

08006606 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8006606:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006608:	7c03      	ldrb	r3, [r0, #16]
 800660a:	2b01      	cmp	r3, #1
 800660c:	d035      	beq.n	800667a <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800660e:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8006612:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8006614:	4294      	cmp	r4, r2
 8006616:	bf38      	it	cc
 8006618:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800661a:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800661e:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 8006622:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 8006626:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800662a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800662e:	4322      	orrs	r2, r4
 8006630:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8006634:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8006638:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 800663c:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8006640:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8006644:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8006646:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800664a:	690d      	ldr	r5, [r1, #16]
 800664c:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8006650:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8006652:	432a      	orrs	r2, r5
 8006654:	4322      	orrs	r2, r4
 8006656:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800665a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800665e:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8006662:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8006666:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800666a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800666e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006672:	2300      	movs	r3, #0
 8006674:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006676:	4618      	mov	r0, r3
}
 8006678:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800667a:	2002      	movs	r0, #2
 800667c:	e7fc      	b.n	8006678 <HAL_DSI_ConfigPhyTimer+0x72>
	...

08006680 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8006680:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006682:	7c03      	ldrb	r3, [r0, #16]
 8006684:	2b01      	cmp	r3, #1
 8006686:	d05c      	beq.n	8006742 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006688:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800668a:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800668c:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800668e:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006690:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8006694:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8006696:	689a      	ldr	r2, [r3, #8]
 8006698:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800669c:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800669e:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80066a0:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 80066a2:	b292      	uxth	r2, r2
 80066a4:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80066a6:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 80066a8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80066ac:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 80066ae:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80066b0:	4a25      	ldr	r2, [pc, #148]	; (8006748 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 80066b2:	4014      	ands	r4, r2
 80066b4:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 80066b6:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80066b8:	432c      	orrs	r4, r5
 80066ba:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80066bc:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80066be:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80066c0:	4014      	ands	r4, r2
 80066c2:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80066c4:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 80066c6:	432c      	orrs	r4, r5
 80066c8:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80066ca:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80066ce:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80066d0:	4014      	ands	r4, r2
 80066d2:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80066d6:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 80066da:	432c      	orrs	r4, r5
 80066dc:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80066e0:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80066e4:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80066e6:	4014      	ands	r4, r2
 80066e8:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80066ec:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80066f0:	432c      	orrs	r4, r5
 80066f2:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 80066f6:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80066fa:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 80066fe:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8006702:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8006706:	698d      	ldr	r5, [r1, #24]
 8006708:	432c      	orrs	r4, r5
 800670a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800670e:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8006712:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8006714:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8006716:	4014      	ands	r4, r2
 8006718:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800671c:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8006720:	432c      	orrs	r4, r5
 8006722:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 8006726:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800672a:	4022      	ands	r2, r4
 800672c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8006730:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8006734:	430a      	orrs	r2, r1
 8006736:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800673a:	2300      	movs	r3, #0
 800673c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800673e:	4618      	mov	r0, r3
}
 8006740:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006742:	2002      	movs	r0, #2
 8006744:	e7fc      	b.n	8006740 <HAL_DSI_ConfigHostTimeouts+0xc0>
 8006746:	bf00      	nop
 8006748:	ffff0000 	.word	0xffff0000

0800674c <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800674c:	7c03      	ldrb	r3, [r0, #16]
 800674e:	2b01      	cmp	r3, #1
{
 8006750:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 8006752:	d01c      	beq.n	800678e <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8006754:	6802      	ldr	r2, [r0, #0]
 8006756:	2300      	movs	r3, #0
 8006758:	9300      	str	r3, [sp, #0]
 800675a:	6851      	ldr	r1, [r2, #4]
 800675c:	f041 0101 	orr.w	r1, r1, #1
 8006760:	6051      	str	r1, [r2, #4]
 8006762:	6851      	ldr	r1, [r2, #4]
 8006764:	f001 0101 	and.w	r1, r1, #1
 8006768:	9100      	str	r1, [sp, #0]
 800676a:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800676c:	9301      	str	r3, [sp, #4]
 800676e:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8006772:	f041 0108 	orr.w	r1, r1, #8
 8006776:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800677a:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800677e:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8006780:	f002 0208 	and.w	r2, r2, #8
 8006784:	9201      	str	r2, [sp, #4]
 8006786:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8006788:	4618      	mov	r0, r3
}
 800678a:	b002      	add	sp, #8
 800678c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800678e:	2002      	movs	r0, #2
 8006790:	e7fb      	b.n	800678a <HAL_DSI_Start+0x3e>

08006792 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006792:	7c03      	ldrb	r3, [r0, #16]
 8006794:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 8006796:	bf1f      	itttt	ne
 8006798:	6802      	ldrne	r2, [r0, #0]
 800679a:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800679e:	f043 0304 	orrne.w	r3, r3, #4
 80067a2:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80067a6:	bf1d      	ittte	ne
 80067a8:	2300      	movne	r3, #0
 80067aa:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 80067ac:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 80067ae:	2002      	moveq	r0, #2
}
 80067b0:	4770      	bx	lr

080067b2 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 80067b2:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 80067b4:	7c05      	ldrb	r5, [r0, #16]
 80067b6:	2d01      	cmp	r5, #1
{
 80067b8:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 80067ba:	d009      	beq.n	80067d0 <HAL_DSI_ShortWrite+0x1e>
 80067bc:	2501      	movs	r5, #1
 80067be:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 80067c0:	9d06      	ldr	r5, [sp, #24]
 80067c2:	9500      	str	r5, [sp, #0]
 80067c4:	f7ff fcae 	bl	8006124 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80067c8:	2300      	movs	r3, #0
 80067ca:	7423      	strb	r3, [r4, #16]

  return status;
}
 80067cc:	b003      	add	sp, #12
 80067ce:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80067d0:	2002      	movs	r0, #2
 80067d2:	e7fb      	b.n	80067cc <HAL_DSI_ShortWrite+0x1a>

080067d4 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 80067d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067d8:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 80067da:	7c03      	ldrb	r3, [r0, #16]
 80067dc:	2b01      	cmp	r3, #1
{
 80067de:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 80067e2:	4606      	mov	r6, r0
 80067e4:	460f      	mov	r7, r1
 80067e6:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 80067e8:	d053      	beq.n	8006892 <HAL_DSI_LongWrite+0xbe>
 80067ea:	2301      	movs	r3, #1
 80067ec:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 80067ee:	f7fe fee5 	bl	80055bc <HAL_GetTick>
 80067f2:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80067f4:	6832      	ldr	r2, [r6, #0]
 80067f6:	6f53      	ldr	r3, [r2, #116]	; 0x74
 80067f8:	f013 0a01 	ands.w	sl, r3, #1
 80067fc:	d01a      	beq.n	8006834 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80067fe:	2c03      	cmp	r4, #3
 8006800:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 8006802:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8006806:	bf28      	it	cs
 8006808:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 800680a:	4288      	cmp	r0, r1
 800680c:	d11e      	bne.n	800684c <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800680e:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 8006810:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 8006814:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 8006816:	bb1b      	cbnz	r3, 8006860 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8006818:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800681a:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 800681e:	0225      	lsls	r5, r4, #8
 8006820:	b2ad      	uxth	r5, r5
 8006822:	0224      	lsls	r4, r4, #8
 8006824:	430d      	orrs	r5, r1
 8006826:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800682a:	432c      	orrs	r4, r5
 800682c:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800682e:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8006830:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 8006832:	e009      	b.n	8006848 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8006834:	f7fe fec2 	bl	80055bc <HAL_GetTick>
 8006838:	eba0 000b 	sub.w	r0, r0, fp
 800683c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006840:	d9d8      	bls.n	80067f4 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 8006842:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 8006846:	2003      	movs	r0, #3
}
 8006848:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800684c:	f818 3000 	ldrb.w	r3, [r8, r0]
 8006850:	3001      	adds	r0, #1
 8006852:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 8006856:	fa03 f30c 	lsl.w	r3, r3, ip
 800685a:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800685e:	e7d4      	b.n	800680a <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8006860:	2b04      	cmp	r3, #4
    fifoword = 0U;
 8006862:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8006866:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8006868:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800686a:	bf28      	it	cs
 800686c:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006870:	f810 8001 	ldrb.w	r8, [r0, r1]
 8006874:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8006878:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800687a:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800687e:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006880:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8006884:	d1f4      	bne.n	8006870 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 8006886:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 800688a:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800688e:	4470      	add	r0, lr
 8006890:	e7c1      	b.n	8006816 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8006892:	2002      	movs	r0, #2
 8006894:	e7d8      	b.n	8006848 <HAL_DSI_LongWrite+0x74>

08006896 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006896:	7c03      	ldrb	r3, [r0, #16]
 8006898:	2b01      	cmp	r3, #1
 800689a:	d010      	beq.n	80068be <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800689c:	6803      	ldr	r3, [r0, #0]
 800689e:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 80068a2:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 80068a6:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 80068aa:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 80068ae:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 80068b2:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80068b6:	2300      	movs	r3, #0
 80068b8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80068ba:	4618      	mov	r0, r3
 80068bc:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80068be:	2002      	movs	r0, #2
}
 80068c0:	4770      	bx	lr
	...

080068c4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80068c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80068c8:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8006a90 <HAL_GPIO_Init+0x1cc>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80068cc:	4a6e      	ldr	r2, [pc, #440]	; (8006a88 <HAL_GPIO_Init+0x1c4>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80068ce:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 8006a94 <HAL_GPIO_Init+0x1d0>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80068d2:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80068d4:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 80068d6:	2401      	movs	r4, #1
 80068d8:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80068da:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 80068de:	43ac      	bics	r4, r5
 80068e0:	f040 80b8 	bne.w	8006a54 <HAL_GPIO_Init+0x190>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80068e4:	684c      	ldr	r4, [r1, #4]
 80068e6:	f024 0c10 	bic.w	ip, r4, #16
 80068ea:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 80068ee:	2503      	movs	r5, #3
 80068f0:	f10c 37ff 	add.w	r7, ip, #4294967295
 80068f4:	fa05 f50e 	lsl.w	r5, r5, lr
 80068f8:	2f01      	cmp	r7, #1
 80068fa:	ea6f 0505 	mvn.w	r5, r5
 80068fe:	d811      	bhi.n	8006924 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8006900:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006902:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006906:	68cf      	ldr	r7, [r1, #12]
 8006908:	fa07 f70e 	lsl.w	r7, r7, lr
 800690c:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8006910:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8006912:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006914:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8006918:	f3c4 1700 	ubfx	r7, r4, #4, #1
 800691c:	409f      	lsls	r7, r3
 800691e:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8006922:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8006924:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8006926:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800692a:	688f      	ldr	r7, [r1, #8]
 800692c:	fa07 f70e 	lsl.w	r7, r7, lr
 8006930:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006934:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8006938:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800693a:	d116      	bne.n	800696a <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 800693c:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8006940:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006944:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8006948:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800694c:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8006950:	f04f 0c0f 	mov.w	ip, #15
 8006954:	fa0c fc0b 	lsl.w	ip, ip, fp
 8006958:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800695c:	690f      	ldr	r7, [r1, #16]
 800695e:	fa07 f70b 	lsl.w	r7, r7, fp
 8006962:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8006966:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 800696a:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800696c:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800696e:	f004 0703 	and.w	r7, r4, #3
 8006972:	fa07 fe0e 	lsl.w	lr, r7, lr
 8006976:	ea4e 0505 	orr.w	r5, lr, r5
      GPIOx->MODER = temp;
 800697a:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800697c:	00e5      	lsls	r5, r4, #3
 800697e:	d569      	bpl.n	8006a54 <HAL_GPIO_Init+0x190>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006980:	f04f 0b00 	mov.w	fp, #0
 8006984:	f8cd b004 	str.w	fp, [sp, #4]
 8006988:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800698c:	4d3f      	ldr	r5, [pc, #252]	; (8006a8c <HAL_GPIO_Init+0x1c8>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800698e:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8006992:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8006996:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800699a:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 800699e:	9701      	str	r7, [sp, #4]
 80069a0:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80069a2:	f023 0703 	bic.w	r7, r3, #3
 80069a6:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80069aa:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80069ae:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80069b2:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80069b6:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80069ba:	f04f 0c0f 	mov.w	ip, #15
 80069be:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80069c2:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80069c4:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80069c8:	d04b      	beq.n	8006a62 <HAL_GPIO_Init+0x19e>
 80069ca:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80069ce:	42a8      	cmp	r0, r5
 80069d0:	d049      	beq.n	8006a66 <HAL_GPIO_Init+0x1a2>
 80069d2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80069d6:	42a8      	cmp	r0, r5
 80069d8:	d047      	beq.n	8006a6a <HAL_GPIO_Init+0x1a6>
 80069da:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80069de:	42a8      	cmp	r0, r5
 80069e0:	d045      	beq.n	8006a6e <HAL_GPIO_Init+0x1aa>
 80069e2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80069e6:	42a8      	cmp	r0, r5
 80069e8:	d043      	beq.n	8006a72 <HAL_GPIO_Init+0x1ae>
 80069ea:	4548      	cmp	r0, r9
 80069ec:	d043      	beq.n	8006a76 <HAL_GPIO_Init+0x1b2>
 80069ee:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 80069f2:	42a8      	cmp	r0, r5
 80069f4:	d041      	beq.n	8006a7a <HAL_GPIO_Init+0x1b6>
 80069f6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80069fa:	42a8      	cmp	r0, r5
 80069fc:	d03f      	beq.n	8006a7e <HAL_GPIO_Init+0x1ba>
 80069fe:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006a02:	42a8      	cmp	r0, r5
 8006a04:	d03d      	beq.n	8006a82 <HAL_GPIO_Init+0x1be>
 8006a06:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006a0a:	42a8      	cmp	r0, r5
 8006a0c:	bf0c      	ite	eq
 8006a0e:	2509      	moveq	r5, #9
 8006a10:	250a      	movne	r5, #10
 8006a12:	fa05 f50e 	lsl.w	r5, r5, lr
 8006a16:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006a1a:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8006a1c:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8006a1e:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8006a20:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8006a24:	bf0c      	ite	eq
 8006a26:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006a28:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8006a2a:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8006a2c:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8006a2e:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8006a32:	bf0c      	ite	eq
 8006a34:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006a36:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8006a38:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8006a3a:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8006a3c:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8006a40:	bf0c      	ite	eq
 8006a42:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006a44:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8006a46:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 8006a48:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8006a4a:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8006a4c:	bf54      	ite	pl
 8006a4e:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8006a50:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8006a52:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006a54:	3301      	adds	r3, #1
 8006a56:	2b10      	cmp	r3, #16
 8006a58:	f47f af3c 	bne.w	80068d4 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 8006a5c:	b003      	add	sp, #12
 8006a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006a62:	465d      	mov	r5, fp
 8006a64:	e7d5      	b.n	8006a12 <HAL_GPIO_Init+0x14e>
 8006a66:	2501      	movs	r5, #1
 8006a68:	e7d3      	b.n	8006a12 <HAL_GPIO_Init+0x14e>
 8006a6a:	2502      	movs	r5, #2
 8006a6c:	e7d1      	b.n	8006a12 <HAL_GPIO_Init+0x14e>
 8006a6e:	2503      	movs	r5, #3
 8006a70:	e7cf      	b.n	8006a12 <HAL_GPIO_Init+0x14e>
 8006a72:	2504      	movs	r5, #4
 8006a74:	e7cd      	b.n	8006a12 <HAL_GPIO_Init+0x14e>
 8006a76:	2505      	movs	r5, #5
 8006a78:	e7cb      	b.n	8006a12 <HAL_GPIO_Init+0x14e>
 8006a7a:	2506      	movs	r5, #6
 8006a7c:	e7c9      	b.n	8006a12 <HAL_GPIO_Init+0x14e>
 8006a7e:	2507      	movs	r5, #7
 8006a80:	e7c7      	b.n	8006a12 <HAL_GPIO_Init+0x14e>
 8006a82:	2508      	movs	r5, #8
 8006a84:	e7c5      	b.n	8006a12 <HAL_GPIO_Init+0x14e>
 8006a86:	bf00      	nop
 8006a88:	40013c00 	.word	0x40013c00
 8006a8c:	40020000 	.word	0x40020000
 8006a90:	40023800 	.word	0x40023800
 8006a94:	40021400 	.word	0x40021400

08006a98 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8006a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8006a9c:	4c4a      	ldr	r4, [pc, #296]	; (8006bc8 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8006a9e:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8006bd0 <HAL_GPIO_DeInit+0x138>
 8006aa2:	f8df a130 	ldr.w	sl, [pc, #304]	; 8006bd4 <HAL_GPIO_DeInit+0x13c>
 8006aa6:	f8df b130 	ldr.w	fp, [pc, #304]	; 8006bd8 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006aaa:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8006aac:	2301      	movs	r3, #1
 8006aae:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8006ab2:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8006ab6:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8006aba:	d16e      	bne.n	8006b9a <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8006abc:	f022 0503 	bic.w	r5, r2, #3
 8006ac0:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8006ac4:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8006ac8:	4b40      	ldr	r3, [pc, #256]	; (8006bcc <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8006aca:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8006ace:	f002 0c03 	and.w	ip, r2, #3
 8006ad2:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8006ad6:	260f      	movs	r6, #15
 8006ad8:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8006adc:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8006ade:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8006ae2:	d05f      	beq.n	8006ba4 <HAL_GPIO_DeInit+0x10c>
 8006ae4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006ae8:	4298      	cmp	r0, r3
 8006aea:	d05d      	beq.n	8006ba8 <HAL_GPIO_DeInit+0x110>
 8006aec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006af0:	4298      	cmp	r0, r3
 8006af2:	d05b      	beq.n	8006bac <HAL_GPIO_DeInit+0x114>
 8006af4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006af8:	4298      	cmp	r0, r3
 8006afa:	d059      	beq.n	8006bb0 <HAL_GPIO_DeInit+0x118>
 8006afc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006b00:	4298      	cmp	r0, r3
 8006b02:	d057      	beq.n	8006bb4 <HAL_GPIO_DeInit+0x11c>
 8006b04:	4548      	cmp	r0, r9
 8006b06:	d057      	beq.n	8006bb8 <HAL_GPIO_DeInit+0x120>
 8006b08:	4550      	cmp	r0, sl
 8006b0a:	d057      	beq.n	8006bbc <HAL_GPIO_DeInit+0x124>
 8006b0c:	4558      	cmp	r0, fp
 8006b0e:	d057      	beq.n	8006bc0 <HAL_GPIO_DeInit+0x128>
 8006b10:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8006b14:	4298      	cmp	r0, r3
 8006b16:	d055      	beq.n	8006bc4 <HAL_GPIO_DeInit+0x12c>
 8006b18:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006b1c:	4298      	cmp	r0, r3
 8006b1e:	bf0c      	ite	eq
 8006b20:	2309      	moveq	r3, #9
 8006b22:	230a      	movne	r3, #10
 8006b24:	fa03 f30c 	lsl.w	r3, r3, ip
 8006b28:	4543      	cmp	r3, r8
 8006b2a:	d113      	bne.n	8006b54 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8006b2c:	6823      	ldr	r3, [r4, #0]
 8006b2e:	ea23 0307 	bic.w	r3, r3, r7
 8006b32:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8006b34:	6863      	ldr	r3, [r4, #4]
 8006b36:	ea23 0307 	bic.w	r3, r3, r7
 8006b3a:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8006b3c:	68a3      	ldr	r3, [r4, #8]
 8006b3e:	ea23 0307 	bic.w	r3, r3, r7
 8006b42:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8006b44:	68e3      	ldr	r3, [r4, #12]
 8006b46:	ea23 0707 	bic.w	r7, r3, r7
 8006b4a:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8006b4c:	68ab      	ldr	r3, [r5, #8]
 8006b4e:	ea23 0606 	bic.w	r6, r3, r6
 8006b52:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8006b54:	6805      	ldr	r5, [r0, #0]
 8006b56:	2603      	movs	r6, #3
 8006b58:	0053      	lsls	r3, r2, #1
 8006b5a:	fa06 f303 	lsl.w	r3, r6, r3
 8006b5e:	ea25 0503 	bic.w	r5, r5, r3
 8006b62:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006b64:	fa22 f506 	lsr.w	r5, r2, r6
 8006b68:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8006b6c:	f002 0c07 	and.w	ip, r2, #7
 8006b70:	6a2e      	ldr	r6, [r5, #32]
 8006b72:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8006b76:	270f      	movs	r7, #15
 8006b78:	fa07 f70c 	lsl.w	r7, r7, ip
 8006b7c:	ea26 0707 	bic.w	r7, r6, r7
 8006b80:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8006b82:	68c5      	ldr	r5, [r0, #12]
 8006b84:	ea25 0503 	bic.w	r5, r5, r3
 8006b88:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006b8a:	6845      	ldr	r5, [r0, #4]
 8006b8c:	ea25 050e 	bic.w	r5, r5, lr
 8006b90:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006b92:	6885      	ldr	r5, [r0, #8]
 8006b94:	ea25 0303 	bic.w	r3, r5, r3
 8006b98:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006b9a:	3201      	adds	r2, #1
 8006b9c:	2a10      	cmp	r2, #16
 8006b9e:	d185      	bne.n	8006aac <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8006ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8006ba4:	2300      	movs	r3, #0
 8006ba6:	e7bd      	b.n	8006b24 <HAL_GPIO_DeInit+0x8c>
 8006ba8:	2301      	movs	r3, #1
 8006baa:	e7bb      	b.n	8006b24 <HAL_GPIO_DeInit+0x8c>
 8006bac:	2302      	movs	r3, #2
 8006bae:	e7b9      	b.n	8006b24 <HAL_GPIO_DeInit+0x8c>
 8006bb0:	2303      	movs	r3, #3
 8006bb2:	e7b7      	b.n	8006b24 <HAL_GPIO_DeInit+0x8c>
 8006bb4:	2304      	movs	r3, #4
 8006bb6:	e7b5      	b.n	8006b24 <HAL_GPIO_DeInit+0x8c>
 8006bb8:	2305      	movs	r3, #5
 8006bba:	e7b3      	b.n	8006b24 <HAL_GPIO_DeInit+0x8c>
 8006bbc:	2306      	movs	r3, #6
 8006bbe:	e7b1      	b.n	8006b24 <HAL_GPIO_DeInit+0x8c>
 8006bc0:	2307      	movs	r3, #7
 8006bc2:	e7af      	b.n	8006b24 <HAL_GPIO_DeInit+0x8c>
 8006bc4:	2308      	movs	r3, #8
 8006bc6:	e7ad      	b.n	8006b24 <HAL_GPIO_DeInit+0x8c>
 8006bc8:	40013c00 	.word	0x40013c00
 8006bcc:	40020000 	.word	0x40020000
 8006bd0:	40021400 	.word	0x40021400
 8006bd4:	40021800 	.word	0x40021800
 8006bd8:	40021c00 	.word	0x40021c00

08006bdc <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8006bdc:	6903      	ldr	r3, [r0, #16]
 8006bde:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8006be0:	bf14      	ite	ne
 8006be2:	2001      	movne	r0, #1
 8006be4:	2000      	moveq	r0, #0
 8006be6:	4770      	bx	lr

08006be8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006be8:	b10a      	cbz	r2, 8006bee <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006bea:	6181      	str	r1, [r0, #24]
  }
}
 8006bec:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006bee:	0409      	lsls	r1, r1, #16
 8006bf0:	e7fb      	b.n	8006bea <HAL_GPIO_WritePin+0x2>

08006bf2 <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
 8006bf2:	6943      	ldr	r3, [r0, #20]
 8006bf4:	ea31 0303 	bics.w	r3, r1, r3
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8006bf8:	bf08      	it	eq
 8006bfa:	0409      	lsleq	r1, r1, #16
  }
  else
  {
    GPIOx->BSRR = GPIO_Pin;
 8006bfc:	6181      	str	r1, [r0, #24]
  }
}
 8006bfe:	4770      	bx	lr

08006c00 <HAL_GPIO_EXTI_IRQHandler>:
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8006c00:	4a04      	ldr	r2, [pc, #16]	; (8006c14 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8006c02:	6951      	ldr	r1, [r2, #20]
 8006c04:	4201      	tst	r1, r0
{
 8006c06:	b508      	push	{r3, lr}
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8006c08:	d002      	beq.n	8006c10 <HAL_GPIO_EXTI_IRQHandler+0x10>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8006c0a:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8006c0c:	f7fa fc64 	bl	80014d8 <HAL_GPIO_EXTI_Callback>
  }
}
 8006c10:	bd08      	pop	{r3, pc}
 8006c12:	bf00      	nop
 8006c14:	40013c00 	.word	0x40013c00

08006c18 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006c18:	6801      	ldr	r1, [r0, #0]
 8006c1a:	694b      	ldr	r3, [r1, #20]
 8006c1c:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006c20:	f04f 0200 	mov.w	r2, #0
 8006c24:	d010      	beq.n	8006c48 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006c26:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006c2a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006c2c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006c2e:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006c30:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006c34:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006c38:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006c3a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006c3e:	f043 0304 	orr.w	r3, r3, #4
 8006c42:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8006c44:	2001      	movs	r0, #1
 8006c46:	4770      	bx	lr
  }
  return HAL_OK;
 8006c48:	4618      	mov	r0, r3
}
 8006c4a:	4770      	bx	lr

08006c4c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8006c4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006c50:	4604      	mov	r4, r0
 8006c52:	460f      	mov	r7, r1
 8006c54:	4616      	mov	r6, r2
 8006c56:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8006c58:	6825      	ldr	r5, [r4, #0]
 8006c5a:	6968      	ldr	r0, [r5, #20]
 8006c5c:	ea27 0000 	bic.w	r0, r7, r0
 8006c60:	b280      	uxth	r0, r0
 8006c62:	b1b8      	cbz	r0, 8006c94 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006c64:	696b      	ldr	r3, [r5, #20]
 8006c66:	055a      	lsls	r2, r3, #21
 8006c68:	d516      	bpl.n	8006c98 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006c6a:	682b      	ldr	r3, [r5, #0]
 8006c6c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006c70:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006c72:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006c76:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006c78:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006c7a:	2300      	movs	r3, #0
 8006c7c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006c7e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006c82:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006c86:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006c88:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006c8c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006c8e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8006c92:	2001      	movs	r0, #1
}
 8006c94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006c98:	1c73      	adds	r3, r6, #1
 8006c9a:	d0de      	beq.n	8006c5a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006c9c:	f7fe fc8e 	bl	80055bc <HAL_GetTick>
 8006ca0:	eba0 0008 	sub.w	r0, r0, r8
 8006ca4:	42b0      	cmp	r0, r6
 8006ca6:	d801      	bhi.n	8006cac <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8006ca8:	2e00      	cmp	r6, #0
 8006caa:	d1d5      	bne.n	8006c58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006cac:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006cae:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006cb0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006cb2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006cb6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006cba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006cbc:	f042 0220 	orr.w	r2, r2, #32
 8006cc0:	e7e4      	b.n	8006c8c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006cc2 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8006cc2:	b570      	push	{r4, r5, r6, lr}
 8006cc4:	4604      	mov	r4, r0
 8006cc6:	460d      	mov	r5, r1
 8006cc8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006cca:	6823      	ldr	r3, [r4, #0]
 8006ccc:	695b      	ldr	r3, [r3, #20]
 8006cce:	075b      	lsls	r3, r3, #29
 8006cd0:	d501      	bpl.n	8006cd6 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8006cd2:	2000      	movs	r0, #0
}
 8006cd4:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006cd6:	4620      	mov	r0, r4
 8006cd8:	f7ff ff9e 	bl	8006c18 <I2C_IsAcknowledgeFailed>
 8006cdc:	b9a8      	cbnz	r0, 8006d0a <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006cde:	1c6a      	adds	r2, r5, #1
 8006ce0:	d0f3      	beq.n	8006cca <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006ce2:	f7fe fc6b 	bl	80055bc <HAL_GetTick>
 8006ce6:	1b80      	subs	r0, r0, r6
 8006ce8:	42a8      	cmp	r0, r5
 8006cea:	d801      	bhi.n	8006cf0 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8006cec:	2d00      	cmp	r5, #0
 8006cee:	d1ec      	bne.n	8006cca <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006cf0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006cf2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006cf4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006cf6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006cfa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006cfe:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006d00:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006d04:	f042 0220 	orr.w	r2, r2, #32
 8006d08:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006d0a:	2001      	movs	r0, #1
 8006d0c:	e7e2      	b.n	8006cd4 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08006d0e <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006d0e:	b570      	push	{r4, r5, r6, lr}
 8006d10:	4604      	mov	r4, r0
 8006d12:	460d      	mov	r5, r1
 8006d14:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006d16:	6821      	ldr	r1, [r4, #0]
 8006d18:	694b      	ldr	r3, [r1, #20]
 8006d1a:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006d1e:	d001      	beq.n	8006d24 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8006d20:	2000      	movs	r0, #0
 8006d22:	e010      	b.n	8006d46 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006d24:	694a      	ldr	r2, [r1, #20]
 8006d26:	06d2      	lsls	r2, r2, #27
 8006d28:	d50e      	bpl.n	8006d48 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006d2a:	f06f 0210 	mvn.w	r2, #16
 8006d2e:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006d30:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006d32:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006d34:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006d38:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8006d3c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006d3e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006d40:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8006d44:	2001      	movs	r0, #1
}
 8006d46:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006d48:	f7fe fc38 	bl	80055bc <HAL_GetTick>
 8006d4c:	1b80      	subs	r0, r0, r6
 8006d4e:	42a8      	cmp	r0, r5
 8006d50:	d801      	bhi.n	8006d56 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006d52:	2d00      	cmp	r5, #0
 8006d54:	d1df      	bne.n	8006d16 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006d56:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006d58:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006d5a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006d5c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006d60:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006d64:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006d66:	f042 0220 	orr.w	r2, r2, #32
 8006d6a:	e7e8      	b.n	8006d3e <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08006d6c <I2C_WaitOnFlagUntilTimeout>:
{
 8006d6c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006d70:	4606      	mov	r6, r0
 8006d72:	460f      	mov	r7, r1
 8006d74:	4691      	mov	r9, r2
 8006d76:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006d78:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006d7c:	6833      	ldr	r3, [r6, #0]
 8006d7e:	f1ba 0f01 	cmp.w	sl, #1
 8006d82:	bf0c      	ite	eq
 8006d84:	695c      	ldreq	r4, [r3, #20]
 8006d86:	699c      	ldrne	r4, [r3, #24]
 8006d88:	ea27 0404 	bic.w	r4, r7, r4
 8006d8c:	b2a4      	uxth	r4, r4
 8006d8e:	fab4 f484 	clz	r4, r4
 8006d92:	0964      	lsrs	r4, r4, #5
 8006d94:	45a1      	cmp	r9, r4
 8006d96:	d001      	beq.n	8006d9c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8006d98:	2000      	movs	r0, #0
 8006d9a:	e017      	b.n	8006dcc <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8006d9c:	1c6a      	adds	r2, r5, #1
 8006d9e:	d0ee      	beq.n	8006d7e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006da0:	f7fe fc0c 	bl	80055bc <HAL_GetTick>
 8006da4:	9b08      	ldr	r3, [sp, #32]
 8006da6:	1ac0      	subs	r0, r0, r3
 8006da8:	42a8      	cmp	r0, r5
 8006daa:	d801      	bhi.n	8006db0 <I2C_WaitOnFlagUntilTimeout+0x44>
 8006dac:	2d00      	cmp	r5, #0
 8006dae:	d1e5      	bne.n	8006d7c <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006db0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006db2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006db4:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006db6:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006dba:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006dbe:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006dc0:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006dc4:	f042 0220 	orr.w	r2, r2, #32
 8006dc8:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006dca:	2001      	movs	r0, #1
}
 8006dcc:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08006dd0 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8006dd0:	b570      	push	{r4, r5, r6, lr}
 8006dd2:	4604      	mov	r4, r0
 8006dd4:	460d      	mov	r5, r1
 8006dd6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006dd8:	6823      	ldr	r3, [r4, #0]
 8006dda:	695b      	ldr	r3, [r3, #20]
 8006ddc:	061b      	lsls	r3, r3, #24
 8006dde:	d501      	bpl.n	8006de4 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8006de0:	2000      	movs	r0, #0
}
 8006de2:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006de4:	4620      	mov	r0, r4
 8006de6:	f7ff ff17 	bl	8006c18 <I2C_IsAcknowledgeFailed>
 8006dea:	b9a8      	cbnz	r0, 8006e18 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006dec:	1c6a      	adds	r2, r5, #1
 8006dee:	d0f3      	beq.n	8006dd8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006df0:	f7fe fbe4 	bl	80055bc <HAL_GetTick>
 8006df4:	1b80      	subs	r0, r0, r6
 8006df6:	42a8      	cmp	r0, r5
 8006df8:	d801      	bhi.n	8006dfe <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006dfa:	2d00      	cmp	r5, #0
 8006dfc:	d1ec      	bne.n	8006dd8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006dfe:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006e00:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006e02:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006e04:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006e08:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006e0c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006e0e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006e12:	f042 0220 	orr.w	r2, r2, #32
 8006e16:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006e18:	2001      	movs	r0, #1
 8006e1a:	e7e2      	b.n	8006de2 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08006e1c <I2C_RequestMemoryWrite>:
{
 8006e1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006e20:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006e22:	6802      	ldr	r2, [r0, #0]
{
 8006e24:	b085      	sub	sp, #20
 8006e26:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006e2a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006e2c:	6813      	ldr	r3, [r2, #0]
 8006e2e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006e32:	6013      	str	r3, [r2, #0]
{
 8006e34:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006e36:	463b      	mov	r3, r7
 8006e38:	f8cd 8000 	str.w	r8, [sp]
 8006e3c:	2200      	movs	r2, #0
 8006e3e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006e42:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006e44:	f7ff ff92 	bl	8006d6c <I2C_WaitOnFlagUntilTimeout>
 8006e48:	6823      	ldr	r3, [r4, #0]
 8006e4a:	b138      	cbz	r0, 8006e5c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006e4c:	681b      	ldr	r3, [r3, #0]
 8006e4e:	05db      	lsls	r3, r3, #23
 8006e50:	d502      	bpl.n	8006e58 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006e52:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006e56:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006e58:	2003      	movs	r0, #3
 8006e5a:	e00a      	b.n	8006e72 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006e5c:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006e60:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006e62:	4919      	ldr	r1, [pc, #100]	; (8006ec8 <I2C_RequestMemoryWrite+0xac>)
 8006e64:	4643      	mov	r3, r8
 8006e66:	463a      	mov	r2, r7
 8006e68:	4620      	mov	r0, r4
 8006e6a:	f7ff feef 	bl	8006c4c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006e6e:	b118      	cbz	r0, 8006e78 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006e70:	2001      	movs	r0, #1
}
 8006e72:	b005      	add	sp, #20
 8006e74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e78:	6823      	ldr	r3, [r4, #0]
 8006e7a:	9003      	str	r0, [sp, #12]
 8006e7c:	695a      	ldr	r2, [r3, #20]
 8006e7e:	9203      	str	r2, [sp, #12]
 8006e80:	699b      	ldr	r3, [r3, #24]
 8006e82:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006e84:	4642      	mov	r2, r8
 8006e86:	4639      	mov	r1, r7
 8006e88:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e8a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006e8c:	f7ff ffa0 	bl	8006dd0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006e90:	b140      	cbz	r0, 8006ea4 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006e92:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006e94:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006e96:	bf01      	itttt	eq
 8006e98:	6822      	ldreq	r2, [r4, #0]
 8006e9a:	6813      	ldreq	r3, [r2, #0]
 8006e9c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006ea0:	6013      	streq	r3, [r2, #0]
 8006ea2:	e7e5      	b.n	8006e70 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006ea4:	f1b9 0f01 	cmp.w	r9, #1
 8006ea8:	6823      	ldr	r3, [r4, #0]
 8006eaa:	d102      	bne.n	8006eb2 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006eac:	b2ed      	uxtb	r5, r5
 8006eae:	611d      	str	r5, [r3, #16]
 8006eb0:	e7df      	b.n	8006e72 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006eb2:	0a2a      	lsrs	r2, r5, #8
 8006eb4:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006eb6:	4639      	mov	r1, r7
 8006eb8:	4642      	mov	r2, r8
 8006eba:	4620      	mov	r0, r4
 8006ebc:	f7ff ff88 	bl	8006dd0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006ec0:	2800      	cmp	r0, #0
 8006ec2:	d1e6      	bne.n	8006e92 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006ec4:	6823      	ldr	r3, [r4, #0]
 8006ec6:	e7f1      	b.n	8006eac <I2C_RequestMemoryWrite+0x90>
 8006ec8:	00010002 	.word	0x00010002

08006ecc <I2C_RequestMemoryRead>:
{
 8006ecc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006ed0:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006ed2:	6803      	ldr	r3, [r0, #0]
{
 8006ed4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006ed6:	681a      	ldr	r2, [r3, #0]
 8006ed8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006edc:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006ede:	681a      	ldr	r2, [r3, #0]
{
 8006ee0:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006ee4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006ee8:	601a      	str	r2, [r3, #0]
{
 8006eea:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006eec:	463b      	mov	r3, r7
 8006eee:	f8cd 8000 	str.w	r8, [sp]
 8006ef2:	2200      	movs	r2, #0
 8006ef4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006ef8:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006efa:	f7ff ff37 	bl	8006d6c <I2C_WaitOnFlagUntilTimeout>
 8006efe:	6823      	ldr	r3, [r4, #0]
 8006f00:	b148      	cbz	r0, 8006f16 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006f02:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006f04:	05db      	lsls	r3, r3, #23
 8006f06:	d502      	bpl.n	8006f0e <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006f08:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006f0c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006f0e:	2003      	movs	r0, #3
}
 8006f10:	b004      	add	sp, #16
 8006f12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006f16:	fa5f f986 	uxtb.w	r9, r6
 8006f1a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006f1e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006f20:	492a      	ldr	r1, [pc, #168]	; (8006fcc <I2C_RequestMemoryRead+0x100>)
 8006f22:	4643      	mov	r3, r8
 8006f24:	463a      	mov	r2, r7
 8006f26:	4620      	mov	r0, r4
 8006f28:	f7ff fe90 	bl	8006c4c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006f2c:	b108      	cbz	r0, 8006f32 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006f2e:	2001      	movs	r0, #1
 8006f30:	e7ee      	b.n	8006f10 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f32:	6823      	ldr	r3, [r4, #0]
 8006f34:	9003      	str	r0, [sp, #12]
 8006f36:	695a      	ldr	r2, [r3, #20]
 8006f38:	9203      	str	r2, [sp, #12]
 8006f3a:	699b      	ldr	r3, [r3, #24]
 8006f3c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006f3e:	4642      	mov	r2, r8
 8006f40:	4639      	mov	r1, r7
 8006f42:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f44:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006f46:	f7ff ff43 	bl	8006dd0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006f4a:	b140      	cbz	r0, 8006f5e <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006f4c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006f4e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006f50:	bf01      	itttt	eq
 8006f52:	6822      	ldreq	r2, [r4, #0]
 8006f54:	6813      	ldreq	r3, [r2, #0]
 8006f56:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006f5a:	6013      	streq	r3, [r2, #0]
 8006f5c:	e7e7      	b.n	8006f2e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006f5e:	f1ba 0f01 	cmp.w	sl, #1
 8006f62:	6823      	ldr	r3, [r4, #0]
 8006f64:	d11a      	bne.n	8006f9c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006f66:	b2ed      	uxtb	r5, r5
 8006f68:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006f6a:	4642      	mov	r2, r8
 8006f6c:	4639      	mov	r1, r7
 8006f6e:	4620      	mov	r0, r4
 8006f70:	f7ff ff2e 	bl	8006dd0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006f74:	2800      	cmp	r0, #0
 8006f76:	d1e9      	bne.n	8006f4c <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006f78:	6822      	ldr	r2, [r4, #0]
 8006f7a:	6813      	ldr	r3, [r2, #0]
 8006f7c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006f80:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006f82:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006f86:	4602      	mov	r2, r0
 8006f88:	f8cd 8000 	str.w	r8, [sp]
 8006f8c:	463b      	mov	r3, r7
 8006f8e:	4620      	mov	r0, r4
 8006f90:	f7ff feec 	bl	8006d6c <I2C_WaitOnFlagUntilTimeout>
 8006f94:	6822      	ldr	r2, [r4, #0]
 8006f96:	b160      	cbz	r0, 8006fb2 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006f98:	6813      	ldr	r3, [r2, #0]
 8006f9a:	e7b3      	b.n	8006f04 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006f9c:	0a2a      	lsrs	r2, r5, #8
 8006f9e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006fa0:	4639      	mov	r1, r7
 8006fa2:	4642      	mov	r2, r8
 8006fa4:	4620      	mov	r0, r4
 8006fa6:	f7ff ff13 	bl	8006dd0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006faa:	2800      	cmp	r0, #0
 8006fac:	d1ce      	bne.n	8006f4c <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006fae:	6823      	ldr	r3, [r4, #0]
 8006fb0:	e7d9      	b.n	8006f66 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8006fb2:	f049 0301 	orr.w	r3, r9, #1
 8006fb6:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006fb8:	4904      	ldr	r1, [pc, #16]	; (8006fcc <I2C_RequestMemoryRead+0x100>)
 8006fba:	4643      	mov	r3, r8
 8006fbc:	463a      	mov	r2, r7
 8006fbe:	4620      	mov	r0, r4
 8006fc0:	f7ff fe44 	bl	8006c4c <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8006fc4:	3800      	subs	r0, #0
 8006fc6:	bf18      	it	ne
 8006fc8:	2001      	movne	r0, #1
 8006fca:	e7a1      	b.n	8006f10 <I2C_RequestMemoryRead+0x44>
 8006fcc:	00010002 	.word	0x00010002

08006fd0 <HAL_I2C_Init>:
{
 8006fd0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8006fd2:	4604      	mov	r4, r0
 8006fd4:	b908      	cbnz	r0, 8006fda <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8006fd6:	2001      	movs	r0, #1
}
 8006fd8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006fda:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006fde:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006fe2:	b91b      	cbnz	r3, 8006fec <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8006fe4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8006fe8:	f7fa fe90 	bl	8001d0c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006fec:	2324      	movs	r3, #36	; 0x24
 8006fee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006ff2:	6823      	ldr	r3, [r4, #0]
 8006ff4:	681a      	ldr	r2, [r3, #0]
 8006ff6:	f022 0201 	bic.w	r2, r2, #1
 8006ffa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006ffc:	681a      	ldr	r2, [r3, #0]
 8006ffe:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007002:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8007004:	681a      	ldr	r2, [r3, #0]
 8007006:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800700a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800700c:	f001 f818 	bl	8008040 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8007010:	4a3f      	ldr	r2, [pc, #252]	; (8007110 <HAL_I2C_Init+0x140>)
 8007012:	6863      	ldr	r3, [r4, #4]
 8007014:	4293      	cmp	r3, r2
 8007016:	bf94      	ite	ls
 8007018:	4a3e      	ldrls	r2, [pc, #248]	; (8007114 <HAL_I2C_Init+0x144>)
 800701a:	4a3f      	ldrhi	r2, [pc, #252]	; (8007118 <HAL_I2C_Init+0x148>)
 800701c:	4290      	cmp	r0, r2
 800701e:	bf8c      	ite	hi
 8007020:	2200      	movhi	r2, #0
 8007022:	2201      	movls	r2, #1
 8007024:	2a00      	cmp	r2, #0
 8007026:	d1d6      	bne.n	8006fd6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007028:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800702a:	4e3c      	ldr	r6, [pc, #240]	; (800711c <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800702c:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800702e:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007032:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8007036:	4332      	orrs	r2, r6
 8007038:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800703a:	4a35      	ldr	r2, [pc, #212]	; (8007110 <HAL_I2C_Init+0x140>)
 800703c:	6a0d      	ldr	r5, [r1, #32]
 800703e:	4293      	cmp	r3, r2
 8007040:	bf84      	itt	hi
 8007042:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 8007046:	4372      	mulhi	r2, r6
 8007048:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800704c:	bf91      	iteee	ls
 800704e:	1c72      	addls	r2, r6, #1
 8007050:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8007054:	fbb2 f2f6 	udivhi	r2, r2, r6
 8007058:	3201      	addhi	r2, #1
 800705a:	432a      	orrs	r2, r5
 800705c:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800705e:	69cd      	ldr	r5, [r1, #28]
 8007060:	1e42      	subs	r2, r0, #1
 8007062:	482b      	ldr	r0, [pc, #172]	; (8007110 <HAL_I2C_Init+0x140>)
 8007064:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 8007068:	4283      	cmp	r3, r0
 800706a:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800706e:	d832      	bhi.n	80070d6 <HAL_I2C_Init+0x106>
 8007070:	005b      	lsls	r3, r3, #1
 8007072:	fbb2 f3f3 	udiv	r3, r2, r3
 8007076:	f640 72fc 	movw	r2, #4092	; 0xffc
 800707a:	3301      	adds	r3, #1
 800707c:	4213      	tst	r3, r2
 800707e:	d042      	beq.n	8007106 <HAL_I2C_Init+0x136>
 8007080:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007084:	432b      	orrs	r3, r5
 8007086:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8007088:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800708c:	680a      	ldr	r2, [r1, #0]
 800708e:	4303      	orrs	r3, r0
 8007090:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8007094:	4313      	orrs	r3, r2
 8007096:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8007098:	688a      	ldr	r2, [r1, #8]
 800709a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800709e:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 80070a2:	4303      	orrs	r3, r0
 80070a4:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80070a8:	4313      	orrs	r3, r2
 80070aa:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80070ac:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80070b0:	68ca      	ldr	r2, [r1, #12]
 80070b2:	4303      	orrs	r3, r0
 80070b4:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80070b8:	4313      	orrs	r3, r2
 80070ba:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 80070bc:	680b      	ldr	r3, [r1, #0]
 80070be:	f043 0301 	orr.w	r3, r3, #1
 80070c2:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80070c4:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80070c6:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80070c8:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80070ca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80070ce:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80070d0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80070d4:	e780      	b.n	8006fd8 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80070d6:	68a0      	ldr	r0, [r4, #8]
 80070d8:	b950      	cbnz	r0, 80070f0 <HAL_I2C_Init+0x120>
 80070da:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80070de:	fbb2 f3f3 	udiv	r3, r2, r3
 80070e2:	3301      	adds	r3, #1
 80070e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80070e8:	b17b      	cbz	r3, 800710a <HAL_I2C_Init+0x13a>
 80070ea:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80070ee:	e7c9      	b.n	8007084 <HAL_I2C_Init+0xb4>
 80070f0:	2019      	movs	r0, #25
 80070f2:	4343      	muls	r3, r0
 80070f4:	fbb2 f3f3 	udiv	r3, r2, r3
 80070f8:	3301      	adds	r3, #1
 80070fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80070fe:	b123      	cbz	r3, 800710a <HAL_I2C_Init+0x13a>
 8007100:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8007104:	e7be      	b.n	8007084 <HAL_I2C_Init+0xb4>
 8007106:	2304      	movs	r3, #4
 8007108:	e7bc      	b.n	8007084 <HAL_I2C_Init+0xb4>
 800710a:	2301      	movs	r3, #1
 800710c:	e7ba      	b.n	8007084 <HAL_I2C_Init+0xb4>
 800710e:	bf00      	nop
 8007110:	000186a0 	.word	0x000186a0
 8007114:	001e847f 	.word	0x001e847f
 8007118:	003d08ff 	.word	0x003d08ff
 800711c:	000f4240 	.word	0x000f4240

08007120 <HAL_I2C_DeInit>:
{
 8007120:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8007122:	4604      	mov	r4, r0
 8007124:	b198      	cbz	r0, 800714e <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8007126:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8007128:	2324      	movs	r3, #36	; 0x24
 800712a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800712e:	6813      	ldr	r3, [r2, #0]
 8007130:	f023 0301 	bic.w	r3, r3, #1
 8007134:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8007136:	f7fa fe2d 	bl	8001d94 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800713a:	2000      	movs	r0, #0
 800713c:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800713e:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8007142:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8007146:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8007148:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 800714c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800714e:	2001      	movs	r0, #1
 8007150:	e7fc      	b.n	800714c <HAL_I2C_DeInit+0x2c>
	...

08007154 <HAL_I2C_Mem_Write>:
{
 8007154:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007158:	4604      	mov	r4, r0
 800715a:	4699      	mov	r9, r3
 800715c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800715e:	460f      	mov	r7, r1
 8007160:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8007162:	f7fe fa2b 	bl	80055bc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007166:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800716a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800716c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800716e:	d003      	beq.n	8007178 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8007170:	2002      	movs	r0, #2
}
 8007172:	b003      	add	sp, #12
 8007174:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007178:	9000      	str	r0, [sp, #0]
 800717a:	493c      	ldr	r1, [pc, #240]	; (800726c <HAL_I2C_Mem_Write+0x118>)
 800717c:	2319      	movs	r3, #25
 800717e:	2201      	movs	r2, #1
 8007180:	4620      	mov	r0, r4
 8007182:	f7ff fdf3 	bl	8006d6c <I2C_WaitOnFlagUntilTimeout>
 8007186:	2800      	cmp	r0, #0
 8007188:	d1f2      	bne.n	8007170 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800718a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800718e:	2b01      	cmp	r3, #1
 8007190:	d0ee      	beq.n	8007170 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007192:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8007194:	2301      	movs	r3, #1
 8007196:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800719a:	6803      	ldr	r3, [r0, #0]
 800719c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800719e:	bf5e      	ittt	pl
 80071a0:	6803      	ldrpl	r3, [r0, #0]
 80071a2:	f043 0301 	orrpl.w	r3, r3, #1
 80071a6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80071a8:	6803      	ldr	r3, [r0, #0]
 80071aa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80071ae:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80071b0:	2321      	movs	r3, #33	; 0x21
 80071b2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80071b6:	2340      	movs	r3, #64	; 0x40
 80071b8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80071bc:	2300      	movs	r3, #0
 80071be:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80071c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80071c2:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80071c4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80071c8:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80071ca:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80071cc:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80071ce:	4b28      	ldr	r3, [pc, #160]	; (8007270 <HAL_I2C_Mem_Write+0x11c>)
 80071d0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80071d2:	e9cd 6500 	strd	r6, r5, [sp]
 80071d6:	464b      	mov	r3, r9
 80071d8:	4642      	mov	r2, r8
 80071da:	4639      	mov	r1, r7
 80071dc:	4620      	mov	r0, r4
 80071de:	f7ff fe1d 	bl	8006e1c <I2C_RequestMemoryWrite>
 80071e2:	2800      	cmp	r0, #0
 80071e4:	d02a      	beq.n	800723c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80071e6:	2001      	movs	r0, #1
 80071e8:	e7c3      	b.n	8007172 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80071ea:	f7ff fdf1 	bl	8006dd0 <I2C_WaitOnTXEFlagUntilTimeout>
 80071ee:	b140      	cbz	r0, 8007202 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80071f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80071f2:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80071f4:	bf01      	itttt	eq
 80071f6:	6822      	ldreq	r2, [r4, #0]
 80071f8:	6813      	ldreq	r3, [r2, #0]
 80071fa:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80071fe:	6013      	streq	r3, [r2, #0]
 8007200:	e7f1      	b.n	80071e6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007202:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007204:	6827      	ldr	r7, [r4, #0]
 8007206:	461a      	mov	r2, r3
 8007208:	f812 1b01 	ldrb.w	r1, [r2], #1
 800720c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800720e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8007210:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8007212:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8007214:	3a01      	subs	r2, #1
 8007216:	b292      	uxth	r2, r2
 8007218:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800721a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800721c:	1e48      	subs	r0, r1, #1
 800721e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8007220:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8007222:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8007224:	d50a      	bpl.n	800723c <HAL_I2C_Mem_Write+0xe8>
 8007226:	b148      	cbz	r0, 800723c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007228:	785a      	ldrb	r2, [r3, #1]
 800722a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800722c:	3302      	adds	r3, #2
 800722e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8007230:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007232:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8007234:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8007236:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8007238:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800723a:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800723c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800723e:	462a      	mov	r2, r5
 8007240:	4631      	mov	r1, r6
 8007242:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8007244:	2b00      	cmp	r3, #0
 8007246:	d1d0      	bne.n	80071ea <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007248:	f7ff fd3b 	bl	8006cc2 <I2C_WaitOnBTFFlagUntilTimeout>
 800724c:	2800      	cmp	r0, #0
 800724e:	d1cf      	bne.n	80071f0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007250:	6822      	ldr	r2, [r4, #0]
 8007252:	6813      	ldr	r3, [r2, #0]
 8007254:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007258:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800725a:	2320      	movs	r3, #32
 800725c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8007260:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007264:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8007268:	e783      	b.n	8007172 <HAL_I2C_Mem_Write+0x1e>
 800726a:	bf00      	nop
 800726c:	00100002 	.word	0x00100002
 8007270:	ffff0000 	.word	0xffff0000

08007274 <HAL_I2C_Mem_Read>:
{
 8007274:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007278:	4604      	mov	r4, r0
 800727a:	b087      	sub	sp, #28
 800727c:	4699      	mov	r9, r3
 800727e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8007280:	460d      	mov	r5, r1
 8007282:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8007284:	f7fe f99a 	bl	80055bc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007288:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800728c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800728e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007290:	d004      	beq.n	800729c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8007292:	2502      	movs	r5, #2
}
 8007294:	4628      	mov	r0, r5
 8007296:	b007      	add	sp, #28
 8007298:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800729c:	9000      	str	r0, [sp, #0]
 800729e:	4976      	ldr	r1, [pc, #472]	; (8007478 <HAL_I2C_Mem_Read+0x204>)
 80072a0:	2319      	movs	r3, #25
 80072a2:	2201      	movs	r2, #1
 80072a4:	4620      	mov	r0, r4
 80072a6:	f7ff fd61 	bl	8006d6c <I2C_WaitOnFlagUntilTimeout>
 80072aa:	2800      	cmp	r0, #0
 80072ac:	d1f1      	bne.n	8007292 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80072ae:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80072b2:	2b01      	cmp	r3, #1
 80072b4:	d0ed      	beq.n	8007292 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80072b6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80072b8:	2301      	movs	r3, #1
 80072ba:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80072be:	6803      	ldr	r3, [r0, #0]
 80072c0:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80072c2:	bf5e      	ittt	pl
 80072c4:	6803      	ldrpl	r3, [r0, #0]
 80072c6:	f043 0301 	orrpl.w	r3, r3, #1
 80072ca:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80072cc:	6803      	ldr	r3, [r0, #0]
 80072ce:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80072d2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80072d4:	2322      	movs	r3, #34	; 0x22
 80072d6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80072da:	2340      	movs	r3, #64	; 0x40
 80072dc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80072e0:	2300      	movs	r3, #0
 80072e2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80072e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80072e6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80072e8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80072ec:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80072ee:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80072f0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80072f2:	4b62      	ldr	r3, [pc, #392]	; (800747c <HAL_I2C_Mem_Read+0x208>)
 80072f4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80072f6:	4629      	mov	r1, r5
 80072f8:	e9cd 7600 	strd	r7, r6, [sp]
 80072fc:	464b      	mov	r3, r9
 80072fe:	4642      	mov	r2, r8
 8007300:	4620      	mov	r0, r4
 8007302:	f7ff fde3 	bl	8006ecc <I2C_RequestMemoryRead>
 8007306:	4605      	mov	r5, r0
 8007308:	b108      	cbz	r0, 800730e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800730a:	2501      	movs	r5, #1
 800730c:	e7c2      	b.n	8007294 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800730e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8007310:	6823      	ldr	r3, [r4, #0]
 8007312:	b9b2      	cbnz	r2, 8007342 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007314:	9002      	str	r0, [sp, #8]
 8007316:	695a      	ldr	r2, [r3, #20]
 8007318:	9202      	str	r2, [sp, #8]
 800731a:	699a      	ldr	r2, [r3, #24]
 800731c:	9202      	str	r2, [sp, #8]
 800731e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007320:	681a      	ldr	r2, [r3, #0]
 8007322:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007326:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007328:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8007480 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800732c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800732e:	2b00      	cmp	r3, #0
 8007330:	d12c      	bne.n	800738c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8007332:	2220      	movs	r2, #32
 8007334:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8007338:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800733c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8007340:	e7a8      	b.n	8007294 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8007342:	2a01      	cmp	r2, #1
 8007344:	d10a      	bne.n	800735c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007346:	681a      	ldr	r2, [r3, #0]
 8007348:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800734c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800734e:	9003      	str	r0, [sp, #12]
 8007350:	695a      	ldr	r2, [r3, #20]
 8007352:	9203      	str	r2, [sp, #12]
 8007354:	699a      	ldr	r2, [r3, #24]
 8007356:	9203      	str	r2, [sp, #12]
 8007358:	9a03      	ldr	r2, [sp, #12]
 800735a:	e7e1      	b.n	8007320 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800735c:	2a02      	cmp	r2, #2
 800735e:	d10e      	bne.n	800737e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007360:	681a      	ldr	r2, [r3, #0]
 8007362:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007366:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007368:	681a      	ldr	r2, [r3, #0]
 800736a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800736e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007370:	9004      	str	r0, [sp, #16]
 8007372:	695a      	ldr	r2, [r3, #20]
 8007374:	9204      	str	r2, [sp, #16]
 8007376:	699b      	ldr	r3, [r3, #24]
 8007378:	9304      	str	r3, [sp, #16]
 800737a:	9b04      	ldr	r3, [sp, #16]
 800737c:	e7d4      	b.n	8007328 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800737e:	9005      	str	r0, [sp, #20]
 8007380:	695a      	ldr	r2, [r3, #20]
 8007382:	9205      	str	r2, [sp, #20]
 8007384:	699b      	ldr	r3, [r3, #24]
 8007386:	9305      	str	r3, [sp, #20]
 8007388:	9b05      	ldr	r3, [sp, #20]
 800738a:	e7cd      	b.n	8007328 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800738c:	2b03      	cmp	r3, #3
 800738e:	d856      	bhi.n	800743e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8007390:	2b01      	cmp	r3, #1
 8007392:	d115      	bne.n	80073c0 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007394:	4632      	mov	r2, r6
 8007396:	4639      	mov	r1, r7
 8007398:	4620      	mov	r0, r4
 800739a:	f7ff fcb8 	bl	8006d0e <I2C_WaitOnRXNEFlagUntilTimeout>
 800739e:	2800      	cmp	r0, #0
 80073a0:	d1b3      	bne.n	800730a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80073a2:	6823      	ldr	r3, [r4, #0]
 80073a4:	691a      	ldr	r2, [r3, #16]
 80073a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80073a8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80073aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80073ac:	3301      	adds	r3, #1
 80073ae:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80073b0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80073b2:	3b01      	subs	r3, #1
 80073b4:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80073b6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80073b8:	3b01      	subs	r3, #1
 80073ba:	b29b      	uxth	r3, r3
 80073bc:	8563      	strh	r3, [r4, #42]	; 0x2a
 80073be:	e7b5      	b.n	800732c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80073c0:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80073c2:	9600      	str	r6, [sp, #0]
 80073c4:	463b      	mov	r3, r7
 80073c6:	f04f 0200 	mov.w	r2, #0
 80073ca:	4641      	mov	r1, r8
 80073cc:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80073ce:	d119      	bne.n	8007404 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80073d0:	f7ff fccc 	bl	8006d6c <I2C_WaitOnFlagUntilTimeout>
 80073d4:	2800      	cmp	r0, #0
 80073d6:	d198      	bne.n	800730a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80073d8:	6823      	ldr	r3, [r4, #0]
 80073da:	681a      	ldr	r2, [r3, #0]
 80073dc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80073e0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80073e2:	691a      	ldr	r2, [r3, #16]
 80073e4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80073e6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80073e8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80073ea:	1c53      	adds	r3, r2, #1
 80073ec:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80073ee:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80073f0:	3b01      	subs	r3, #1
 80073f2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80073f4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80073f6:	3b01      	subs	r3, #1
 80073f8:	b29b      	uxth	r3, r3
 80073fa:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80073fc:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80073fe:	691b      	ldr	r3, [r3, #16]
 8007400:	7053      	strb	r3, [r2, #1]
 8007402:	e7d2      	b.n	80073aa <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007404:	f7ff fcb2 	bl	8006d6c <I2C_WaitOnFlagUntilTimeout>
 8007408:	2800      	cmp	r0, #0
 800740a:	f47f af7e 	bne.w	800730a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800740e:	6823      	ldr	r3, [r4, #0]
 8007410:	681a      	ldr	r2, [r3, #0]
 8007412:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007416:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007418:	691a      	ldr	r2, [r3, #16]
 800741a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800741c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800741e:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007420:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8007422:	3301      	adds	r3, #1
 8007424:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007426:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007428:	3b01      	subs	r3, #1
 800742a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800742c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800742e:	3b01      	subs	r3, #1
 8007430:	b29b      	uxth	r3, r3
 8007432:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007434:	4602      	mov	r2, r0
 8007436:	463b      	mov	r3, r7
 8007438:	4641      	mov	r1, r8
 800743a:	4620      	mov	r0, r4
 800743c:	e7c8      	b.n	80073d0 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800743e:	4632      	mov	r2, r6
 8007440:	4639      	mov	r1, r7
 8007442:	4620      	mov	r0, r4
 8007444:	f7ff fc63 	bl	8006d0e <I2C_WaitOnRXNEFlagUntilTimeout>
 8007448:	2800      	cmp	r0, #0
 800744a:	f47f af5e 	bne.w	800730a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800744e:	6823      	ldr	r3, [r4, #0]
 8007450:	691a      	ldr	r2, [r3, #16]
 8007452:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007454:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8007456:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007458:	1c53      	adds	r3, r2, #1
 800745a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800745c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800745e:	3b01      	subs	r3, #1
 8007460:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8007462:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007464:	3b01      	subs	r3, #1
 8007466:	b29b      	uxth	r3, r3
 8007468:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800746a:	6823      	ldr	r3, [r4, #0]
 800746c:	6959      	ldr	r1, [r3, #20]
 800746e:	0749      	lsls	r1, r1, #29
 8007470:	f57f af5c 	bpl.w	800732c <HAL_I2C_Mem_Read+0xb8>
 8007474:	e7c3      	b.n	80073fe <HAL_I2C_Mem_Read+0x18a>
 8007476:	bf00      	nop
 8007478:	00100002 	.word	0x00100002
 800747c:	ffff0000 	.word	0xffff0000
 8007480:	00010004 	.word	0x00010004

08007484 <HAL_I2C_GetState>:
  return hi2c->State;
 8007484:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8007488:	4770      	bx	lr

0800748a <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 800748a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800748e:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007490:	6804      	ldr	r4, [r0, #0]
 8007492:	684f      	ldr	r7, [r1, #4]
 8007494:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007496:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800749a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800749e:	3284      	adds	r2, #132	; 0x84
 80074a0:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80074a2:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80074a6:	6858      	ldr	r0, [r3, #4]
 80074a8:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 80074ac:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80074ae:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80074b0:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80074b4:	f3c0 400b 	ubfx	r0, r0, #16, #12
 80074b8:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80074ba:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80074bc:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80074c0:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80074c2:	68e0      	ldr	r0, [r4, #12]
 80074c4:	68cd      	ldr	r5, [r1, #12]
 80074c6:	f3c0 000a 	ubfx	r0, r0, #0, #11
 80074ca:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80074cc:	6898      	ldr	r0, [r3, #8]
 80074ce:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 80074d2:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80074d4:	68e6      	ldr	r6, [r4, #12]
 80074d6:	6888      	ldr	r0, [r1, #8]
 80074d8:	f3c6 060a 	ubfx	r6, r6, #0, #11
 80074dc:	3001      	adds	r0, #1
 80074de:	4430      	add	r0, r6
 80074e0:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80074e4:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80074e6:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80074e8:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80074ea:	f020 0007 	bic.w	r0, r0, #7
 80074ee:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80074f0:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80074f4:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80074f6:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80074f8:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80074fc:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8007500:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8007504:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8007508:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800750c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8007510:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8007514:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8007516:	6958      	ldr	r0, [r3, #20]
 8007518:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800751c:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800751e:	6948      	ldr	r0, [r1, #20]
 8007520:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8007522:	69d8      	ldr	r0, [r3, #28]
 8007524:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8007528:	f020 0007 	bic.w	r0, r0, #7
 800752c:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800752e:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 8007532:	4305      	orrs	r5, r0
 8007534:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007536:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007538:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800753a:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800753e:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8007540:	b31e      	cbz	r6, 800758a <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8007542:	2e01      	cmp	r6, #1
 8007544:	d023      	beq.n	800758e <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007546:	1eb0      	subs	r0, r6, #2
 8007548:	2802      	cmp	r0, #2
 800754a:	d922      	bls.n	8007592 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800754c:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800754e:	bf0c      	ite	eq
 8007550:	2002      	moveq	r0, #2
 8007552:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8007554:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8007556:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 800755a:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800755c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800755e:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007560:	eba7 070c 	sub.w	r7, r7, ip
 8007564:	4345      	muls	r5, r0
 8007566:	4378      	muls	r0, r7
 8007568:	3003      	adds	r0, #3
 800756a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800756e:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8007570:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8007572:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8007576:	f020 0007 	bic.w	r0, r0, #7
 800757a:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800757c:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800757e:	58a3      	ldr	r3, [r4, r2]
 8007580:	f043 0301 	orr.w	r3, r3, #1
 8007584:	50a3      	str	r3, [r4, r2]
}
 8007586:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800758a:	2004      	movs	r0, #4
 800758c:	e7e2      	b.n	8007554 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800758e:	2003      	movs	r0, #3
 8007590:	e7e0      	b.n	8007554 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8007592:	2002      	movs	r0, #2
 8007594:	e7de      	b.n	8007554 <LTDC_SetConfig+0xca>
	...

08007598 <HAL_LTDC_Init>:
{
 8007598:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800759a:	4604      	mov	r4, r0
 800759c:	2800      	cmp	r0, #0
 800759e:	d063      	beq.n	8007668 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80075a0:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80075a4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80075a8:	b91b      	cbnz	r3, 80075b2 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80075aa:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80075ae:	f7fa fc0f 	bl	8001dd0 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80075b2:	2302      	movs	r3, #2
 80075b4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80075b8:	6823      	ldr	r3, [r4, #0]
 80075ba:	699a      	ldr	r2, [r3, #24]
 80075bc:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80075c0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80075c2:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80075c6:	4302      	orrs	r2, r0
 80075c8:	68e0      	ldr	r0, [r4, #12]
 80075ca:	6999      	ldr	r1, [r3, #24]
 80075cc:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80075ce:	6920      	ldr	r0, [r4, #16]
 80075d0:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80075d2:	430a      	orrs	r2, r1
 80075d4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80075d6:	689a      	ldr	r2, [r3, #8]
 80075d8:	4924      	ldr	r1, [pc, #144]	; (800766c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80075da:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80075dc:	400a      	ands	r2, r1
 80075de:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80075e0:	689a      	ldr	r2, [r3, #8]
 80075e2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80075e6:	69a0      	ldr	r0, [r4, #24]
 80075e8:	4302      	orrs	r2, r0
 80075ea:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80075ec:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80075ee:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80075f0:	400a      	ands	r2, r1
 80075f2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80075f4:	68da      	ldr	r2, [r3, #12]
 80075f6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80075fa:	6a20      	ldr	r0, [r4, #32]
 80075fc:	4302      	orrs	r2, r0
 80075fe:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007600:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8007602:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007604:	400a      	ands	r2, r1
 8007606:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007608:	691a      	ldr	r2, [r3, #16]
 800760a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800760e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007610:	4302      	orrs	r2, r0
 8007612:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007614:	695a      	ldr	r2, [r3, #20]
 8007616:	4011      	ands	r1, r2
 8007618:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800761a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800761c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800761e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8007622:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007624:	430a      	orrs	r2, r1
 8007626:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007628:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800762a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800762e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007632:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8007636:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007638:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800763a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800763e:	430a      	orrs	r2, r1
 8007640:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8007644:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007648:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800764a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800764c:	f042 0206 	orr.w	r2, r2, #6
 8007650:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8007652:	699a      	ldr	r2, [r3, #24]
 8007654:	f042 0201 	orr.w	r2, r2, #1
 8007658:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800765a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800765c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800765e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8007662:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8007666:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007668:	2001      	movs	r0, #1
 800766a:	e7fc      	b.n	8007666 <HAL_LTDC_Init+0xce>
 800766c:	f000f800 	.word	0xf000f800

08007670 <HAL_LTDC_ErrorCallback>:
 8007670:	4770      	bx	lr

08007672 <HAL_LTDC_LineEventCallback>:
 8007672:	4770      	bx	lr

08007674 <HAL_LTDC_ReloadEventCallback>:
 8007674:	4770      	bx	lr

08007676 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007676:	6803      	ldr	r3, [r0, #0]
{
 8007678:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800767a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800767c:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800767e:	0772      	lsls	r2, r6, #29
{
 8007680:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007682:	d514      	bpl.n	80076ae <HAL_LTDC_IRQHandler+0x38>
 8007684:	0769      	lsls	r1, r5, #29
 8007686:	d512      	bpl.n	80076ae <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8007688:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800768a:	f022 0204 	bic.w	r2, r2, #4
 800768e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8007690:	2204      	movs	r2, #4
 8007692:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8007694:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8007698:	f043 0301 	orr.w	r3, r3, #1
 800769c:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80076a0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80076a2:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80076a6:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80076aa:	f7ff ffe1 	bl	8007670 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80076ae:	07b2      	lsls	r2, r6, #30
 80076b0:	d516      	bpl.n	80076e0 <HAL_LTDC_IRQHandler+0x6a>
 80076b2:	07ab      	lsls	r3, r5, #30
 80076b4:	d514      	bpl.n	80076e0 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80076b6:	6823      	ldr	r3, [r4, #0]
 80076b8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80076ba:	f022 0202 	bic.w	r2, r2, #2
 80076be:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80076c0:	2202      	movs	r2, #2
 80076c2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80076c4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80076c8:	4313      	orrs	r3, r2
 80076ca:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80076ce:	2304      	movs	r3, #4
 80076d0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80076d4:	2300      	movs	r3, #0
 80076d6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80076da:	4620      	mov	r0, r4
 80076dc:	f7ff ffc8 	bl	8007670 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80076e0:	07f0      	lsls	r0, r6, #31
 80076e2:	d510      	bpl.n	8007706 <HAL_LTDC_IRQHandler+0x90>
 80076e4:	07e9      	lsls	r1, r5, #31
 80076e6:	d50e      	bpl.n	8007706 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80076e8:	6823      	ldr	r3, [r4, #0]
 80076ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80076ec:	f022 0201 	bic.w	r2, r2, #1
 80076f0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80076f2:	2201      	movs	r2, #1
 80076f4:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80076f6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80076f8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80076fc:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8007700:	4620      	mov	r0, r4
 8007702:	f7ff ffb6 	bl	8007672 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007706:	0732      	lsls	r2, r6, #28
 8007708:	d511      	bpl.n	800772e <HAL_LTDC_IRQHandler+0xb8>
 800770a:	072b      	lsls	r3, r5, #28
 800770c:	d50f      	bpl.n	800772e <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800770e:	6823      	ldr	r3, [r4, #0]
 8007710:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007712:	f022 0208 	bic.w	r2, r2, #8
 8007716:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007718:	2208      	movs	r2, #8
 800771a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800771c:	2301      	movs	r3, #1
 800771e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007722:	2300      	movs	r3, #0
 8007724:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8007728:	4620      	mov	r0, r4
 800772a:	f7ff ffa3 	bl	8007674 <HAL_LTDC_ReloadEventCallback>
}
 800772e:	bd70      	pop	{r4, r5, r6, pc}

08007730 <HAL_LTDC_ConfigLayer>:
{
 8007730:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8007734:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007738:	2b01      	cmp	r3, #1
{
 800773a:	4606      	mov	r6, r0
 800773c:	460f      	mov	r7, r1
 800773e:	4694      	mov	ip, r2
 8007740:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8007744:	d01f      	beq.n	8007786 <HAL_LTDC_ConfigLayer+0x56>
 8007746:	f04f 0801 	mov.w	r8, #1
 800774a:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800774e:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007752:	2434      	movs	r4, #52	; 0x34
 8007754:	460d      	mov	r5, r1
 8007756:	fb04 6402 	mla	r4, r4, r2, r6
 800775a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800775c:	3438      	adds	r4, #56	; 0x38
 800775e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007760:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007762:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007764:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007766:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007768:	682b      	ldr	r3, [r5, #0]
 800776a:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800776c:	4630      	mov	r0, r6
 800776e:	4662      	mov	r2, ip
 8007770:	4639      	mov	r1, r7
 8007772:	f7ff fe8a 	bl	800748a <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007776:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8007778:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800777a:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800777e:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007782:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8007786:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800778c <HAL_LTDC_SetPitch>:
{
 800778c:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800778e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007792:	2b01      	cmp	r3, #1
 8007794:	f04f 0302 	mov.w	r3, #2
 8007798:	d02c      	beq.n	80077f4 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800779a:	2434      	movs	r4, #52	; 0x34
 800779c:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80077a0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 80077a4:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80077a6:	b33c      	cbz	r4, 80077f8 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80077a8:	2c01      	cmp	r4, #1
 80077aa:	d027      	beq.n	80077fc <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80077ac:	1ea5      	subs	r5, r4, #2
 80077ae:	429d      	cmp	r5, r3
 80077b0:	d902      	bls.n	80077b8 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 80077b2:	2c07      	cmp	r4, #7
 80077b4:	bf18      	it	ne
 80077b6:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80077b8:	6804      	ldr	r4, [r0, #0]
 80077ba:	01d2      	lsls	r2, r2, #7
 80077bc:	3284      	adds	r2, #132	; 0x84
 80077be:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 80077c0:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80077c2:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 80077c4:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 80077c8:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 80077cc:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80077ce:	4c0c      	ldr	r4, [pc, #48]	; (8007800 <HAL_LTDC_SetPitch+0x74>)
 80077d0:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80077d2:	f045 0501 	orr.w	r5, r5, #1
 80077d6:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 80077d8:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 80077da:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80077de:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80077e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80077e2:	f043 0301 	orr.w	r3, r3, #1
 80077e6:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 80077e8:	2301      	movs	r3, #1
 80077ea:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80077ee:	2300      	movs	r3, #0
 80077f0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 80077f4:	4618      	mov	r0, r3
 80077f6:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 80077f8:	2304      	movs	r3, #4
 80077fa:	e7dd      	b.n	80077b8 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 80077fc:	2303      	movs	r3, #3
 80077fe:	e7db      	b.n	80077b8 <HAL_LTDC_SetPitch+0x2c>
 8007800:	40016800 	.word	0x40016800

08007804 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8007804:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8007806:	2300      	movs	r3, #0
 8007808:	9301      	str	r3, [sp, #4]
 800780a:	4b18      	ldr	r3, [pc, #96]	; (800786c <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800780c:	4d18      	ldr	r5, [pc, #96]	; (8007870 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800780e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007810:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007814:	641a      	str	r2, [r3, #64]	; 0x40
 8007816:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007818:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800781c:	9301      	str	r3, [sp, #4]
 800781e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8007820:	4b14      	ldr	r3, [pc, #80]	; (8007874 <HAL_PWREx_EnableOverDrive+0x70>)
 8007822:	2201      	movs	r2, #1
 8007824:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8007826:	f7fd fec9 	bl	80055bc <HAL_GetTick>
 800782a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800782c:	686b      	ldr	r3, [r5, #4]
 800782e:	03da      	lsls	r2, r3, #15
 8007830:	d50b      	bpl.n	800784a <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8007832:	4b11      	ldr	r3, [pc, #68]	; (8007878 <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8007834:	4d0e      	ldr	r5, [pc, #56]	; (8007870 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8007836:	2201      	movs	r2, #1
 8007838:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800783a:	f7fd febf 	bl	80055bc <HAL_GetTick>
 800783e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8007840:	686b      	ldr	r3, [r5, #4]
 8007842:	039b      	lsls	r3, r3, #14
 8007844:	d50a      	bpl.n	800785c <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8007846:	2000      	movs	r0, #0
 8007848:	e006      	b.n	8007858 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800784a:	f7fd feb7 	bl	80055bc <HAL_GetTick>
 800784e:	1b00      	subs	r0, r0, r4
 8007850:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8007854:	d9ea      	bls.n	800782c <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8007856:	2003      	movs	r0, #3
}
 8007858:	b003      	add	sp, #12
 800785a:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800785c:	f7fd feae 	bl	80055bc <HAL_GetTick>
 8007860:	1b00      	subs	r0, r0, r4
 8007862:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8007866:	d9eb      	bls.n	8007840 <HAL_PWREx_EnableOverDrive+0x3c>
 8007868:	e7f5      	b.n	8007856 <HAL_PWREx_EnableOverDrive+0x52>
 800786a:	bf00      	nop
 800786c:	40023800 	.word	0x40023800
 8007870:	40007000 	.word	0x40007000
 8007874:	420e0040 	.word	0x420e0040
 8007878:	420e0044 	.word	0x420e0044

0800787c <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800787c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8007880:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8007882:	b13e      	cbz	r6, 8007894 <QSPI_Config+0x18>
 8007884:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8007888:	bf1f      	itttt	ne
 800788a:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800788c:	6804      	ldrne	r4, [r0, #0]
 800788e:	f103 33ff 	addne.w	r3, r3, #4294967295
 8007892:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8007894:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8007898:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 800789c:	f1ba 0f00 	cmp.w	sl, #0
 80078a0:	d04e      	beq.n	8007940 <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80078a2:	694b      	ldr	r3, [r1, #20]
 80078a4:	6805      	ldr	r5, [r0, #0]
 80078a6:	f8d1 8000 	ldr.w	r8, [r1]
 80078aa:	6b48      	ldr	r0, [r1, #52]	; 0x34
 80078ac:	ea46 0a0a 	orr.w	sl, r6, sl
 80078b0:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 80078b4:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 80078b8:	ea4a 0a02 	orr.w	sl, sl, r2
 80078bc:	f1bc 0f00 	cmp.w	ip, #0
 80078c0:	d026      	beq.n	8007910 <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80078c2:	688b      	ldr	r3, [r1, #8]
 80078c4:	690e      	ldr	r6, [r1, #16]
 80078c6:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80078c8:	ea4c 0c0a 	orr.w	ip, ip, sl
 80078cc:	b1a7      	cbz	r7, 80078f8 <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80078ce:	ea48 0307 	orr.w	r3, r8, r7
 80078d2:	4323      	orrs	r3, r4
 80078d4:	ea43 0309 	orr.w	r3, r3, r9
 80078d8:	4303      	orrs	r3, r0
 80078da:	68c8      	ldr	r0, [r1, #12]
 80078dc:	4333      	orrs	r3, r6
 80078de:	4303      	orrs	r3, r0
 80078e0:	ea43 030e 	orr.w	r3, r3, lr
 80078e4:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80078e8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80078ec:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80078ee:	d001      	beq.n	80078f4 <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80078f0:	684b      	ldr	r3, [r1, #4]
 80078f2:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 80078f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80078f8:	ea48 0304 	orr.w	r3, r8, r4
 80078fc:	ea43 0309 	orr.w	r3, r3, r9
 8007900:	4303      	orrs	r3, r0
 8007902:	4333      	orrs	r3, r6
 8007904:	ea43 030e 	orr.w	r3, r3, lr
 8007908:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800790c:	616b      	str	r3, [r5, #20]
 800790e:	e7f1      	b.n	80078f4 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007910:	b167      	cbz	r7, 800792c <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007912:	ea48 0307 	orr.w	r3, r8, r7
 8007916:	4323      	orrs	r3, r4
 8007918:	ea43 0309 	orr.w	r3, r3, r9
 800791c:	4303      	orrs	r3, r0
 800791e:	68c8      	ldr	r0, [r1, #12]
 8007920:	4303      	orrs	r3, r0
 8007922:	ea43 030e 	orr.w	r3, r3, lr
 8007926:	ea43 030a 	orr.w	r3, r3, sl
 800792a:	e7dd      	b.n	80078e8 <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800792c:	ea48 0304 	orr.w	r3, r8, r4
 8007930:	ea43 0309 	orr.w	r3, r3, r9
 8007934:	4303      	orrs	r3, r0
 8007936:	ea43 030e 	orr.w	r3, r3, lr
 800793a:	ea43 030a 	orr.w	r3, r3, sl
 800793e:	e7e5      	b.n	800790c <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8007940:	f1bc 0f00 	cmp.w	ip, #0
 8007944:	d028      	beq.n	8007998 <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8007946:	6804      	ldr	r4, [r0, #0]
 8007948:	688b      	ldr	r3, [r1, #8]
 800794a:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800794c:	ea46 030c 	orr.w	r3, r6, ip
 8007950:	694e      	ldr	r6, [r1, #20]
 8007952:	6908      	ldr	r0, [r1, #16]
 8007954:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8007958:	ea43 0502 	orr.w	r5, r3, r2
 800795c:	04b6      	lsls	r6, r6, #18
 800795e:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 8007962:	b187      	cbz	r7, 8007986 <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007964:	4338      	orrs	r0, r7
 8007966:	ea40 0008 	orr.w	r0, r0, r8
 800796a:	4303      	orrs	r3, r0
 800796c:	68c8      	ldr	r0, [r1, #12]
 800796e:	ea43 030c 	orr.w	r3, r3, ip
 8007972:	4303      	orrs	r3, r0
 8007974:	4333      	orrs	r3, r6
 8007976:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8007978:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800797c:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800797e:	d0b9      	beq.n	80078f4 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8007980:	684b      	ldr	r3, [r1, #4]
 8007982:	61a3      	str	r3, [r4, #24]
 8007984:	e7b6      	b.n	80078f4 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007986:	ea40 0008 	orr.w	r0, r0, r8
 800798a:	4303      	orrs	r3, r0
 800798c:	ea43 030c 	orr.w	r3, r3, ip
 8007990:	4333      	orrs	r3, r6
 8007992:	432b      	orrs	r3, r5
 8007994:	6163      	str	r3, [r4, #20]
 8007996:	e7ad      	b.n	80078f4 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007998:	b1af      	cbz	r7, 80079c6 <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800799a:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800799c:	6800      	ldr	r0, [r0, #0]
 800799e:	ea46 0307 	orr.w	r3, r6, r7
 80079a2:	4313      	orrs	r3, r2
 80079a4:	4323      	orrs	r3, r4
 80079a6:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 80079a8:	4323      	orrs	r3, r4
 80079aa:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 80079ac:	4323      	orrs	r3, r4
 80079ae:	68cc      	ldr	r4, [r1, #12]
 80079b0:	4323      	orrs	r3, r4
 80079b2:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80079b4:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80079b8:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 80079bc:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80079be:	d099      	beq.n	80078f4 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80079c0:	684b      	ldr	r3, [r1, #4]
 80079c2:	6183      	str	r3, [r0, #24]
 80079c4:	e796      	b.n	80078f4 <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 80079c6:	2e00      	cmp	r6, #0
 80079c8:	d094      	beq.n	80078f4 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80079ca:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 80079cc:	6800      	ldr	r0, [r0, #0]
 80079ce:	4333      	orrs	r3, r6
 80079d0:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 80079d2:	431a      	orrs	r2, r3
 80079d4:	4332      	orrs	r2, r6
 80079d6:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 80079d8:	694b      	ldr	r3, [r1, #20]
 80079da:	4332      	orrs	r2, r6
 80079dc:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 80079e0:	6142      	str	r2, [r0, #20]
}
 80079e2:	e787      	b.n	80078f4 <QSPI_Config+0x78>

080079e4 <QSPI_WaitFlagStateUntilTimeout>:
{
 80079e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80079e8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80079ec:	4604      	mov	r4, r0
 80079ee:	460e      	mov	r6, r1
 80079f0:	4615      	mov	r5, r2
 80079f2:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 80079f4:	6822      	ldr	r2, [r4, #0]
 80079f6:	6893      	ldr	r3, [r2, #8]
 80079f8:	4233      	tst	r3, r6
 80079fa:	bf14      	ite	ne
 80079fc:	2301      	movne	r3, #1
 80079fe:	2300      	moveq	r3, #0
 8007a00:	42ab      	cmp	r3, r5
 8007a02:	d101      	bne.n	8007a08 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8007a04:	2000      	movs	r0, #0
 8007a06:	e012      	b.n	8007a2e <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8007a08:	f1b8 3fff 	cmp.w	r8, #4294967295
 8007a0c:	d0f3      	beq.n	80079f6 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007a0e:	f7fd fdd5 	bl	80055bc <HAL_GetTick>
 8007a12:	1bc0      	subs	r0, r0, r7
 8007a14:	4540      	cmp	r0, r8
 8007a16:	d802      	bhi.n	8007a1e <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8007a18:	f1b8 0f00 	cmp.w	r8, #0
 8007a1c:	d1ea      	bne.n	80079f4 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8007a1e:	2304      	movs	r3, #4
 8007a20:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8007a24:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007a26:	f043 0301 	orr.w	r3, r3, #1
 8007a2a:	6463      	str	r3, [r4, #68]	; 0x44
 8007a2c:	2001      	movs	r0, #1
}
 8007a2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08007a34 <HAL_QSPI_Init>:
{
 8007a34:	b530      	push	{r4, r5, lr}
 8007a36:	b085      	sub	sp, #20
 8007a38:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007a3a:	f7fd fdbf 	bl	80055bc <HAL_GetTick>
 8007a3e:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8007a40:	2c00      	cmp	r4, #0
 8007a42:	d047      	beq.n	8007ad4 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8007a44:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007a48:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8007a4c:	b94a      	cbnz	r2, 8007a62 <HAL_QSPI_Init+0x2e>
 8007a4e:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8007a50:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8007a54:	4620      	mov	r0, r4
 8007a56:	f7fa f9dd 	bl	8001e14 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8007a5a:	f241 3288 	movw	r2, #5000	; 0x1388
 8007a5e:	9b03      	ldr	r3, [sp, #12]
 8007a60:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8007a62:	6820      	ldr	r0, [r4, #0]
 8007a64:	68a1      	ldr	r1, [r4, #8]
 8007a66:	6802      	ldr	r2, [r0, #0]
 8007a68:	3901      	subs	r1, #1
 8007a6a:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8007a6e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8007a72:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007a74:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8007a76:	9200      	str	r2, [sp, #0]
 8007a78:	2120      	movs	r1, #32
 8007a7a:	2200      	movs	r2, #0
 8007a7c:	4620      	mov	r0, r4
 8007a7e:	f7ff ffb1 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8007a82:	bb10      	cbnz	r0, 8007aca <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8007a84:	69e5      	ldr	r5, [r4, #28]
 8007a86:	68e3      	ldr	r3, [r4, #12]
 8007a88:	6822      	ldr	r2, [r4, #0]
 8007a8a:	432b      	orrs	r3, r5
 8007a8c:	6a25      	ldr	r5, [r4, #32]
 8007a8e:	6811      	ldr	r1, [r2, #0]
 8007a90:	432b      	orrs	r3, r5
 8007a92:	6865      	ldr	r5, [r4, #4]
 8007a94:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007a98:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8007a9c:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8007aa0:	430b      	orrs	r3, r1
 8007aa2:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8007aa4:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8007aa8:	430b      	orrs	r3, r1
 8007aaa:	6921      	ldr	r1, [r4, #16]
 8007aac:	6855      	ldr	r5, [r2, #4]
 8007aae:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8007ab2:	4909      	ldr	r1, [pc, #36]	; (8007ad8 <HAL_QSPI_Init+0xa4>)
 8007ab4:	4029      	ands	r1, r5
 8007ab6:	430b      	orrs	r3, r1
 8007ab8:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8007aba:	6813      	ldr	r3, [r2, #0]
 8007abc:	f043 0301 	orr.w	r3, r3, #1
 8007ac0:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8007ac2:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007ac4:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8007ac6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007aca:	2300      	movs	r3, #0
 8007acc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007ad0:	b005      	add	sp, #20
 8007ad2:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8007ad4:	2001      	movs	r0, #1
 8007ad6:	e7fb      	b.n	8007ad0 <HAL_QSPI_Init+0x9c>
 8007ad8:	ffe0f8fe 	.word	0xffe0f8fe

08007adc <HAL_QSPI_DeInit>:
{
 8007adc:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8007ade:	4604      	mov	r4, r0
 8007ae0:	b168      	cbz	r0, 8007afe <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8007ae2:	6802      	ldr	r2, [r0, #0]
 8007ae4:	6813      	ldr	r3, [r2, #0]
 8007ae6:	f023 0301 	bic.w	r3, r3, #1
 8007aea:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8007aec:	f7fa f9ec 	bl	8001ec8 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007af0:	2000      	movs	r0, #0
 8007af2:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8007af4:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007af8:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8007afc:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007afe:	2001      	movs	r0, #1
 8007b00:	e7fc      	b.n	8007afc <HAL_QSPI_DeInit+0x20>

08007b02 <HAL_QSPI_Command>:
{
 8007b02:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007b06:	4604      	mov	r4, r0
 8007b08:	b085      	sub	sp, #20
 8007b0a:	4617      	mov	r7, r2
 8007b0c:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8007b0e:	f7fd fd55 	bl	80055bc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007b12:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007b16:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8007b18:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007b1a:	d034      	beq.n	8007b86 <HAL_QSPI_Command+0x84>
 8007b1c:	2201      	movs	r2, #1
 8007b1e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007b22:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007b26:	2a01      	cmp	r2, #1
 8007b28:	fa5f f882 	uxtb.w	r8, r2
 8007b2c:	f04f 0602 	mov.w	r6, #2
 8007b30:	d127      	bne.n	8007b82 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007b32:	2200      	movs	r2, #0
 8007b34:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007b36:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8007b38:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007b3c:	9700      	str	r7, [sp, #0]
 8007b3e:	2120      	movs	r1, #32
 8007b40:	4620      	mov	r0, r4
 8007b42:	f7ff ff4f 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007b46:	4605      	mov	r5, r0
 8007b48:	b9a0      	cbnz	r0, 8007b74 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8007b4a:	4602      	mov	r2, r0
 8007b4c:	4649      	mov	r1, r9
 8007b4e:	4620      	mov	r0, r4
 8007b50:	f7ff fe94 	bl	800787c <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8007b54:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8007b58:	9b03      	ldr	r3, [sp, #12]
 8007b5a:	b94a      	cbnz	r2, 8007b70 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8007b5c:	9700      	str	r7, [sp, #0]
 8007b5e:	4642      	mov	r2, r8
 8007b60:	4631      	mov	r1, r6
 8007b62:	4620      	mov	r0, r4
 8007b64:	f7ff ff3e 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8007b68:	4605      	mov	r5, r0
 8007b6a:	b918      	cbnz	r0, 8007b74 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8007b6c:	6823      	ldr	r3, [r4, #0]
 8007b6e:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8007b70:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007b74:	2300      	movs	r3, #0
 8007b76:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007b7a:	4628      	mov	r0, r5
 8007b7c:	b005      	add	sp, #20
 8007b7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8007b82:	4635      	mov	r5, r6
 8007b84:	e7f6      	b.n	8007b74 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 8007b86:	2502      	movs	r5, #2
 8007b88:	e7f7      	b.n	8007b7a <HAL_QSPI_Command+0x78>

08007b8a <HAL_QSPI_AutoPolling>:
{
 8007b8a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007b8e:	4604      	mov	r4, r0
 8007b90:	4615      	mov	r5, r2
 8007b92:	461e      	mov	r6, r3
 8007b94:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8007b96:	f7fd fd11 	bl	80055bc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007b9a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007b9e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8007ba0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007ba2:	d040      	beq.n	8007c26 <HAL_QSPI_AutoPolling+0x9c>
 8007ba4:	2201      	movs	r2, #1
 8007ba6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007baa:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007bae:	2a01      	cmp	r2, #1
 8007bb0:	b2d7      	uxtb	r7, r2
 8007bb2:	d136      	bne.n	8007c22 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8007bb4:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007bb6:	2200      	movs	r2, #0
 8007bb8:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007bba:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8007bbc:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007bc0:	9600      	str	r6, [sp, #0]
 8007bc2:	2120      	movs	r1, #32
 8007bc4:	4620      	mov	r0, r4
 8007bc6:	f7ff ff0d 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007bca:	bb20      	cbnz	r0, 8007c16 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8007bcc:	6821      	ldr	r1, [r4, #0]
 8007bce:	682a      	ldr	r2, [r5, #0]
 8007bd0:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8007bd2:	686a      	ldr	r2, [r5, #4]
 8007bd4:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8007bd6:	68aa      	ldr	r2, [r5, #8]
 8007bd8:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8007bda:	680a      	ldr	r2, [r1, #0]
 8007bdc:	6928      	ldr	r0, [r5, #16]
 8007bde:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8007be2:	4302      	orrs	r2, r0
 8007be4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8007be8:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8007bea:	68ea      	ldr	r2, [r5, #12]
 8007bec:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8007bf0:	4641      	mov	r1, r8
 8007bf2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8007bf6:	4620      	mov	r0, r4
 8007bf8:	f7ff fe40 	bl	800787c <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8007bfc:	9b03      	ldr	r3, [sp, #12]
 8007bfe:	9600      	str	r6, [sp, #0]
 8007c00:	463a      	mov	r2, r7
 8007c02:	2108      	movs	r1, #8
 8007c04:	4620      	mov	r0, r4
 8007c06:	f7ff feed 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8007c0a:	b920      	cbnz	r0, 8007c16 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8007c0c:	6823      	ldr	r3, [r4, #0]
 8007c0e:	2208      	movs	r2, #8
 8007c10:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8007c12:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007c16:	2300      	movs	r3, #0
 8007c18:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007c1c:	b004      	add	sp, #16
 8007c1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8007c22:	2002      	movs	r0, #2
 8007c24:	e7f7      	b.n	8007c16 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8007c26:	2002      	movs	r0, #2
 8007c28:	e7f8      	b.n	8007c1c <HAL_QSPI_AutoPolling+0x92>

08007c2a <HAL_QSPI_MemoryMapped>:
{
 8007c2a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007c2c:	4604      	mov	r4, r0
 8007c2e:	4616      	mov	r6, r2
 8007c30:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8007c32:	f7fd fcc3 	bl	80055bc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007c36:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007c3a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8007c3c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007c3e:	d032      	beq.n	8007ca6 <HAL_QSPI_MemoryMapped+0x7c>
 8007c40:	2201      	movs	r2, #1
 8007c42:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007c46:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007c4a:	2a01      	cmp	r2, #1
 8007c4c:	d129      	bne.n	8007ca2 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007c4e:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8007c50:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007c52:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8007c54:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007c58:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8007c5a:	9100      	str	r1, [sp, #0]
 8007c5c:	4620      	mov	r0, r4
 8007c5e:	2120      	movs	r1, #32
 8007c60:	f7ff fec0 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007c64:	4605      	mov	r5, r0
 8007c66:	b9b0      	cbnz	r0, 8007c96 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8007c68:	6823      	ldr	r3, [r4, #0]
 8007c6a:	6872      	ldr	r2, [r6, #4]
 8007c6c:	6818      	ldr	r0, [r3, #0]
 8007c6e:	f020 0008 	bic.w	r0, r0, #8
 8007c72:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8007c74:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8007c76:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8007c78:	d107      	bne.n	8007c8a <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8007c7a:	6832      	ldr	r2, [r6, #0]
 8007c7c:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8007c7e:	2210      	movs	r2, #16
 8007c80:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8007c82:	681a      	ldr	r2, [r3, #0]
 8007c84:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8007c88:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8007c8a:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8007c8e:	4639      	mov	r1, r7
 8007c90:	4620      	mov	r0, r4
 8007c92:	f7ff fdf3 	bl	800787c <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8007c96:	2300      	movs	r3, #0
 8007c98:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007c9c:	4628      	mov	r0, r5
 8007c9e:	b003      	add	sp, #12
 8007ca0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8007ca2:	2502      	movs	r5, #2
 8007ca4:	e7f7      	b.n	8007c96 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8007ca6:	2502      	movs	r5, #2
 8007ca8:	e7f8      	b.n	8007c9c <HAL_QSPI_MemoryMapped+0x72>

08007caa <HAL_QSPI_Abort>:
{
 8007caa:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007cac:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007cae:	f7fd fc85 	bl	80055bc <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8007cb2:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 8007cb6:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8007cb8:	f012 0002 	ands.w	r0, r2, #2
 8007cbc:	d036      	beq.n	8007d2c <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 8007cbe:	2200      	movs	r2, #0
 8007cc0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8007cc4:	6822      	ldr	r2, [r4, #0]
 8007cc6:	6811      	ldr	r1, [r2, #0]
 8007cc8:	0749      	lsls	r1, r1, #29
 8007cca:	d50d      	bpl.n	8007ce8 <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8007ccc:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8007cce:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8007cd0:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8007cd2:	f021 0104 	bic.w	r1, r1, #4
 8007cd6:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8007cd8:	f7fe f8e4 	bl	8005ea4 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8007cdc:	9b03      	ldr	r3, [sp, #12]
 8007cde:	b118      	cbz	r0, 8007ce8 <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8007ce0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8007ce2:	f042 0204 	orr.w	r2, r2, #4
 8007ce6:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8007ce8:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8007cea:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8007cec:	680a      	ldr	r2, [r1, #0]
 8007cee:	f042 0202 	orr.w	r2, r2, #2
 8007cf2:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8007cf4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8007cf6:	9200      	str	r2, [sp, #0]
 8007cf8:	2102      	movs	r1, #2
 8007cfa:	2201      	movs	r2, #1
 8007cfc:	4620      	mov	r0, r4
 8007cfe:	f7ff fe71 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007d02:	9b03      	ldr	r3, [sp, #12]
 8007d04:	b990      	cbnz	r0, 8007d2c <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8007d06:	6822      	ldr	r2, [r4, #0]
 8007d08:	2102      	movs	r1, #2
 8007d0a:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007d0c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8007d0e:	9200      	str	r2, [sp, #0]
 8007d10:	2120      	movs	r1, #32
 8007d12:	4602      	mov	r2, r0
 8007d14:	4620      	mov	r0, r4
 8007d16:	f7ff fe65 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007d1a:	b938      	cbnz	r0, 8007d2c <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8007d1c:	6822      	ldr	r2, [r4, #0]
 8007d1e:	6953      	ldr	r3, [r2, #20]
 8007d20:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8007d24:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8007d26:	2301      	movs	r3, #1
 8007d28:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8007d2c:	b004      	add	sp, #16
 8007d2e:	bd10      	pop	{r4, pc}

08007d30 <HAL_QSPI_Transmit>:
{
 8007d30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d32:	4604      	mov	r4, r0
 8007d34:	b085      	sub	sp, #20
 8007d36:	4616      	mov	r6, r2
 8007d38:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8007d3a:	f7fd fc3f 	bl	80055bc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007d3e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8007d42:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8007d44:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8007d46:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007d48:	d04c      	beq.n	8007de4 <HAL_QSPI_Transmit+0xb4>
 8007d4a:	2201      	movs	r2, #1
 8007d4c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007d50:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007d54:	2a01      	cmp	r2, #1
 8007d56:	b2d0      	uxtb	r0, r2
 8007d58:	d142      	bne.n	8007de0 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007d5a:	2200      	movs	r2, #0
 8007d5c:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8007d5e:	2f00      	cmp	r7, #0
 8007d60:	d039      	beq.n	8007dd6 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8007d62:	2212      	movs	r2, #18
 8007d64:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8007d68:	692a      	ldr	r2, [r5, #16]
 8007d6a:	3201      	adds	r2, #1
 8007d6c:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007d6e:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8007d70:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007d72:	3201      	adds	r2, #1
 8007d74:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8007d76:	696a      	ldr	r2, [r5, #20]
 8007d78:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8007d7c:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8007d7e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007d80:	b9a2      	cbnz	r2, 8007dac <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8007d82:	9600      	str	r6, [sp, #0]
 8007d84:	2201      	movs	r2, #1
 8007d86:	2102      	movs	r1, #2
 8007d88:	4620      	mov	r0, r4
 8007d8a:	f7ff fe2b 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8007d8e:	b928      	cbnz	r0, 8007d9c <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8007d90:	6823      	ldr	r3, [r4, #0]
 8007d92:	2202      	movs	r2, #2
 8007d94:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8007d96:	4620      	mov	r0, r4
 8007d98:	f7ff ff87 	bl	8007caa <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8007d9c:	2301      	movs	r3, #1
 8007d9e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007da2:	2300      	movs	r3, #0
 8007da4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007da8:	b005      	add	sp, #20
 8007daa:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8007dac:	9600      	str	r6, [sp, #0]
 8007dae:	2201      	movs	r2, #1
 8007db0:	2104      	movs	r1, #4
 8007db2:	4620      	mov	r0, r4
 8007db4:	9303      	str	r3, [sp, #12]
 8007db6:	f7ff fe15 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8007dba:	2800      	cmp	r0, #0
 8007dbc:	d1ee      	bne.n	8007d9c <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8007dbe:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8007dc0:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8007dc2:	7812      	ldrb	r2, [r2, #0]
 8007dc4:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8007dc8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007dca:	3201      	adds	r2, #1
 8007dcc:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8007dce:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007dd0:	3a01      	subs	r2, #1
 8007dd2:	62e2      	str	r2, [r4, #44]	; 0x2c
 8007dd4:	e7d3      	b.n	8007d7e <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8007dd6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007dd8:	f043 0308 	orr.w	r3, r3, #8
 8007ddc:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8007dde:	e7e0      	b.n	8007da2 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8007de0:	2002      	movs	r0, #2
 8007de2:	e7de      	b.n	8007da2 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8007de4:	2002      	movs	r0, #2
 8007de6:	e7df      	b.n	8007da8 <HAL_QSPI_Transmit+0x78>

08007de8 <HAL_QSPI_Receive>:
{
 8007de8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007dea:	4604      	mov	r4, r0
 8007dec:	b085      	sub	sp, #20
 8007dee:	4616      	mov	r6, r2
 8007df0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8007df2:	f7fd fbe3 	bl	80055bc <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8007df6:	6825      	ldr	r5, [r4, #0]
 8007df8:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8007dfc:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007e00:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8007e02:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007e04:	d050      	beq.n	8007ea8 <HAL_QSPI_Receive+0xc0>
 8007e06:	2201      	movs	r2, #1
 8007e08:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007e0c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007e10:	2a01      	cmp	r2, #1
 8007e12:	b2d0      	uxtb	r0, r2
 8007e14:	d146      	bne.n	8007ea4 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007e16:	2200      	movs	r2, #0
 8007e18:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8007e1a:	2f00      	cmp	r7, #0
 8007e1c:	d03d      	beq.n	8007e9a <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8007e1e:	2222      	movs	r2, #34	; 0x22
 8007e20:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8007e24:	692a      	ldr	r2, [r5, #16]
 8007e26:	3201      	adds	r2, #1
 8007e28:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007e2a:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8007e2c:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007e2e:	3201      	adds	r2, #1
 8007e30:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8007e32:	6969      	ldr	r1, [r5, #20]
 8007e34:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8007e38:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8007e3c:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8007e3e:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8007e42:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007e44:	b9a2      	cbnz	r2, 8007e70 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8007e46:	9600      	str	r6, [sp, #0]
 8007e48:	2201      	movs	r2, #1
 8007e4a:	2102      	movs	r1, #2
 8007e4c:	4620      	mov	r0, r4
 8007e4e:	f7ff fdc9 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8007e52:	b928      	cbnz	r0, 8007e60 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8007e54:	6823      	ldr	r3, [r4, #0]
 8007e56:	2202      	movs	r2, #2
 8007e58:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8007e5a:	4620      	mov	r0, r4
 8007e5c:	f7ff ff25 	bl	8007caa <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8007e60:	2301      	movs	r3, #1
 8007e62:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007e66:	2300      	movs	r3, #0
 8007e68:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007e6c:	b005      	add	sp, #20
 8007e6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8007e70:	9600      	str	r6, [sp, #0]
 8007e72:	2201      	movs	r2, #1
 8007e74:	2106      	movs	r1, #6
 8007e76:	4620      	mov	r0, r4
 8007e78:	9303      	str	r3, [sp, #12]
 8007e7a:	f7ff fdb3 	bl	80079e4 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8007e7e:	2800      	cmp	r0, #0
 8007e80:	d1ee      	bne.n	8007e60 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8007e82:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e84:	f895 1020 	ldrb.w	r1, [r5, #32]
 8007e88:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8007e8a:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8007e8c:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8007e8e:	3201      	adds	r2, #1
 8007e90:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8007e92:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007e94:	3a01      	subs	r2, #1
 8007e96:	63a2      	str	r2, [r4, #56]	; 0x38
 8007e98:	e7d3      	b.n	8007e42 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8007e9a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007e9c:	f043 0308 	orr.w	r3, r3, #8
 8007ea0:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8007ea2:	e7e0      	b.n	8007e66 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8007ea4:	2002      	movs	r0, #2
 8007ea6:	e7de      	b.n	8007e66 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8007ea8:	2002      	movs	r0, #2
 8007eaa:	e7df      	b.n	8007e6c <HAL_QSPI_Receive+0x84>

08007eac <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007eac:	4913      	ldr	r1, [pc, #76]	; (8007efc <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007eae:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007eb0:	688b      	ldr	r3, [r1, #8]
 8007eb2:	f003 030c 	and.w	r3, r3, #12
 8007eb6:	2b04      	cmp	r3, #4
 8007eb8:	d01c      	beq.n	8007ef4 <HAL_RCC_GetSysClockFreq+0x48>
 8007eba:	2b08      	cmp	r3, #8
 8007ebc:	d11c      	bne.n	8007ef8 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007ebe:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007ec0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007ec2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007ec4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007ec8:	bf14      	ite	ne
 8007eca:	480d      	ldrne	r0, [pc, #52]	; (8007f00 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007ecc:	480d      	ldreq	r0, [pc, #52]	; (8007f04 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007ece:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007ed2:	bf18      	it	ne
 8007ed4:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007ed6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007eda:	fba1 0100 	umull	r0, r1, r1, r0
 8007ede:	f7f8 f9df 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8007ee2:	4b06      	ldr	r3, [pc, #24]	; (8007efc <HAL_RCC_GetSysClockFreq+0x50>)
 8007ee4:	685b      	ldr	r3, [r3, #4]
 8007ee6:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8007eea:	3301      	adds	r3, #1
 8007eec:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8007eee:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8007ef2:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007ef4:	4802      	ldr	r0, [pc, #8]	; (8007f00 <HAL_RCC_GetSysClockFreq+0x54>)
 8007ef6:	e7fc      	b.n	8007ef2 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8007ef8:	4802      	ldr	r0, [pc, #8]	; (8007f04 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8007efa:	e7fa      	b.n	8007ef2 <HAL_RCC_GetSysClockFreq+0x46>
 8007efc:	40023800 	.word	0x40023800
 8007f00:	007a1200 	.word	0x007a1200
 8007f04:	00f42400 	.word	0x00f42400

08007f08 <HAL_RCC_ClockConfig>:
{
 8007f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007f0c:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007f0e:	4604      	mov	r4, r0
 8007f10:	b910      	cbnz	r0, 8007f18 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8007f12:	2001      	movs	r0, #1
}
 8007f14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8007f18:	4b44      	ldr	r3, [pc, #272]	; (800802c <HAL_RCC_ClockConfig+0x124>)
 8007f1a:	681a      	ldr	r2, [r3, #0]
 8007f1c:	f002 020f 	and.w	r2, r2, #15
 8007f20:	428a      	cmp	r2, r1
 8007f22:	d328      	bcc.n	8007f76 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007f24:	6822      	ldr	r2, [r4, #0]
 8007f26:	0797      	lsls	r7, r2, #30
 8007f28:	d42d      	bmi.n	8007f86 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007f2a:	07d0      	lsls	r0, r2, #31
 8007f2c:	d441      	bmi.n	8007fb2 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007f2e:	4b3f      	ldr	r3, [pc, #252]	; (800802c <HAL_RCC_ClockConfig+0x124>)
 8007f30:	681a      	ldr	r2, [r3, #0]
 8007f32:	f002 020f 	and.w	r2, r2, #15
 8007f36:	42aa      	cmp	r2, r5
 8007f38:	d866      	bhi.n	8008008 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007f3a:	6822      	ldr	r2, [r4, #0]
 8007f3c:	0751      	lsls	r1, r2, #29
 8007f3e:	d46c      	bmi.n	800801a <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007f40:	0713      	lsls	r3, r2, #28
 8007f42:	d507      	bpl.n	8007f54 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8007f44:	4a3a      	ldr	r2, [pc, #232]	; (8008030 <HAL_RCC_ClockConfig+0x128>)
 8007f46:	6921      	ldr	r1, [r4, #16]
 8007f48:	6893      	ldr	r3, [r2, #8]
 8007f4a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007f4e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007f52:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8007f54:	f7ff ffaa 	bl	8007eac <HAL_RCC_GetSysClockFreq>
 8007f58:	4b35      	ldr	r3, [pc, #212]	; (8008030 <HAL_RCC_ClockConfig+0x128>)
 8007f5a:	4a36      	ldr	r2, [pc, #216]	; (8008034 <HAL_RCC_ClockConfig+0x12c>)
 8007f5c:	689b      	ldr	r3, [r3, #8]
 8007f5e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007f62:	5cd3      	ldrb	r3, [r2, r3]
 8007f64:	40d8      	lsrs	r0, r3
 8007f66:	4b34      	ldr	r3, [pc, #208]	; (8008038 <HAL_RCC_ClockConfig+0x130>)
 8007f68:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8007f6a:	4b34      	ldr	r3, [pc, #208]	; (800803c <HAL_RCC_ClockConfig+0x134>)
 8007f6c:	6818      	ldr	r0, [r3, #0]
 8007f6e:	f7fa f881 	bl	8002074 <HAL_InitTick>
  return HAL_OK;
 8007f72:	2000      	movs	r0, #0
 8007f74:	e7ce      	b.n	8007f14 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007f76:	b2ca      	uxtb	r2, r1
 8007f78:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007f7a:	681b      	ldr	r3, [r3, #0]
 8007f7c:	f003 030f 	and.w	r3, r3, #15
 8007f80:	428b      	cmp	r3, r1
 8007f82:	d1c6      	bne.n	8007f12 <HAL_RCC_ClockConfig+0xa>
 8007f84:	e7ce      	b.n	8007f24 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007f86:	4b2a      	ldr	r3, [pc, #168]	; (8008030 <HAL_RCC_ClockConfig+0x128>)
 8007f88:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007f8c:	bf1e      	ittt	ne
 8007f8e:	6899      	ldrne	r1, [r3, #8]
 8007f90:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007f94:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007f96:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007f98:	bf42      	ittt	mi
 8007f9a:	6899      	ldrmi	r1, [r3, #8]
 8007f9c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007fa0:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007fa2:	4923      	ldr	r1, [pc, #140]	; (8008030 <HAL_RCC_ClockConfig+0x128>)
 8007fa4:	68a0      	ldr	r0, [r4, #8]
 8007fa6:	688b      	ldr	r3, [r1, #8]
 8007fa8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007fac:	4303      	orrs	r3, r0
 8007fae:	608b      	str	r3, [r1, #8]
 8007fb0:	e7bb      	b.n	8007f2a <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007fb2:	6862      	ldr	r2, [r4, #4]
 8007fb4:	4b1e      	ldr	r3, [pc, #120]	; (8008030 <HAL_RCC_ClockConfig+0x128>)
 8007fb6:	2a01      	cmp	r2, #1
 8007fb8:	d11c      	bne.n	8007ff4 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007fba:	681b      	ldr	r3, [r3, #0]
 8007fbc:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007fc0:	d0a7      	beq.n	8007f12 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007fc2:	4e1b      	ldr	r6, [pc, #108]	; (8008030 <HAL_RCC_ClockConfig+0x128>)
 8007fc4:	68b3      	ldr	r3, [r6, #8]
 8007fc6:	f023 0303 	bic.w	r3, r3, #3
 8007fca:	4313      	orrs	r3, r2
 8007fcc:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007fce:	f7fd faf5 	bl	80055bc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007fd2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8007fd6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007fd8:	68b3      	ldr	r3, [r6, #8]
 8007fda:	6862      	ldr	r2, [r4, #4]
 8007fdc:	f003 030c 	and.w	r3, r3, #12
 8007fe0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007fe4:	d0a3      	beq.n	8007f2e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007fe6:	f7fd fae9 	bl	80055bc <HAL_GetTick>
 8007fea:	1bc0      	subs	r0, r0, r7
 8007fec:	4540      	cmp	r0, r8
 8007fee:	d9f3      	bls.n	8007fd8 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8007ff0:	2003      	movs	r0, #3
 8007ff2:	e78f      	b.n	8007f14 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007ff4:	1e91      	subs	r1, r2, #2
 8007ff6:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007ff8:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007ffa:	d802      	bhi.n	8008002 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007ffc:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8008000:	e7de      	b.n	8007fc0 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008002:	f013 0f02 	tst.w	r3, #2
 8008006:	e7db      	b.n	8007fc0 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008008:	b2ea      	uxtb	r2, r5
 800800a:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800800c:	681b      	ldr	r3, [r3, #0]
 800800e:	f003 030f 	and.w	r3, r3, #15
 8008012:	42ab      	cmp	r3, r5
 8008014:	f47f af7d 	bne.w	8007f12 <HAL_RCC_ClockConfig+0xa>
 8008018:	e78f      	b.n	8007f3a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800801a:	4905      	ldr	r1, [pc, #20]	; (8008030 <HAL_RCC_ClockConfig+0x128>)
 800801c:	68e0      	ldr	r0, [r4, #12]
 800801e:	688b      	ldr	r3, [r1, #8]
 8008020:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8008024:	4303      	orrs	r3, r0
 8008026:	608b      	str	r3, [r1, #8]
 8008028:	e78a      	b.n	8007f40 <HAL_RCC_ClockConfig+0x38>
 800802a:	bf00      	nop
 800802c:	40023c00 	.word	0x40023c00
 8008030:	40023800 	.word	0x40023800
 8008034:	080245b1 	.word	0x080245b1
 8008038:	20000050 	.word	0x20000050
 800803c:	20000058 	.word	0x20000058

08008040 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8008040:	4b04      	ldr	r3, [pc, #16]	; (8008054 <HAL_RCC_GetPCLK1Freq+0x14>)
 8008042:	4a05      	ldr	r2, [pc, #20]	; (8008058 <HAL_RCC_GetPCLK1Freq+0x18>)
 8008044:	689b      	ldr	r3, [r3, #8]
 8008046:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800804a:	5cd3      	ldrb	r3, [r2, r3]
 800804c:	4a03      	ldr	r2, [pc, #12]	; (800805c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800804e:	6810      	ldr	r0, [r2, #0]
}
 8008050:	40d8      	lsrs	r0, r3
 8008052:	4770      	bx	lr
 8008054:	40023800 	.word	0x40023800
 8008058:	080245c1 	.word	0x080245c1
 800805c:	20000050 	.word	0x20000050

08008060 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8008060:	230f      	movs	r3, #15
 8008062:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8008064:	4b0b      	ldr	r3, [pc, #44]	; (8008094 <HAL_RCC_GetClockConfig+0x34>)
 8008066:	689a      	ldr	r2, [r3, #8]
 8008068:	f002 0203 	and.w	r2, r2, #3
 800806c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800806e:	689a      	ldr	r2, [r3, #8]
 8008070:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8008074:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8008076:	689a      	ldr	r2, [r3, #8]
 8008078:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800807c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800807e:	689b      	ldr	r3, [r3, #8]
 8008080:	08db      	lsrs	r3, r3, #3
 8008082:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8008086:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8008088:	4b03      	ldr	r3, [pc, #12]	; (8008098 <HAL_RCC_GetClockConfig+0x38>)
 800808a:	681b      	ldr	r3, [r3, #0]
 800808c:	f003 030f 	and.w	r3, r3, #15
 8008090:	600b      	str	r3, [r1, #0]
}
 8008092:	4770      	bx	lr
 8008094:	40023800 	.word	0x40023800
 8008098:	40023c00 	.word	0x40023c00

0800809c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800809c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800809e:	6802      	ldr	r2, [r0, #0]
{
 80080a0:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 80080a2:	0610      	lsls	r0, r2, #24
 80080a4:	d508      	bpl.n	80080b8 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 80080a6:	49a8      	ldr	r1, [pc, #672]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 80080a8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80080aa:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 80080ae:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80080b2:	4303      	orrs	r3, r0
 80080b4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 80080b8:	05d1      	lsls	r1, r2, #23
 80080ba:	d508      	bpl.n	80080ce <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 80080bc:	49a2      	ldr	r1, [pc, #648]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 80080be:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80080c0:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 80080c4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80080c8:	4303      	orrs	r3, r0
 80080ca:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80080ce:	f012 0f43 	tst.w	r2, #67	; 0x43
 80080d2:	d172      	bne.n	80081ba <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80080d4:	6823      	ldr	r3, [r4, #0]
 80080d6:	f013 0f0c 	tst.w	r3, #12
 80080da:	f000 80bf 	beq.w	800825c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80080de:	4d9b      	ldr	r5, [pc, #620]	; (800834c <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80080e0:	4e99      	ldr	r6, [pc, #612]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 80080e2:	2300      	movs	r3, #0
 80080e4:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80080e6:	f7fd fa69 	bl	80055bc <HAL_GetTick>
 80080ea:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80080ec:	6833      	ldr	r3, [r6, #0]
 80080ee:	009a      	lsls	r2, r3, #2
 80080f0:	f100 80f9 	bmi.w	80082e6 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80080f4:	6822      	ldr	r2, [r4, #0]
 80080f6:	0753      	lsls	r3, r2, #29
 80080f8:	d51a      	bpl.n	8008130 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 80080fa:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80080fe:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8008102:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8008106:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800810a:	430b      	orrs	r3, r1
 800810c:	6921      	ldr	r1, [r4, #16]
 800810e:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8008112:	69a1      	ldr	r1, [r4, #24]
 8008114:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8008118:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800811c:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8008120:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8008122:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8008126:	3901      	subs	r1, #1
 8008128:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800812c:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8008130:	0717      	lsls	r7, r2, #28
 8008132:	d519      	bpl.n	8008168 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8008134:	4984      	ldr	r1, [pc, #528]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8008136:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800813a:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800813e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8008142:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8008146:	4303      	orrs	r3, r0
 8008148:	6920      	ldr	r0, [r4, #16]
 800814a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800814e:	69e0      	ldr	r0, [r4, #28]
 8008150:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8008154:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8008158:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800815c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800815e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8008162:	4303      	orrs	r3, r0
 8008164:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8008168:	0616      	lsls	r6, r2, #24
 800816a:	d517      	bpl.n	800819c <HAL_RCCEx_PeriphCLKConfig+0x100>
 800816c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800816e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8008172:	d113      	bne.n	800819c <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8008174:	4974      	ldr	r1, [pc, #464]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8008176:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800817a:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800817e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8008182:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8008186:	4313      	orrs	r3, r2
 8008188:	6922      	ldr	r2, [r4, #16]
 800818a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800818e:	6962      	ldr	r2, [r4, #20]
 8008190:	0852      	lsrs	r2, r2, #1
 8008192:	3a01      	subs	r2, #1
 8008194:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008198:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800819c:	2301      	movs	r3, #1
 800819e:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80081a0:	f7fd fa0c 	bl	80055bc <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80081a4:	4e68      	ldr	r6, [pc, #416]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 80081a6:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80081a8:	6833      	ldr	r3, [r6, #0]
 80081aa:	0098      	lsls	r0, r3, #2
 80081ac:	d458      	bmi.n	8008260 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80081ae:	f7fd fa05 	bl	80055bc <HAL_GetTick>
 80081b2:	1b40      	subs	r0, r0, r5
 80081b4:	2802      	cmp	r0, #2
 80081b6:	d9f7      	bls.n	80081a8 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 80081b8:	e04d      	b.n	8008256 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 80081ba:	4d65      	ldr	r5, [pc, #404]	; (8008350 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80081bc:	4f62      	ldr	r7, [pc, #392]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 80081be:	2300      	movs	r3, #0
 80081c0:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80081c2:	f7fd f9fb 	bl	80055bc <HAL_GetTick>
 80081c6:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80081c8:	683b      	ldr	r3, [r7, #0]
 80081ca:	011b      	lsls	r3, r3, #4
 80081cc:	d43e      	bmi.n	800824c <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80081ce:	6821      	ldr	r1, [r4, #0]
 80081d0:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80081d2:	bf41      	itttt	mi
 80081d4:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80081d8:	071b      	lslmi	r3, r3, #28
 80081da:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80081de:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80081e2:	078a      	lsls	r2, r1, #30
 80081e4:	d515      	bpl.n	8008212 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80081e6:	4a58      	ldr	r2, [pc, #352]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80081e8:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80081ea:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80081ee:	6866      	ldr	r6, [r4, #4]
 80081f0:	061b      	lsls	r3, r3, #24
 80081f2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80081f6:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 80081fa:	4303      	orrs	r3, r0
 80081fc:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8008200:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8008204:	6a23      	ldr	r3, [r4, #32]
 8008206:	f020 001f 	bic.w	r0, r0, #31
 800820a:	3b01      	subs	r3, #1
 800820c:	4303      	orrs	r3, r0
 800820e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8008212:	064b      	lsls	r3, r1, #25
 8008214:	d50a      	bpl.n	800822c <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8008216:	68e3      	ldr	r3, [r4, #12]
 8008218:	6862      	ldr	r2, [r4, #4]
 800821a:	061b      	lsls	r3, r3, #24
 800821c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8008220:	68a2      	ldr	r2, [r4, #8]
 8008222:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8008226:	4a48      	ldr	r2, [pc, #288]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8008228:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800822c:	2301      	movs	r3, #1
 800822e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8008230:	f7fd f9c4 	bl	80055bc <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8008234:	4e44      	ldr	r6, [pc, #272]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 8008236:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8008238:	6833      	ldr	r3, [r6, #0]
 800823a:	011f      	lsls	r7, r3, #4
 800823c:	f53f af4a 	bmi.w	80080d4 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8008240:	f7fd f9bc 	bl	80055bc <HAL_GetTick>
 8008244:	1b40      	subs	r0, r0, r5
 8008246:	2802      	cmp	r0, #2
 8008248:	d9f6      	bls.n	8008238 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 800824a:	e004      	b.n	8008256 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800824c:	f7fd f9b6 	bl	80055bc <HAL_GetTick>
 8008250:	1b80      	subs	r0, r0, r6
 8008252:	2802      	cmp	r0, #2
 8008254:	d9b8      	bls.n	80081c8 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8008256:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8008258:	b003      	add	sp, #12
 800825a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800825c:	0618      	lsls	r0, r3, #24
 800825e:	d43d      	bmi.n	80082dc <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8008260:	6823      	ldr	r3, [r4, #0]
 8008262:	0699      	lsls	r1, r3, #26
 8008264:	d530      	bpl.n	80082c8 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 8008266:	2300      	movs	r3, #0
 8008268:	9301      	str	r3, [sp, #4]
 800826a:	4b37      	ldr	r3, [pc, #220]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 800826c:	4d39      	ldr	r5, [pc, #228]	; (8008354 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800826e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008270:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8008274:	641a      	str	r2, [r3, #64]	; 0x40
 8008276:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008278:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800827c:	9301      	str	r3, [sp, #4]
 800827e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8008280:	682b      	ldr	r3, [r5, #0]
 8008282:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008286:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8008288:	f7fd f998 	bl	80055bc <HAL_GetTick>
 800828c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800828e:	682b      	ldr	r3, [r5, #0]
 8008290:	05d9      	lsls	r1, r3, #23
 8008292:	d52f      	bpl.n	80082f4 <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8008294:	4d2c      	ldr	r5, [pc, #176]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8008296:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8008298:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800829c:	d130      	bne.n	8008300 <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800829e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80082a0:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80082a4:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80082a8:	4a27      	ldr	r2, [pc, #156]	; (8008348 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 80082aa:	d148      	bne.n	800833e <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 80082ac:	6891      	ldr	r1, [r2, #8]
 80082ae:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 80082b2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80082b6:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80082ba:	4301      	orrs	r1, r0
 80082bc:	6091      	str	r1, [r2, #8]
 80082be:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80082c0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80082c4:	430b      	orrs	r3, r1
 80082c6:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80082c8:	6820      	ldr	r0, [r4, #0]
 80082ca:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80082ce:	bf1f      	itttt	ne
 80082d0:	4b21      	ldrne	r3, [pc, #132]	; (8008358 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80082d2:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 80082d6:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 80082d8:	2000      	movne	r0, #0
 80082da:	e7bd      	b.n	8008258 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 80082dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80082de:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80082e2:	d1bd      	bne.n	8008260 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 80082e4:	e6fb      	b.n	80080de <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80082e6:	f7fd f969 	bl	80055bc <HAL_GetTick>
 80082ea:	1bc0      	subs	r0, r0, r7
 80082ec:	2802      	cmp	r0, #2
 80082ee:	f67f aefd 	bls.w	80080ec <HAL_RCCEx_PeriphCLKConfig+0x50>
 80082f2:	e7b0      	b.n	8008256 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80082f4:	f7fd f962 	bl	80055bc <HAL_GetTick>
 80082f8:	1b80      	subs	r0, r0, r6
 80082fa:	2802      	cmp	r0, #2
 80082fc:	d9c7      	bls.n	800828e <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 80082fe:	e7aa      	b.n	8008256 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8008300:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008302:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8008306:	4293      	cmp	r3, r2
 8008308:	d0c9      	beq.n	800829e <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800830a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800830c:	4a13      	ldr	r2, [pc, #76]	; (800835c <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800830e:	2101      	movs	r1, #1
 8008310:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008312:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8008316:	2100      	movs	r1, #0
 8008318:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800831a:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800831c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800831e:	07da      	lsls	r2, r3, #31
 8008320:	d5bd      	bpl.n	800829e <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 8008322:	f7fd f94b 	bl	80055bc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008326:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800832a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800832c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800832e:	079b      	lsls	r3, r3, #30
 8008330:	d4b5      	bmi.n	800829e <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008332:	f7fd f943 	bl	80055bc <HAL_GetTick>
 8008336:	1b80      	subs	r0, r0, r6
 8008338:	42b8      	cmp	r0, r7
 800833a:	d9f7      	bls.n	800832c <HAL_RCCEx_PeriphCLKConfig+0x290>
 800833c:	e78b      	b.n	8008256 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800833e:	6891      	ldr	r1, [r2, #8]
 8008340:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8008344:	e7ba      	b.n	80082bc <HAL_RCCEx_PeriphCLKConfig+0x220>
 8008346:	bf00      	nop
 8008348:	40023800 	.word	0x40023800
 800834c:	42470070 	.word	0x42470070
 8008350:	42470068 	.word	0x42470068
 8008354:	40007000 	.word	0x40007000
 8008358:	424711e0 	.word	0x424711e0
 800835c:	42470e40 	.word	0x42470e40

08008360 <HAL_RCC_OscConfig>:
  uint32_t tickstart = 0U;

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8008360:	6803      	ldr	r3, [r0, #0]
{
 8008362:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8008366:	07dd      	lsls	r5, r3, #31
{
 8008368:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800836a:	d410      	bmi.n	800838e <HAL_RCC_OscConfig+0x2e>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800836c:	6823      	ldr	r3, [r4, #0]
 800836e:	0798      	lsls	r0, r3, #30
 8008370:	d45e      	bmi.n	8008430 <HAL_RCC_OscConfig+0xd0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8008372:	6823      	ldr	r3, [r4, #0]
 8008374:	071a      	lsls	r2, r3, #28
 8008376:	f100 80a0 	bmi.w	80084ba <HAL_RCC_OscConfig+0x15a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800837a:	6823      	ldr	r3, [r4, #0]
 800837c:	075b      	lsls	r3, r3, #29
 800837e:	f100 80be 	bmi.w	80084fe <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8008382:	69a2      	ldr	r2, [r4, #24]
 8008384:	2a00      	cmp	r2, #0
 8008386:	f040 811f 	bne.w	80085c8 <HAL_RCC_OscConfig+0x268>
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 800838a:	2000      	movs	r0, #0
 800838c:	e015      	b.n	80083ba <HAL_RCC_OscConfig+0x5a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800838e:	4ba8      	ldr	r3, [pc, #672]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
 8008390:	689a      	ldr	r2, [r3, #8]
 8008392:	f002 020c 	and.w	r2, r2, #12
 8008396:	2a04      	cmp	r2, #4
 8008398:	d007      	beq.n	80083aa <HAL_RCC_OscConfig+0x4a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800839a:	689a      	ldr	r2, [r3, #8]
 800839c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 80083a0:	2a08      	cmp	r2, #8
 80083a2:	d10d      	bne.n	80083c0 <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80083a4:	685a      	ldr	r2, [r3, #4]
 80083a6:	0251      	lsls	r1, r2, #9
 80083a8:	d50a      	bpl.n	80083c0 <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80083aa:	4ba1      	ldr	r3, [pc, #644]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
 80083ac:	681b      	ldr	r3, [r3, #0]
 80083ae:	039a      	lsls	r2, r3, #14
 80083b0:	d5dc      	bpl.n	800836c <HAL_RCC_OscConfig+0xc>
 80083b2:	6863      	ldr	r3, [r4, #4]
 80083b4:	2b00      	cmp	r3, #0
 80083b6:	d1d9      	bne.n	800836c <HAL_RCC_OscConfig+0xc>
        return HAL_ERROR;
 80083b8:	2001      	movs	r0, #1
}
 80083ba:	b002      	add	sp, #8
 80083bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80083c0:	6862      	ldr	r2, [r4, #4]
 80083c2:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80083c6:	d111      	bne.n	80083ec <HAL_RCC_OscConfig+0x8c>
 80083c8:	681a      	ldr	r2, [r3, #0]
 80083ca:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80083ce:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80083d0:	f7fd f8f4 	bl	80055bc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80083d4:	4e96      	ldr	r6, [pc, #600]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 80083d6:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80083d8:	6833      	ldr	r3, [r6, #0]
 80083da:	039b      	lsls	r3, r3, #14
 80083dc:	d4c6      	bmi.n	800836c <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80083de:	f7fd f8ed 	bl	80055bc <HAL_GetTick>
 80083e2:	1b40      	subs	r0, r0, r5
 80083e4:	2864      	cmp	r0, #100	; 0x64
 80083e6:	d9f7      	bls.n	80083d8 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80083e8:	2003      	movs	r0, #3
 80083ea:	e7e6      	b.n	80083ba <HAL_RCC_OscConfig+0x5a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80083ec:	4d90      	ldr	r5, [pc, #576]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
 80083ee:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80083f2:	682b      	ldr	r3, [r5, #0]
 80083f4:	d107      	bne.n	8008406 <HAL_RCC_OscConfig+0xa6>
 80083f6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80083fa:	602b      	str	r3, [r5, #0]
 80083fc:	682b      	ldr	r3, [r5, #0]
 80083fe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008402:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8008404:	e7e4      	b.n	80083d0 <HAL_RCC_OscConfig+0x70>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008406:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800840a:	602b      	str	r3, [r5, #0]
 800840c:	682b      	ldr	r3, [r5, #0]
 800840e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008412:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8008414:	2a00      	cmp	r2, #0
 8008416:	d1db      	bne.n	80083d0 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8008418:	f7fd f8d0 	bl	80055bc <HAL_GetTick>
 800841c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800841e:	682b      	ldr	r3, [r5, #0]
 8008420:	039f      	lsls	r7, r3, #14
 8008422:	d5a3      	bpl.n	800836c <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008424:	f7fd f8ca 	bl	80055bc <HAL_GetTick>
 8008428:	1b80      	subs	r0, r0, r6
 800842a:	2864      	cmp	r0, #100	; 0x64
 800842c:	d9f7      	bls.n	800841e <HAL_RCC_OscConfig+0xbe>
 800842e:	e7db      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8008430:	4b7f      	ldr	r3, [pc, #508]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
 8008432:	689a      	ldr	r2, [r3, #8]
 8008434:	f012 0f0c 	tst.w	r2, #12
 8008438:	d007      	beq.n	800844a <HAL_RCC_OscConfig+0xea>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800843a:	689a      	ldr	r2, [r3, #8]
 800843c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8008440:	2a08      	cmp	r2, #8
 8008442:	d111      	bne.n	8008468 <HAL_RCC_OscConfig+0x108>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8008444:	685b      	ldr	r3, [r3, #4]
 8008446:	025e      	lsls	r6, r3, #9
 8008448:	d40e      	bmi.n	8008468 <HAL_RCC_OscConfig+0x108>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800844a:	4b79      	ldr	r3, [pc, #484]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
 800844c:	681a      	ldr	r2, [r3, #0]
 800844e:	0795      	lsls	r5, r2, #30
 8008450:	d502      	bpl.n	8008458 <HAL_RCC_OscConfig+0xf8>
 8008452:	68e2      	ldr	r2, [r4, #12]
 8008454:	2a01      	cmp	r2, #1
 8008456:	d1af      	bne.n	80083b8 <HAL_RCC_OscConfig+0x58>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008458:	681a      	ldr	r2, [r3, #0]
 800845a:	6921      	ldr	r1, [r4, #16]
 800845c:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8008460:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8008464:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008466:	e784      	b.n	8008372 <HAL_RCC_OscConfig+0x12>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8008468:	68e2      	ldr	r2, [r4, #12]
 800846a:	4b72      	ldr	r3, [pc, #456]	; (8008634 <HAL_RCC_OscConfig+0x2d4>)
 800846c:	b1b2      	cbz	r2, 800849c <HAL_RCC_OscConfig+0x13c>
        __HAL_RCC_HSI_ENABLE();
 800846e:	2201      	movs	r2, #1
 8008470:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008472:	f7fd f8a3 	bl	80055bc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008476:	4d6e      	ldr	r5, [pc, #440]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8008478:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800847a:	682b      	ldr	r3, [r5, #0]
 800847c:	0798      	lsls	r0, r3, #30
 800847e:	d507      	bpl.n	8008490 <HAL_RCC_OscConfig+0x130>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008480:	682b      	ldr	r3, [r5, #0]
 8008482:	6922      	ldr	r2, [r4, #16]
 8008484:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008488:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800848c:	602b      	str	r3, [r5, #0]
 800848e:	e770      	b.n	8008372 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008490:	f7fd f894 	bl	80055bc <HAL_GetTick>
 8008494:	1b80      	subs	r0, r0, r6
 8008496:	2802      	cmp	r0, #2
 8008498:	d9ef      	bls.n	800847a <HAL_RCC_OscConfig+0x11a>
 800849a:	e7a5      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800849c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800849e:	f7fd f88d 	bl	80055bc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80084a2:	4e63      	ldr	r6, [pc, #396]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 80084a4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80084a6:	6833      	ldr	r3, [r6, #0]
 80084a8:	0799      	lsls	r1, r3, #30
 80084aa:	f57f af62 	bpl.w	8008372 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80084ae:	f7fd f885 	bl	80055bc <HAL_GetTick>
 80084b2:	1b40      	subs	r0, r0, r5
 80084b4:	2802      	cmp	r0, #2
 80084b6:	d9f6      	bls.n	80084a6 <HAL_RCC_OscConfig+0x146>
 80084b8:	e796      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80084ba:	6962      	ldr	r2, [r4, #20]
 80084bc:	4b5e      	ldr	r3, [pc, #376]	; (8008638 <HAL_RCC_OscConfig+0x2d8>)
 80084be:	b17a      	cbz	r2, 80084e0 <HAL_RCC_OscConfig+0x180>
      __HAL_RCC_LSI_ENABLE();
 80084c0:	2201      	movs	r2, #1
 80084c2:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 80084c4:	f7fd f87a 	bl	80055bc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80084c8:	4e59      	ldr	r6, [pc, #356]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 80084ca:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80084cc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80084ce:	079f      	lsls	r7, r3, #30
 80084d0:	f53f af53 	bmi.w	800837a <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80084d4:	f7fd f872 	bl	80055bc <HAL_GetTick>
 80084d8:	1b40      	subs	r0, r0, r5
 80084da:	2802      	cmp	r0, #2
 80084dc:	d9f6      	bls.n	80084cc <HAL_RCC_OscConfig+0x16c>
 80084de:	e783      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80084e0:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 80084e2:	f7fd f86b 	bl	80055bc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80084e6:	4e52      	ldr	r6, [pc, #328]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 80084e8:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80084ea:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80084ec:	0798      	lsls	r0, r3, #30
 80084ee:	f57f af44 	bpl.w	800837a <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80084f2:	f7fd f863 	bl	80055bc <HAL_GetTick>
 80084f6:	1b40      	subs	r0, r0, r5
 80084f8:	2802      	cmp	r0, #2
 80084fa:	d9f6      	bls.n	80084ea <HAL_RCC_OscConfig+0x18a>
 80084fc:	e774      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80084fe:	4b4c      	ldr	r3, [pc, #304]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
 8008500:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008502:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8008506:	d128      	bne.n	800855a <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 8008508:	9201      	str	r2, [sp, #4]
 800850a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800850c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8008510:	641a      	str	r2, [r3, #64]	; 0x40
 8008512:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008514:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008518:	9301      	str	r3, [sp, #4]
 800851a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800851c:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800851e:	4d47      	ldr	r5, [pc, #284]	; (800863c <HAL_RCC_OscConfig+0x2dc>)
 8008520:	682b      	ldr	r3, [r5, #0]
 8008522:	05d9      	lsls	r1, r3, #23
 8008524:	d51b      	bpl.n	800855e <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008526:	68a3      	ldr	r3, [r4, #8]
 8008528:	4d41      	ldr	r5, [pc, #260]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
 800852a:	2b01      	cmp	r3, #1
 800852c:	d127      	bne.n	800857e <HAL_RCC_OscConfig+0x21e>
 800852e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008530:	f043 0301 	orr.w	r3, r3, #1
 8008534:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8008536:	f7fd f841 	bl	80055bc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800853a:	4e3d      	ldr	r6, [pc, #244]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800853c:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800853e:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008542:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8008544:	079b      	lsls	r3, r3, #30
 8008546:	d539      	bpl.n	80085bc <HAL_RCC_OscConfig+0x25c>
    if(pwrclkchanged == SET)
 8008548:	2f00      	cmp	r7, #0
 800854a:	f43f af1a 	beq.w	8008382 <HAL_RCC_OscConfig+0x22>
      __HAL_RCC_PWR_CLK_DISABLE();
 800854e:	4a38      	ldr	r2, [pc, #224]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
 8008550:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8008552:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008556:	6413      	str	r3, [r2, #64]	; 0x40
 8008558:	e713      	b.n	8008382 <HAL_RCC_OscConfig+0x22>
    FlagStatus       pwrclkchanged = RESET;
 800855a:	2700      	movs	r7, #0
 800855c:	e7df      	b.n	800851e <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800855e:	682b      	ldr	r3, [r5, #0]
 8008560:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008564:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8008566:	f7fd f829 	bl	80055bc <HAL_GetTick>
 800856a:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800856c:	682b      	ldr	r3, [r5, #0]
 800856e:	05da      	lsls	r2, r3, #23
 8008570:	d4d9      	bmi.n	8008526 <HAL_RCC_OscConfig+0x1c6>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008572:	f7fd f823 	bl	80055bc <HAL_GetTick>
 8008576:	1b80      	subs	r0, r0, r6
 8008578:	2802      	cmp	r0, #2
 800857a:	d9f7      	bls.n	800856c <HAL_RCC_OscConfig+0x20c>
 800857c:	e734      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800857e:	2b05      	cmp	r3, #5
 8008580:	d104      	bne.n	800858c <HAL_RCC_OscConfig+0x22c>
 8008582:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008584:	f043 0304 	orr.w	r3, r3, #4
 8008588:	672b      	str	r3, [r5, #112]	; 0x70
 800858a:	e7d0      	b.n	800852e <HAL_RCC_OscConfig+0x1ce>
 800858c:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800858e:	f022 0201 	bic.w	r2, r2, #1
 8008592:	672a      	str	r2, [r5, #112]	; 0x70
 8008594:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8008596:	f022 0204 	bic.w	r2, r2, #4
 800859a:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800859c:	2b00      	cmp	r3, #0
 800859e:	d1ca      	bne.n	8008536 <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 80085a0:	f7fd f80c 	bl	80055bc <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80085a4:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80085a8:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80085aa:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80085ac:	0798      	lsls	r0, r3, #30
 80085ae:	d5cb      	bpl.n	8008548 <HAL_RCC_OscConfig+0x1e8>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80085b0:	f7fd f804 	bl	80055bc <HAL_GetTick>
 80085b4:	1b80      	subs	r0, r0, r6
 80085b6:	4540      	cmp	r0, r8
 80085b8:	d9f7      	bls.n	80085aa <HAL_RCC_OscConfig+0x24a>
 80085ba:	e715      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80085bc:	f7fc fffe 	bl	80055bc <HAL_GetTick>
 80085c0:	1b40      	subs	r0, r0, r5
 80085c2:	4540      	cmp	r0, r8
 80085c4:	d9bd      	bls.n	8008542 <HAL_RCC_OscConfig+0x1e2>
 80085c6:	e70f      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80085c8:	4d19      	ldr	r5, [pc, #100]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
 80085ca:	68ab      	ldr	r3, [r5, #8]
 80085cc:	f003 030c 	and.w	r3, r3, #12
 80085d0:	2b08      	cmp	r3, #8
 80085d2:	f43f aef1 	beq.w	80083b8 <HAL_RCC_OscConfig+0x58>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80085d6:	4e1a      	ldr	r6, [pc, #104]	; (8008640 <HAL_RCC_OscConfig+0x2e0>)
 80085d8:	2300      	movs	r3, #0
 80085da:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
 80085dc:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80085de:	d137      	bne.n	8008650 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 80085e0:	f7fc ffec 	bl	80055bc <HAL_GetTick>
 80085e4:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80085e6:	682b      	ldr	r3, [r5, #0]
 80085e8:	0199      	lsls	r1, r3, #6
 80085ea:	d42b      	bmi.n	8008644 <HAL_RCC_OscConfig+0x2e4>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80085ec:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80085f0:	4313      	orrs	r3, r2
 80085f2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80085f4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80085f8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80085fa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80085fe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008600:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8008604:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8008606:	0852      	lsrs	r2, r2, #1
 8008608:	3a01      	subs	r2, #1
 800860a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800860e:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8008610:	2301      	movs	r3, #1
 8008612:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8008614:	f7fc ffd2 	bl	80055bc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008618:	4d05      	ldr	r5, [pc, #20]	; (8008630 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800861a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800861c:	682b      	ldr	r3, [r5, #0]
 800861e:	019a      	lsls	r2, r3, #6
 8008620:	f53f aeb3 	bmi.w	800838a <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008624:	f7fc ffca 	bl	80055bc <HAL_GetTick>
 8008628:	1b00      	subs	r0, r0, r4
 800862a:	2802      	cmp	r0, #2
 800862c:	d9f6      	bls.n	800861c <HAL_RCC_OscConfig+0x2bc>
 800862e:	e6db      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
 8008630:	40023800 	.word	0x40023800
 8008634:	42470000 	.word	0x42470000
 8008638:	42470e80 	.word	0x42470e80
 800863c:	40007000 	.word	0x40007000
 8008640:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008644:	f7fc ffba 	bl	80055bc <HAL_GetTick>
 8008648:	1bc0      	subs	r0, r0, r7
 800864a:	2802      	cmp	r0, #2
 800864c:	d9cb      	bls.n	80085e6 <HAL_RCC_OscConfig+0x286>
 800864e:	e6cb      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8008650:	f7fc ffb4 	bl	80055bc <HAL_GetTick>
 8008654:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008656:	682b      	ldr	r3, [r5, #0]
 8008658:	019b      	lsls	r3, r3, #6
 800865a:	f57f ae96 	bpl.w	800838a <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800865e:	f7fc ffad 	bl	80055bc <HAL_GetTick>
 8008662:	1b00      	subs	r0, r0, r4
 8008664:	2802      	cmp	r0, #2
 8008666:	d9f6      	bls.n	8008656 <HAL_RCC_OscConfig+0x2f6>
 8008668:	e6be      	b.n	80083e8 <HAL_RCC_OscConfig+0x88>
 800866a:	bf00      	nop

0800866c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800866c:	b538      	push	{r3, r4, r5, lr}
 800866e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8008670:	4604      	mov	r4, r0
 8008672:	b1c8      	cbz	r0, 80086a8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8008674:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008678:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800867c:	b91b      	cbnz	r3, 8008686 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800867e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8008682:	f7f9 fc3f 	bl	8001f04 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008686:	2302      	movs	r3, #2
 8008688:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800868c:	1d21      	adds	r1, r4, #4
 800868e:	6820      	ldr	r0, [r4, #0]
 8008690:	f000 f97c 	bl	800898c <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8008694:	6862      	ldr	r2, [r4, #4]
 8008696:	6820      	ldr	r0, [r4, #0]
 8008698:	4629      	mov	r1, r5
 800869a:	f000 f9ad 	bl	80089f8 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800869e:	2301      	movs	r3, #1
 80086a0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80086a4:	2000      	movs	r0, #0
}
 80086a6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80086a8:	2001      	movs	r0, #1
 80086aa:	e7fc      	b.n	80086a6 <HAL_SDRAM_Init+0x3a>

080086ac <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 80086ac:	b510      	push	{r4, lr}
 80086ae:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 80086b0:	f7f9 fc9e 	bl	8001ff0 <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 80086b4:	e9d4 0100 	ldrd	r0, r1, [r4]
 80086b8:	f000 f9da 	bl	8008a70 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 80086bc:	2000      	movs	r0, #0
 80086be:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 80086c2:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 80086c6:	bd10      	pop	{r4, pc}

080086c8 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80086c8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80086ca:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80086ce:	2b02      	cmp	r3, #2
{
 80086d0:	4604      	mov	r4, r0
 80086d2:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80086d4:	b2d8      	uxtb	r0, r3
 80086d6:	d00d      	beq.n	80086f4 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80086d8:	2302      	movs	r3, #2
 80086da:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80086de:	6820      	ldr	r0, [r4, #0]
 80086e0:	f000 f9d5 	bl	8008a8e <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80086e4:	682b      	ldr	r3, [r5, #0]
 80086e6:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80086e8:	bf0c      	ite	eq
 80086ea:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80086ec:	2301      	movne	r3, #1
 80086ee:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 80086f2:	2000      	movs	r0, #0
}
 80086f4:	bd38      	pop	{r3, r4, r5, pc}

080086f6 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80086f6:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80086f8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80086fc:	2b02      	cmp	r3, #2
{
 80086fe:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008700:	b2d8      	uxtb	r0, r3
 8008702:	d009      	beq.n	8008718 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008704:	2302      	movs	r3, #2
 8008706:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800870a:	6820      	ldr	r0, [r4, #0]
 800870c:	f000 f9e6 	bl	8008adc <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8008710:	2301      	movs	r3, #1
 8008712:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8008716:	2000      	movs	r0, #0
}
 8008718:	bd10      	pop	{r4, pc}

0800871a <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800871a:	4770      	bx	lr

0800871c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800871c:	6803      	ldr	r3, [r0, #0]
 800871e:	68da      	ldr	r2, [r3, #12]
 8008720:	f042 0201 	orr.w	r2, r2, #1
 8008724:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008726:	689a      	ldr	r2, [r3, #8]
 8008728:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800872c:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 800872e:	bf1e      	ittt	ne
 8008730:	681a      	ldrne	r2, [r3, #0]
 8008732:	f042 0201 	orrne.w	r2, r2, #1
 8008736:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8008738:	2000      	movs	r0, #0
 800873a:	4770      	bx	lr

0800873c <HAL_TIM_OC_DelayElapsedCallback>:
 800873c:	4770      	bx	lr

0800873e <HAL_TIM_IC_CaptureCallback>:
 800873e:	4770      	bx	lr

08008740 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008740:	4770      	bx	lr

08008742 <HAL_TIM_TriggerCallback>:
 8008742:	4770      	bx	lr

08008744 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008744:	6803      	ldr	r3, [r0, #0]
 8008746:	691a      	ldr	r2, [r3, #16]
 8008748:	0791      	lsls	r1, r2, #30
{
 800874a:	b510      	push	{r4, lr}
 800874c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800874e:	d50e      	bpl.n	800876e <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8008750:	68da      	ldr	r2, [r3, #12]
 8008752:	0792      	lsls	r2, r2, #30
 8008754:	d50b      	bpl.n	800876e <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8008756:	f06f 0202 	mvn.w	r2, #2
 800875a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800875c:	2201      	movs	r2, #1
 800875e:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8008760:	699b      	ldr	r3, [r3, #24]
 8008762:	079b      	lsls	r3, r3, #30
 8008764:	d077      	beq.n	8008856 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8008766:	f7ff ffea 	bl	800873e <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800876a:	2300      	movs	r3, #0
 800876c:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800876e:	6823      	ldr	r3, [r4, #0]
 8008770:	691a      	ldr	r2, [r3, #16]
 8008772:	0750      	lsls	r0, r2, #29
 8008774:	d510      	bpl.n	8008798 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8008776:	68da      	ldr	r2, [r3, #12]
 8008778:	0751      	lsls	r1, r2, #29
 800877a:	d50d      	bpl.n	8008798 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800877c:	f06f 0204 	mvn.w	r2, #4
 8008780:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8008782:	2202      	movs	r2, #2
 8008784:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008786:	699b      	ldr	r3, [r3, #24]
 8008788:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800878c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800878e:	d068      	beq.n	8008862 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8008790:	f7ff ffd5 	bl	800873e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008794:	2300      	movs	r3, #0
 8008796:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8008798:	6823      	ldr	r3, [r4, #0]
 800879a:	691a      	ldr	r2, [r3, #16]
 800879c:	0712      	lsls	r2, r2, #28
 800879e:	d50f      	bpl.n	80087c0 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80087a0:	68da      	ldr	r2, [r3, #12]
 80087a2:	0710      	lsls	r0, r2, #28
 80087a4:	d50c      	bpl.n	80087c0 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80087a6:	f06f 0208 	mvn.w	r2, #8
 80087aa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80087ac:	2204      	movs	r2, #4
 80087ae:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80087b0:	69db      	ldr	r3, [r3, #28]
 80087b2:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80087b4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80087b6:	d05a      	beq.n	800886e <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80087b8:	f7ff ffc1 	bl	800873e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80087bc:	2300      	movs	r3, #0
 80087be:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80087c0:	6823      	ldr	r3, [r4, #0]
 80087c2:	691a      	ldr	r2, [r3, #16]
 80087c4:	06d2      	lsls	r2, r2, #27
 80087c6:	d510      	bpl.n	80087ea <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80087c8:	68da      	ldr	r2, [r3, #12]
 80087ca:	06d0      	lsls	r0, r2, #27
 80087cc:	d50d      	bpl.n	80087ea <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80087ce:	f06f 0210 	mvn.w	r2, #16
 80087d2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80087d4:	2208      	movs	r2, #8
 80087d6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80087d8:	69db      	ldr	r3, [r3, #28]
 80087da:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80087de:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80087e0:	d04b      	beq.n	800887a <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 80087e2:	f7ff ffac 	bl	800873e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80087e6:	2300      	movs	r3, #0
 80087e8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80087ea:	6823      	ldr	r3, [r4, #0]
 80087ec:	691a      	ldr	r2, [r3, #16]
 80087ee:	07d1      	lsls	r1, r2, #31
 80087f0:	d508      	bpl.n	8008804 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80087f2:	68da      	ldr	r2, [r3, #12]
 80087f4:	07d2      	lsls	r2, r2, #31
 80087f6:	d505      	bpl.n	8008804 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80087f8:	f06f 0201 	mvn.w	r2, #1
 80087fc:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80087fe:	4620      	mov	r0, r4
 8008800:	f7f9 f988 	bl	8001b14 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008804:	6823      	ldr	r3, [r4, #0]
 8008806:	691a      	ldr	r2, [r3, #16]
 8008808:	0610      	lsls	r0, r2, #24
 800880a:	d508      	bpl.n	800881e <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800880c:	68da      	ldr	r2, [r3, #12]
 800880e:	0611      	lsls	r1, r2, #24
 8008810:	d505      	bpl.n	800881e <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008812:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008816:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008818:	4620      	mov	r0, r4
 800881a:	f000 f8b6 	bl	800898a <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800881e:	6823      	ldr	r3, [r4, #0]
 8008820:	691a      	ldr	r2, [r3, #16]
 8008822:	0652      	lsls	r2, r2, #25
 8008824:	d508      	bpl.n	8008838 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008826:	68da      	ldr	r2, [r3, #12]
 8008828:	0650      	lsls	r0, r2, #25
 800882a:	d505      	bpl.n	8008838 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800882c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008830:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008832:	4620      	mov	r0, r4
 8008834:	f7ff ff85 	bl	8008742 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8008838:	6823      	ldr	r3, [r4, #0]
 800883a:	691a      	ldr	r2, [r3, #16]
 800883c:	0691      	lsls	r1, r2, #26
 800883e:	d522      	bpl.n	8008886 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8008840:	68da      	ldr	r2, [r3, #12]
 8008842:	0692      	lsls	r2, r2, #26
 8008844:	d51f      	bpl.n	8008886 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008846:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800884a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800884c:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800884e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8008852:	f000 b899 	b.w	8008988 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8008856:	f7ff ff71 	bl	800873c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800885a:	4620      	mov	r0, r4
 800885c:	f7ff ff70 	bl	8008740 <HAL_TIM_PWM_PulseFinishedCallback>
 8008860:	e783      	b.n	800876a <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008862:	f7ff ff6b 	bl	800873c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008866:	4620      	mov	r0, r4
 8008868:	f7ff ff6a 	bl	8008740 <HAL_TIM_PWM_PulseFinishedCallback>
 800886c:	e792      	b.n	8008794 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800886e:	f7ff ff65 	bl	800873c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008872:	4620      	mov	r0, r4
 8008874:	f7ff ff64 	bl	8008740 <HAL_TIM_PWM_PulseFinishedCallback>
 8008878:	e7a0      	b.n	80087bc <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800887a:	f7ff ff5f 	bl	800873c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800887e:	4620      	mov	r0, r4
 8008880:	f7ff ff5e 	bl	8008740 <HAL_TIM_PWM_PulseFinishedCallback>
 8008884:	e7af      	b.n	80087e6 <HAL_TIM_IRQHandler+0xa2>
}
 8008886:	bd10      	pop	{r4, pc}

08008888 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8008888:	4a30      	ldr	r2, [pc, #192]	; (800894c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800888a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800888c:	4290      	cmp	r0, r2
 800888e:	d012      	beq.n	80088b6 <TIM_Base_SetConfig+0x2e>
 8008890:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008894:	d00f      	beq.n	80088b6 <TIM_Base_SetConfig+0x2e>
 8008896:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800889a:	4290      	cmp	r0, r2
 800889c:	d00b      	beq.n	80088b6 <TIM_Base_SetConfig+0x2e>
 800889e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80088a2:	4290      	cmp	r0, r2
 80088a4:	d007      	beq.n	80088b6 <TIM_Base_SetConfig+0x2e>
 80088a6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80088aa:	4290      	cmp	r0, r2
 80088ac:	d003      	beq.n	80088b6 <TIM_Base_SetConfig+0x2e>
 80088ae:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80088b2:	4290      	cmp	r0, r2
 80088b4:	d119      	bne.n	80088ea <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80088b6:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80088b8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80088bc:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80088be:	4a23      	ldr	r2, [pc, #140]	; (800894c <TIM_Base_SetConfig+0xc4>)
 80088c0:	4290      	cmp	r0, r2
 80088c2:	d029      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 80088c4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80088c8:	d026      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 80088ca:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80088ce:	4290      	cmp	r0, r2
 80088d0:	d022      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 80088d2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80088d6:	4290      	cmp	r0, r2
 80088d8:	d01e      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 80088da:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80088de:	4290      	cmp	r0, r2
 80088e0:	d01a      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 80088e2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80088e6:	4290      	cmp	r0, r2
 80088e8:	d016      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 80088ea:	4a19      	ldr	r2, [pc, #100]	; (8008950 <TIM_Base_SetConfig+0xc8>)
 80088ec:	4290      	cmp	r0, r2
 80088ee:	d013      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 80088f0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80088f4:	4290      	cmp	r0, r2
 80088f6:	d00f      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 80088f8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80088fc:	4290      	cmp	r0, r2
 80088fe:	d00b      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 8008900:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008904:	4290      	cmp	r0, r2
 8008906:	d007      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 8008908:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800890c:	4290      	cmp	r0, r2
 800890e:	d003      	beq.n	8008918 <TIM_Base_SetConfig+0x90>
 8008910:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008914:	4290      	cmp	r0, r2
 8008916:	d103      	bne.n	8008920 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008918:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800891a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800891e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008920:	694a      	ldr	r2, [r1, #20]
 8008922:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008926:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008928:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800892a:	688b      	ldr	r3, [r1, #8]
 800892c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800892e:	680b      	ldr	r3, [r1, #0]
 8008930:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008932:	4b06      	ldr	r3, [pc, #24]	; (800894c <TIM_Base_SetConfig+0xc4>)
 8008934:	4298      	cmp	r0, r3
 8008936:	d003      	beq.n	8008940 <TIM_Base_SetConfig+0xb8>
 8008938:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800893c:	4298      	cmp	r0, r3
 800893e:	d101      	bne.n	8008944 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008940:	690b      	ldr	r3, [r1, #16]
 8008942:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008944:	2301      	movs	r3, #1
 8008946:	6143      	str	r3, [r0, #20]
}
 8008948:	4770      	bx	lr
 800894a:	bf00      	nop
 800894c:	40010000 	.word	0x40010000
 8008950:	40014000 	.word	0x40014000

08008954 <HAL_TIM_Base_Init>:
{
 8008954:	b510      	push	{r4, lr}
  if (htim == NULL)
 8008956:	4604      	mov	r4, r0
 8008958:	b1a0      	cbz	r0, 8008984 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800895a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800895e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008962:	b91b      	cbnz	r3, 800896c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8008964:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008968:	f7ff fed7 	bl	800871a <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800896c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800896e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8008970:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008974:	1d21      	adds	r1, r4, #4
 8008976:	f7ff ff87 	bl	8008888 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800897a:	2301      	movs	r3, #1
 800897c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8008980:	2000      	movs	r0, #0
}
 8008982:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008984:	2001      	movs	r0, #1
 8008986:	e7fc      	b.n	8008982 <HAL_TIM_Base_Init+0x2e>

08008988 <HAL_TIMEx_CommutCallback>:
 8008988:	4770      	bx	lr

0800898a <HAL_TIMEx_BreakCallback>:
 800898a:	4770      	bx	lr

0800898c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800898c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008990:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8008992:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8008996:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800899a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800899e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80089a2:	6809      	ldr	r1, [r1, #0]
 80089a4:	2901      	cmp	r1, #1
 80089a6:	ea43 0304 	orr.w	r3, r3, r4
 80089aa:	4912      	ldr	r1, [pc, #72]	; (80089f4 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80089ac:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80089ae:	d00f      	beq.n	80089d0 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80089b0:	431a      	orrs	r2, r3
 80089b2:	432a      	orrs	r2, r5
 80089b4:	ea42 0308 	orr.w	r3, r2, r8
 80089b8:	ea43 030e 	orr.w	r3, r3, lr
 80089bc:	ea43 030c 	orr.w	r3, r3, ip
 80089c0:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80089c2:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80089c4:	4333      	orrs	r3, r6
 80089c6:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80089c8:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80089ca:	2000      	movs	r0, #0
 80089cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80089d0:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80089d2:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80089d4:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80089d6:	ea45 0208 	orr.w	r2, r5, r8
 80089da:	ea42 020e 	orr.w	r2, r2, lr
 80089de:	ea42 020c 	orr.w	r2, r2, ip
 80089e2:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80089e4:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80089e8:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80089ea:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80089ec:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80089ee:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80089f0:	6042      	str	r2, [r0, #4]
 80089f2:	e7ea      	b.n	80089ca <FMC_SDRAM_Init+0x3e>
 80089f4:	ffff8000 	.word	0xffff8000

080089f8 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 80089f8:	68cb      	ldr	r3, [r1, #12]
{
 80089fa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80089fc:	680c      	ldr	r4, [r1, #0]
 80089fe:	688e      	ldr	r6, [r1, #8]
 8008a00:	690d      	ldr	r5, [r1, #16]
 8008a02:	1e5f      	subs	r7, r3, #1
 8008a04:	694b      	ldr	r3, [r1, #20]
 8008a06:	f104 3cff 	add.w	ip, r4, #4294967295
 8008a0a:	684c      	ldr	r4, [r1, #4]
 8008a0c:	6989      	ldr	r1, [r1, #24]
 8008a0e:	3b01      	subs	r3, #1
 8008a10:	051b      	lsls	r3, r3, #20
 8008a12:	3c01      	subs	r4, #1
 8008a14:	3e01      	subs	r6, #1
 8008a16:	3d01      	subs	r5, #1
 8008a18:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8008a1a:	2a01      	cmp	r2, #1
 8008a1c:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8008a20:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8008a24:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8008a28:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8008a2c:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8008a30:	d00c      	beq.n	8008a4c <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008a32:	ea43 030c 	orr.w	r3, r3, ip
 8008a36:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008a38:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008a3a:	4333      	orrs	r3, r6
 8008a3c:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008a3e:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008a42:	430b      	orrs	r3, r1
 8008a44:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008a46:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8008a48:	2000      	movs	r0, #0
 8008a4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008a4c:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8008a4e:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8008a52:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008a56:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008a58:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008a5a:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008a5e:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008a60:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008a62:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008a64:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008a68:	430a      	orrs	r2, r1
 8008a6a:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008a6c:	60c2      	str	r2, [r0, #12]
 8008a6e:	e7eb      	b.n	8008a48 <FMC_SDRAM_Timing_Init+0x50>

08008a70 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8008a70:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8008a74:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8008a78:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 8008a7c:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8008a80:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8008a82:	2300      	movs	r3, #0
 8008a84:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8008a86:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8008a88:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8008a8a:	4618      	mov	r0, r3
 8008a8c:	4770      	bx	lr

08008a8e <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008a8e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8008a90:	2300      	movs	r3, #0
 8008a92:	9301      	str	r3, [sp, #4]
{
 8008a94:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008a96:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008a9a:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008a9c:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008a9e:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8008aa2:	688a      	ldr	r2, [r1, #8]
 8008aa4:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008aa6:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008aaa:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008aac:	9b01      	ldr	r3, [sp, #4]
 8008aae:	6103      	str	r3, [r0, #16]
{
 8008ab0:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8008ab2:	f7fc fd83 	bl	80055bc <HAL_GetTick>
 8008ab6:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8008ab8:	69a3      	ldr	r3, [r4, #24]
 8008aba:	f013 0320 	ands.w	r3, r3, #32
 8008abe:	d101      	bne.n	8008ac4 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8008ac0:	4618      	mov	r0, r3
 8008ac2:	e003      	b.n	8008acc <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8008ac4:	1c6b      	adds	r3, r5, #1
 8008ac6:	d0f7      	beq.n	8008ab8 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008ac8:	b915      	cbnz	r5, 8008ad0 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8008aca:	2003      	movs	r0, #3
}
 8008acc:	b002      	add	sp, #8
 8008ace:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008ad0:	f7fc fd74 	bl	80055bc <HAL_GetTick>
 8008ad4:	1b80      	subs	r0, r0, r6
 8008ad6:	42a8      	cmp	r0, r5
 8008ad8:	d9ee      	bls.n	8008ab8 <FMC_SDRAM_SendCommand+0x2a>
 8008ada:	e7f6      	b.n	8008aca <FMC_SDRAM_SendCommand+0x3c>

08008adc <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8008adc:	6943      	ldr	r3, [r0, #20]
 8008ade:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8008ae2:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8008ae4:	2000      	movs	r0, #0
 8008ae6:	4770      	bx	lr

08008ae8 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008ae8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008aec:	b113      	cbz	r3, 8008af4 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8008aee:	f06f 0005 	mvn.w	r0, #5
 8008af2:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008af4:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008af8:	4b07      	ldr	r3, [pc, #28]	; (8008b18 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8008afa:	b912      	cbnz	r2, 8008b02 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008afc:	f3ef 8211 	mrs	r2, BASEPRI
 8008b00:	b112      	cbz	r2, 8008b08 <osKernelInitialize+0x20>
 8008b02:	681a      	ldr	r2, [r3, #0]
 8008b04:	2a02      	cmp	r2, #2
 8008b06:	d0f2      	beq.n	8008aee <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8008b08:	6818      	ldr	r0, [r3, #0]
 8008b0a:	b910      	cbnz	r0, 8008b12 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008b0c:	2201      	movs	r2, #1
 8008b0e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008b10:	4770      	bx	lr
    } else {
      stat = osError;
 8008b12:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008b16:	4770      	bx	lr
 8008b18:	20005928 	.word	0x20005928

08008b1c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8008b1c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008b1e:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008b22:	b113      	cbz	r3, 8008b2a <osKernelStart+0xe>
    stat = osErrorISR;
 8008b24:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8008b28:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008b2a:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008b2e:	4b0a      	ldr	r3, [pc, #40]	; (8008b58 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8008b30:	b912      	cbnz	r2, 8008b38 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008b32:	f3ef 8211 	mrs	r2, BASEPRI
 8008b36:	b112      	cbz	r2, 8008b3e <osKernelStart+0x22>
 8008b38:	681a      	ldr	r2, [r3, #0]
 8008b3a:	2a02      	cmp	r2, #2
 8008b3c:	d0f2      	beq.n	8008b24 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8008b3e:	681a      	ldr	r2, [r3, #0]
 8008b40:	2a01      	cmp	r2, #1
 8008b42:	d105      	bne.n	8008b50 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8008b44:	2202      	movs	r2, #2
 8008b46:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8008b48:	f001 fce6 	bl	800a518 <vTaskStartScheduler>
      stat = osOK;
 8008b4c:	2000      	movs	r0, #0
 8008b4e:	e7eb      	b.n	8008b28 <osKernelStart+0xc>
      stat = osError;
 8008b50:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008b54:	e7e8      	b.n	8008b28 <osKernelStart+0xc>
 8008b56:	bf00      	nop
 8008b58:	20005928 	.word	0x20005928

08008b5c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008b5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b5e:	b087      	sub	sp, #28
 8008b60:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008b62:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008b64:	460b      	mov	r3, r1
  hTask = NULL;
 8008b66:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008b68:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008b6c:	bb22      	cbnz	r2, 8008bb8 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008b6e:	f3ef 8210 	mrs	r2, PRIMASK
 8008b72:	b912      	cbnz	r2, 8008b7a <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008b74:	f3ef 8211 	mrs	r2, BASEPRI
 8008b78:	b11a      	cbz	r2, 8008b82 <osThreadNew+0x26>
 8008b7a:	4a22      	ldr	r2, [pc, #136]	; (8008c04 <osThreadNew+0xa8>)
 8008b7c:	6812      	ldr	r2, [r2, #0]
 8008b7e:	2a02      	cmp	r2, #2
 8008b80:	d01a      	beq.n	8008bb8 <osThreadNew+0x5c>
 8008b82:	b1c8      	cbz	r0, 8008bb8 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008b84:	2c00      	cmp	r4, #0
 8008b86:	d02f      	beq.n	8008be8 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008b88:	69a5      	ldr	r5, [r4, #24]
 8008b8a:	2d00      	cmp	r5, #0
 8008b8c:	bf08      	it	eq
 8008b8e:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008b90:	1e6a      	subs	r2, r5, #1
 8008b92:	2a37      	cmp	r2, #55	; 0x37
 8008b94:	46ac      	mov	ip, r5
 8008b96:	d82b      	bhi.n	8008bf0 <osThreadNew+0x94>
 8008b98:	6862      	ldr	r2, [r4, #4]
 8008b9a:	07d2      	lsls	r2, r2, #31
 8008b9c:	d428      	bmi.n	8008bf0 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008b9e:	6966      	ldr	r6, [r4, #20]
 8008ba0:	b16e      	cbz	r6, 8008bbe <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008ba2:	08b2      	lsrs	r2, r6, #2
 8008ba4:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008ba8:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008baa:	b157      	cbz	r7, 8008bc2 <osThreadNew+0x66>
 8008bac:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8008bb0:	d902      	bls.n	8008bb8 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008bb2:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008bb4:	b104      	cbz	r4, 8008bb8 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008bb6:	b9ee      	cbnz	r6, 8008bf4 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008bb8:	9805      	ldr	r0, [sp, #20]
}
 8008bba:	b007      	add	sp, #28
 8008bbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008bbe:	2280      	movs	r2, #128	; 0x80
 8008bc0:	e7f0      	b.n	8008ba4 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008bc2:	f1be 0f00 	cmp.w	lr, #0
 8008bc6:	d1f7      	bne.n	8008bb8 <osThreadNew+0x5c>
      if (mem == 0) {
 8008bc8:	6924      	ldr	r4, [r4, #16]
 8008bca:	2c00      	cmp	r4, #0
 8008bcc:	d1f4      	bne.n	8008bb8 <osThreadNew+0x5c>
 8008bce:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008bd0:	a905      	add	r1, sp, #20
 8008bd2:	e9cd c100 	strd	ip, r1, [sp]
 8008bd6:	b292      	uxth	r2, r2
 8008bd8:	4621      	mov	r1, r4
 8008bda:	f001 fb3b 	bl	800a254 <xTaskCreate>
 8008bde:	2801      	cmp	r0, #1
          hTask = NULL;
 8008be0:	bf1c      	itt	ne
 8008be2:	2300      	movne	r3, #0
 8008be4:	9305      	strne	r3, [sp, #20]
 8008be6:	e7e7      	b.n	8008bb8 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8008be8:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008bec:	2280      	movs	r2, #128	; 0x80
 8008bee:	e7ef      	b.n	8008bd0 <osThreadNew+0x74>
        return (NULL);
 8008bf0:	2000      	movs	r0, #0
 8008bf2:	e7e2      	b.n	8008bba <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008bf4:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008bf8:	9500      	str	r5, [sp, #0]
 8008bfa:	f001 faf3 	bl	800a1e4 <xTaskCreateStatic>
 8008bfe:	9005      	str	r0, [sp, #20]
 8008c00:	e7da      	b.n	8008bb8 <osThreadNew+0x5c>
 8008c02:	bf00      	nop
 8008c04:	20005928 	.word	0x20005928

08008c08 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008c08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008c0a:	460e      	mov	r6, r1
 8008c0c:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008c0e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008c12:	b11b      	cbz	r3, 8008c1c <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008c14:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008c16:	4620      	mov	r0, r4
 8008c18:	b002      	add	sp, #8
 8008c1a:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008c1c:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008c20:	b913      	cbnz	r3, 8008c28 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008c22:	f3ef 8311 	mrs	r3, BASEPRI
 8008c26:	b11b      	cbz	r3, 8008c30 <osSemaphoreNew+0x28>
 8008c28:	4b21      	ldr	r3, [pc, #132]	; (8008cb0 <osSemaphoreNew+0xa8>)
 8008c2a:	681b      	ldr	r3, [r3, #0]
 8008c2c:	2b02      	cmp	r3, #2
 8008c2e:	d0f1      	beq.n	8008c14 <osSemaphoreNew+0xc>
 8008c30:	2800      	cmp	r0, #0
 8008c32:	d0ef      	beq.n	8008c14 <osSemaphoreNew+0xc>
 8008c34:	42b0      	cmp	r0, r6
 8008c36:	d3ed      	bcc.n	8008c14 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8008c38:	b1ed      	cbz	r5, 8008c76 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008c3a:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8008c3e:	b1c3      	cbz	r3, 8008c72 <osSemaphoreNew+0x6a>
 8008c40:	2a4f      	cmp	r2, #79	; 0x4f
 8008c42:	d9e7      	bls.n	8008c14 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008c44:	2801      	cmp	r0, #1
 8008c46:	d129      	bne.n	8008c9c <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008c48:	2203      	movs	r2, #3
 8008c4a:	9200      	str	r2, [sp, #0]
 8008c4c:	2200      	movs	r2, #0
 8008c4e:	4611      	mov	r1, r2
 8008c50:	f000 fd28 	bl	80096a4 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008c54:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008c56:	2800      	cmp	r0, #0
 8008c58:	d0dc      	beq.n	8008c14 <osSemaphoreNew+0xc>
 8008c5a:	b1ce      	cbz	r6, 8008c90 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008c5c:	2300      	movs	r3, #0
 8008c5e:	461a      	mov	r2, r3
 8008c60:	4619      	mov	r1, r3
 8008c62:	f000 fdd5 	bl	8009810 <xQueueGenericSend>
 8008c66:	2801      	cmp	r0, #1
 8008c68:	d012      	beq.n	8008c90 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8008c6a:	4620      	mov	r0, r4
 8008c6c:	f001 f916 	bl	8009e9c <vQueueDelete>
 8008c70:	e7d0      	b.n	8008c14 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008c72:	2a00      	cmp	r2, #0
 8008c74:	d1ce      	bne.n	8008c14 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008c76:	2801      	cmp	r0, #1
 8008c78:	d104      	bne.n	8008c84 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8008c7a:	2203      	movs	r2, #3
 8008c7c:	2100      	movs	r1, #0
 8008c7e:	f000 fd5f 	bl	8009740 <xQueueGenericCreate>
 8008c82:	e7e7      	b.n	8008c54 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008c84:	4631      	mov	r1, r6
 8008c86:	f000 fda4 	bl	80097d2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008c8a:	4604      	mov	r4, r0
 8008c8c:	2800      	cmp	r0, #0
 8008c8e:	d0c1      	beq.n	8008c14 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8008c90:	b95d      	cbnz	r5, 8008caa <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8008c92:	4629      	mov	r1, r5
 8008c94:	4620      	mov	r0, r4
 8008c96:	f001 f8d7 	bl	8009e48 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008c9a:	e7bc      	b.n	8008c16 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008c9c:	461a      	mov	r2, r3
 8008c9e:	4631      	mov	r1, r6
 8008ca0:	f000 fd75 	bl	800978e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008ca4:	4604      	mov	r4, r0
 8008ca6:	2800      	cmp	r0, #0
 8008ca8:	d0b4      	beq.n	8008c14 <osSemaphoreNew+0xc>
          name = attr->name;
 8008caa:	682d      	ldr	r5, [r5, #0]
 8008cac:	e7f1      	b.n	8008c92 <osSemaphoreNew+0x8a>
 8008cae:	bf00      	nop
 8008cb0:	20005928 	.word	0x20005928

08008cb4 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008cb4:	b513      	push	{r0, r1, r4, lr}
 8008cb6:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008cb8:	b918      	cbnz	r0, 8008cc2 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8008cba:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008cbe:	b002      	add	sp, #8
 8008cc0:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008cc2:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8008cc6:	b163      	cbz	r3, 8008ce2 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8008cc8:	2c00      	cmp	r4, #0
 8008cca:	d1f6      	bne.n	8008cba <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008ccc:	aa01      	add	r2, sp, #4
 8008cce:	4621      	mov	r1, r4
      yield = pdFALSE;
 8008cd0:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008cd2:	f001 f869 	bl	8009da8 <xQueueReceiveFromISR>
 8008cd6:	2801      	cmp	r0, #1
 8008cd8:	d113      	bne.n	8008d02 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8008cda:	9b01      	ldr	r3, [sp, #4]
 8008cdc:	b9a3      	cbnz	r3, 8008d08 <osSemaphoreAcquire+0x54>
  stat = osOK;
 8008cde:	2000      	movs	r0, #0
 8008ce0:	e7ed      	b.n	8008cbe <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008ce2:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008ce6:	b913      	cbnz	r3, 8008cee <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008ce8:	f3ef 8311 	mrs	r3, BASEPRI
 8008cec:	b11b      	cbz	r3, 8008cf6 <osSemaphoreAcquire+0x42>
 8008cee:	4b0c      	ldr	r3, [pc, #48]	; (8008d20 <osSemaphoreAcquire+0x6c>)
 8008cf0:	681b      	ldr	r3, [r3, #0]
 8008cf2:	2b02      	cmp	r3, #2
 8008cf4:	d0e8      	beq.n	8008cc8 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008cf6:	4621      	mov	r1, r4
 8008cf8:	f000 ff92 	bl	8009c20 <xQueueSemaphoreTake>
 8008cfc:	2801      	cmp	r0, #1
 8008cfe:	d0ee      	beq.n	8008cde <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8008d00:	b95c      	cbnz	r4, 8008d1a <osSemaphoreAcquire+0x66>
        stat = osErrorResource;
 8008d02:	f06f 0002 	mvn.w	r0, #2
 8008d06:	e7da      	b.n	8008cbe <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008d08:	4b06      	ldr	r3, [pc, #24]	; (8008d24 <osSemaphoreAcquire+0x70>)
 8008d0a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d0e:	601a      	str	r2, [r3, #0]
 8008d10:	f3bf 8f4f 	dsb	sy
 8008d14:	f3bf 8f6f 	isb	sy
 8008d18:	e7e1      	b.n	8008cde <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8008d1a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008d1e:	e7ce      	b.n	8008cbe <osSemaphoreAcquire+0xa>
 8008d20:	20005928 	.word	0x20005928
 8008d24:	e000ed04 	.word	0xe000ed04

08008d28 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008d28:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008d2a:	b360      	cbz	r0, 8008d86 <osSemaphoreRelease+0x5e>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008d2c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008d30:	b14b      	cbz	r3, 8008d46 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 8008d32:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008d34:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008d36:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008d38:	f000 fe7d 	bl	8009a36 <xQueueGiveFromISR>
 8008d3c:	2801      	cmp	r0, #1
 8008d3e:	d014      	beq.n	8008d6a <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008d40:	f06f 0002 	mvn.w	r0, #2
 8008d44:	e014      	b.n	8008d70 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008d46:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008d4a:	b913      	cbnz	r3, 8008d52 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008d4c:	f3ef 8311 	mrs	r3, BASEPRI
 8008d50:	b11b      	cbz	r3, 8008d5a <osSemaphoreRelease+0x32>
 8008d52:	4b0e      	ldr	r3, [pc, #56]	; (8008d8c <osSemaphoreRelease+0x64>)
 8008d54:	681b      	ldr	r3, [r3, #0]
 8008d56:	2b02      	cmp	r3, #2
 8008d58:	d0eb      	beq.n	8008d32 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008d5a:	2300      	movs	r3, #0
 8008d5c:	461a      	mov	r2, r3
 8008d5e:	4619      	mov	r1, r3
 8008d60:	f000 fd56 	bl	8009810 <xQueueGenericSend>
 8008d64:	2801      	cmp	r0, #1
 8008d66:	d002      	beq.n	8008d6e <osSemaphoreRelease+0x46>
 8008d68:	e7ea      	b.n	8008d40 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8008d6a:	9b01      	ldr	r3, [sp, #4]
 8008d6c:	b913      	cbnz	r3, 8008d74 <osSemaphoreRelease+0x4c>
  stat = osOK;
 8008d6e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008d70:	b002      	add	sp, #8
 8008d72:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008d74:	4b06      	ldr	r3, [pc, #24]	; (8008d90 <osSemaphoreRelease+0x68>)
 8008d76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d7a:	601a      	str	r2, [r3, #0]
 8008d7c:	f3bf 8f4f 	dsb	sy
 8008d80:	f3bf 8f6f 	isb	sy
 8008d84:	e7f3      	b.n	8008d6e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8008d86:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008d8a:	e7f1      	b.n	8008d70 <osSemaphoreRelease+0x48>
 8008d8c:	20005928 	.word	0x20005928
 8008d90:	e000ed04 	.word	0xe000ed04

08008d94 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008d94:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008d96:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008d98:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008d9c:	b11b      	cbz	r3, 8008da6 <osMessageQueueNew+0x12>
  hQueue = NULL;
 8008d9e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008da0:	4628      	mov	r0, r5
 8008da2:	b002      	add	sp, #8
 8008da4:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008da6:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008daa:	b913      	cbnz	r3, 8008db2 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008dac:	f3ef 8311 	mrs	r3, BASEPRI
 8008db0:	b11b      	cbz	r3, 8008dba <osMessageQueueNew+0x26>
 8008db2:	4b1a      	ldr	r3, [pc, #104]	; (8008e1c <osMessageQueueNew+0x88>)
 8008db4:	681b      	ldr	r3, [r3, #0]
 8008db6:	2b02      	cmp	r3, #2
 8008db8:	d0f1      	beq.n	8008d9e <osMessageQueueNew+0xa>
 8008dba:	2800      	cmp	r0, #0
 8008dbc:	d0ef      	beq.n	8008d9e <osMessageQueueNew+0xa>
 8008dbe:	2900      	cmp	r1, #0
 8008dc0:	d0ed      	beq.n	8008d9e <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8008dc2:	b1ec      	cbz	r4, 8008e00 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008dc4:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008dc8:	b193      	cbz	r3, 8008df0 <osMessageQueueNew+0x5c>
 8008dca:	2a4f      	cmp	r2, #79	; 0x4f
 8008dcc:	d9e7      	bls.n	8008d9e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008dce:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008dd0:	2a00      	cmp	r2, #0
 8008dd2:	d0e4      	beq.n	8008d9e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008dd4:	6966      	ldr	r6, [r4, #20]
 8008dd6:	fb01 f500 	mul.w	r5, r1, r0
 8008dda:	42ae      	cmp	r6, r5
 8008ddc:	d3df      	bcc.n	8008d9e <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008dde:	2500      	movs	r5, #0
 8008de0:	9500      	str	r5, [sp, #0]
 8008de2:	f000 fc5f 	bl	80096a4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008de6:	4605      	mov	r5, r0
 8008de8:	2800      	cmp	r0, #0
 8008dea:	d0d8      	beq.n	8008d9e <osMessageQueueNew+0xa>
        name = attr->name;
 8008dec:	6824      	ldr	r4, [r4, #0]
 8008dee:	e00f      	b.n	8008e10 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008df0:	2a00      	cmp	r2, #0
 8008df2:	d1d4      	bne.n	8008d9e <osMessageQueueNew+0xa>
 8008df4:	6923      	ldr	r3, [r4, #16]
 8008df6:	2b00      	cmp	r3, #0
 8008df8:	d1d1      	bne.n	8008d9e <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008dfa:	6963      	ldr	r3, [r4, #20]
 8008dfc:	2b00      	cmp	r3, #0
 8008dfe:	d1ce      	bne.n	8008d9e <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8008e00:	2200      	movs	r2, #0
 8008e02:	f000 fc9d 	bl	8009740 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008e06:	4605      	mov	r5, r0
 8008e08:	2800      	cmp	r0, #0
 8008e0a:	d0c8      	beq.n	8008d9e <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8008e0c:	2c00      	cmp	r4, #0
 8008e0e:	d1ed      	bne.n	8008dec <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8008e10:	4621      	mov	r1, r4
 8008e12:	4628      	mov	r0, r5
 8008e14:	f001 f818 	bl	8009e48 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008e18:	e7c2      	b.n	8008da0 <osMessageQueueNew+0xc>
 8008e1a:	bf00      	nop
 8008e1c:	20005928 	.word	0x20005928

08008e20 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008e20:	b513      	push	{r0, r1, r4, lr}
 8008e22:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008e24:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008e28:	b123      	cbz	r3, 8008e34 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008e2a:	b9d8      	cbnz	r0, 8008e64 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8008e2c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008e30:	b002      	add	sp, #8
 8008e32:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008e34:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008e38:	b913      	cbnz	r3, 8008e40 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008e3a:	f3ef 8311 	mrs	r3, BASEPRI
 8008e3e:	b11b      	cbz	r3, 8008e48 <osMessageQueuePut+0x28>
 8008e40:	4b16      	ldr	r3, [pc, #88]	; (8008e9c <osMessageQueuePut+0x7c>)
 8008e42:	681b      	ldr	r3, [r3, #0]
 8008e44:	2b02      	cmp	r3, #2
 8008e46:	d0f0      	beq.n	8008e2a <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008e48:	2800      	cmp	r0, #0
 8008e4a:	d0ef      	beq.n	8008e2c <osMessageQueuePut+0xc>
 8008e4c:	2900      	cmp	r1, #0
 8008e4e:	d0ed      	beq.n	8008e2c <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008e50:	2300      	movs	r3, #0
 8008e52:	4622      	mov	r2, r4
 8008e54:	f000 fcdc 	bl	8009810 <xQueueGenericSend>
 8008e58:	2801      	cmp	r0, #1
 8008e5a:	d010      	beq.n	8008e7e <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8008e5c:	b9d4      	cbnz	r4, 8008e94 <osMessageQueuePut+0x74>
          stat = osErrorResource;
 8008e5e:	f06f 0002 	mvn.w	r0, #2
 8008e62:	e7e5      	b.n	8008e30 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008e64:	2900      	cmp	r1, #0
 8008e66:	d0e1      	beq.n	8008e2c <osMessageQueuePut+0xc>
 8008e68:	2c00      	cmp	r4, #0
 8008e6a:	d1df      	bne.n	8008e2c <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008e6c:	4623      	mov	r3, r4
 8008e6e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008e70:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008e72:	f000 fd7f 	bl	8009974 <xQueueGenericSendFromISR>
 8008e76:	2801      	cmp	r0, #1
 8008e78:	d1f1      	bne.n	8008e5e <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8008e7a:	9b01      	ldr	r3, [sp, #4]
 8008e7c:	b90b      	cbnz	r3, 8008e82 <osMessageQueuePut+0x62>
  stat = osOK;
 8008e7e:	2000      	movs	r0, #0
 8008e80:	e7d6      	b.n	8008e30 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008e82:	4b07      	ldr	r3, [pc, #28]	; (8008ea0 <osMessageQueuePut+0x80>)
 8008e84:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e88:	601a      	str	r2, [r3, #0]
 8008e8a:	f3bf 8f4f 	dsb	sy
 8008e8e:	f3bf 8f6f 	isb	sy
 8008e92:	e7f4      	b.n	8008e7e <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008e94:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008e98:	e7ca      	b.n	8008e30 <osMessageQueuePut+0x10>
 8008e9a:	bf00      	nop
 8008e9c:	20005928 	.word	0x20005928
 8008ea0:	e000ed04 	.word	0xe000ed04

08008ea4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008ea4:	b513      	push	{r0, r1, r4, lr}
 8008ea6:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008ea8:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008eac:	b123      	cbz	r3, 8008eb8 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008eae:	b9d0      	cbnz	r0, 8008ee6 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8008eb0:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008eb4:	b002      	add	sp, #8
 8008eb6:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008eb8:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008ebc:	b913      	cbnz	r3, 8008ec4 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008ebe:	f3ef 8311 	mrs	r3, BASEPRI
 8008ec2:	b11b      	cbz	r3, 8008ecc <osMessageQueueGet+0x28>
 8008ec4:	4b15      	ldr	r3, [pc, #84]	; (8008f1c <osMessageQueueGet+0x78>)
 8008ec6:	681b      	ldr	r3, [r3, #0]
 8008ec8:	2b02      	cmp	r3, #2
 8008eca:	d0f0      	beq.n	8008eae <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008ecc:	2800      	cmp	r0, #0
 8008ece:	d0ef      	beq.n	8008eb0 <osMessageQueueGet+0xc>
 8008ed0:	2900      	cmp	r1, #0
 8008ed2:	d0ed      	beq.n	8008eb0 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008ed4:	4622      	mov	r2, r4
 8008ed6:	f000 fe03 	bl	8009ae0 <xQueueReceive>
 8008eda:	2801      	cmp	r0, #1
 8008edc:	d00f      	beq.n	8008efe <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 8008ede:	b9cc      	cbnz	r4, 8008f14 <osMessageQueueGet+0x70>
          stat = osErrorResource;
 8008ee0:	f06f 0002 	mvn.w	r0, #2
 8008ee4:	e7e6      	b.n	8008eb4 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008ee6:	2900      	cmp	r1, #0
 8008ee8:	d0e2      	beq.n	8008eb0 <osMessageQueueGet+0xc>
 8008eea:	2c00      	cmp	r4, #0
 8008eec:	d1e0      	bne.n	8008eb0 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008eee:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008ef0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008ef2:	f000 ff59 	bl	8009da8 <xQueueReceiveFromISR>
 8008ef6:	2801      	cmp	r0, #1
 8008ef8:	d1f2      	bne.n	8008ee0 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8008efa:	9b01      	ldr	r3, [sp, #4]
 8008efc:	b90b      	cbnz	r3, 8008f02 <osMessageQueueGet+0x5e>
  stat = osOK;
 8008efe:	2000      	movs	r0, #0
 8008f00:	e7d8      	b.n	8008eb4 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8008f02:	4b07      	ldr	r3, [pc, #28]	; (8008f20 <osMessageQueueGet+0x7c>)
 8008f04:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f08:	601a      	str	r2, [r3, #0]
 8008f0a:	f3bf 8f4f 	dsb	sy
 8008f0e:	f3bf 8f6f 	isb	sy
 8008f12:	e7f4      	b.n	8008efe <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8008f14:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008f18:	e7cc      	b.n	8008eb4 <osMessageQueueGet+0x10>
 8008f1a:	bf00      	nop
 8008f1c:	20005928 	.word	0x20005928
 8008f20:	e000ed04 	.word	0xe000ed04

08008f24 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008f24:	4b03      	ldr	r3, [pc, #12]	; (8008f34 <vApplicationGetIdleTaskMemory+0x10>)
 8008f26:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008f28:	4b03      	ldr	r3, [pc, #12]	; (8008f38 <vApplicationGetIdleTaskMemory+0x14>)
 8008f2a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008f2c:	2380      	movs	r3, #128	; 0x80
 8008f2e:	6013      	str	r3, [r2, #0]
}
 8008f30:	4770      	bx	lr
 8008f32:	bf00      	nop
 8008f34:	200058c8 	.word	0x200058c8
 8008f38:	200056c8 	.word	0x200056c8

08008f3c <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008f3c:	4b03      	ldr	r3, [pc, #12]	; (8008f4c <vApplicationGetTimerTaskMemory+0x10>)
 8008f3e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008f40:	4b03      	ldr	r3, [pc, #12]	; (8008f50 <vApplicationGetTimerTaskMemory+0x14>)
 8008f42:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008f44:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008f48:	6013      	str	r3, [r2, #0]
}
 8008f4a:	4770      	bx	lr
 8008f4c:	20005d2c 	.word	0x20005d2c
 8008f50:	2000592c 	.word	0x2000592c

08008f54 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008f54:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008f56:	4b0f      	ldr	r3, [pc, #60]	; (8008f94 <prvInsertBlockIntoFreeList+0x40>)
 8008f58:	461a      	mov	r2, r3
 8008f5a:	681b      	ldr	r3, [r3, #0]
 8008f5c:	4283      	cmp	r3, r0
 8008f5e:	d3fb      	bcc.n	8008f58 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008f60:	6854      	ldr	r4, [r2, #4]
 8008f62:	1911      	adds	r1, r2, r4
 8008f64:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008f66:	bf01      	itttt	eq
 8008f68:	6841      	ldreq	r1, [r0, #4]
 8008f6a:	4610      	moveq	r0, r2
 8008f6c:	1909      	addeq	r1, r1, r4
 8008f6e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008f70:	6844      	ldr	r4, [r0, #4]
 8008f72:	1901      	adds	r1, r0, r4
 8008f74:	428b      	cmp	r3, r1
 8008f76:	d107      	bne.n	8008f88 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008f78:	4907      	ldr	r1, [pc, #28]	; (8008f98 <prvInsertBlockIntoFreeList+0x44>)
 8008f7a:	6809      	ldr	r1, [r1, #0]
 8008f7c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008f7e:	bf1f      	itttt	ne
 8008f80:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008f82:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008f84:	1909      	addne	r1, r1, r4
 8008f86:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008f88:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008f8a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008f8c:	bf18      	it	ne
 8008f8e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008f90:	bd10      	pop	{r4, pc}
 8008f92:	bf00      	nop
 8008f94:	2000dd9c 	.word	0x2000dd9c
 8008f98:	20005d8c 	.word	0x20005d8c

08008f9c <pvPortMalloc>:
{
 8008f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008fa0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008fa2:	f001 f985 	bl	800a2b0 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008fa6:	4b3c      	ldr	r3, [pc, #240]	; (8009098 <pvPortMalloc+0xfc>)
 8008fa8:	483c      	ldr	r0, [pc, #240]	; (800909c <pvPortMalloc+0x100>)
 8008faa:	681a      	ldr	r2, [r3, #0]
 8008fac:	469c      	mov	ip, r3
 8008fae:	b9d2      	cbnz	r2, 8008fe6 <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 8008fb0:	4a3b      	ldr	r2, [pc, #236]	; (80090a0 <pvPortMalloc+0x104>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008fb2:	4b3c      	ldr	r3, [pc, #240]	; (80090a4 <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008fb4:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008fb6:	bf1c      	itt	ne
 8008fb8:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008fba:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008fbe:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008fc0:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8008fc2:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 8008fc4:	4b38      	ldr	r3, [pc, #224]	; (80090a8 <pvPortMalloc+0x10c>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008fc6:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8008fca:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008fce:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008fd0:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 8008fd4:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008fd8:	4b34      	ldr	r3, [pc, #208]	; (80090ac <pvPortMalloc+0x110>)
 8008fda:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008fdc:	4b34      	ldr	r3, [pc, #208]	; (80090b0 <pvPortMalloc+0x114>)
 8008fde:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008fe0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008fe4:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008fe6:	6807      	ldr	r7, [r0, #0]
 8008fe8:	4227      	tst	r7, r4
 8008fea:	d14f      	bne.n	800908c <pvPortMalloc+0xf0>
			if( xWantedSize > 0 )
 8008fec:	2c00      	cmp	r4, #0
 8008fee:	d040      	beq.n	8009072 <pvPortMalloc+0xd6>
				xWantedSize += xHeapStructSize;
 8008ff0:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008ff4:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008ff6:	bf1c      	itt	ne
 8008ff8:	f023 0307 	bicne.w	r3, r3, #7
 8008ffc:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008ffe:	2b00      	cmp	r3, #0
 8009000:	d044      	beq.n	800908c <pvPortMalloc+0xf0>
 8009002:	4a2b      	ldr	r2, [pc, #172]	; (80090b0 <pvPortMalloc+0x114>)
 8009004:	6816      	ldr	r6, [r2, #0]
 8009006:	429e      	cmp	r6, r3
 8009008:	4690      	mov	r8, r2
 800900a:	d33f      	bcc.n	800908c <pvPortMalloc+0xf0>
				pxBlock = xStart.pxNextFreeBlock;
 800900c:	4a25      	ldr	r2, [pc, #148]	; (80090a4 <pvPortMalloc+0x108>)
 800900e:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8009010:	6869      	ldr	r1, [r5, #4]
 8009012:	4299      	cmp	r1, r3
 8009014:	d201      	bcs.n	800901a <pvPortMalloc+0x7e>
 8009016:	6828      	ldr	r0, [r5, #0]
 8009018:	b9a8      	cbnz	r0, 8009046 <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 800901a:	f8dc 0000 	ldr.w	r0, [ip]
 800901e:	42a8      	cmp	r0, r5
 8009020:	d034      	beq.n	800908c <pvPortMalloc+0xf0>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009022:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009024:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009026:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009028:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800902a:	2910      	cmp	r1, #16
 800902c:	d912      	bls.n	8009054 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800902e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8009030:	0742      	lsls	r2, r0, #29
 8009032:	d00b      	beq.n	800904c <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8009034:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009038:	f383 8811 	msr	BASEPRI, r3
 800903c:	f3bf 8f6f 	isb	sy
 8009040:	f3bf 8f4f 	dsb	sy
 8009044:	e7fe      	b.n	8009044 <pvPortMalloc+0xa8>
 8009046:	462a      	mov	r2, r5
 8009048:	4605      	mov	r5, r0
 800904a:	e7e1      	b.n	8009010 <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800904c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800904e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8009050:	f7ff ff80 	bl	8008f54 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009054:	4915      	ldr	r1, [pc, #84]	; (80090ac <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009056:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009058:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800905a:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800905c:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800905e:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8009060:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009064:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8009068:	bf38      	it	cc
 800906a:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800906c:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800906e:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8009070:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8009072:	f001 f9c1 	bl	800a3f8 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8009076:	0763      	lsls	r3, r4, #29
 8009078:	d00a      	beq.n	8009090 <pvPortMalloc+0xf4>
 800907a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800907e:	f383 8811 	msr	BASEPRI, r3
 8009082:	f3bf 8f6f 	isb	sy
 8009086:	f3bf 8f4f 	dsb	sy
 800908a:	e7fe      	b.n	800908a <pvPortMalloc+0xee>
void *pvReturn = NULL;
 800908c:	2400      	movs	r4, #0
 800908e:	e7f0      	b.n	8009072 <pvPortMalloc+0xd6>
}
 8009090:	4620      	mov	r0, r4
 8009092:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009096:	bf00      	nop
 8009098:	20005d8c 	.word	0x20005d8c
 800909c:	2000dd90 	.word	0x2000dd90
 80090a0:	20005d90 	.word	0x20005d90
 80090a4:	2000dd9c 	.word	0x2000dd9c
 80090a8:	2000dd88 	.word	0x2000dd88
 80090ac:	2000dd98 	.word	0x2000dd98
 80090b0:	2000dd94 	.word	0x2000dd94

080090b4 <vPortFree>:
{
 80090b4:	b510      	push	{r4, lr}
	if( pv != NULL )
 80090b6:	4604      	mov	r4, r0
 80090b8:	b370      	cbz	r0, 8009118 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80090ba:	4a18      	ldr	r2, [pc, #96]	; (800911c <vPortFree+0x68>)
 80090bc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80090c0:	6812      	ldr	r2, [r2, #0]
 80090c2:	4213      	tst	r3, r2
 80090c4:	d108      	bne.n	80090d8 <vPortFree+0x24>
 80090c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ca:	f383 8811 	msr	BASEPRI, r3
 80090ce:	f3bf 8f6f 	isb	sy
 80090d2:	f3bf 8f4f 	dsb	sy
 80090d6:	e7fe      	b.n	80090d6 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80090d8:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80090dc:	b141      	cbz	r1, 80090f0 <vPortFree+0x3c>
 80090de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090e2:	f383 8811 	msr	BASEPRI, r3
 80090e6:	f3bf 8f6f 	isb	sy
 80090ea:	f3bf 8f4f 	dsb	sy
 80090ee:	e7fe      	b.n	80090ee <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80090f0:	ea23 0302 	bic.w	r3, r3, r2
 80090f4:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80090f8:	f001 f8da 	bl	800a2b0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80090fc:	4a08      	ldr	r2, [pc, #32]	; (8009120 <vPortFree+0x6c>)
 80090fe:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009102:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8009104:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8009108:	440b      	add	r3, r1
 800910a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800910c:	f7ff ff22 	bl	8008f54 <prvInsertBlockIntoFreeList>
}
 8009110:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8009114:	f001 b970 	b.w	800a3f8 <xTaskResumeAll>
}
 8009118:	bd10      	pop	{r4, pc}
 800911a:	bf00      	nop
 800911c:	2000dd90 	.word	0x2000dd90
 8009120:	2000dd94 	.word	0x2000dd94

08009124 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009124:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8009128:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800912c:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009130:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009132:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8009134:	2300      	movs	r3, #0
 8009136:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8009138:	4770      	bx	lr

0800913a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800913a:	2300      	movs	r3, #0
 800913c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800913e:	4770      	bx	lr

08009140 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8009140:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8009142:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8009144:	689a      	ldr	r2, [r3, #8]
 8009146:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8009148:	689a      	ldr	r2, [r3, #8]
 800914a:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800914c:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800914e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8009150:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009152:	3301      	adds	r3, #1
 8009154:	6003      	str	r3, [r0, #0]
}
 8009156:	4770      	bx	lr

08009158 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8009158:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800915a:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800915c:	1c63      	adds	r3, r4, #1
 800915e:	d10a      	bne.n	8009176 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8009160:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8009162:	685a      	ldr	r2, [r3, #4]
 8009164:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8009166:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8009168:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800916a:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800916c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800916e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009170:	3301      	adds	r3, #1
 8009172:	6003      	str	r3, [r0, #0]
}
 8009174:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8009176:	f100 0208 	add.w	r2, r0, #8
 800917a:	4613      	mov	r3, r2
 800917c:	6852      	ldr	r2, [r2, #4]
 800917e:	6815      	ldr	r5, [r2, #0]
 8009180:	42a5      	cmp	r5, r4
 8009182:	d9fa      	bls.n	800917a <vListInsert+0x22>
 8009184:	e7ed      	b.n	8009162 <vListInsert+0xa>

08009186 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009186:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800918a:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800918c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800918e:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8009190:	6859      	ldr	r1, [r3, #4]
 8009192:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8009194:	bf08      	it	eq
 8009196:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8009198:	2200      	movs	r2, #0
 800919a:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800919c:	681a      	ldr	r2, [r3, #0]
 800919e:	3a01      	subs	r2, #1
 80091a0:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80091a2:	6818      	ldr	r0, [r3, #0]
}
 80091a4:	4770      	bx	lr
	...

080091a8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80091a8:	4808      	ldr	r0, [pc, #32]	; (80091cc <prvPortStartFirstTask+0x24>)
 80091aa:	6800      	ldr	r0, [r0, #0]
 80091ac:	6800      	ldr	r0, [r0, #0]
 80091ae:	f380 8808 	msr	MSP, r0
 80091b2:	f04f 0000 	mov.w	r0, #0
 80091b6:	f380 8814 	msr	CONTROL, r0
 80091ba:	b662      	cpsie	i
 80091bc:	b661      	cpsie	f
 80091be:	f3bf 8f4f 	dsb	sy
 80091c2:	f3bf 8f6f 	isb	sy
 80091c6:	df00      	svc	0
 80091c8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80091ca:	0000      	.short	0x0000
 80091cc:	e000ed08 	.word	0xe000ed08

080091d0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80091d0:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80091e0 <vPortEnableVFP+0x10>
 80091d4:	6801      	ldr	r1, [r0, #0]
 80091d6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80091da:	6001      	str	r1, [r0, #0]
 80091dc:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80091de:	0000      	.short	0x0000
 80091e0:	e000ed88 	.word	0xe000ed88

080091e4 <prvTaskExitError>:
{
 80091e4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80091e6:	2300      	movs	r3, #0
 80091e8:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80091ea:	4b0d      	ldr	r3, [pc, #52]	; (8009220 <prvTaskExitError+0x3c>)
 80091ec:	681b      	ldr	r3, [r3, #0]
 80091ee:	3301      	adds	r3, #1
 80091f0:	d008      	beq.n	8009204 <prvTaskExitError+0x20>
 80091f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091f6:	f383 8811 	msr	BASEPRI, r3
 80091fa:	f3bf 8f6f 	isb	sy
 80091fe:	f3bf 8f4f 	dsb	sy
 8009202:	e7fe      	b.n	8009202 <prvTaskExitError+0x1e>
 8009204:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009208:	f383 8811 	msr	BASEPRI, r3
 800920c:	f3bf 8f6f 	isb	sy
 8009210:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8009214:	9b01      	ldr	r3, [sp, #4]
 8009216:	2b00      	cmp	r3, #0
 8009218:	d0fc      	beq.n	8009214 <prvTaskExitError+0x30>
}
 800921a:	b002      	add	sp, #8
 800921c:	4770      	bx	lr
 800921e:	bf00      	nop
 8009220:	2000005c 	.word	0x2000005c

08009224 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8009224:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8009228:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800922c:	4b07      	ldr	r3, [pc, #28]	; (800924c <pxPortInitialiseStack+0x28>)
 800922e:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8009232:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009236:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800923a:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800923e:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009242:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8009246:	3844      	subs	r0, #68	; 0x44
 8009248:	4770      	bx	lr
 800924a:	bf00      	nop
 800924c:	080091e5 	.word	0x080091e5

08009250 <SVC_Handler>:
	__asm volatile (
 8009250:	4b07      	ldr	r3, [pc, #28]	; (8009270 <pxCurrentTCBConst2>)
 8009252:	6819      	ldr	r1, [r3, #0]
 8009254:	6808      	ldr	r0, [r1, #0]
 8009256:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800925a:	f380 8809 	msr	PSP, r0
 800925e:	f3bf 8f6f 	isb	sy
 8009262:	f04f 0000 	mov.w	r0, #0
 8009266:	f380 8811 	msr	BASEPRI, r0
 800926a:	4770      	bx	lr
 800926c:	f3af 8000 	nop.w

08009270 <pxCurrentTCBConst2>:
 8009270:	2000ddac 	.word	0x2000ddac

08009274 <vPortEnterCritical>:
 8009274:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009278:	f383 8811 	msr	BASEPRI, r3
 800927c:	f3bf 8f6f 	isb	sy
 8009280:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8009284:	4a0a      	ldr	r2, [pc, #40]	; (80092b0 <vPortEnterCritical+0x3c>)
 8009286:	6813      	ldr	r3, [r2, #0]
 8009288:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800928a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800928c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800928e:	d10d      	bne.n	80092ac <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8009290:	4b08      	ldr	r3, [pc, #32]	; (80092b4 <vPortEnterCritical+0x40>)
 8009292:	681b      	ldr	r3, [r3, #0]
 8009294:	f013 0fff 	tst.w	r3, #255	; 0xff
 8009298:	d008      	beq.n	80092ac <vPortEnterCritical+0x38>
 800929a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800929e:	f383 8811 	msr	BASEPRI, r3
 80092a2:	f3bf 8f6f 	isb	sy
 80092a6:	f3bf 8f4f 	dsb	sy
 80092aa:	e7fe      	b.n	80092aa <vPortEnterCritical+0x36>
}
 80092ac:	4770      	bx	lr
 80092ae:	bf00      	nop
 80092b0:	2000005c 	.word	0x2000005c
 80092b4:	e000ed04 	.word	0xe000ed04

080092b8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80092b8:	4a08      	ldr	r2, [pc, #32]	; (80092dc <vPortExitCritical+0x24>)
 80092ba:	6813      	ldr	r3, [r2, #0]
 80092bc:	b943      	cbnz	r3, 80092d0 <vPortExitCritical+0x18>
 80092be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092c2:	f383 8811 	msr	BASEPRI, r3
 80092c6:	f3bf 8f6f 	isb	sy
 80092ca:	f3bf 8f4f 	dsb	sy
 80092ce:	e7fe      	b.n	80092ce <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80092d0:	3b01      	subs	r3, #1
 80092d2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80092d4:	b90b      	cbnz	r3, 80092da <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80092d6:	f383 8811 	msr	BASEPRI, r3
}
 80092da:	4770      	bx	lr
 80092dc:	2000005c 	.word	0x2000005c

080092e0 <PendSV_Handler>:
	__asm volatile
 80092e0:	f3ef 8009 	mrs	r0, PSP
 80092e4:	f3bf 8f6f 	isb	sy
 80092e8:	4b15      	ldr	r3, [pc, #84]	; (8009340 <pxCurrentTCBConst>)
 80092ea:	681a      	ldr	r2, [r3, #0]
 80092ec:	f01e 0f10 	tst.w	lr, #16
 80092f0:	bf08      	it	eq
 80092f2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80092f6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80092fa:	6010      	str	r0, [r2, #0]
 80092fc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8009300:	f04f 0050 	mov.w	r0, #80	; 0x50
 8009304:	f380 8811 	msr	BASEPRI, r0
 8009308:	f3bf 8f4f 	dsb	sy
 800930c:	f3bf 8f6f 	isb	sy
 8009310:	f001 f94c 	bl	800a5ac <vTaskSwitchContext>
 8009314:	f04f 0000 	mov.w	r0, #0
 8009318:	f380 8811 	msr	BASEPRI, r0
 800931c:	bc09      	pop	{r0, r3}
 800931e:	6819      	ldr	r1, [r3, #0]
 8009320:	6808      	ldr	r0, [r1, #0]
 8009322:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009326:	f01e 0f10 	tst.w	lr, #16
 800932a:	bf08      	it	eq
 800932c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8009330:	f380 8809 	msr	PSP, r0
 8009334:	f3bf 8f6f 	isb	sy
 8009338:	4770      	bx	lr
 800933a:	bf00      	nop
 800933c:	f3af 8000 	nop.w

08009340 <pxCurrentTCBConst>:
 8009340:	2000ddac 	.word	0x2000ddac

08009344 <SysTick_Handler>:
{
 8009344:	b508      	push	{r3, lr}
	__asm volatile
 8009346:	f04f 0350 	mov.w	r3, #80	; 0x50
 800934a:	f383 8811 	msr	BASEPRI, r3
 800934e:	f3bf 8f6f 	isb	sy
 8009352:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8009356:	f000 ffb9 	bl	800a2cc <xTaskIncrementTick>
 800935a:	b118      	cbz	r0, 8009364 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800935c:	4b03      	ldr	r3, [pc, #12]	; (800936c <SysTick_Handler+0x28>)
 800935e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009362:	601a      	str	r2, [r3, #0]
	__asm volatile
 8009364:	2300      	movs	r3, #0
 8009366:	f383 8811 	msr	BASEPRI, r3
}
 800936a:	bd08      	pop	{r3, pc}
 800936c:	e000ed04 	.word	0xe000ed04

08009370 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8009370:	4a08      	ldr	r2, [pc, #32]	; (8009394 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8009372:	4909      	ldr	r1, [pc, #36]	; (8009398 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8009374:	2300      	movs	r3, #0
 8009376:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8009378:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800937a:	4b08      	ldr	r3, [pc, #32]	; (800939c <vPortSetupTimerInterrupt+0x2c>)
 800937c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8009380:	681b      	ldr	r3, [r3, #0]
 8009382:	fbb3 f3f1 	udiv	r3, r3, r1
 8009386:	4906      	ldr	r1, [pc, #24]	; (80093a0 <vPortSetupTimerInterrupt+0x30>)
 8009388:	3b01      	subs	r3, #1
 800938a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800938c:	2307      	movs	r3, #7
 800938e:	6013      	str	r3, [r2, #0]
}
 8009390:	4770      	bx	lr
 8009392:	bf00      	nop
 8009394:	e000e010 	.word	0xe000e010
 8009398:	e000e018 	.word	0xe000e018
 800939c:	20000050 	.word	0x20000050
 80093a0:	e000e014 	.word	0xe000e014

080093a4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80093a4:	4b38      	ldr	r3, [pc, #224]	; (8009488 <xPortStartScheduler+0xe4>)
 80093a6:	4a39      	ldr	r2, [pc, #228]	; (800948c <xPortStartScheduler+0xe8>)
{
 80093a8:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80093aa:	6819      	ldr	r1, [r3, #0]
 80093ac:	4291      	cmp	r1, r2
 80093ae:	d108      	bne.n	80093c2 <xPortStartScheduler+0x1e>
	__asm volatile
 80093b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093b4:	f383 8811 	msr	BASEPRI, r3
 80093b8:	f3bf 8f6f 	isb	sy
 80093bc:	f3bf 8f4f 	dsb	sy
 80093c0:	e7fe      	b.n	80093c0 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80093c2:	681a      	ldr	r2, [r3, #0]
 80093c4:	4b32      	ldr	r3, [pc, #200]	; (8009490 <xPortStartScheduler+0xec>)
 80093c6:	429a      	cmp	r2, r3
 80093c8:	d108      	bne.n	80093dc <xPortStartScheduler+0x38>
 80093ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093ce:	f383 8811 	msr	BASEPRI, r3
 80093d2:	f3bf 8f6f 	isb	sy
 80093d6:	f3bf 8f4f 	dsb	sy
 80093da:	e7fe      	b.n	80093da <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80093dc:	4b2d      	ldr	r3, [pc, #180]	; (8009494 <xPortStartScheduler+0xf0>)
 80093de:	781a      	ldrb	r2, [r3, #0]
 80093e0:	b2d2      	uxtb	r2, r2
 80093e2:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80093e4:	22ff      	movs	r2, #255	; 0xff
 80093e6:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80093e8:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80093ea:	4a2b      	ldr	r2, [pc, #172]	; (8009498 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80093ec:	b2db      	uxtb	r3, r3
 80093ee:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80093f2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80093f6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80093fa:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80093fc:	4a27      	ldr	r2, [pc, #156]	; (800949c <xPortStartScheduler+0xf8>)
 80093fe:	2307      	movs	r3, #7
 8009400:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8009402:	2100      	movs	r1, #0
 8009404:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8009408:	0600      	lsls	r0, r0, #24
 800940a:	f103 34ff 	add.w	r4, r3, #4294967295
 800940e:	d40c      	bmi.n	800942a <xPortStartScheduler+0x86>
 8009410:	b111      	cbz	r1, 8009418 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8009412:	2b03      	cmp	r3, #3
 8009414:	6013      	str	r3, [r2, #0]
 8009416:	d011      	beq.n	800943c <xPortStartScheduler+0x98>
 8009418:	f04f 0350 	mov.w	r3, #80	; 0x50
 800941c:	f383 8811 	msr	BASEPRI, r3
 8009420:	f3bf 8f6f 	isb	sy
 8009424:	f3bf 8f4f 	dsb	sy
 8009428:	e7fe      	b.n	8009428 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800942a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800942e:	005b      	lsls	r3, r3, #1
 8009430:	b2db      	uxtb	r3, r3
 8009432:	f88d 3003 	strb.w	r3, [sp, #3]
 8009436:	2101      	movs	r1, #1
 8009438:	4623      	mov	r3, r4
 800943a:	e7e3      	b.n	8009404 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800943c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8009440:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009442:	9b01      	ldr	r3, [sp, #4]
 8009444:	4a13      	ldr	r2, [pc, #76]	; (8009494 <xPortStartScheduler+0xf0>)
 8009446:	b2db      	uxtb	r3, r3
 8009448:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800944a:	4b15      	ldr	r3, [pc, #84]	; (80094a0 <xPortStartScheduler+0xfc>)
 800944c:	681a      	ldr	r2, [r3, #0]
 800944e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009452:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8009454:	681a      	ldr	r2, [r3, #0]
 8009456:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800945a:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 800945c:	f7ff ff88 	bl	8009370 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8009460:	4b10      	ldr	r3, [pc, #64]	; (80094a4 <xPortStartScheduler+0x100>)
 8009462:	2400      	movs	r4, #0
 8009464:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8009466:	f7ff feb3 	bl	80091d0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800946a:	4a0f      	ldr	r2, [pc, #60]	; (80094a8 <xPortStartScheduler+0x104>)
 800946c:	6813      	ldr	r3, [r2, #0]
 800946e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8009472:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8009474:	f7ff fe98 	bl	80091a8 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8009478:	f001 f898 	bl	800a5ac <vTaskSwitchContext>
	prvTaskExitError();
 800947c:	f7ff feb2 	bl	80091e4 <prvTaskExitError>
}
 8009480:	4620      	mov	r0, r4
 8009482:	b002      	add	sp, #8
 8009484:	bd10      	pop	{r4, pc}
 8009486:	bf00      	nop
 8009488:	e000ed00 	.word	0xe000ed00
 800948c:	410fc271 	.word	0x410fc271
 8009490:	410fc270 	.word	0x410fc270
 8009494:	e000e400 	.word	0xe000e400
 8009498:	2000dda4 	.word	0x2000dda4
 800949c:	2000dda8 	.word	0x2000dda8
 80094a0:	e000ed20 	.word	0xe000ed20
 80094a4:	2000005c 	.word	0x2000005c
 80094a8:	e000ef34 	.word	0xe000ef34

080094ac <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80094ac:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80094b0:	2b0f      	cmp	r3, #15
 80094b2:	d90e      	bls.n	80094d2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80094b4:	4a10      	ldr	r2, [pc, #64]	; (80094f8 <vPortValidateInterruptPriority+0x4c>)
 80094b6:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80094b8:	4a10      	ldr	r2, [pc, #64]	; (80094fc <vPortValidateInterruptPriority+0x50>)
 80094ba:	7812      	ldrb	r2, [r2, #0]
 80094bc:	429a      	cmp	r2, r3
 80094be:	d908      	bls.n	80094d2 <vPortValidateInterruptPriority+0x26>
 80094c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094c4:	f383 8811 	msr	BASEPRI, r3
 80094c8:	f3bf 8f6f 	isb	sy
 80094cc:	f3bf 8f4f 	dsb	sy
 80094d0:	e7fe      	b.n	80094d0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80094d2:	4b0b      	ldr	r3, [pc, #44]	; (8009500 <vPortValidateInterruptPriority+0x54>)
 80094d4:	4a0b      	ldr	r2, [pc, #44]	; (8009504 <vPortValidateInterruptPriority+0x58>)
 80094d6:	681b      	ldr	r3, [r3, #0]
 80094d8:	6812      	ldr	r2, [r2, #0]
 80094da:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80094de:	4293      	cmp	r3, r2
 80094e0:	d908      	bls.n	80094f4 <vPortValidateInterruptPriority+0x48>
 80094e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094e6:	f383 8811 	msr	BASEPRI, r3
 80094ea:	f3bf 8f6f 	isb	sy
 80094ee:	f3bf 8f4f 	dsb	sy
 80094f2:	e7fe      	b.n	80094f2 <vPortValidateInterruptPriority+0x46>
	}
 80094f4:	4770      	bx	lr
 80094f6:	bf00      	nop
 80094f8:	e000e3f0 	.word	0xe000e3f0
 80094fc:	2000dda4 	.word	0x2000dda4
 8009500:	e000ed0c 	.word	0xe000ed0c
 8009504:	2000dda8 	.word	0x2000dda8

08009508 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8009508:	b510      	push	{r4, lr}
 800950a:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800950c:	f7ff feb2 	bl	8009274 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8009510:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009512:	f7ff fed1 	bl	80092b8 <vPortExitCritical>

	return xReturn;
}
 8009516:	fab4 f084 	clz	r0, r4
 800951a:	0940      	lsrs	r0, r0, #5
 800951c:	bd10      	pop	{r4, pc}

0800951e <prvCopyDataToQueue>:
{
 800951e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009520:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009522:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009524:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8009526:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009528:	b952      	cbnz	r2, 8009540 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800952a:	6807      	ldr	r7, [r0, #0]
 800952c:	bb47      	cbnz	r7, 8009580 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800952e:	6880      	ldr	r0, [r0, #8]
 8009530:	f001 f99e 	bl	800a870 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009534:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009536:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009538:	3601      	adds	r6, #1
 800953a:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800953c:	4628      	mov	r0, r5
 800953e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8009540:	b965      	cbnz	r5, 800955c <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009542:	6840      	ldr	r0, [r0, #4]
 8009544:	f018 fe62 	bl	802220c <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009548:	6863      	ldr	r3, [r4, #4]
 800954a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800954c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800954e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009550:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009552:	4293      	cmp	r3, r2
 8009554:	d3f0      	bcc.n	8009538 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8009556:	6823      	ldr	r3, [r4, #0]
 8009558:	6063      	str	r3, [r4, #4]
 800955a:	e7ed      	b.n	8009538 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800955c:	68c0      	ldr	r0, [r0, #12]
 800955e:	f018 fe55 	bl	802220c <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009562:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009564:	68e3      	ldr	r3, [r4, #12]
 8009566:	4251      	negs	r1, r2
 8009568:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800956a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800956c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800956e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8009570:	bf3e      	ittt	cc
 8009572:	68a3      	ldrcc	r3, [r4, #8]
 8009574:	185b      	addcc	r3, r3, r1
 8009576:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8009578:	2d02      	cmp	r5, #2
 800957a:	d101      	bne.n	8009580 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800957c:	b116      	cbz	r6, 8009584 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800957e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8009580:	2500      	movs	r5, #0
 8009582:	e7d9      	b.n	8009538 <prvCopyDataToQueue+0x1a>
 8009584:	4635      	mov	r5, r6
 8009586:	e7d7      	b.n	8009538 <prvCopyDataToQueue+0x1a>

08009588 <prvCopyDataFromQueue>:
{
 8009588:	4603      	mov	r3, r0
 800958a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800958c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800958e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009590:	b16a      	cbz	r2, 80095ae <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009592:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009594:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009596:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009598:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800959a:	bf28      	it	cs
 800959c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800959e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80095a0:	bf28      	it	cs
 80095a2:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80095a4:	68d9      	ldr	r1, [r3, #12]
}
 80095a6:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80095aa:	f018 be2f 	b.w	802220c <memcpy>
}
 80095ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 80095b2:	4770      	bx	lr

080095b4 <prvUnlockQueue>:
{
 80095b4:	b570      	push	{r4, r5, r6, lr}
 80095b6:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80095b8:	f7ff fe5c 	bl	8009274 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80095bc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80095c0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80095c4:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80095c6:	2d00      	cmp	r5, #0
 80095c8:	dc14      	bgt.n	80095f4 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80095ca:	23ff      	movs	r3, #255	; 0xff
 80095cc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80095d0:	f7ff fe72 	bl	80092b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 80095d4:	f7ff fe4e 	bl	8009274 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80095d8:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095dc:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80095e0:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80095e2:	2d00      	cmp	r5, #0
 80095e4:	dc12      	bgt.n	800960c <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80095e6:	23ff      	movs	r3, #255	; 0xff
 80095e8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80095ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80095f0:	f7ff be62 	b.w	80092b8 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80095f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80095f6:	2b00      	cmp	r3, #0
 80095f8:	d0e7      	beq.n	80095ca <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80095fa:	4630      	mov	r0, r6
 80095fc:	f001 f854 	bl	800a6a8 <xTaskRemoveFromEventList>
 8009600:	b108      	cbz	r0, 8009606 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8009602:	f001 f8dd 	bl	800a7c0 <vTaskMissedYield>
			--cTxLock;
 8009606:	3d01      	subs	r5, #1
 8009608:	b26d      	sxtb	r5, r5
 800960a:	e7dc      	b.n	80095c6 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800960c:	6923      	ldr	r3, [r4, #16]
 800960e:	2b00      	cmp	r3, #0
 8009610:	d0e9      	beq.n	80095e6 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009612:	4630      	mov	r0, r6
 8009614:	f001 f848 	bl	800a6a8 <xTaskRemoveFromEventList>
 8009618:	b108      	cbz	r0, 800961e <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800961a:	f001 f8d1 	bl	800a7c0 <vTaskMissedYield>
				--cRxLock;
 800961e:	3d01      	subs	r5, #1
 8009620:	b26d      	sxtb	r5, r5
 8009622:	e7de      	b.n	80095e2 <prvUnlockQueue+0x2e>

08009624 <xQueueGenericReset>:
{
 8009624:	b538      	push	{r3, r4, r5, lr}
 8009626:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8009628:	4604      	mov	r4, r0
 800962a:	b940      	cbnz	r0, 800963e <xQueueGenericReset+0x1a>
 800962c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009630:	f383 8811 	msr	BASEPRI, r3
 8009634:	f3bf 8f6f 	isb	sy
 8009638:	f3bf 8f4f 	dsb	sy
 800963c:	e7fe      	b.n	800963c <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800963e:	f7ff fe19 	bl	8009274 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009642:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8009646:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8009648:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800964a:	434b      	muls	r3, r1
 800964c:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800964e:	1a5b      	subs	r3, r3, r1
 8009650:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009652:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009654:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8009656:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8009658:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800965a:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800965c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009660:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009664:	b995      	cbnz	r5, 800968c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009666:	6923      	ldr	r3, [r4, #16]
 8009668:	b163      	cbz	r3, 8009684 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800966a:	f104 0010 	add.w	r0, r4, #16
 800966e:	f001 f81b 	bl	800a6a8 <xTaskRemoveFromEventList>
 8009672:	b138      	cbz	r0, 8009684 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8009674:	4b0a      	ldr	r3, [pc, #40]	; (80096a0 <xQueueGenericReset+0x7c>)
 8009676:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800967a:	601a      	str	r2, [r3, #0]
 800967c:	f3bf 8f4f 	dsb	sy
 8009680:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8009684:	f7ff fe18 	bl	80092b8 <vPortExitCritical>
}
 8009688:	2001      	movs	r0, #1
 800968a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800968c:	f104 0010 	add.w	r0, r4, #16
 8009690:	f7ff fd48 	bl	8009124 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8009694:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009698:	f7ff fd44 	bl	8009124 <vListInitialise>
 800969c:	e7f2      	b.n	8009684 <xQueueGenericReset+0x60>
 800969e:	bf00      	nop
 80096a0:	e000ed04 	.word	0xe000ed04

080096a4 <xQueueGenericCreateStatic>:
	{
 80096a4:	b513      	push	{r0, r1, r4, lr}
 80096a6:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80096a8:	b940      	cbnz	r0, 80096bc <xQueueGenericCreateStatic+0x18>
 80096aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096ae:	f383 8811 	msr	BASEPRI, r3
 80096b2:	f3bf 8f6f 	isb	sy
 80096b6:	f3bf 8f4f 	dsb	sy
 80096ba:	e7fe      	b.n	80096ba <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80096bc:	b943      	cbnz	r3, 80096d0 <xQueueGenericCreateStatic+0x2c>
 80096be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096c2:	f383 8811 	msr	BASEPRI, r3
 80096c6:	f3bf 8f6f 	isb	sy
 80096ca:	f3bf 8f4f 	dsb	sy
 80096ce:	e7fe      	b.n	80096ce <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80096d0:	b14a      	cbz	r2, 80096e6 <xQueueGenericCreateStatic+0x42>
 80096d2:	b991      	cbnz	r1, 80096fa <xQueueGenericCreateStatic+0x56>
 80096d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096d8:	f383 8811 	msr	BASEPRI, r3
 80096dc:	f3bf 8f6f 	isb	sy
 80096e0:	f3bf 8f4f 	dsb	sy
 80096e4:	e7fe      	b.n	80096e4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80096e6:	b141      	cbz	r1, 80096fa <xQueueGenericCreateStatic+0x56>
 80096e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096ec:	f383 8811 	msr	BASEPRI, r3
 80096f0:	f3bf 8f6f 	isb	sy
 80096f4:	f3bf 8f4f 	dsb	sy
 80096f8:	e7fe      	b.n	80096f8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80096fa:	2350      	movs	r3, #80	; 0x50
 80096fc:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80096fe:	9b01      	ldr	r3, [sp, #4]
 8009700:	2b50      	cmp	r3, #80	; 0x50
 8009702:	d008      	beq.n	8009716 <xQueueGenericCreateStatic+0x72>
 8009704:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009708:	f383 8811 	msr	BASEPRI, r3
 800970c:	f3bf 8f6f 	isb	sy
 8009710:	f3bf 8f4f 	dsb	sy
 8009714:	e7fe      	b.n	8009714 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009716:	2900      	cmp	r1, #0
 8009718:	bf08      	it	eq
 800971a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800971c:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800971e:	6022      	str	r2, [r4, #0]
 8009720:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009722:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009726:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800972a:	4619      	mov	r1, r3
 800972c:	4620      	mov	r0, r4
 800972e:	f7ff ff79 	bl	8009624 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009732:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009736:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800973a:	4620      	mov	r0, r4
 800973c:	b002      	add	sp, #8
 800973e:	bd10      	pop	{r4, pc}

08009740 <xQueueGenericCreate>:
	{
 8009740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009742:	460d      	mov	r5, r1
 8009744:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009746:	4606      	mov	r6, r0
 8009748:	b940      	cbnz	r0, 800975c <xQueueGenericCreate+0x1c>
 800974a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800974e:	f383 8811 	msr	BASEPRI, r3
 8009752:	f3bf 8f6f 	isb	sy
 8009756:	f3bf 8f4f 	dsb	sy
 800975a:	e7fe      	b.n	800975a <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800975c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800975e:	3050      	adds	r0, #80	; 0x50
 8009760:	f7ff fc1c 	bl	8008f9c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009764:	4604      	mov	r4, r0
 8009766:	b170      	cbz	r0, 8009786 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8009768:	2300      	movs	r3, #0
 800976a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800976e:	b165      	cbz	r5, 800978a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009770:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009774:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8009778:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800977a:	2101      	movs	r1, #1
 800977c:	4620      	mov	r0, r4
 800977e:	f7ff ff51 	bl	8009624 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009782:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009786:	4620      	mov	r0, r4
 8009788:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800978a:	4603      	mov	r3, r0
 800978c:	e7f2      	b.n	8009774 <xQueueGenericCreate+0x34>

0800978e <xQueueCreateCountingSemaphoreStatic>:
	{
 800978e:	b513      	push	{r0, r1, r4, lr}
 8009790:	4613      	mov	r3, r2
 8009792:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009794:	b940      	cbnz	r0, 80097a8 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009796:	f04f 0350 	mov.w	r3, #80	; 0x50
 800979a:	f383 8811 	msr	BASEPRI, r3
 800979e:	f3bf 8f6f 	isb	sy
 80097a2:	f3bf 8f4f 	dsb	sy
 80097a6:	e7fe      	b.n	80097a6 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80097a8:	4288      	cmp	r0, r1
 80097aa:	d208      	bcs.n	80097be <xQueueCreateCountingSemaphoreStatic+0x30>
 80097ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097b0:	f383 8811 	msr	BASEPRI, r3
 80097b4:	f3bf 8f6f 	isb	sy
 80097b8:	f3bf 8f4f 	dsb	sy
 80097bc:	e7fe      	b.n	80097bc <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80097be:	2202      	movs	r2, #2
 80097c0:	9200      	str	r2, [sp, #0]
 80097c2:	2200      	movs	r2, #0
 80097c4:	4611      	mov	r1, r2
 80097c6:	f7ff ff6d 	bl	80096a4 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80097ca:	b100      	cbz	r0, 80097ce <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80097cc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80097ce:	b002      	add	sp, #8
 80097d0:	bd10      	pop	{r4, pc}

080097d2 <xQueueCreateCountingSemaphore>:
	{
 80097d2:	b510      	push	{r4, lr}
 80097d4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80097d6:	b940      	cbnz	r0, 80097ea <xQueueCreateCountingSemaphore+0x18>
 80097d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097dc:	f383 8811 	msr	BASEPRI, r3
 80097e0:	f3bf 8f6f 	isb	sy
 80097e4:	f3bf 8f4f 	dsb	sy
 80097e8:	e7fe      	b.n	80097e8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80097ea:	4288      	cmp	r0, r1
 80097ec:	d208      	bcs.n	8009800 <xQueueCreateCountingSemaphore+0x2e>
 80097ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097f2:	f383 8811 	msr	BASEPRI, r3
 80097f6:	f3bf 8f6f 	isb	sy
 80097fa:	f3bf 8f4f 	dsb	sy
 80097fe:	e7fe      	b.n	80097fe <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009800:	2202      	movs	r2, #2
 8009802:	2100      	movs	r1, #0
 8009804:	f7ff ff9c 	bl	8009740 <xQueueGenericCreate>
		if( xHandle != NULL )
 8009808:	b100      	cbz	r0, 800980c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800980a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800980c:	bd10      	pop	{r4, pc}
	...

08009810 <xQueueGenericSend>:
{
 8009810:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009814:	4688      	mov	r8, r1
 8009816:	9201      	str	r2, [sp, #4]
 8009818:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800981a:	4604      	mov	r4, r0
 800981c:	b940      	cbnz	r0, 8009830 <xQueueGenericSend+0x20>
 800981e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009822:	f383 8811 	msr	BASEPRI, r3
 8009826:	f3bf 8f6f 	isb	sy
 800982a:	f3bf 8f4f 	dsb	sy
 800982e:	e7fe      	b.n	800982e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009830:	b951      	cbnz	r1, 8009848 <xQueueGenericSend+0x38>
 8009832:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009834:	b143      	cbz	r3, 8009848 <xQueueGenericSend+0x38>
 8009836:	f04f 0350 	mov.w	r3, #80	; 0x50
 800983a:	f383 8811 	msr	BASEPRI, r3
 800983e:	f3bf 8f6f 	isb	sy
 8009842:	f3bf 8f4f 	dsb	sy
 8009846:	e7fe      	b.n	8009846 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009848:	2f02      	cmp	r7, #2
 800984a:	d10b      	bne.n	8009864 <xQueueGenericSend+0x54>
 800984c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800984e:	2b01      	cmp	r3, #1
 8009850:	d008      	beq.n	8009864 <xQueueGenericSend+0x54>
 8009852:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009856:	f383 8811 	msr	BASEPRI, r3
 800985a:	f3bf 8f6f 	isb	sy
 800985e:	f3bf 8f4f 	dsb	sy
 8009862:	e7fe      	b.n	8009862 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009864:	f000 ffb2 	bl	800a7cc <xTaskGetSchedulerState>
 8009868:	4606      	mov	r6, r0
 800986a:	b950      	cbnz	r0, 8009882 <xQueueGenericSend+0x72>
 800986c:	9b01      	ldr	r3, [sp, #4]
 800986e:	b14b      	cbz	r3, 8009884 <xQueueGenericSend+0x74>
 8009870:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009874:	f383 8811 	msr	BASEPRI, r3
 8009878:	f3bf 8f6f 	isb	sy
 800987c:	f3bf 8f4f 	dsb	sy
 8009880:	e7fe      	b.n	8009880 <xQueueGenericSend+0x70>
 8009882:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8009884:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8009970 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 8009888:	f04f 0900 	mov.w	r9, #0
 800988c:	e037      	b.n	80098fe <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 800988e:	9d01      	ldr	r5, [sp, #4]
 8009890:	b91d      	cbnz	r5, 800989a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 8009892:	f7ff fd11 	bl	80092b8 <vPortExitCritical>
			return errQUEUE_FULL;
 8009896:	2000      	movs	r0, #0
 8009898:	e050      	b.n	800993c <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 800989a:	b916      	cbnz	r6, 80098a2 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800989c:	a802      	add	r0, sp, #8
 800989e:	f000 ff47 	bl	800a730 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80098a2:	f7ff fd09 	bl	80092b8 <vPortExitCritical>
		vTaskSuspendAll();
 80098a6:	f000 fd03 	bl	800a2b0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80098aa:	f7ff fce3 	bl	8009274 <vPortEnterCritical>
 80098ae:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80098b2:	2bff      	cmp	r3, #255	; 0xff
 80098b4:	bf08      	it	eq
 80098b6:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80098ba:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80098be:	2bff      	cmp	r3, #255	; 0xff
 80098c0:	bf08      	it	eq
 80098c2:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80098c6:	f7ff fcf7 	bl	80092b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80098ca:	a901      	add	r1, sp, #4
 80098cc:	a802      	add	r0, sp, #8
 80098ce:	f000 ff3b 	bl	800a748 <xTaskCheckForTimeOut>
 80098d2:	2800      	cmp	r0, #0
 80098d4:	d146      	bne.n	8009964 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80098d6:	f7ff fccd 	bl	8009274 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80098da:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80098dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80098de:	429a      	cmp	r2, r3
 80098e0:	d12f      	bne.n	8009942 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80098e2:	f7ff fce9 	bl	80092b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80098e6:	9901      	ldr	r1, [sp, #4]
 80098e8:	f104 0010 	add.w	r0, r4, #16
 80098ec:	f000 fea4 	bl	800a638 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80098f0:	4620      	mov	r0, r4
 80098f2:	f7ff fe5f 	bl	80095b4 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80098f6:	f000 fd7f 	bl	800a3f8 <xTaskResumeAll>
 80098fa:	b350      	cbz	r0, 8009952 <xQueueGenericSend+0x142>
 80098fc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80098fe:	f7ff fcb9 	bl	8009274 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009902:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009904:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009906:	429a      	cmp	r2, r3
 8009908:	d301      	bcc.n	800990e <xQueueGenericSend+0xfe>
 800990a:	2f02      	cmp	r7, #2
 800990c:	d1bf      	bne.n	800988e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800990e:	463a      	mov	r2, r7
 8009910:	4641      	mov	r1, r8
 8009912:	4620      	mov	r0, r4
 8009914:	f7ff fe03 	bl	800951e <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009918:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800991a:	b11b      	cbz	r3, 8009924 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800991c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009920:	f000 fec2 	bl	800a6a8 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009924:	b138      	cbz	r0, 8009936 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 8009926:	4b12      	ldr	r3, [pc, #72]	; (8009970 <xQueueGenericSend+0x160>)
 8009928:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800992c:	601a      	str	r2, [r3, #0]
 800992e:	f3bf 8f4f 	dsb	sy
 8009932:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009936:	f7ff fcbf 	bl	80092b8 <vPortExitCritical>
				return pdPASS;
 800993a:	2001      	movs	r0, #1
}
 800993c:	b004      	add	sp, #16
 800993e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8009942:	f7ff fcb9 	bl	80092b8 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009946:	4620      	mov	r0, r4
 8009948:	f7ff fe34 	bl	80095b4 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800994c:	f000 fd54 	bl	800a3f8 <xTaskResumeAll>
 8009950:	e7d4      	b.n	80098fc <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 8009952:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8009956:	f8ca 3000 	str.w	r3, [sl]
 800995a:	f3bf 8f4f 	dsb	sy
 800995e:	f3bf 8f6f 	isb	sy
 8009962:	e7cb      	b.n	80098fc <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 8009964:	4620      	mov	r0, r4
 8009966:	f7ff fe25 	bl	80095b4 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800996a:	f000 fd45 	bl	800a3f8 <xTaskResumeAll>
 800996e:	e792      	b.n	8009896 <xQueueGenericSend+0x86>
 8009970:	e000ed04 	.word	0xe000ed04

08009974 <xQueueGenericSendFromISR>:
{
 8009974:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009978:	4689      	mov	r9, r1
 800997a:	4690      	mov	r8, r2
 800997c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800997e:	4604      	mov	r4, r0
 8009980:	b940      	cbnz	r0, 8009994 <xQueueGenericSendFromISR+0x20>
 8009982:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009986:	f383 8811 	msr	BASEPRI, r3
 800998a:	f3bf 8f6f 	isb	sy
 800998e:	f3bf 8f4f 	dsb	sy
 8009992:	e7fe      	b.n	8009992 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009994:	b951      	cbnz	r1, 80099ac <xQueueGenericSendFromISR+0x38>
 8009996:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009998:	b143      	cbz	r3, 80099ac <xQueueGenericSendFromISR+0x38>
 800999a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800999e:	f383 8811 	msr	BASEPRI, r3
 80099a2:	f3bf 8f6f 	isb	sy
 80099a6:	f3bf 8f4f 	dsb	sy
 80099aa:	e7fe      	b.n	80099aa <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80099ac:	2f02      	cmp	r7, #2
 80099ae:	d10b      	bne.n	80099c8 <xQueueGenericSendFromISR+0x54>
 80099b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80099b2:	2b01      	cmp	r3, #1
 80099b4:	d008      	beq.n	80099c8 <xQueueGenericSendFromISR+0x54>
 80099b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099ba:	f383 8811 	msr	BASEPRI, r3
 80099be:	f3bf 8f6f 	isb	sy
 80099c2:	f3bf 8f4f 	dsb	sy
 80099c6:	e7fe      	b.n	80099c6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80099c8:	f7ff fd70 	bl	80094ac <vPortValidateInterruptPriority>
	__asm volatile
 80099cc:	f3ef 8611 	mrs	r6, BASEPRI
 80099d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099d4:	f383 8811 	msr	BASEPRI, r3
 80099d8:	f3bf 8f6f 	isb	sy
 80099dc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80099e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80099e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80099e4:	429a      	cmp	r2, r3
 80099e6:	d301      	bcc.n	80099ec <xQueueGenericSendFromISR+0x78>
 80099e8:	2f02      	cmp	r7, #2
 80099ea:	d122      	bne.n	8009a32 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80099ec:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80099f0:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80099f2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80099f4:	4649      	mov	r1, r9
 80099f6:	4620      	mov	r0, r4
 80099f8:	f7ff fd91 	bl	800951e <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80099fc:	1c6b      	adds	r3, r5, #1
 80099fe:	d113      	bne.n	8009a28 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009a00:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009a02:	b90b      	cbnz	r3, 8009a08 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8009a04:	2001      	movs	r0, #1
 8009a06:	e00b      	b.n	8009a20 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009a08:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009a0c:	f000 fe4c 	bl	800a6a8 <xTaskRemoveFromEventList>
 8009a10:	2800      	cmp	r0, #0
 8009a12:	d0f7      	beq.n	8009a04 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8009a14:	f1b8 0f00 	cmp.w	r8, #0
 8009a18:	d0f4      	beq.n	8009a04 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009a1a:	2001      	movs	r0, #1
 8009a1c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009a20:	f386 8811 	msr	BASEPRI, r6
}
 8009a24:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009a28:	3501      	adds	r5, #1
 8009a2a:	b26d      	sxtb	r5, r5
 8009a2c:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009a30:	e7e8      	b.n	8009a04 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8009a32:	2000      	movs	r0, #0
 8009a34:	e7f4      	b.n	8009a20 <xQueueGenericSendFromISR+0xac>

08009a36 <xQueueGiveFromISR>:
{
 8009a36:	b570      	push	{r4, r5, r6, lr}
 8009a38:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8009a3a:	4604      	mov	r4, r0
 8009a3c:	b940      	cbnz	r0, 8009a50 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009a3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a42:	f383 8811 	msr	BASEPRI, r3
 8009a46:	f3bf 8f6f 	isb	sy
 8009a4a:	f3bf 8f4f 	dsb	sy
 8009a4e:	e7fe      	b.n	8009a4e <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009a50:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009a52:	b143      	cbz	r3, 8009a66 <xQueueGiveFromISR+0x30>
 8009a54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a58:	f383 8811 	msr	BASEPRI, r3
 8009a5c:	f3bf 8f6f 	isb	sy
 8009a60:	f3bf 8f4f 	dsb	sy
 8009a64:	e7fe      	b.n	8009a64 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009a66:	6803      	ldr	r3, [r0, #0]
 8009a68:	b953      	cbnz	r3, 8009a80 <xQueueGiveFromISR+0x4a>
 8009a6a:	6883      	ldr	r3, [r0, #8]
 8009a6c:	b143      	cbz	r3, 8009a80 <xQueueGiveFromISR+0x4a>
 8009a6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a72:	f383 8811 	msr	BASEPRI, r3
 8009a76:	f3bf 8f6f 	isb	sy
 8009a7a:	f3bf 8f4f 	dsb	sy
 8009a7e:	e7fe      	b.n	8009a7e <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009a80:	f7ff fd14 	bl	80094ac <vPortValidateInterruptPriority>
	__asm volatile
 8009a84:	f3ef 8611 	mrs	r6, BASEPRI
 8009a88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a8c:	f383 8811 	msr	BASEPRI, r3
 8009a90:	f3bf 8f6f 	isb	sy
 8009a94:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009a98:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8009a9a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009a9c:	4293      	cmp	r3, r2
 8009a9e:	d91c      	bls.n	8009ada <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009aa0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009aa4:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009aa6:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8009aa8:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009aaa:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8009aac:	d110      	bne.n	8009ad0 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009aae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009ab0:	b90b      	cbnz	r3, 8009ab6 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009ab2:	2001      	movs	r0, #1
 8009ab4:	e009      	b.n	8009aca <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009ab6:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009aba:	f000 fdf5 	bl	800a6a8 <xTaskRemoveFromEventList>
 8009abe:	2800      	cmp	r0, #0
 8009ac0:	d0f7      	beq.n	8009ab2 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009ac2:	2d00      	cmp	r5, #0
 8009ac4:	d0f5      	beq.n	8009ab2 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009ac6:	2001      	movs	r0, #1
 8009ac8:	6028      	str	r0, [r5, #0]
	__asm volatile
 8009aca:	f386 8811 	msr	BASEPRI, r6
}
 8009ace:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009ad0:	3301      	adds	r3, #1
 8009ad2:	b25b      	sxtb	r3, r3
 8009ad4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8009ad8:	e7eb      	b.n	8009ab2 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8009ada:	2000      	movs	r0, #0
 8009adc:	e7f5      	b.n	8009aca <xQueueGiveFromISR+0x94>
	...

08009ae0 <xQueueReceive>:
{
 8009ae0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009ae4:	b085      	sub	sp, #20
 8009ae6:	460f      	mov	r7, r1
 8009ae8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009aea:	4604      	mov	r4, r0
 8009aec:	b940      	cbnz	r0, 8009b00 <xQueueReceive+0x20>
	__asm volatile
 8009aee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009af2:	f383 8811 	msr	BASEPRI, r3
 8009af6:	f3bf 8f6f 	isb	sy
 8009afa:	f3bf 8f4f 	dsb	sy
 8009afe:	e7fe      	b.n	8009afe <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009b00:	b951      	cbnz	r1, 8009b18 <xQueueReceive+0x38>
 8009b02:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009b04:	b143      	cbz	r3, 8009b18 <xQueueReceive+0x38>
 8009b06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b0a:	f383 8811 	msr	BASEPRI, r3
 8009b0e:	f3bf 8f6f 	isb	sy
 8009b12:	f3bf 8f4f 	dsb	sy
 8009b16:	e7fe      	b.n	8009b16 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009b18:	f000 fe58 	bl	800a7cc <xTaskGetSchedulerState>
 8009b1c:	4606      	mov	r6, r0
 8009b1e:	b950      	cbnz	r0, 8009b36 <xQueueReceive+0x56>
 8009b20:	9b01      	ldr	r3, [sp, #4]
 8009b22:	b14b      	cbz	r3, 8009b38 <xQueueReceive+0x58>
 8009b24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b28:	f383 8811 	msr	BASEPRI, r3
 8009b2c:	f3bf 8f6f 	isb	sy
 8009b30:	f3bf 8f4f 	dsb	sy
 8009b34:	e7fe      	b.n	8009b34 <xQueueReceive+0x54>
 8009b36:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8009b38:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8009c1c <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 8009b3c:	f04f 0800 	mov.w	r8, #0
 8009b40:	e03b      	b.n	8009bba <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009b42:	9d01      	ldr	r5, [sp, #4]
 8009b44:	b91d      	cbnz	r5, 8009b4e <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 8009b46:	f7ff fbb7 	bl	80092b8 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009b4a:	2000      	movs	r0, #0
 8009b4c:	e052      	b.n	8009bf4 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 8009b4e:	b916      	cbnz	r6, 8009b56 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009b50:	a802      	add	r0, sp, #8
 8009b52:	f000 fded 	bl	800a730 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009b56:	f7ff fbaf 	bl	80092b8 <vPortExitCritical>
		vTaskSuspendAll();
 8009b5a:	f000 fba9 	bl	800a2b0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009b5e:	f7ff fb89 	bl	8009274 <vPortEnterCritical>
 8009b62:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009b66:	2bff      	cmp	r3, #255	; 0xff
 8009b68:	bf08      	it	eq
 8009b6a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009b6e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009b72:	2bff      	cmp	r3, #255	; 0xff
 8009b74:	bf08      	it	eq
 8009b76:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009b7a:	f7ff fb9d 	bl	80092b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009b7e:	a901      	add	r1, sp, #4
 8009b80:	a802      	add	r0, sp, #8
 8009b82:	f000 fde1 	bl	800a748 <xTaskCheckForTimeOut>
 8009b86:	2800      	cmp	r0, #0
 8009b88:	d13d      	bne.n	8009c06 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009b8a:	4620      	mov	r0, r4
 8009b8c:	f7ff fcbc 	bl	8009508 <prvIsQueueEmpty>
 8009b90:	b398      	cbz	r0, 8009bfa <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009b92:	9901      	ldr	r1, [sp, #4]
 8009b94:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009b98:	f000 fd4e 	bl	800a638 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009b9c:	4620      	mov	r0, r4
 8009b9e:	f7ff fd09 	bl	80095b4 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009ba2:	f000 fc29 	bl	800a3f8 <xTaskResumeAll>
 8009ba6:	b938      	cbnz	r0, 8009bb8 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 8009ba8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8009bac:	f8c9 3000 	str.w	r3, [r9]
 8009bb0:	f3bf 8f4f 	dsb	sy
 8009bb4:	f3bf 8f6f 	isb	sy
 8009bb8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009bba:	f7ff fb5b 	bl	8009274 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009bbe:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009bc0:	2d00      	cmp	r5, #0
 8009bc2:	d0be      	beq.n	8009b42 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009bc4:	4639      	mov	r1, r7
 8009bc6:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009bc8:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009bca:	f7ff fcdd 	bl	8009588 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009bce:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009bd0:	6923      	ldr	r3, [r4, #16]
 8009bd2:	b163      	cbz	r3, 8009bee <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009bd4:	f104 0010 	add.w	r0, r4, #16
 8009bd8:	f000 fd66 	bl	800a6a8 <xTaskRemoveFromEventList>
 8009bdc:	b138      	cbz	r0, 8009bee <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 8009bde:	4b0f      	ldr	r3, [pc, #60]	; (8009c1c <xQueueReceive+0x13c>)
 8009be0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009be4:	601a      	str	r2, [r3, #0]
 8009be6:	f3bf 8f4f 	dsb	sy
 8009bea:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009bee:	f7ff fb63 	bl	80092b8 <vPortExitCritical>
				return pdPASS;
 8009bf2:	2001      	movs	r0, #1
}
 8009bf4:	b005      	add	sp, #20
 8009bf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 8009bfa:	4620      	mov	r0, r4
 8009bfc:	f7ff fcda 	bl	80095b4 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009c00:	f000 fbfa 	bl	800a3f8 <xTaskResumeAll>
 8009c04:	e7d8      	b.n	8009bb8 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 8009c06:	4620      	mov	r0, r4
 8009c08:	f7ff fcd4 	bl	80095b4 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009c0c:	f000 fbf4 	bl	800a3f8 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009c10:	4620      	mov	r0, r4
 8009c12:	f7ff fc79 	bl	8009508 <prvIsQueueEmpty>
 8009c16:	2800      	cmp	r0, #0
 8009c18:	d0ce      	beq.n	8009bb8 <xQueueReceive+0xd8>
 8009c1a:	e796      	b.n	8009b4a <xQueueReceive+0x6a>
 8009c1c:	e000ed04 	.word	0xe000ed04

08009c20 <xQueueSemaphoreTake>:
{
 8009c20:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8009c24:	4604      	mov	r4, r0
{
 8009c26:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009c28:	b940      	cbnz	r0, 8009c3c <xQueueSemaphoreTake+0x1c>
 8009c2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c2e:	f383 8811 	msr	BASEPRI, r3
 8009c32:	f3bf 8f6f 	isb	sy
 8009c36:	f3bf 8f4f 	dsb	sy
 8009c3a:	e7fe      	b.n	8009c3a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009c3c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8009c3e:	b145      	cbz	r5, 8009c52 <xQueueSemaphoreTake+0x32>
 8009c40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c44:	f383 8811 	msr	BASEPRI, r3
 8009c48:	f3bf 8f6f 	isb	sy
 8009c4c:	f3bf 8f4f 	dsb	sy
 8009c50:	e7fe      	b.n	8009c50 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009c52:	f000 fdbb 	bl	800a7cc <xTaskGetSchedulerState>
 8009c56:	4606      	mov	r6, r0
 8009c58:	b950      	cbnz	r0, 8009c70 <xQueueSemaphoreTake+0x50>
 8009c5a:	9b01      	ldr	r3, [sp, #4]
 8009c5c:	b16b      	cbz	r3, 8009c7a <xQueueSemaphoreTake+0x5a>
 8009c5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c62:	f383 8811 	msr	BASEPRI, r3
 8009c66:	f3bf 8f6f 	isb	sy
 8009c6a:	f3bf 8f4f 	dsb	sy
 8009c6e:	e7fe      	b.n	8009c6e <xQueueSemaphoreTake+0x4e>
 8009c70:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 8009c72:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8009da4 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 8009c76:	2700      	movs	r7, #0
 8009c78:	e051      	b.n	8009d1e <xQueueSemaphoreTake+0xfe>
 8009c7a:	4605      	mov	r5, r0
 8009c7c:	e7f9      	b.n	8009c72 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009c7e:	9b01      	ldr	r3, [sp, #4]
 8009c80:	b963      	cbnz	r3, 8009c9c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8009c82:	b145      	cbz	r5, 8009c96 <xQueueSemaphoreTake+0x76>
 8009c84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c88:	f383 8811 	msr	BASEPRI, r3
 8009c8c:	f3bf 8f6f 	isb	sy
 8009c90:	f3bf 8f4f 	dsb	sy
 8009c94:	e7fe      	b.n	8009c94 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 8009c96:	f7ff fb0f 	bl	80092b8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009c9a:	e05e      	b.n	8009d5a <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 8009c9c:	b916      	cbnz	r6, 8009ca4 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009c9e:	a802      	add	r0, sp, #8
 8009ca0:	f000 fd46 	bl	800a730 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009ca4:	f7ff fb08 	bl	80092b8 <vPortExitCritical>
		vTaskSuspendAll();
 8009ca8:	f000 fb02 	bl	800a2b0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009cac:	f7ff fae2 	bl	8009274 <vPortEnterCritical>
 8009cb0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009cb4:	2bff      	cmp	r3, #255	; 0xff
 8009cb6:	bf08      	it	eq
 8009cb8:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009cbc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009cc0:	2bff      	cmp	r3, #255	; 0xff
 8009cc2:	bf08      	it	eq
 8009cc4:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009cc8:	f7ff faf6 	bl	80092b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009ccc:	a901      	add	r1, sp, #4
 8009cce:	a802      	add	r0, sp, #8
 8009cd0:	f000 fd3a 	bl	800a748 <xTaskCheckForTimeOut>
 8009cd4:	2800      	cmp	r0, #0
 8009cd6:	d14a      	bne.n	8009d6e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009cd8:	4620      	mov	r0, r4
 8009cda:	f7ff fc15 	bl	8009508 <prvIsQueueEmpty>
 8009cde:	2800      	cmp	r0, #0
 8009ce0:	d03f      	beq.n	8009d62 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009ce2:	6823      	ldr	r3, [r4, #0]
 8009ce4:	b93b      	cbnz	r3, 8009cf6 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 8009ce6:	f7ff fac5 	bl	8009274 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009cea:	68a0      	ldr	r0, [r4, #8]
 8009cec:	f000 fd7e 	bl	800a7ec <xTaskPriorityInherit>
 8009cf0:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8009cf2:	f7ff fae1 	bl	80092b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009cf6:	9901      	ldr	r1, [sp, #4]
 8009cf8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009cfc:	f000 fc9c 	bl	800a638 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009d00:	4620      	mov	r0, r4
 8009d02:	f7ff fc57 	bl	80095b4 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009d06:	f000 fb77 	bl	800a3f8 <xTaskResumeAll>
 8009d0a:	b938      	cbnz	r0, 8009d1c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009d0c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8009d10:	f8c8 3000 	str.w	r3, [r8]
 8009d14:	f3bf 8f4f 	dsb	sy
 8009d18:	f3bf 8f6f 	isb	sy
 8009d1c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009d1e:	f7ff faa9 	bl	8009274 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009d22:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009d24:	2b00      	cmp	r3, #0
 8009d26:	d0aa      	beq.n	8009c7e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009d28:	3b01      	subs	r3, #1
 8009d2a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009d2c:	6823      	ldr	r3, [r4, #0]
 8009d2e:	b913      	cbnz	r3, 8009d36 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8009d30:	f000 fe34 	bl	800a99c <pvTaskIncrementMutexHeldCount>
 8009d34:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009d36:	6923      	ldr	r3, [r4, #16]
 8009d38:	b163      	cbz	r3, 8009d54 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009d3a:	f104 0010 	add.w	r0, r4, #16
 8009d3e:	f000 fcb3 	bl	800a6a8 <xTaskRemoveFromEventList>
 8009d42:	b138      	cbz	r0, 8009d54 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 8009d44:	4b17      	ldr	r3, [pc, #92]	; (8009da4 <xQueueSemaphoreTake+0x184>)
 8009d46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009d4a:	601a      	str	r2, [r3, #0]
 8009d4c:	f3bf 8f4f 	dsb	sy
 8009d50:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009d54:	f7ff fab0 	bl	80092b8 <vPortExitCritical>
				return pdPASS;
 8009d58:	2501      	movs	r5, #1
}
 8009d5a:	4628      	mov	r0, r5
 8009d5c:	b004      	add	sp, #16
 8009d5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8009d62:	4620      	mov	r0, r4
 8009d64:	f7ff fc26 	bl	80095b4 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009d68:	f000 fb46 	bl	800a3f8 <xTaskResumeAll>
 8009d6c:	e7d6      	b.n	8009d1c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8009d6e:	4620      	mov	r0, r4
 8009d70:	f7ff fc20 	bl	80095b4 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009d74:	f000 fb40 	bl	800a3f8 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009d78:	4620      	mov	r0, r4
 8009d7a:	f7ff fbc5 	bl	8009508 <prvIsQueueEmpty>
 8009d7e:	2800      	cmp	r0, #0
 8009d80:	d0cc      	beq.n	8009d1c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009d82:	2d00      	cmp	r5, #0
 8009d84:	d0e9      	beq.n	8009d5a <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 8009d86:	f7ff fa75 	bl	8009274 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8009d8a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009d8c:	b119      	cbz	r1, 8009d96 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009d8e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009d90:	6819      	ldr	r1, [r3, #0]
 8009d92:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009d96:	68a0      	ldr	r0, [r4, #8]
 8009d98:	f000 fdae 	bl	800a8f8 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8009d9c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8009d9e:	f7ff fa8b 	bl	80092b8 <vPortExitCritical>
 8009da2:	e7da      	b.n	8009d5a <xQueueSemaphoreTake+0x13a>
 8009da4:	e000ed04 	.word	0xe000ed04

08009da8 <xQueueReceiveFromISR>:
{
 8009da8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009dac:	4689      	mov	r9, r1
 8009dae:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8009db0:	4605      	mov	r5, r0
 8009db2:	b940      	cbnz	r0, 8009dc6 <xQueueReceiveFromISR+0x1e>
 8009db4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009db8:	f383 8811 	msr	BASEPRI, r3
 8009dbc:	f3bf 8f6f 	isb	sy
 8009dc0:	f3bf 8f4f 	dsb	sy
 8009dc4:	e7fe      	b.n	8009dc4 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009dc6:	b951      	cbnz	r1, 8009dde <xQueueReceiveFromISR+0x36>
 8009dc8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009dca:	b143      	cbz	r3, 8009dde <xQueueReceiveFromISR+0x36>
 8009dcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dd0:	f383 8811 	msr	BASEPRI, r3
 8009dd4:	f3bf 8f6f 	isb	sy
 8009dd8:	f3bf 8f4f 	dsb	sy
 8009ddc:	e7fe      	b.n	8009ddc <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009dde:	f7ff fb65 	bl	80094ac <vPortValidateInterruptPriority>
	__asm volatile
 8009de2:	f3ef 8711 	mrs	r7, BASEPRI
 8009de6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dea:	f383 8811 	msr	BASEPRI, r3
 8009dee:	f3bf 8f6f 	isb	sy
 8009df2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009df6:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009df8:	b31c      	cbz	r4, 8009e42 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009dfa:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009dfe:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8009e00:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009e02:	4628      	mov	r0, r5
 8009e04:	f7ff fbc0 	bl	8009588 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009e08:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009e0a:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009e0c:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8009e0e:	d113      	bne.n	8009e38 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009e10:	692b      	ldr	r3, [r5, #16]
 8009e12:	b90b      	cbnz	r3, 8009e18 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009e14:	2001      	movs	r0, #1
 8009e16:	e00b      	b.n	8009e30 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009e18:	f105 0010 	add.w	r0, r5, #16
 8009e1c:	f000 fc44 	bl	800a6a8 <xTaskRemoveFromEventList>
 8009e20:	2800      	cmp	r0, #0
 8009e22:	d0f7      	beq.n	8009e14 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009e24:	f1b8 0f00 	cmp.w	r8, #0
 8009e28:	d0f4      	beq.n	8009e14 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009e2a:	2001      	movs	r0, #1
 8009e2c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009e30:	f387 8811 	msr	BASEPRI, r7
}
 8009e34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009e38:	3601      	adds	r6, #1
 8009e3a:	b276      	sxtb	r6, r6
 8009e3c:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8009e40:	e7e8      	b.n	8009e14 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8009e42:	4620      	mov	r0, r4
 8009e44:	e7f4      	b.n	8009e30 <xQueueReceiveFromISR+0x88>
	...

08009e48 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009e48:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009e4a:	4a07      	ldr	r2, [pc, #28]	; (8009e68 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009e4c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009e4e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8009e52:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8009e56:	b91d      	cbnz	r5, 8009e60 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009e58:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009e5c:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8009e5e:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009e60:	3301      	adds	r3, #1
 8009e62:	2b08      	cmp	r3, #8
 8009e64:	d1f3      	bne.n	8009e4e <vQueueAddToRegistry+0x6>
 8009e66:	e7fa      	b.n	8009e5e <vQueueAddToRegistry+0x16>
 8009e68:	2000e948 	.word	0x2000e948

08009e6c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009e6c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009e6e:	4909      	ldr	r1, [pc, #36]	; (8009e94 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009e70:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009e72:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 8009e76:	4282      	cmp	r2, r0
 8009e78:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8009e7c:	d106      	bne.n	8009e8c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009e7e:	4a06      	ldr	r2, [pc, #24]	; (8009e98 <vQueueUnregisterQueue+0x2c>)
 8009e80:	2100      	movs	r1, #0
 8009e82:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8009e86:	4422      	add	r2, r4
 8009e88:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009e8a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009e8c:	3301      	adds	r3, #1
 8009e8e:	2b08      	cmp	r3, #8
 8009e90:	d1ef      	bne.n	8009e72 <vQueueUnregisterQueue+0x6>
 8009e92:	e7fa      	b.n	8009e8a <vQueueUnregisterQueue+0x1e>
 8009e94:	2000e94c 	.word	0x2000e94c
 8009e98:	2000e948 	.word	0x2000e948

08009e9c <vQueueDelete>:
{
 8009e9c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009e9e:	b940      	cbnz	r0, 8009eb2 <vQueueDelete+0x16>
	__asm volatile
 8009ea0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ea4:	f383 8811 	msr	BASEPRI, r3
 8009ea8:	f3bf 8f6f 	isb	sy
 8009eac:	f3bf 8f4f 	dsb	sy
 8009eb0:	e7fe      	b.n	8009eb0 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8009eb2:	f7ff ffdb 	bl	8009e6c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009eb6:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 8009eba:	b91b      	cbnz	r3, 8009ec4 <vQueueDelete+0x28>
}
 8009ebc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009ec0:	f7ff b8f8 	b.w	80090b4 <vPortFree>
}
 8009ec4:	bd10      	pop	{r4, pc}

08009ec6 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8009ec6:	b570      	push	{r4, r5, r6, lr}
 8009ec8:	4604      	mov	r4, r0
 8009eca:	460d      	mov	r5, r1
 8009ecc:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009ece:	f7ff f9d1 	bl	8009274 <vPortEnterCritical>
 8009ed2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009ed6:	2bff      	cmp	r3, #255	; 0xff
 8009ed8:	bf04      	itt	eq
 8009eda:	2300      	moveq	r3, #0
 8009edc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009ee0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009ee4:	2bff      	cmp	r3, #255	; 0xff
 8009ee6:	bf04      	itt	eq
 8009ee8:	2300      	moveq	r3, #0
 8009eea:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009eee:	f7ff f9e3 	bl	80092b8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009ef2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009ef4:	b92b      	cbnz	r3, 8009f02 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009ef6:	4632      	mov	r2, r6
 8009ef8:	4629      	mov	r1, r5
 8009efa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009efe:	f000 fbb5 	bl	800a66c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8009f02:	4620      	mov	r0, r4
	}
 8009f04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009f08:	f7ff bb54 	b.w	80095b4 <prvUnlockQueue>

08009f0c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009f0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f10:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8009f12:	f7ff f9af 	bl	8009274 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8009f16:	4b2f      	ldr	r3, [pc, #188]	; (8009fd4 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8009f18:	4d2f      	ldr	r5, [pc, #188]	; (8009fd8 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8009f1a:	681a      	ldr	r2, [r3, #0]
 8009f1c:	4f2f      	ldr	r7, [pc, #188]	; (8009fdc <prvAddNewTaskToReadyList+0xd0>)
 8009f1e:	3201      	adds	r2, #1
 8009f20:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8009f22:	682e      	ldr	r6, [r5, #0]
 8009f24:	2e00      	cmp	r6, #0
 8009f26:	d149      	bne.n	8009fbc <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009f28:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009f2a:	681b      	ldr	r3, [r3, #0]
 8009f2c:	2b01      	cmp	r3, #1
 8009f2e:	d11f      	bne.n	8009f70 <prvAddNewTaskToReadyList+0x64>
 8009f30:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009f32:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009f34:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009f36:	f7ff f8f5 	bl	8009124 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009f3a:	2e38      	cmp	r6, #56	; 0x38
 8009f3c:	f108 0814 	add.w	r8, r8, #20
 8009f40:	d1f7      	bne.n	8009f32 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8009f42:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800a008 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8009f46:	4e26      	ldr	r6, [pc, #152]	; (8009fe0 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8009f48:	4640      	mov	r0, r8
 8009f4a:	f7ff f8eb 	bl	8009124 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009f4e:	4630      	mov	r0, r6
 8009f50:	f7ff f8e8 	bl	8009124 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8009f54:	4823      	ldr	r0, [pc, #140]	; (8009fe4 <prvAddNewTaskToReadyList+0xd8>)
 8009f56:	f7ff f8e5 	bl	8009124 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009f5a:	4823      	ldr	r0, [pc, #140]	; (8009fe8 <prvAddNewTaskToReadyList+0xdc>)
 8009f5c:	f7ff f8e2 	bl	8009124 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009f60:	4822      	ldr	r0, [pc, #136]	; (8009fec <prvAddNewTaskToReadyList+0xe0>)
 8009f62:	f7ff f8df 	bl	8009124 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8009f66:	4b22      	ldr	r3, [pc, #136]	; (8009ff0 <prvAddNewTaskToReadyList+0xe4>)
 8009f68:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009f6c:	4b21      	ldr	r3, [pc, #132]	; (8009ff4 <prvAddNewTaskToReadyList+0xe8>)
 8009f6e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8009f70:	4a21      	ldr	r2, [pc, #132]	; (8009ff8 <prvAddNewTaskToReadyList+0xec>)
 8009f72:	6813      	ldr	r3, [r2, #0]
 8009f74:	3301      	adds	r3, #1
 8009f76:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009f78:	4a20      	ldr	r2, [pc, #128]	; (8009ffc <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009f7a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009f7c:	6811      	ldr	r1, [r2, #0]
 8009f7e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009f80:	2014      	movs	r0, #20
 8009f82:	428b      	cmp	r3, r1
 8009f84:	fb00 7003 	mla	r0, r0, r3, r7
 8009f88:	f104 0104 	add.w	r1, r4, #4
 8009f8c:	bf88      	it	hi
 8009f8e:	6013      	strhi	r3, [r2, #0]
 8009f90:	f7ff f8d6 	bl	8009140 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8009f94:	f7ff f990 	bl	80092b8 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009f98:	4b19      	ldr	r3, [pc, #100]	; (800a000 <prvAddNewTaskToReadyList+0xf4>)
 8009f9a:	681b      	ldr	r3, [r3, #0]
 8009f9c:	b163      	cbz	r3, 8009fb8 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009f9e:	682b      	ldr	r3, [r5, #0]
 8009fa0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009fa2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009fa4:	429a      	cmp	r2, r3
 8009fa6:	d207      	bcs.n	8009fb8 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8009fa8:	4b16      	ldr	r3, [pc, #88]	; (800a004 <prvAddNewTaskToReadyList+0xf8>)
 8009faa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009fae:	601a      	str	r2, [r3, #0]
 8009fb0:	f3bf 8f4f 	dsb	sy
 8009fb4:	f3bf 8f6f 	isb	sy
}
 8009fb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009fbc:	4b10      	ldr	r3, [pc, #64]	; (800a000 <prvAddNewTaskToReadyList+0xf4>)
 8009fbe:	681b      	ldr	r3, [r3, #0]
 8009fc0:	2b00      	cmp	r3, #0
 8009fc2:	d1d5      	bne.n	8009f70 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009fc4:	682b      	ldr	r3, [r5, #0]
 8009fc6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009fc8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009fca:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009fcc:	bf98      	it	ls
 8009fce:	602c      	strls	r4, [r5, #0]
 8009fd0:	e7ce      	b.n	8009f70 <prvAddNewTaskToReadyList+0x64>
 8009fd2:	bf00      	nop
 8009fd4:	2000e218 	.word	0x2000e218
 8009fd8:	2000ddac 	.word	0x2000ddac
 8009fdc:	2000ddb8 	.word	0x2000ddb8
 8009fe0:	2000e244 	.word	0x2000e244
 8009fe4:	2000e260 	.word	0x2000e260
 8009fe8:	2000e28c 	.word	0x2000e28c
 8009fec:	2000e278 	.word	0x2000e278
 8009ff0:	2000ddb0 	.word	0x2000ddb0
 8009ff4:	2000ddb4 	.word	0x2000ddb4
 8009ff8:	2000e228 	.word	0x2000e228
 8009ffc:	2000e22c 	.word	0x2000e22c
 800a000:	2000e274 	.word	0x2000e274
 800a004:	e000ed04 	.word	0xe000ed04
 800a008:	2000e230 	.word	0x2000e230

0800a00c <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a00c:	4a06      	ldr	r2, [pc, #24]	; (800a028 <prvResetNextTaskUnblockTime+0x1c>)
 800a00e:	6813      	ldr	r3, [r2, #0]
 800a010:	6819      	ldr	r1, [r3, #0]
 800a012:	4b06      	ldr	r3, [pc, #24]	; (800a02c <prvResetNextTaskUnblockTime+0x20>)
 800a014:	b919      	cbnz	r1, 800a01e <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800a016:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800a01a:	601a      	str	r2, [r3, #0]
	}
}
 800a01c:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a01e:	6812      	ldr	r2, [r2, #0]
 800a020:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800a022:	68d2      	ldr	r2, [r2, #12]
 800a024:	6852      	ldr	r2, [r2, #4]
 800a026:	e7f8      	b.n	800a01a <prvResetNextTaskUnblockTime+0xe>
 800a028:	2000ddb0 	.word	0x2000ddb0
 800a02c:	2000e258 	.word	0x2000e258

0800a030 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a030:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a034:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a038:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800a03c:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a03e:	4606      	mov	r6, r0
 800a040:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a042:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800a044:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a046:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a048:	f018 f8ee 	bl	8022228 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800a04c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a04e:	f1a9 0904 	sub.w	r9, r9, #4
 800a052:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800a054:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800a058:	2d00      	cmp	r5, #0
 800a05a:	d037      	beq.n	800a0cc <prvInitialiseNewTask.isra.0+0x9c>
 800a05c:	1e6b      	subs	r3, r5, #1
 800a05e:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800a062:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800a064:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a068:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800a06c:	7819      	ldrb	r1, [r3, #0]
 800a06e:	b109      	cbz	r1, 800a074 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800a070:	42ab      	cmp	r3, r5
 800a072:	d1f7      	bne.n	800a064 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800a074:	2300      	movs	r3, #0
 800a076:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800a07a:	9d08      	ldr	r5, [sp, #32]
 800a07c:	2d37      	cmp	r5, #55	; 0x37
 800a07e:	bf28      	it	cs
 800a080:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800a082:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800a086:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800a088:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a08a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800a08c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a090:	f7ff f853 	bl	800913a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a094:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800a098:	f104 0018 	add.w	r0, r4, #24
 800a09c:	f7ff f84d 	bl	800913a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800a0a0:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800a0a4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a0a6:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800a0a8:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800a0aa:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800a0ae:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800a0b2:	463a      	mov	r2, r7
 800a0b4:	4631      	mov	r1, r6
 800a0b6:	4648      	mov	r0, r9
 800a0b8:	f7ff f8b4 	bl	8009224 <pxPortInitialiseStack>
 800a0bc:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800a0be:	f1b8 0f00 	cmp.w	r8, #0
 800a0c2:	d001      	beq.n	800a0c8 <prvInitialiseNewTask.isra.0+0x98>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800a0c4:	f8c8 4000 	str.w	r4, [r8]
}
 800a0c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800a0cc:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800a0d0:	e7d3      	b.n	800a07a <prvInitialiseNewTask.isra.0+0x4a>

0800a0d2 <prvDeleteTCB>:
	{
 800a0d2:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800a0d4:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800a0d8:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800a0da:	b93b      	cbnz	r3, 800a0ec <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800a0dc:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a0de:	f7fe ffe9 	bl	80090b4 <vPortFree>
				vPortFree( pxTCB );
 800a0e2:	4620      	mov	r0, r4
	}
 800a0e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800a0e8:	f7fe bfe4 	b.w	80090b4 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800a0ec:	2b01      	cmp	r3, #1
 800a0ee:	d0f9      	beq.n	800a0e4 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800a0f0:	2b02      	cmp	r3, #2
 800a0f2:	d008      	beq.n	800a106 <prvDeleteTCB+0x34>
 800a0f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0f8:	f383 8811 	msr	BASEPRI, r3
 800a0fc:	f3bf 8f6f 	isb	sy
 800a100:	f3bf 8f4f 	dsb	sy
 800a104:	e7fe      	b.n	800a104 <prvDeleteTCB+0x32>
	}
 800a106:	bd10      	pop	{r4, pc}

0800a108 <prvIdleTask>:
{
 800a108:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a10a:	4e14      	ldr	r6, [pc, #80]	; (800a15c <prvIdleTask+0x54>)
				taskYIELD();
 800a10c:	4f14      	ldr	r7, [pc, #80]	; (800a160 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800a10e:	4c15      	ldr	r4, [pc, #84]	; (800a164 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 800a110:	4d15      	ldr	r5, [pc, #84]	; (800a168 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800a112:	6823      	ldr	r3, [r4, #0]
 800a114:	b96b      	cbnz	r3, 800a132 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800a116:	4b15      	ldr	r3, [pc, #84]	; (800a16c <prvIdleTask+0x64>)
 800a118:	681b      	ldr	r3, [r3, #0]
 800a11a:	2b01      	cmp	r3, #1
 800a11c:	d906      	bls.n	800a12c <prvIdleTask+0x24>
				taskYIELD();
 800a11e:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800a122:	603b      	str	r3, [r7, #0]
 800a124:	f3bf 8f4f 	dsb	sy
 800a128:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800a12c:	f7f7 f9e2 	bl	80014f4 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800a130:	e7ed      	b.n	800a10e <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800a132:	f7ff f89f 	bl	8009274 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a136:	68f3      	ldr	r3, [r6, #12]
 800a138:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a13c:	f108 0004 	add.w	r0, r8, #4
 800a140:	f7ff f821 	bl	8009186 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800a144:	682b      	ldr	r3, [r5, #0]
 800a146:	3b01      	subs	r3, #1
 800a148:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800a14a:	6823      	ldr	r3, [r4, #0]
 800a14c:	3b01      	subs	r3, #1
 800a14e:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800a150:	f7ff f8b2 	bl	80092b8 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800a154:	4640      	mov	r0, r8
 800a156:	f7ff ffbc 	bl	800a0d2 <prvDeleteTCB>
 800a15a:	e7da      	b.n	800a112 <prvIdleTask+0xa>
 800a15c:	2000e28c 	.word	0x2000e28c
 800a160:	e000ed04 	.word	0xe000ed04
 800a164:	2000e21c 	.word	0x2000e21c
 800a168:	2000e218 	.word	0x2000e218
 800a16c:	2000ddb8 	.word	0x2000ddb8

0800a170 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800a170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800a172:	4b16      	ldr	r3, [pc, #88]	; (800a1cc <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a174:	4e16      	ldr	r6, [pc, #88]	; (800a1d0 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 800a176:	681d      	ldr	r5, [r3, #0]
{
 800a178:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a17a:	6830      	ldr	r0, [r6, #0]
 800a17c:	3004      	adds	r0, #4
{
 800a17e:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a180:	f7ff f801 	bl	8009186 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800a184:	1c63      	adds	r3, r4, #1
 800a186:	4633      	mov	r3, r6
 800a188:	d107      	bne.n	800a19a <prvAddCurrentTaskToDelayedList+0x2a>
 800a18a:	b137      	cbz	r7, 800a19a <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a18c:	6831      	ldr	r1, [r6, #0]
 800a18e:	4811      	ldr	r0, [pc, #68]	; (800a1d4 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800a190:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a194:	3104      	adds	r1, #4
 800a196:	f7fe bfd3 	b.w	8009140 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800a19a:	681a      	ldr	r2, [r3, #0]
 800a19c:	192c      	adds	r4, r5, r4
 800a19e:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 800a1a0:	d307      	bcc.n	800a1b2 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a1a2:	4a0d      	ldr	r2, [pc, #52]	; (800a1d8 <prvAddCurrentTaskToDelayedList+0x68>)
 800a1a4:	6810      	ldr	r0, [r2, #0]
 800a1a6:	6819      	ldr	r1, [r3, #0]
}
 800a1a8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a1ac:	3104      	adds	r1, #4
 800a1ae:	f7fe bfd3 	b.w	8009158 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a1b2:	4a0a      	ldr	r2, [pc, #40]	; (800a1dc <prvAddCurrentTaskToDelayedList+0x6c>)
 800a1b4:	6810      	ldr	r0, [r2, #0]
 800a1b6:	6819      	ldr	r1, [r3, #0]
 800a1b8:	3104      	adds	r1, #4
 800a1ba:	f7fe ffcd 	bl	8009158 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800a1be:	4b08      	ldr	r3, [pc, #32]	; (800a1e0 <prvAddCurrentTaskToDelayedList+0x70>)
 800a1c0:	681a      	ldr	r2, [r3, #0]
 800a1c2:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800a1c4:	bf88      	it	hi
 800a1c6:	601c      	strhi	r4, [r3, #0]
}
 800a1c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a1ca:	bf00      	nop
 800a1cc:	2000e2a0 	.word	0x2000e2a0
 800a1d0:	2000ddac 	.word	0x2000ddac
 800a1d4:	2000e278 	.word	0x2000e278
 800a1d8:	2000ddb4 	.word	0x2000ddb4
 800a1dc:	2000ddb0 	.word	0x2000ddb0
 800a1e0:	2000e258 	.word	0x2000e258

0800a1e4 <xTaskCreateStatic>:
	{
 800a1e4:	b570      	push	{r4, r5, r6, lr}
 800a1e6:	b086      	sub	sp, #24
 800a1e8:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800a1ec:	b945      	cbnz	r5, 800a200 <xTaskCreateStatic+0x1c>
 800a1ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1f2:	f383 8811 	msr	BASEPRI, r3
 800a1f6:	f3bf 8f6f 	isb	sy
 800a1fa:	f3bf 8f4f 	dsb	sy
 800a1fe:	e7fe      	b.n	800a1fe <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800a200:	b944      	cbnz	r4, 800a214 <xTaskCreateStatic+0x30>
 800a202:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a206:	f383 8811 	msr	BASEPRI, r3
 800a20a:	f3bf 8f6f 	isb	sy
 800a20e:	f3bf 8f4f 	dsb	sy
 800a212:	e7fe      	b.n	800a212 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800a214:	2660      	movs	r6, #96	; 0x60
 800a216:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800a218:	9e05      	ldr	r6, [sp, #20]
 800a21a:	2e60      	cmp	r6, #96	; 0x60
 800a21c:	d008      	beq.n	800a230 <xTaskCreateStatic+0x4c>
 800a21e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a222:	f383 8811 	msr	BASEPRI, r3
 800a226:	f3bf 8f6f 	isb	sy
 800a22a:	f3bf 8f4f 	dsb	sy
 800a22e:	e7fe      	b.n	800a22e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800a230:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800a232:	2502      	movs	r5, #2
 800a234:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a238:	ad04      	add	r5, sp, #16
 800a23a:	9501      	str	r5, [sp, #4]
 800a23c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800a23e:	9402      	str	r4, [sp, #8]
 800a240:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800a242:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a244:	f7ff fef4 	bl	800a030 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a248:	4620      	mov	r0, r4
 800a24a:	f7ff fe5f 	bl	8009f0c <prvAddNewTaskToReadyList>
	}
 800a24e:	9804      	ldr	r0, [sp, #16]
 800a250:	b006      	add	sp, #24
 800a252:	bd70      	pop	{r4, r5, r6, pc}

0800a254 <xTaskCreate>:
	{
 800a254:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a258:	4607      	mov	r7, r0
 800a25a:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a25c:	0090      	lsls	r0, r2, #2
	{
 800a25e:	4688      	mov	r8, r1
 800a260:	4616      	mov	r6, r2
 800a262:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a264:	f7fe fe9a 	bl	8008f9c <pvPortMalloc>
			if( pxStack != NULL )
 800a268:	4605      	mov	r5, r0
 800a26a:	b1e8      	cbz	r0, 800a2a8 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800a26c:	2060      	movs	r0, #96	; 0x60
 800a26e:	f7fe fe95 	bl	8008f9c <pvPortMalloc>
				if( pxNewTCB != NULL )
 800a272:	4604      	mov	r4, r0
 800a274:	b1a8      	cbz	r0, 800a2a2 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800a276:	2300      	movs	r3, #0
 800a278:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a27c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800a27e:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a280:	9301      	str	r3, [sp, #4]
 800a282:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a284:	9002      	str	r0, [sp, #8]
 800a286:	9300      	str	r3, [sp, #0]
 800a288:	4632      	mov	r2, r6
 800a28a:	464b      	mov	r3, r9
 800a28c:	4641      	mov	r1, r8
 800a28e:	4638      	mov	r0, r7
 800a290:	f7ff fece 	bl	800a030 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a294:	4620      	mov	r0, r4
 800a296:	f7ff fe39 	bl	8009f0c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800a29a:	2001      	movs	r0, #1
	}
 800a29c:	b005      	add	sp, #20
 800a29e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800a2a2:	4628      	mov	r0, r5
 800a2a4:	f7fe ff06 	bl	80090b4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800a2a8:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800a2ac:	e7f6      	b.n	800a29c <xTaskCreate+0x48>
	...

0800a2b0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800a2b0:	4a02      	ldr	r2, [pc, #8]	; (800a2bc <vTaskSuspendAll+0xc>)
 800a2b2:	6813      	ldr	r3, [r2, #0]
 800a2b4:	3301      	adds	r3, #1
 800a2b6:	6013      	str	r3, [r2, #0]
}
 800a2b8:	4770      	bx	lr
 800a2ba:	bf00      	nop
 800a2bc:	2000e224 	.word	0x2000e224

0800a2c0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800a2c0:	4b01      	ldr	r3, [pc, #4]	; (800a2c8 <xTaskGetTickCount+0x8>)
 800a2c2:	6818      	ldr	r0, [r3, #0]
}
 800a2c4:	4770      	bx	lr
 800a2c6:	bf00      	nop
 800a2c8:	2000e2a0 	.word	0x2000e2a0

0800a2cc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a2cc:	4b3f      	ldr	r3, [pc, #252]	; (800a3cc <xTaskIncrementTick+0x100>)
 800a2ce:	681b      	ldr	r3, [r3, #0]
{
 800a2d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a2d4:	2b00      	cmp	r3, #0
 800a2d6:	d173      	bne.n	800a3c0 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800a2d8:	4b3d      	ldr	r3, [pc, #244]	; (800a3d0 <xTaskIncrementTick+0x104>)
 800a2da:	681d      	ldr	r5, [r3, #0]
 800a2dc:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800a2de:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800a2e0:	b9bd      	cbnz	r5, 800a312 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800a2e2:	4b3c      	ldr	r3, [pc, #240]	; (800a3d4 <xTaskIncrementTick+0x108>)
 800a2e4:	681a      	ldr	r2, [r3, #0]
 800a2e6:	6812      	ldr	r2, [r2, #0]
 800a2e8:	b142      	cbz	r2, 800a2fc <xTaskIncrementTick+0x30>
 800a2ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2ee:	f383 8811 	msr	BASEPRI, r3
 800a2f2:	f3bf 8f6f 	isb	sy
 800a2f6:	f3bf 8f4f 	dsb	sy
 800a2fa:	e7fe      	b.n	800a2fa <xTaskIncrementTick+0x2e>
 800a2fc:	4a36      	ldr	r2, [pc, #216]	; (800a3d8 <xTaskIncrementTick+0x10c>)
 800a2fe:	6819      	ldr	r1, [r3, #0]
 800a300:	6810      	ldr	r0, [r2, #0]
 800a302:	6018      	str	r0, [r3, #0]
 800a304:	6011      	str	r1, [r2, #0]
 800a306:	4a35      	ldr	r2, [pc, #212]	; (800a3dc <xTaskIncrementTick+0x110>)
 800a308:	6813      	ldr	r3, [r2, #0]
 800a30a:	3301      	adds	r3, #1
 800a30c:	6013      	str	r3, [r2, #0]
 800a30e:	f7ff fe7d 	bl	800a00c <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a312:	4e33      	ldr	r6, [pc, #204]	; (800a3e0 <xTaskIncrementTick+0x114>)
 800a314:	4f33      	ldr	r7, [pc, #204]	; (800a3e4 <xTaskIncrementTick+0x118>)
 800a316:	6833      	ldr	r3, [r6, #0]
 800a318:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800a3f0 <xTaskIncrementTick+0x124>
 800a31c:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 800a31e:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a322:	d911      	bls.n	800a348 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800a324:	f8d8 3000 	ldr.w	r3, [r8]
 800a328:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a32a:	2314      	movs	r3, #20
 800a32c:	4353      	muls	r3, r2
 800a32e:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800a330:	2b02      	cmp	r3, #2
 800a332:	bf28      	it	cs
 800a334:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 800a336:	4b2c      	ldr	r3, [pc, #176]	; (800a3e8 <xTaskIncrementTick+0x11c>)
 800a338:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 800a33a:	2b00      	cmp	r3, #0
}
 800a33c:	bf0c      	ite	eq
 800a33e:	4620      	moveq	r0, r4
 800a340:	2001      	movne	r0, #1
 800a342:	b003      	add	sp, #12
 800a344:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a348:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800a3d4 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800a34c:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800a3f4 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a350:	f8d9 3000 	ldr.w	r3, [r9]
 800a354:	681b      	ldr	r3, [r3, #0]
 800a356:	b91b      	cbnz	r3, 800a360 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a358:	f04f 33ff 	mov.w	r3, #4294967295
 800a35c:	6033      	str	r3, [r6, #0]
					break;
 800a35e:	e7e1      	b.n	800a324 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a360:	f8d9 3000 	ldr.w	r3, [r9]
 800a364:	68db      	ldr	r3, [r3, #12]
 800a366:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800a36a:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800a36e:	4295      	cmp	r5, r2
 800a370:	d201      	bcs.n	800a376 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800a372:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800a374:	e7d6      	b.n	800a324 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a376:	f10b 0104 	add.w	r1, fp, #4
 800a37a:	4608      	mov	r0, r1
 800a37c:	9101      	str	r1, [sp, #4]
 800a37e:	f7fe ff02 	bl	8009186 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800a382:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800a386:	9901      	ldr	r1, [sp, #4]
 800a388:	b122      	cbz	r2, 800a394 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a38a:	f10b 0018 	add.w	r0, fp, #24
 800a38e:	f7fe fefa 	bl	8009186 <uxListRemove>
 800a392:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800a394:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800a398:	f8da 2000 	ldr.w	r2, [sl]
 800a39c:	2314      	movs	r3, #20
 800a39e:	4290      	cmp	r0, r2
 800a3a0:	bf88      	it	hi
 800a3a2:	f8ca 0000 	strhi.w	r0, [sl]
 800a3a6:	fb03 7000 	mla	r0, r3, r0, r7
 800a3aa:	f7fe fec9 	bl	8009140 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a3ae:	f8d8 1000 	ldr.w	r1, [r8]
 800a3b2:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800a3b6:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800a3b8:	429a      	cmp	r2, r3
 800a3ba:	bf28      	it	cs
 800a3bc:	2401      	movcs	r4, #1
 800a3be:	e7c7      	b.n	800a350 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 800a3c0:	4a0a      	ldr	r2, [pc, #40]	; (800a3ec <xTaskIncrementTick+0x120>)
 800a3c2:	6813      	ldr	r3, [r2, #0]
 800a3c4:	3301      	adds	r3, #1
 800a3c6:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800a3c8:	2400      	movs	r4, #0
 800a3ca:	e7b4      	b.n	800a336 <xTaskIncrementTick+0x6a>
 800a3cc:	2000e224 	.word	0x2000e224
 800a3d0:	2000e2a0 	.word	0x2000e2a0
 800a3d4:	2000ddb0 	.word	0x2000ddb0
 800a3d8:	2000ddb4 	.word	0x2000ddb4
 800a3dc:	2000e25c 	.word	0x2000e25c
 800a3e0:	2000e258 	.word	0x2000e258
 800a3e4:	2000ddb8 	.word	0x2000ddb8
 800a3e8:	2000e2a4 	.word	0x2000e2a4
 800a3ec:	2000e220 	.word	0x2000e220
 800a3f0:	2000ddac 	.word	0x2000ddac
 800a3f4:	2000e22c 	.word	0x2000e22c

0800a3f8 <xTaskResumeAll>:
{
 800a3f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800a3fa:	4c30      	ldr	r4, [pc, #192]	; (800a4bc <xTaskResumeAll+0xc4>)
 800a3fc:	6823      	ldr	r3, [r4, #0]
 800a3fe:	b943      	cbnz	r3, 800a412 <xTaskResumeAll+0x1a>
 800a400:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a404:	f383 8811 	msr	BASEPRI, r3
 800a408:	f3bf 8f6f 	isb	sy
 800a40c:	f3bf 8f4f 	dsb	sy
 800a410:	e7fe      	b.n	800a410 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800a412:	f7fe ff2f 	bl	8009274 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800a416:	6823      	ldr	r3, [r4, #0]
 800a418:	3b01      	subs	r3, #1
 800a41a:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a41c:	6824      	ldr	r4, [r4, #0]
 800a41e:	b12c      	cbz	r4, 800a42c <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800a420:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a422:	f7fe ff49 	bl	80092b8 <vPortExitCritical>
}
 800a426:	4620      	mov	r0, r4
 800a428:	b003      	add	sp, #12
 800a42a:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800a42c:	4b24      	ldr	r3, [pc, #144]	; (800a4c0 <xTaskResumeAll+0xc8>)
 800a42e:	681b      	ldr	r3, [r3, #0]
 800a430:	2b00      	cmp	r3, #0
 800a432:	d0f5      	beq.n	800a420 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a434:	4d23      	ldr	r5, [pc, #140]	; (800a4c4 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 800a436:	4e24      	ldr	r6, [pc, #144]	; (800a4c8 <xTaskResumeAll+0xd0>)
 800a438:	4f24      	ldr	r7, [pc, #144]	; (800a4cc <xTaskResumeAll+0xd4>)
 800a43a:	e01e      	b.n	800a47a <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a43c:	68eb      	ldr	r3, [r5, #12]
 800a43e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a440:	f104 0018 	add.w	r0, r4, #24
 800a444:	f7fe fe9f 	bl	8009186 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a448:	1d21      	adds	r1, r4, #4
 800a44a:	4608      	mov	r0, r1
 800a44c:	9101      	str	r1, [sp, #4]
 800a44e:	f7fe fe9a 	bl	8009186 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a452:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a454:	6832      	ldr	r2, [r6, #0]
 800a456:	9901      	ldr	r1, [sp, #4]
 800a458:	2014      	movs	r0, #20
 800a45a:	4293      	cmp	r3, r2
 800a45c:	fb00 7003 	mla	r0, r0, r3, r7
 800a460:	bf88      	it	hi
 800a462:	6033      	strhi	r3, [r6, #0]
 800a464:	f7fe fe6c 	bl	8009140 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a468:	4b19      	ldr	r3, [pc, #100]	; (800a4d0 <xTaskResumeAll+0xd8>)
 800a46a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a46c:	681b      	ldr	r3, [r3, #0]
 800a46e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a470:	429a      	cmp	r2, r3
 800a472:	d302      	bcc.n	800a47a <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800a474:	4b17      	ldr	r3, [pc, #92]	; (800a4d4 <xTaskResumeAll+0xdc>)
 800a476:	2201      	movs	r2, #1
 800a478:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a47a:	682b      	ldr	r3, [r5, #0]
 800a47c:	2b00      	cmp	r3, #0
 800a47e:	d1dd      	bne.n	800a43c <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800a480:	b10c      	cbz	r4, 800a486 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800a482:	f7ff fdc3 	bl	800a00c <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800a486:	4d14      	ldr	r5, [pc, #80]	; (800a4d8 <xTaskResumeAll+0xe0>)
 800a488:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800a48a:	b144      	cbz	r4, 800a49e <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800a48c:	4e11      	ldr	r6, [pc, #68]	; (800a4d4 <xTaskResumeAll+0xdc>)
 800a48e:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800a490:	f7ff ff1c 	bl	800a2cc <xTaskIncrementTick>
 800a494:	b100      	cbz	r0, 800a498 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800a496:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800a498:	3c01      	subs	r4, #1
 800a49a:	d1f9      	bne.n	800a490 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 800a49c:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800a49e:	4b0d      	ldr	r3, [pc, #52]	; (800a4d4 <xTaskResumeAll+0xdc>)
 800a4a0:	681b      	ldr	r3, [r3, #0]
 800a4a2:	2b00      	cmp	r3, #0
 800a4a4:	d0bc      	beq.n	800a420 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800a4a6:	4b0d      	ldr	r3, [pc, #52]	; (800a4dc <xTaskResumeAll+0xe4>)
 800a4a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a4ac:	601a      	str	r2, [r3, #0]
 800a4ae:	f3bf 8f4f 	dsb	sy
 800a4b2:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800a4b6:	2401      	movs	r4, #1
 800a4b8:	e7b3      	b.n	800a422 <xTaskResumeAll+0x2a>
 800a4ba:	bf00      	nop
 800a4bc:	2000e224 	.word	0x2000e224
 800a4c0:	2000e218 	.word	0x2000e218
 800a4c4:	2000e260 	.word	0x2000e260
 800a4c8:	2000e22c 	.word	0x2000e22c
 800a4cc:	2000ddb8 	.word	0x2000ddb8
 800a4d0:	2000ddac 	.word	0x2000ddac
 800a4d4:	2000e2a4 	.word	0x2000e2a4
 800a4d8:	2000e220 	.word	0x2000e220
 800a4dc:	e000ed04 	.word	0xe000ed04

0800a4e0 <vTaskSetApplicationTaskTag>:
	{
 800a4e0:	b538      	push	{r3, r4, r5, lr}
 800a4e2:	460d      	mov	r5, r1
		if( xTask == NULL )
 800a4e4:	4604      	mov	r4, r0
 800a4e6:	b908      	cbnz	r0, 800a4ec <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800a4e8:	4b04      	ldr	r3, [pc, #16]	; (800a4fc <vTaskSetApplicationTaskTag+0x1c>)
 800a4ea:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800a4ec:	f7fe fec2 	bl	8009274 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800a4f0:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800a4f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800a4f6:	f7fe bedf 	b.w	80092b8 <vPortExitCritical>
 800a4fa:	bf00      	nop
 800a4fc:	2000ddac 	.word	0x2000ddac

0800a500 <xTaskCallApplicationTaskHook>:
	{
 800a500:	4603      	mov	r3, r0
 800a502:	4608      	mov	r0, r1
		if( xTask == NULL )
 800a504:	b90b      	cbnz	r3, 800a50a <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800a506:	4b03      	ldr	r3, [pc, #12]	; (800a514 <xTaskCallApplicationTaskHook+0x14>)
 800a508:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800a50a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a50c:	b103      	cbz	r3, 800a510 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800a50e:	4718      	bx	r3
	}
 800a510:	4618      	mov	r0, r3
 800a512:	4770      	bx	lr
 800a514:	2000ddac 	.word	0x2000ddac

0800a518 <vTaskStartScheduler>:
{
 800a518:	b510      	push	{r4, lr}
 800a51a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800a51c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a51e:	aa07      	add	r2, sp, #28
 800a520:	a906      	add	r1, sp, #24
 800a522:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800a524:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a528:	f7fe fcfc 	bl	8008f24 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800a52c:	9b05      	ldr	r3, [sp, #20]
 800a52e:	9302      	str	r3, [sp, #8]
 800a530:	9b06      	ldr	r3, [sp, #24]
 800a532:	9a07      	ldr	r2, [sp, #28]
 800a534:	4917      	ldr	r1, [pc, #92]	; (800a594 <vTaskStartScheduler+0x7c>)
 800a536:	4818      	ldr	r0, [pc, #96]	; (800a598 <vTaskStartScheduler+0x80>)
 800a538:	e9cd 4300 	strd	r4, r3, [sp]
 800a53c:	4623      	mov	r3, r4
 800a53e:	f7ff fe51 	bl	800a1e4 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800a542:	b1d0      	cbz	r0, 800a57a <vTaskStartScheduler+0x62>
			xReturn = xTimerCreateTimerTask();
 800a544:	f000 fa88 	bl	800aa58 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800a548:	2801      	cmp	r0, #1
 800a54a:	d118      	bne.n	800a57e <vTaskStartScheduler+0x66>
 800a54c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a550:	f383 8811 	msr	BASEPRI, r3
 800a554:	f3bf 8f6f 	isb	sy
 800a558:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800a55c:	4b0f      	ldr	r3, [pc, #60]	; (800a59c <vTaskStartScheduler+0x84>)
 800a55e:	f04f 32ff 	mov.w	r2, #4294967295
 800a562:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800a564:	4b0e      	ldr	r3, [pc, #56]	; (800a5a0 <vTaskStartScheduler+0x88>)
 800a566:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800a568:	4b0e      	ldr	r3, [pc, #56]	; (800a5a4 <vTaskStartScheduler+0x8c>)
 800a56a:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800a56c:	4b0e      	ldr	r3, [pc, #56]	; (800a5a8 <vTaskStartScheduler+0x90>)
 800a56e:	4621      	mov	r1, r4
 800a570:	6818      	ldr	r0, [r3, #0]
 800a572:	f7ff ffc5 	bl	800a500 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 800a576:	f7fe ff15 	bl	80093a4 <xPortStartScheduler>
}
 800a57a:	b008      	add	sp, #32
 800a57c:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800a57e:	3001      	adds	r0, #1
 800a580:	d1fb      	bne.n	800a57a <vTaskStartScheduler+0x62>
 800a582:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a586:	f383 8811 	msr	BASEPRI, r3
 800a58a:	f3bf 8f6f 	isb	sy
 800a58e:	f3bf 8f4f 	dsb	sy
 800a592:	e7fe      	b.n	800a592 <vTaskStartScheduler+0x7a>
 800a594:	080245d1 	.word	0x080245d1
 800a598:	0800a109 	.word	0x0800a109
 800a59c:	2000e258 	.word	0x2000e258
 800a5a0:	2000e274 	.word	0x2000e274
 800a5a4:	2000e2a0 	.word	0x2000e2a0
 800a5a8:	2000ddac 	.word	0x2000ddac

0800a5ac <vTaskSwitchContext>:
{
 800a5ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a5ae:	4b1d      	ldr	r3, [pc, #116]	; (800a624 <vTaskSwitchContext+0x78>)
 800a5b0:	681a      	ldr	r2, [r3, #0]
 800a5b2:	4b1d      	ldr	r3, [pc, #116]	; (800a628 <vTaskSwitchContext+0x7c>)
 800a5b4:	b112      	cbz	r2, 800a5bc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800a5b6:	2201      	movs	r2, #1
 800a5b8:	601a      	str	r2, [r3, #0]
}
 800a5ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800a5bc:	4e1b      	ldr	r6, [pc, #108]	; (800a62c <vTaskSwitchContext+0x80>)
		xYieldPending = pdFALSE;
 800a5be:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 800a5c0:	6830      	ldr	r0, [r6, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a5c2:	4d1b      	ldr	r5, [pc, #108]	; (800a630 <vTaskSwitchContext+0x84>)
		traceTASK_SWITCHED_OUT();
 800a5c4:	2101      	movs	r1, #1
 800a5c6:	f7ff ff9b 	bl	800a500 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a5ca:	4a1a      	ldr	r2, [pc, #104]	; (800a634 <vTaskSwitchContext+0x88>)
 800a5cc:	682b      	ldr	r3, [r5, #0]
 800a5ce:	f04f 0c14 	mov.w	ip, #20
 800a5d2:	4617      	mov	r7, r2
 800a5d4:	fb0c f103 	mul.w	r1, ip, r3
 800a5d8:	1850      	adds	r0, r2, r1
 800a5da:	5854      	ldr	r4, [r2, r1]
 800a5dc:	b1ac      	cbz	r4, 800a60a <vTaskSwitchContext+0x5e>
 800a5de:	6844      	ldr	r4, [r0, #4]
 800a5e0:	3108      	adds	r1, #8
 800a5e2:	6864      	ldr	r4, [r4, #4]
 800a5e4:	6044      	str	r4, [r0, #4]
 800a5e6:	440a      	add	r2, r1
 800a5e8:	4294      	cmp	r4, r2
 800a5ea:	bf04      	itt	eq
 800a5ec:	6862      	ldreq	r2, [r4, #4]
 800a5ee:	6042      	streq	r2, [r0, #4]
 800a5f0:	2214      	movs	r2, #20
 800a5f2:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 800a5f6:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a5f8:	6852      	ldr	r2, [r2, #4]
 800a5fa:	68d2      	ldr	r2, [r2, #12]
 800a5fc:	6032      	str	r2, [r6, #0]
 800a5fe:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
 800a600:	6830      	ldr	r0, [r6, #0]
}
 800a602:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800a606:	f7ff bf7b 	b.w	800a500 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a60a:	b943      	cbnz	r3, 800a61e <vTaskSwitchContext+0x72>
 800a60c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a610:	f383 8811 	msr	BASEPRI, r3
 800a614:	f3bf 8f6f 	isb	sy
 800a618:	f3bf 8f4f 	dsb	sy
 800a61c:	e7fe      	b.n	800a61c <vTaskSwitchContext+0x70>
 800a61e:	3b01      	subs	r3, #1
 800a620:	e7d8      	b.n	800a5d4 <vTaskSwitchContext+0x28>
 800a622:	bf00      	nop
 800a624:	2000e224 	.word	0x2000e224
 800a628:	2000e2a4 	.word	0x2000e2a4
 800a62c:	2000ddac 	.word	0x2000ddac
 800a630:	2000e22c 	.word	0x2000e22c
 800a634:	2000ddb8 	.word	0x2000ddb8

0800a638 <vTaskPlaceOnEventList>:
{
 800a638:	b510      	push	{r4, lr}
 800a63a:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a63c:	b940      	cbnz	r0, 800a650 <vTaskPlaceOnEventList+0x18>
 800a63e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a642:	f383 8811 	msr	BASEPRI, r3
 800a646:	f3bf 8f6f 	isb	sy
 800a64a:	f3bf 8f4f 	dsb	sy
 800a64e:	e7fe      	b.n	800a64e <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a650:	4b05      	ldr	r3, [pc, #20]	; (800a668 <vTaskPlaceOnEventList+0x30>)
 800a652:	6819      	ldr	r1, [r3, #0]
 800a654:	3118      	adds	r1, #24
 800a656:	f7fe fd7f 	bl	8009158 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a65a:	4620      	mov	r0, r4
 800a65c:	2101      	movs	r1, #1
}
 800a65e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a662:	f7ff bd85 	b.w	800a170 <prvAddCurrentTaskToDelayedList>
 800a666:	bf00      	nop
 800a668:	2000ddac 	.word	0x2000ddac

0800a66c <vTaskPlaceOnEventListRestricted>:
	{
 800a66c:	b538      	push	{r3, r4, r5, lr}
 800a66e:	460d      	mov	r5, r1
 800a670:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a672:	b940      	cbnz	r0, 800a686 <vTaskPlaceOnEventListRestricted+0x1a>
 800a674:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a678:	f383 8811 	msr	BASEPRI, r3
 800a67c:	f3bf 8f6f 	isb	sy
 800a680:	f3bf 8f4f 	dsb	sy
 800a684:	e7fe      	b.n	800a684 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a686:	4b07      	ldr	r3, [pc, #28]	; (800a6a4 <vTaskPlaceOnEventListRestricted+0x38>)
 800a688:	6819      	ldr	r1, [r3, #0]
 800a68a:	3118      	adds	r1, #24
 800a68c:	f7fe fd58 	bl	8009140 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a690:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a692:	4621      	mov	r1, r4
 800a694:	bf0c      	ite	eq
 800a696:	4628      	moveq	r0, r5
 800a698:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a69c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a6a0:	f7ff bd66 	b.w	800a170 <prvAddCurrentTaskToDelayedList>
 800a6a4:	2000ddac 	.word	0x2000ddac

0800a6a8 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a6a8:	68c3      	ldr	r3, [r0, #12]
{
 800a6aa:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a6ac:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a6ae:	b944      	cbnz	r4, 800a6c2 <xTaskRemoveFromEventList+0x1a>
 800a6b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6b4:	f383 8811 	msr	BASEPRI, r3
 800a6b8:	f3bf 8f6f 	isb	sy
 800a6bc:	f3bf 8f4f 	dsb	sy
 800a6c0:	e7fe      	b.n	800a6c0 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a6c2:	f104 0118 	add.w	r1, r4, #24
 800a6c6:	4608      	mov	r0, r1
 800a6c8:	9101      	str	r1, [sp, #4]
 800a6ca:	f7fe fd5c 	bl	8009186 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a6ce:	4b12      	ldr	r3, [pc, #72]	; (800a718 <xTaskRemoveFromEventList+0x70>)
 800a6d0:	9901      	ldr	r1, [sp, #4]
 800a6d2:	681b      	ldr	r3, [r3, #0]
 800a6d4:	b9eb      	cbnz	r3, 800a712 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a6d6:	1d21      	adds	r1, r4, #4
 800a6d8:	4608      	mov	r0, r1
 800a6da:	9101      	str	r1, [sp, #4]
 800a6dc:	f7fe fd53 	bl	8009186 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a6e0:	4a0e      	ldr	r2, [pc, #56]	; (800a71c <xTaskRemoveFromEventList+0x74>)
 800a6e2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a6e4:	6810      	ldr	r0, [r2, #0]
 800a6e6:	9901      	ldr	r1, [sp, #4]
 800a6e8:	4283      	cmp	r3, r0
 800a6ea:	bf88      	it	hi
 800a6ec:	6013      	strhi	r3, [r2, #0]
 800a6ee:	4a0c      	ldr	r2, [pc, #48]	; (800a720 <xTaskRemoveFromEventList+0x78>)
 800a6f0:	2014      	movs	r0, #20
 800a6f2:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a6f6:	f7fe fd23 	bl	8009140 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a6fa:	4b0a      	ldr	r3, [pc, #40]	; (800a724 <xTaskRemoveFromEventList+0x7c>)
 800a6fc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a6fe:	681b      	ldr	r3, [r3, #0]
 800a700:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a702:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a704:	bf85      	ittet	hi
 800a706:	4b08      	ldrhi	r3, [pc, #32]	; (800a728 <xTaskRemoveFromEventList+0x80>)
 800a708:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a70a:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a70c:	6018      	strhi	r0, [r3, #0]
}
 800a70e:	b002      	add	sp, #8
 800a710:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a712:	4806      	ldr	r0, [pc, #24]	; (800a72c <xTaskRemoveFromEventList+0x84>)
 800a714:	e7ef      	b.n	800a6f6 <xTaskRemoveFromEventList+0x4e>
 800a716:	bf00      	nop
 800a718:	2000e224 	.word	0x2000e224
 800a71c:	2000e22c 	.word	0x2000e22c
 800a720:	2000ddb8 	.word	0x2000ddb8
 800a724:	2000ddac 	.word	0x2000ddac
 800a728:	2000e2a4 	.word	0x2000e2a4
 800a72c:	2000e260 	.word	0x2000e260

0800a730 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a730:	4b03      	ldr	r3, [pc, #12]	; (800a740 <vTaskInternalSetTimeOutState+0x10>)
 800a732:	681b      	ldr	r3, [r3, #0]
 800a734:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a736:	4b03      	ldr	r3, [pc, #12]	; (800a744 <vTaskInternalSetTimeOutState+0x14>)
 800a738:	681b      	ldr	r3, [r3, #0]
 800a73a:	6043      	str	r3, [r0, #4]
}
 800a73c:	4770      	bx	lr
 800a73e:	bf00      	nop
 800a740:	2000e25c 	.word	0x2000e25c
 800a744:	2000e2a0 	.word	0x2000e2a0

0800a748 <xTaskCheckForTimeOut>:
{
 800a748:	b570      	push	{r4, r5, r6, lr}
 800a74a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a74c:	4605      	mov	r5, r0
 800a74e:	b940      	cbnz	r0, 800a762 <xTaskCheckForTimeOut+0x1a>
 800a750:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a754:	f383 8811 	msr	BASEPRI, r3
 800a758:	f3bf 8f6f 	isb	sy
 800a75c:	f3bf 8f4f 	dsb	sy
 800a760:	e7fe      	b.n	800a760 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a762:	b941      	cbnz	r1, 800a776 <xTaskCheckForTimeOut+0x2e>
 800a764:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a768:	f383 8811 	msr	BASEPRI, r3
 800a76c:	f3bf 8f6f 	isb	sy
 800a770:	f3bf 8f4f 	dsb	sy
 800a774:	e7fe      	b.n	800a774 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a776:	f7fe fd7d 	bl	8009274 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a77a:	4b0f      	ldr	r3, [pc, #60]	; (800a7b8 <xTaskCheckForTimeOut+0x70>)
 800a77c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a77e:	6823      	ldr	r3, [r4, #0]
 800a780:	1c5a      	adds	r2, r3, #1
 800a782:	d010      	beq.n	800a7a6 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a784:	480d      	ldr	r0, [pc, #52]	; (800a7bc <xTaskCheckForTimeOut+0x74>)
 800a786:	682e      	ldr	r6, [r5, #0]
 800a788:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a78a:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a78c:	4286      	cmp	r6, r0
 800a78e:	d001      	beq.n	800a794 <xTaskCheckForTimeOut+0x4c>
 800a790:	428a      	cmp	r2, r1
 800a792:	d90f      	bls.n	800a7b4 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a794:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a796:	4283      	cmp	r3, r0
 800a798:	d90a      	bls.n	800a7b0 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a79a:	1a5b      	subs	r3, r3, r1
 800a79c:	4413      	add	r3, r2
 800a79e:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a7a0:	4628      	mov	r0, r5
 800a7a2:	f7ff ffc5 	bl	800a730 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a7a6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a7a8:	f7fe fd86 	bl	80092b8 <vPortExitCritical>
}
 800a7ac:	4620      	mov	r0, r4
 800a7ae:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a7b0:	2300      	movs	r3, #0
 800a7b2:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a7b4:	2401      	movs	r4, #1
 800a7b6:	e7f7      	b.n	800a7a8 <xTaskCheckForTimeOut+0x60>
 800a7b8:	2000e2a0 	.word	0x2000e2a0
 800a7bc:	2000e25c 	.word	0x2000e25c

0800a7c0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a7c0:	4b01      	ldr	r3, [pc, #4]	; (800a7c8 <vTaskMissedYield+0x8>)
 800a7c2:	2201      	movs	r2, #1
 800a7c4:	601a      	str	r2, [r3, #0]
}
 800a7c6:	4770      	bx	lr
 800a7c8:	2000e2a4 	.word	0x2000e2a4

0800a7cc <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a7cc:	4b05      	ldr	r3, [pc, #20]	; (800a7e4 <xTaskGetSchedulerState+0x18>)
 800a7ce:	681b      	ldr	r3, [r3, #0]
 800a7d0:	b133      	cbz	r3, 800a7e0 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a7d2:	4b05      	ldr	r3, [pc, #20]	; (800a7e8 <xTaskGetSchedulerState+0x1c>)
 800a7d4:	681b      	ldr	r3, [r3, #0]
 800a7d6:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 800a7d8:	bf0c      	ite	eq
 800a7da:	2002      	moveq	r0, #2
 800a7dc:	2000      	movne	r0, #0
 800a7de:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a7e0:	2001      	movs	r0, #1
	}
 800a7e2:	4770      	bx	lr
 800a7e4:	2000e274 	.word	0x2000e274
 800a7e8:	2000e224 	.word	0x2000e224

0800a7ec <xTaskPriorityInherit>:
	{
 800a7ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a7ee:	4604      	mov	r4, r0
 800a7f0:	b350      	cbz	r0, 800a848 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a7f2:	4a1c      	ldr	r2, [pc, #112]	; (800a864 <xTaskPriorityInherit+0x78>)
 800a7f4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a7f6:	6811      	ldr	r1, [r2, #0]
 800a7f8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 800a7fa:	428b      	cmp	r3, r1
 800a7fc:	4616      	mov	r6, r2
 800a7fe:	d229      	bcs.n	800a854 <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a800:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a802:	4d19      	ldr	r5, [pc, #100]	; (800a868 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a804:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a806:	bfa1      	itttt	ge
 800a808:	6832      	ldrge	r2, [r6, #0]
 800a80a:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a80c:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a810:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a812:	2214      	movs	r2, #20
 800a814:	fb02 5303 	mla	r3, r2, r3, r5
 800a818:	6942      	ldr	r2, [r0, #20]
 800a81a:	429a      	cmp	r2, r3
 800a81c:	d116      	bne.n	800a84c <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a81e:	1d01      	adds	r1, r0, #4
 800a820:	4608      	mov	r0, r1
 800a822:	9101      	str	r1, [sp, #4]
 800a824:	f7fe fcaf 	bl	8009186 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a828:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a82a:	4a10      	ldr	r2, [pc, #64]	; (800a86c <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a82c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a82e:	6810      	ldr	r0, [r2, #0]
 800a830:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a832:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a834:	4283      	cmp	r3, r0
 800a836:	f04f 0014 	mov.w	r0, #20
 800a83a:	fb00 5003 	mla	r0, r0, r3, r5
 800a83e:	bf88      	it	hi
 800a840:	6013      	strhi	r3, [r2, #0]
 800a842:	f7fe fc7d 	bl	8009140 <vListInsertEnd>
				xReturn = pdTRUE;
 800a846:	2001      	movs	r0, #1
	}
 800a848:	b002      	add	sp, #8
 800a84a:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a84c:	6833      	ldr	r3, [r6, #0]
 800a84e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a850:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a852:	e7f8      	b.n	800a846 <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a854:	6813      	ldr	r3, [r2, #0]
 800a856:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a858:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a85a:	42a0      	cmp	r0, r4
 800a85c:	bf2c      	ite	cs
 800a85e:	2000      	movcs	r0, #0
 800a860:	2001      	movcc	r0, #1
 800a862:	e7f1      	b.n	800a848 <xTaskPriorityInherit+0x5c>
 800a864:	2000ddac 	.word	0x2000ddac
 800a868:	2000ddb8 	.word	0x2000ddb8
 800a86c:	2000e22c 	.word	0x2000e22c

0800a870 <xTaskPriorityDisinherit>:
	{
 800a870:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a872:	b910      	cbnz	r0, 800a87a <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a874:	2000      	movs	r0, #0
	}
 800a876:	b002      	add	sp, #8
 800a878:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a87a:	4b1c      	ldr	r3, [pc, #112]	; (800a8ec <xTaskPriorityDisinherit+0x7c>)
 800a87c:	681c      	ldr	r4, [r3, #0]
 800a87e:	4284      	cmp	r4, r0
 800a880:	d008      	beq.n	800a894 <xTaskPriorityDisinherit+0x24>
 800a882:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a886:	f383 8811 	msr	BASEPRI, r3
 800a88a:	f3bf 8f6f 	isb	sy
 800a88e:	f3bf 8f4f 	dsb	sy
 800a892:	e7fe      	b.n	800a892 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a894:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a896:	b943      	cbnz	r3, 800a8aa <xTaskPriorityDisinherit+0x3a>
 800a898:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a89c:	f383 8811 	msr	BASEPRI, r3
 800a8a0:	f3bf 8f6f 	isb	sy
 800a8a4:	f3bf 8f4f 	dsb	sy
 800a8a8:	e7fe      	b.n	800a8a8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a8aa:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a8ac:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a8ae:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a8b0:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a8b2:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a8b4:	d0de      	beq.n	800a874 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a8b6:	2b00      	cmp	r3, #0
 800a8b8:	d1dc      	bne.n	800a874 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a8ba:	1d21      	adds	r1, r4, #4
 800a8bc:	4608      	mov	r0, r1
 800a8be:	9101      	str	r1, [sp, #4]
 800a8c0:	f7fe fc61 	bl	8009186 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a8c4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a8c6:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a8c8:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a8ca:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a8ce:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a8d0:	4a07      	ldr	r2, [pc, #28]	; (800a8f0 <xTaskPriorityDisinherit+0x80>)
 800a8d2:	6810      	ldr	r0, [r2, #0]
 800a8d4:	4283      	cmp	r3, r0
 800a8d6:	bf88      	it	hi
 800a8d8:	6013      	strhi	r3, [r2, #0]
 800a8da:	4a06      	ldr	r2, [pc, #24]	; (800a8f4 <xTaskPriorityDisinherit+0x84>)
 800a8dc:	2014      	movs	r0, #20
 800a8de:	fb00 2003 	mla	r0, r0, r3, r2
 800a8e2:	f7fe fc2d 	bl	8009140 <vListInsertEnd>
					xReturn = pdTRUE;
 800a8e6:	2001      	movs	r0, #1
		return xReturn;
 800a8e8:	e7c5      	b.n	800a876 <xTaskPriorityDisinherit+0x6>
 800a8ea:	bf00      	nop
 800a8ec:	2000ddac 	.word	0x2000ddac
 800a8f0:	2000e22c 	.word	0x2000e22c
 800a8f4:	2000ddb8 	.word	0x2000ddb8

0800a8f8 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a8f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a8fa:	4604      	mov	r4, r0
 800a8fc:	2800      	cmp	r0, #0
 800a8fe:	d044      	beq.n	800a98a <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a900:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a902:	b942      	cbnz	r2, 800a916 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a904:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a908:	f383 8811 	msr	BASEPRI, r3
 800a90c:	f3bf 8f6f 	isb	sy
 800a910:	f3bf 8f4f 	dsb	sy
 800a914:	e7fe      	b.n	800a914 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a916:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a918:	4299      	cmp	r1, r3
 800a91a:	bf38      	it	cc
 800a91c:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a91e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a920:	428b      	cmp	r3, r1
 800a922:	d032      	beq.n	800a98a <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a924:	2a01      	cmp	r2, #1
 800a926:	d130      	bne.n	800a98a <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a928:	4a19      	ldr	r2, [pc, #100]	; (800a990 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a92a:	6812      	ldr	r2, [r2, #0]
 800a92c:	4282      	cmp	r2, r0
 800a92e:	d108      	bne.n	800a942 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a930:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a934:	f383 8811 	msr	BASEPRI, r3
 800a938:	f3bf 8f6f 	isb	sy
 800a93c:	f3bf 8f4f 	dsb	sy
 800a940:	e7fe      	b.n	800a940 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a942:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a944:	4d13      	ldr	r5, [pc, #76]	; (800a994 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a946:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a948:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a94a:	f04f 0214 	mov.w	r2, #20
 800a94e:	fb02 5303 	mla	r3, r2, r3, r5
 800a952:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a954:	bfa4      	itt	ge
 800a956:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a95a:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a95c:	429a      	cmp	r2, r3
 800a95e:	d114      	bne.n	800a98a <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a960:	1d01      	adds	r1, r0, #4
 800a962:	4608      	mov	r0, r1
 800a964:	9101      	str	r1, [sp, #4]
 800a966:	f7fe fc0e 	bl	8009186 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a96a:	4a0b      	ldr	r2, [pc, #44]	; (800a998 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a96c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a96e:	6810      	ldr	r0, [r2, #0]
 800a970:	9901      	ldr	r1, [sp, #4]
 800a972:	4283      	cmp	r3, r0
 800a974:	f04f 0014 	mov.w	r0, #20
 800a978:	fb00 5003 	mla	r0, r0, r3, r5
 800a97c:	bf88      	it	hi
 800a97e:	6013      	strhi	r3, [r2, #0]
	}
 800a980:	b003      	add	sp, #12
 800a982:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a986:	f7fe bbdb 	b.w	8009140 <vListInsertEnd>
	}
 800a98a:	b003      	add	sp, #12
 800a98c:	bd30      	pop	{r4, r5, pc}
 800a98e:	bf00      	nop
 800a990:	2000ddac 	.word	0x2000ddac
 800a994:	2000ddb8 	.word	0x2000ddb8
 800a998:	2000e22c 	.word	0x2000e22c

0800a99c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a99c:	4b04      	ldr	r3, [pc, #16]	; (800a9b0 <pvTaskIncrementMutexHeldCount+0x14>)
 800a99e:	681a      	ldr	r2, [r3, #0]
 800a9a0:	b11a      	cbz	r2, 800a9aa <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a9a2:	6819      	ldr	r1, [r3, #0]
 800a9a4:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a9a6:	3201      	adds	r2, #1
 800a9a8:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a9aa:	6818      	ldr	r0, [r3, #0]
	}
 800a9ac:	4770      	bx	lr
 800a9ae:	bf00      	nop
 800a9b0:	2000ddac 	.word	0x2000ddac

0800a9b4 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a9b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a9b6:	4c11      	ldr	r4, [pc, #68]	; (800a9fc <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a9b8:	f7fe fc5c 	bl	8009274 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a9bc:	6825      	ldr	r5, [r4, #0]
 800a9be:	b9bd      	cbnz	r5, 800a9f0 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a9c0:	4f0f      	ldr	r7, [pc, #60]	; (800aa00 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a9c2:	4e10      	ldr	r6, [pc, #64]	; (800aa04 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a9c4:	4638      	mov	r0, r7
 800a9c6:	f7fe fbad 	bl	8009124 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a9ca:	4630      	mov	r0, r6
 800a9cc:	f7fe fbaa 	bl	8009124 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a9d0:	4b0d      	ldr	r3, [pc, #52]	; (800aa08 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a9d2:	4a0e      	ldr	r2, [pc, #56]	; (800aa0c <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a9d4:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a9d6:	4b0e      	ldr	r3, [pc, #56]	; (800aa10 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a9d8:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a9da:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a9dc:	200a      	movs	r0, #10
 800a9de:	4b0d      	ldr	r3, [pc, #52]	; (800aa14 <prvCheckForValidListAndQueue+0x60>)
 800a9e0:	9500      	str	r5, [sp, #0]
 800a9e2:	f7fe fe5f 	bl	80096a4 <xQueueGenericCreateStatic>
 800a9e6:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a9e8:	b110      	cbz	r0, 800a9f0 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a9ea:	490b      	ldr	r1, [pc, #44]	; (800aa18 <prvCheckForValidListAndQueue+0x64>)
 800a9ec:	f7ff fa2c 	bl	8009e48 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a9f0:	b003      	add	sp, #12
 800a9f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a9f6:	f7fe bc5f 	b.w	80092b8 <vPortExitCritical>
 800a9fa:	bf00      	nop
 800a9fc:	2000e3cc 	.word	0x2000e3cc
 800aa00:	2000e350 	.word	0x2000e350
 800aa04:	2000e364 	.word	0x2000e364
 800aa08:	2000e2a8 	.word	0x2000e2a8
 800aa0c:	2000e2b0 	.word	0x2000e2b0
 800aa10:	2000e2ac 	.word	0x2000e2ac
 800aa14:	2000e37c 	.word	0x2000e37c
 800aa18:	080245d6 	.word	0x080245d6

0800aa1c <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800aa1c:	4291      	cmp	r1, r2
{
 800aa1e:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800aa20:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800aa22:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800aa24:	d80a      	bhi.n	800aa3c <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800aa26:	1ad2      	subs	r2, r2, r3
 800aa28:	6983      	ldr	r3, [r0, #24]
 800aa2a:	429a      	cmp	r2, r3
 800aa2c:	d20d      	bcs.n	800aa4a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800aa2e:	4b08      	ldr	r3, [pc, #32]	; (800aa50 <prvInsertTimerInActiveList+0x34>)
 800aa30:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800aa32:	6818      	ldr	r0, [r3, #0]
 800aa34:	f7fe fb90 	bl	8009158 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800aa38:	2000      	movs	r0, #0
}
 800aa3a:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800aa3c:	429a      	cmp	r2, r3
 800aa3e:	d201      	bcs.n	800aa44 <prvInsertTimerInActiveList+0x28>
 800aa40:	4299      	cmp	r1, r3
 800aa42:	d202      	bcs.n	800aa4a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800aa44:	4b03      	ldr	r3, [pc, #12]	; (800aa54 <prvInsertTimerInActiveList+0x38>)
 800aa46:	1d01      	adds	r1, r0, #4
 800aa48:	e7f3      	b.n	800aa32 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800aa4a:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800aa4c:	e7f5      	b.n	800aa3a <prvInsertTimerInActiveList+0x1e>
 800aa4e:	bf00      	nop
 800aa50:	2000e2ac 	.word	0x2000e2ac
 800aa54:	2000e2a8 	.word	0x2000e2a8

0800aa58 <xTimerCreateTimerTask>:
{
 800aa58:	b510      	push	{r4, lr}
 800aa5a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800aa5c:	f7ff ffaa 	bl	800a9b4 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800aa60:	4b12      	ldr	r3, [pc, #72]	; (800aaac <xTimerCreateTimerTask+0x54>)
 800aa62:	681b      	ldr	r3, [r3, #0]
 800aa64:	b1b3      	cbz	r3, 800aa94 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800aa66:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800aa68:	aa07      	add	r2, sp, #28
 800aa6a:	a906      	add	r1, sp, #24
 800aa6c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800aa6e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800aa72:	f7fe fa63 	bl	8008f3c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800aa76:	9b05      	ldr	r3, [sp, #20]
 800aa78:	9302      	str	r3, [sp, #8]
 800aa7a:	9b06      	ldr	r3, [sp, #24]
 800aa7c:	9301      	str	r3, [sp, #4]
 800aa7e:	2302      	movs	r3, #2
 800aa80:	9300      	str	r3, [sp, #0]
 800aa82:	9a07      	ldr	r2, [sp, #28]
 800aa84:	490a      	ldr	r1, [pc, #40]	; (800aab0 <xTimerCreateTimerTask+0x58>)
 800aa86:	480b      	ldr	r0, [pc, #44]	; (800aab4 <xTimerCreateTimerTask+0x5c>)
 800aa88:	4623      	mov	r3, r4
 800aa8a:	f7ff fbab 	bl	800a1e4 <xTaskCreateStatic>
 800aa8e:	4b0a      	ldr	r3, [pc, #40]	; (800aab8 <xTimerCreateTimerTask+0x60>)
 800aa90:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800aa92:	b940      	cbnz	r0, 800aaa6 <xTimerCreateTimerTask+0x4e>
 800aa94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa98:	f383 8811 	msr	BASEPRI, r3
 800aa9c:	f3bf 8f6f 	isb	sy
 800aaa0:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800aaa4:	e7fe      	b.n	800aaa4 <xTimerCreateTimerTask+0x4c>
}
 800aaa6:	2001      	movs	r0, #1
 800aaa8:	b008      	add	sp, #32
 800aaaa:	bd10      	pop	{r4, pc}
 800aaac:	2000e3cc 	.word	0x2000e3cc
 800aab0:	080245db 	.word	0x080245db
 800aab4:	0800ab91 	.word	0x0800ab91
 800aab8:	2000e3d0 	.word	0x2000e3d0

0800aabc <xTimerGenericCommand>:
{
 800aabc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800aabe:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800aac0:	4604      	mov	r4, r0
{
 800aac2:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800aac4:	b940      	cbnz	r0, 800aad8 <xTimerGenericCommand+0x1c>
 800aac6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aaca:	f383 8811 	msr	BASEPRI, r3
 800aace:	f3bf 8f6f 	isb	sy
 800aad2:	f3bf 8f4f 	dsb	sy
 800aad6:	e7fe      	b.n	800aad6 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800aad8:	4d0d      	ldr	r5, [pc, #52]	; (800ab10 <xTimerGenericCommand+0x54>)
 800aada:	6828      	ldr	r0, [r5, #0]
 800aadc:	b180      	cbz	r0, 800ab00 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800aade:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800aae0:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800aae4:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800aae6:	dc0d      	bgt.n	800ab04 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800aae8:	f7ff fe70 	bl	800a7cc <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800aaec:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800aaee:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800aaf0:	bf08      	it	eq
 800aaf2:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800aaf4:	6828      	ldr	r0, [r5, #0]
 800aaf6:	bf18      	it	ne
 800aaf8:	461a      	movne	r2, r3
 800aafa:	4669      	mov	r1, sp
 800aafc:	f7fe fe88 	bl	8009810 <xQueueGenericSend>
}
 800ab00:	b004      	add	sp, #16
 800ab02:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800ab04:	2300      	movs	r3, #0
 800ab06:	4669      	mov	r1, sp
 800ab08:	f7fe ff34 	bl	8009974 <xQueueGenericSendFromISR>
 800ab0c:	e7f8      	b.n	800ab00 <xTimerGenericCommand+0x44>
 800ab0e:	bf00      	nop
 800ab10:	2000e3cc 	.word	0x2000e3cc

0800ab14 <prvSwitchTimerLists>:
{
 800ab14:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ab16:	4d1c      	ldr	r5, [pc, #112]	; (800ab88 <prvSwitchTimerLists+0x74>)
{
 800ab18:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ab1a:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ab1c:	682b      	ldr	r3, [r5, #0]
 800ab1e:	681a      	ldr	r2, [r3, #0]
 800ab20:	b92a      	cbnz	r2, 800ab2e <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 800ab22:	4a1a      	ldr	r2, [pc, #104]	; (800ab8c <prvSwitchTimerLists+0x78>)
 800ab24:	6811      	ldr	r1, [r2, #0]
 800ab26:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 800ab28:	6013      	str	r3, [r2, #0]
}
 800ab2a:	b005      	add	sp, #20
 800ab2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ab2e:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ab30:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ab32:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ab34:	1d21      	adds	r1, r4, #4
 800ab36:	4608      	mov	r0, r1
 800ab38:	9103      	str	r1, [sp, #12]
 800ab3a:	f7fe fb24 	bl	8009186 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ab3e:	6a23      	ldr	r3, [r4, #32]
 800ab40:	4620      	mov	r0, r4
 800ab42:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ab44:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ab48:	9903      	ldr	r1, [sp, #12]
 800ab4a:	f013 0f04 	tst.w	r3, #4
 800ab4e:	d0e5      	beq.n	800ab1c <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ab50:	69a3      	ldr	r3, [r4, #24]
 800ab52:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 800ab54:	429e      	cmp	r6, r3
 800ab56:	d205      	bcs.n	800ab64 <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ab58:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ab5a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ab5c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ab5e:	f7fe fafb 	bl	8009158 <vListInsert>
 800ab62:	e7db      	b.n	800ab1c <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ab64:	2300      	movs	r3, #0
 800ab66:	9700      	str	r7, [sp, #0]
 800ab68:	4632      	mov	r2, r6
 800ab6a:	4619      	mov	r1, r3
 800ab6c:	4620      	mov	r0, r4
 800ab6e:	f7ff ffa5 	bl	800aabc <xTimerGenericCommand>
				configASSERT( xResult );
 800ab72:	2800      	cmp	r0, #0
 800ab74:	d1d2      	bne.n	800ab1c <prvSwitchTimerLists+0x8>
 800ab76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab7a:	f383 8811 	msr	BASEPRI, r3
 800ab7e:	f3bf 8f6f 	isb	sy
 800ab82:	f3bf 8f4f 	dsb	sy
 800ab86:	e7fe      	b.n	800ab86 <prvSwitchTimerLists+0x72>
 800ab88:	2000e2a8 	.word	0x2000e2a8
 800ab8c:	2000e2ac 	.word	0x2000e2ac

0800ab90 <prvTimerTask>:
{
 800ab90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ab94:	4f77      	ldr	r7, [pc, #476]	; (800ad74 <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 800ab96:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 800ad84 <prvTimerTask+0x1f4>
{
 800ab9a:	b087      	sub	sp, #28
 800ab9c:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ab9e:	683b      	ldr	r3, [r7, #0]
 800aba0:	f8d3 b000 	ldr.w	fp, [r3]
 800aba4:	f1bb 0f00 	cmp.w	fp, #0
 800aba8:	d028      	beq.n	800abfc <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800abaa:	68db      	ldr	r3, [r3, #12]
 800abac:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800abb0:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 800abb2:	4e71      	ldr	r6, [pc, #452]	; (800ad78 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 800abb4:	f7ff fb7c 	bl	800a2b0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800abb8:	f7ff fb82 	bl	800a2c0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800abbc:	6833      	ldr	r3, [r6, #0]
 800abbe:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800abc0:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800abc2:	46b0      	mov	r8, r6
 800abc4:	d31c      	bcc.n	800ac00 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 800abc6:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800abc8:	b31c      	cbz	r4, 800ac12 <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800abca:	4b6c      	ldr	r3, [pc, #432]	; (800ad7c <prvTimerTask+0x1ec>)
 800abcc:	681b      	ldr	r3, [r3, #0]
 800abce:	681c      	ldr	r4, [r3, #0]
 800abd0:	fab4 f484 	clz	r4, r4
 800abd4:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800abd6:	4b6a      	ldr	r3, [pc, #424]	; (800ad80 <prvTimerTask+0x1f0>)
 800abd8:	4622      	mov	r2, r4
 800abda:	6818      	ldr	r0, [r3, #0]
 800abdc:	ebab 0105 	sub.w	r1, fp, r5
 800abe0:	f7ff f971 	bl	8009ec6 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800abe4:	f7ff fc08 	bl	800a3f8 <xTaskResumeAll>
 800abe8:	b978      	cbnz	r0, 800ac0a <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 800abea:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800abee:	f8ca 3000 	str.w	r3, [sl]
 800abf2:	f3bf 8f4f 	dsb	sy
 800abf6:	f3bf 8f6f 	isb	sy
 800abfa:	e006      	b.n	800ac0a <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800abfc:	2401      	movs	r4, #1
 800abfe:	e7d8      	b.n	800abb2 <prvTimerTask+0x22>
		prvSwitchTimerLists();
 800ac00:	f7ff ff88 	bl	800ab14 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800ac04:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 800ac06:	f7ff fbf7 	bl	800a3f8 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ac0a:	4e5d      	ldr	r6, [pc, #372]	; (800ad80 <prvTimerTask+0x1f0>)
 800ac0c:	f04f 0b00 	mov.w	fp, #0
 800ac10:	e035      	b.n	800ac7e <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ac12:	4583      	cmp	fp, r0
 800ac14:	d8df      	bhi.n	800abd6 <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 800ac16:	f7ff fbef 	bl	800a3f8 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ac1a:	f8d9 3000 	ldr.w	r3, [r9]
 800ac1e:	68db      	ldr	r3, [r3, #12]
 800ac20:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ac22:	1d30      	adds	r0, r6, #4
 800ac24:	f7fe faaf 	bl	8009186 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ac28:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 800ac2c:	0758      	lsls	r0, r3, #29
 800ac2e:	d518      	bpl.n	800ac62 <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800ac30:	69b1      	ldr	r1, [r6, #24]
 800ac32:	465b      	mov	r3, fp
 800ac34:	462a      	mov	r2, r5
 800ac36:	4459      	add	r1, fp
 800ac38:	4630      	mov	r0, r6
 800ac3a:	f7ff feef 	bl	800aa1c <prvInsertTimerInActiveList>
 800ac3e:	b1a0      	cbz	r0, 800ac6a <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ac40:	9400      	str	r4, [sp, #0]
 800ac42:	4623      	mov	r3, r4
 800ac44:	465a      	mov	r2, fp
 800ac46:	4621      	mov	r1, r4
 800ac48:	4630      	mov	r0, r6
 800ac4a:	f7ff ff37 	bl	800aabc <xTimerGenericCommand>
			configASSERT( xResult );
 800ac4e:	b960      	cbnz	r0, 800ac6a <prvTimerTask+0xda>
 800ac50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac54:	f383 8811 	msr	BASEPRI, r3
 800ac58:	f3bf 8f6f 	isb	sy
 800ac5c:	f3bf 8f4f 	dsb	sy
 800ac60:	e7fe      	b.n	800ac60 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ac62:	f023 0301 	bic.w	r3, r3, #1
 800ac66:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ac6a:	6a33      	ldr	r3, [r6, #32]
 800ac6c:	4630      	mov	r0, r6
 800ac6e:	4798      	blx	r3
}
 800ac70:	e7cb      	b.n	800ac0a <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ac72:	9b03      	ldr	r3, [sp, #12]
 800ac74:	9905      	ldr	r1, [sp, #20]
 800ac76:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800ac78:	9b02      	ldr	r3, [sp, #8]
 800ac7a:	2b00      	cmp	r3, #0
 800ac7c:	da0a      	bge.n	800ac94 <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ac7e:	6830      	ldr	r0, [r6, #0]
 800ac80:	2200      	movs	r2, #0
 800ac82:	a902      	add	r1, sp, #8
 800ac84:	f7fe ff2c 	bl	8009ae0 <xQueueReceive>
 800ac88:	2800      	cmp	r0, #0
 800ac8a:	d088      	beq.n	800ab9e <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ac8c:	9b02      	ldr	r3, [sp, #8]
 800ac8e:	9804      	ldr	r0, [sp, #16]
 800ac90:	2b00      	cmp	r3, #0
 800ac92:	dbee      	blt.n	800ac72 <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ac94:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ac96:	6963      	ldr	r3, [r4, #20]
 800ac98:	b9a3      	cbnz	r3, 800acc4 <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 800ac9a:	f7ff fb11 	bl	800a2c0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ac9e:	f8d8 3000 	ldr.w	r3, [r8]
 800aca2:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800aca4:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800aca6:	d201      	bcs.n	800acac <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 800aca8:	f7ff ff34 	bl	800ab14 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800acac:	9b02      	ldr	r3, [sp, #8]
 800acae:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 800acb2:	2b09      	cmp	r3, #9
 800acb4:	d8e3      	bhi.n	800ac7e <prvTimerTask+0xee>
 800acb6:	e8df f003 	tbb	[pc, r3]
 800acba:	0909      	.short	0x0909
 800acbc:	543b3409 	.word	0x543b3409
 800acc0:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800acc4:	1d20      	adds	r0, r4, #4
 800acc6:	f7fe fa5e 	bl	8009186 <uxListRemove>
 800acca:	e7e6      	b.n	800ac9a <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800accc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800acd0:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800acd2:	f043 0301 	orr.w	r3, r3, #1
 800acd6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800acda:	9b03      	ldr	r3, [sp, #12]
 800acdc:	462a      	mov	r2, r5
 800acde:	4419      	add	r1, r3
 800ace0:	4620      	mov	r0, r4
 800ace2:	f7ff fe9b 	bl	800aa1c <prvInsertTimerInActiveList>
 800ace6:	2800      	cmp	r0, #0
 800ace8:	d0c9      	beq.n	800ac7e <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800acea:	6a23      	ldr	r3, [r4, #32]
 800acec:	4620      	mov	r0, r4
 800acee:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800acf0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800acf4:	0759      	lsls	r1, r3, #29
 800acf6:	d5c2      	bpl.n	800ac7e <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800acf8:	69a2      	ldr	r2, [r4, #24]
 800acfa:	9903      	ldr	r1, [sp, #12]
 800acfc:	f8cd b000 	str.w	fp, [sp]
 800ad00:	2300      	movs	r3, #0
 800ad02:	440a      	add	r2, r1
 800ad04:	4620      	mov	r0, r4
 800ad06:	4619      	mov	r1, r3
 800ad08:	f7ff fed8 	bl	800aabc <xTimerGenericCommand>
							configASSERT( xResult );
 800ad0c:	2800      	cmp	r0, #0
 800ad0e:	d1b6      	bne.n	800ac7e <prvTimerTask+0xee>
 800ad10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad14:	f383 8811 	msr	BASEPRI, r3
 800ad18:	f3bf 8f6f 	isb	sy
 800ad1c:	f3bf 8f4f 	dsb	sy
 800ad20:	e7fe      	b.n	800ad20 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ad22:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ad26:	f023 0301 	bic.w	r3, r3, #1
 800ad2a:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800ad2e:	e7a6      	b.n	800ac7e <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ad30:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800ad34:	9903      	ldr	r1, [sp, #12]
 800ad36:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ad38:	f043 0301 	orr.w	r3, r3, #1
 800ad3c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ad40:	b941      	cbnz	r1, 800ad54 <prvTimerTask+0x1c4>
 800ad42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad46:	f383 8811 	msr	BASEPRI, r3
 800ad4a:	f3bf 8f6f 	isb	sy
 800ad4e:	f3bf 8f4f 	dsb	sy
 800ad52:	e7fe      	b.n	800ad52 <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ad54:	462b      	mov	r3, r5
 800ad56:	462a      	mov	r2, r5
 800ad58:	4429      	add	r1, r5
 800ad5a:	4620      	mov	r0, r4
 800ad5c:	f7ff fe5e 	bl	800aa1c <prvInsertTimerInActiveList>
					break;
 800ad60:	e78d      	b.n	800ac7e <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800ad62:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ad66:	079a      	lsls	r2, r3, #30
 800ad68:	d4dd      	bmi.n	800ad26 <prvTimerTask+0x196>
							vPortFree( pxTimer );
 800ad6a:	4620      	mov	r0, r4
 800ad6c:	f7fe f9a2 	bl	80090b4 <vPortFree>
 800ad70:	e785      	b.n	800ac7e <prvTimerTask+0xee>
 800ad72:	bf00      	nop
 800ad74:	2000e2a8 	.word	0x2000e2a8
 800ad78:	2000e378 	.word	0x2000e378
 800ad7c:	2000e2ac 	.word	0x2000e2ac
 800ad80:	2000e3cc 	.word	0x2000e3cc
 800ad84:	e000ed04 	.word	0xe000ed04

0800ad88 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ad88:	8880      	ldrh	r0, [r0, #4]
 800ad8a:	4770      	bx	lr

0800ad8c <_ZN8touchgfx17AbstractPartition5clearEv>:
 800ad8c:	2300      	movs	r3, #0
 800ad8e:	8083      	strh	r3, [r0, #4]
 800ad90:	4770      	bx	lr
	...

0800ad94 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ad94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad96:	6803      	ldr	r3, [r0, #0]
 800ad98:	4605      	mov	r5, r0
 800ad9a:	460e      	mov	r6, r1
 800ad9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ad9e:	2100      	movs	r1, #0
 800ada0:	4798      	blx	r3
 800ada2:	682b      	ldr	r3, [r5, #0]
 800ada4:	4604      	mov	r4, r0
 800ada6:	6a1b      	ldr	r3, [r3, #32]
 800ada8:	4628      	mov	r0, r5
 800adaa:	4798      	blx	r3
 800adac:	88ab      	ldrh	r3, [r5, #4]
 800adae:	1b34      	subs	r4, r6, r4
 800adb0:	b2a4      	uxth	r4, r4
 800adb2:	fbb4 f4f0 	udiv	r4, r4, r0
 800adb6:	42a3      	cmp	r3, r4
 800adb8:	d805      	bhi.n	800adc6 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800adba:	4b0e      	ldr	r3, [pc, #56]	; (800adf4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800adbc:	4a0e      	ldr	r2, [pc, #56]	; (800adf8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800adbe:	2120      	movs	r1, #32
 800adc0:	480e      	ldr	r0, [pc, #56]	; (800adfc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800adc2:	f017 f9a5 	bl	8022110 <__assert_func>
 800adc6:	682b      	ldr	r3, [r5, #0]
 800adc8:	2100      	movs	r1, #0
 800adca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800adcc:	4628      	mov	r0, r5
 800adce:	4798      	blx	r3
 800add0:	682b      	ldr	r3, [r5, #0]
 800add2:	4607      	mov	r7, r0
 800add4:	6a1b      	ldr	r3, [r3, #32]
 800add6:	4628      	mov	r0, r5
 800add8:	4798      	blx	r3
 800adda:	1bf3      	subs	r3, r6, r7
 800addc:	b29b      	uxth	r3, r3
 800adde:	fbb3 f2f0 	udiv	r2, r3, r0
 800ade2:	fb02 3010 	mls	r0, r2, r0, r3
 800ade6:	b118      	cbz	r0, 800adf0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800ade8:	4b05      	ldr	r3, [pc, #20]	; (800ae00 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800adea:	4a03      	ldr	r2, [pc, #12]	; (800adf8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800adec:	2121      	movs	r1, #33	; 0x21
 800adee:	e7e7      	b.n	800adc0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800adf0:	4620      	mov	r0, r4
 800adf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800adf4:	080245e3 	.word	0x080245e3
 800adf8:	0802474e 	.word	0x0802474e
 800adfc:	080245f8 	.word	0x080245f8
 800ae00:	08024626 	.word	0x08024626

0800ae04 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800ae04:	b538      	push	{r3, r4, r5, lr}
 800ae06:	6803      	ldr	r3, [r0, #0]
 800ae08:	6a1b      	ldr	r3, [r3, #32]
 800ae0a:	460d      	mov	r5, r1
 800ae0c:	4604      	mov	r4, r0
 800ae0e:	4798      	blx	r3
 800ae10:	4285      	cmp	r5, r0
 800ae12:	d905      	bls.n	800ae20 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800ae14:	4b0c      	ldr	r3, [pc, #48]	; (800ae48 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800ae16:	4a0d      	ldr	r2, [pc, #52]	; (800ae4c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800ae18:	2132      	movs	r1, #50	; 0x32
 800ae1a:	480d      	ldr	r0, [pc, #52]	; (800ae50 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800ae1c:	f017 f978 	bl	8022110 <__assert_func>
 800ae20:	6823      	ldr	r3, [r4, #0]
 800ae22:	88a5      	ldrh	r5, [r4, #4]
 800ae24:	69db      	ldr	r3, [r3, #28]
 800ae26:	4620      	mov	r0, r4
 800ae28:	4798      	blx	r3
 800ae2a:	4285      	cmp	r5, r0
 800ae2c:	d303      	bcc.n	800ae36 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800ae2e:	4b09      	ldr	r3, [pc, #36]	; (800ae54 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800ae30:	4a06      	ldr	r2, [pc, #24]	; (800ae4c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800ae32:	2133      	movs	r1, #51	; 0x33
 800ae34:	e7f1      	b.n	800ae1a <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800ae36:	6823      	ldr	r3, [r4, #0]
 800ae38:	88a1      	ldrh	r1, [r4, #4]
 800ae3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ae3c:	4620      	mov	r0, r4
 800ae3e:	4798      	blx	r3
 800ae40:	88a3      	ldrh	r3, [r4, #4]
 800ae42:	3301      	adds	r3, #1
 800ae44:	80a3      	strh	r3, [r4, #4]
 800ae46:	bd38      	pop	{r3, r4, r5, pc}
 800ae48:	080246a0 	.word	0x080246a0
 800ae4c:	08024791 	.word	0x08024791
 800ae50:	080245f8 	.word	0x080245f8
 800ae54:	080246b7 	.word	0x080246b7

0800ae58 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800ae58:	b570      	push	{r4, r5, r6, lr}
 800ae5a:	6803      	ldr	r3, [r0, #0]
 800ae5c:	6a1b      	ldr	r3, [r3, #32]
 800ae5e:	4616      	mov	r6, r2
 800ae60:	4604      	mov	r4, r0
 800ae62:	460d      	mov	r5, r1
 800ae64:	4798      	blx	r3
 800ae66:	4286      	cmp	r6, r0
 800ae68:	d905      	bls.n	800ae76 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800ae6a:	4b06      	ldr	r3, [pc, #24]	; (800ae84 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800ae6c:	4a06      	ldr	r2, [pc, #24]	; (800ae88 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800ae6e:	4807      	ldr	r0, [pc, #28]	; (800ae8c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800ae70:	213c      	movs	r1, #60	; 0x3c
 800ae72:	f017 f94d 	bl	8022110 <__assert_func>
 800ae76:	6823      	ldr	r3, [r4, #0]
 800ae78:	4629      	mov	r1, r5
 800ae7a:	4620      	mov	r0, r4
 800ae7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ae7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ae82:	4718      	bx	r3
 800ae84:	080246a0 	.word	0x080246a0
 800ae88:	08024704 	.word	0x08024704
 800ae8c:	080245f8 	.word	0x080245f8

0800ae90 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800ae90:	4770      	bx	lr
	...

0800ae94 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800ae94:	4a02      	ldr	r2, [pc, #8]	; (800aea0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800ae96:	6002      	str	r2, [r0, #0]
 800ae98:	2200      	movs	r2, #0
 800ae9a:	8082      	strh	r2, [r0, #4]
 800ae9c:	4770      	bx	lr
 800ae9e:	bf00      	nop
 800aea0:	080246d8 	.word	0x080246d8

0800aea4 <_ZN8touchgfx9Container13getFirstChildEv>:
 800aea4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800aea6:	4770      	bx	lr

0800aea8 <_ZN8touchgfx14CircleProgress9setCenterEii>:
 800aea8:	0149      	lsls	r1, r1, #5
 800aeaa:	0152      	lsls	r2, r2, #5
 800aeac:	f8c0 10e0 	str.w	r1, [r0, #224]	; 0xe0
 800aeb0:	f8c0 20e4 	str.w	r2, [r0, #228]	; 0xe4
 800aeb4:	4770      	bx	lr

0800aeb6 <_ZNK8touchgfx14CircleProgress9getCenterERiS1_>:
 800aeb6:	b530      	push	{r4, r5, lr}
 800aeb8:	f8d0 40e0 	ldr.w	r4, [r0, #224]	; 0xe0
 800aebc:	2520      	movs	r5, #32
 800aebe:	fb94 f4f5 	sdiv	r4, r4, r5
 800aec2:	600c      	str	r4, [r1, #0]
 800aec4:	f8d0 30e4 	ldr.w	r3, [r0, #228]	; 0xe4
 800aec8:	fb93 f3f5 	sdiv	r3, r3, r5
 800aecc:	6013      	str	r3, [r2, #0]
 800aece:	bd30      	pop	{r4, r5, pc}

0800aed0 <_ZN8touchgfx14CircleProgress9setRadiusEi>:
 800aed0:	0149      	lsls	r1, r1, #5
 800aed2:	f8c0 10e8 	str.w	r1, [r0, #232]	; 0xe8
 800aed6:	4770      	bx	lr

0800aed8 <_ZNK8touchgfx14CircleProgress9getRadiusEv>:
 800aed8:	f8d0 00e8 	ldr.w	r0, [r0, #232]	; 0xe8
 800aedc:	2320      	movs	r3, #32
 800aede:	fb90 f0f3 	sdiv	r0, r0, r3
 800aee2:	4770      	bx	lr

0800aee4 <_ZN8touchgfx14CircleProgress12setLineWidthEi>:
 800aee4:	0149      	lsls	r1, r1, #5
 800aee6:	f8c0 10f4 	str.w	r1, [r0, #244]	; 0xf4
 800aeea:	4770      	bx	lr

0800aeec <_ZNK8touchgfx14CircleProgress12getLineWidthEv>:
 800aeec:	f8d0 00f4 	ldr.w	r0, [r0, #244]	; 0xf4
 800aef0:	2320      	movs	r3, #32
 800aef2:	fb90 f0f3 	sdiv	r0, r0, r3
 800aef6:	4770      	bx	lr

0800aef8 <_ZNK8touchgfx14CircleProgress13getStartAngleEv>:
 800aef8:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 800aefc:	2320      	movs	r3, #32
 800aefe:	fb90 f0f3 	sdiv	r0, r0, r3
 800af02:	b200      	sxth	r0, r0
 800af04:	4770      	bx	lr

0800af06 <_ZNK8touchgfx14CircleProgress11getEndAngleEv>:
 800af06:	f8d0 00fc 	ldr.w	r0, [r0, #252]	; 0xfc
 800af0a:	4770      	bx	lr

0800af0c <_ZN8touchgfx14CircleProgress8setAlphaEh>:
 800af0c:	f880 10de 	strb.w	r1, [r0, #222]	; 0xde
 800af10:	4770      	bx	lr

0800af12 <_ZNK8touchgfx14CircleProgress8getAlphaEv>:
 800af12:	f890 00de 	ldrb.w	r0, [r0, #222]	; 0xde
 800af16:	4770      	bx	lr

0800af18 <_ZN8touchgfx14CircleProgressD1Ev>:
 800af18:	4770      	bx	lr

0800af1a <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>:
 800af1a:	30b0      	adds	r0, #176	; 0xb0
 800af1c:	f002 bab2 	b.w	800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>

0800af20 <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>:
 800af20:	30b0      	adds	r0, #176	; 0xb0
 800af22:	f001 bedd 	b.w	800cce0 <_ZN8touchgfx6Circle15setCapPrecisionEi>

0800af26 <_ZNK8touchgfx14CircleProgress15getCapPrecisionEv>:
 800af26:	30b0      	adds	r0, #176	; 0xb0
 800af28:	f001 bee3 	b.w	800ccf2 <_ZNK8touchgfx6Circle15getCapPrecisionEv>

0800af2c <_ZN8touchgfx14CircleProgressD0Ev>:
 800af2c:	b510      	push	{r4, lr}
 800af2e:	f44f 7180 	mov.w	r1, #256	; 0x100
 800af32:	4604      	mov	r4, r0
 800af34:	f016 facd 	bl	80214d2 <_ZdlPvj>
 800af38:	4620      	mov	r0, r4
 800af3a:	bd10      	pop	{r4, pc}

0800af3c <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>:
 800af3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af40:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 800af44:	461d      	mov	r5, r3
 800af46:	2300      	movs	r3, #0
 800af48:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800af4c:	4604      	mov	r4, r0
 800af4e:	460f      	mov	r7, r1
 800af50:	4690      	mov	r8, r2
 800af52:	4629      	mov	r1, r5
 800af54:	4632      	mov	r2, r6
 800af56:	30b0      	adds	r0, #176	; 0xb0
 800af58:	f7f8 ff7f 	bl	8003e5a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800af5c:	9606      	str	r6, [sp, #24]
 800af5e:	462b      	mov	r3, r5
 800af60:	4642      	mov	r2, r8
 800af62:	4639      	mov	r1, r7
 800af64:	4620      	mov	r0, r4
 800af66:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800af6a:	f000 b9ca 	b.w	800b302 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0800af6e <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>:
 800af6e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800af70:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800af72:	9101      	str	r1, [sp, #4]
 800af74:	4299      	cmp	r1, r3
 800af76:	4604      	mov	r4, r0
 800af78:	d00b      	beq.n	800af92 <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_+0x24>
 800af7a:	4601      	mov	r1, r0
 800af7c:	aa01      	add	r2, sp, #4
 800af7e:	a802      	add	r0, sp, #8
 800af80:	f002 f8bb 	bl	800d0fa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 800af84:	9b01      	ldr	r3, [sp, #4]
 800af86:	6423      	str	r3, [r4, #64]	; 0x40
 800af88:	6823      	ldr	r3, [r4, #0]
 800af8a:	a902      	add	r1, sp, #8
 800af8c:	691b      	ldr	r3, [r3, #16]
 800af8e:	4620      	mov	r0, r4
 800af90:	4798      	blx	r3
 800af92:	b004      	add	sp, #16
 800af94:	bd10      	pop	{r4, pc}

0800af96 <_ZN8touchgfx14CircleProgress8setValueEi>:
 800af96:	b570      	push	{r4, r5, r6, lr}
 800af98:	4604      	mov	r4, r0
 800af9a:	f000 f906 	bl	800b1aa <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800af9e:	f8d4 60fc 	ldr.w	r6, [r4, #252]	; 0xfc
 800afa2:	f8d4 50ec 	ldr.w	r5, [r4, #236]	; 0xec
 800afa6:	0176      	lsls	r6, r6, #5
 800afa8:	42b5      	cmp	r5, r6
 800afaa:	bfcc      	ite	gt
 800afac:	1ba9      	subgt	r1, r5, r6
 800afae:	1b71      	suble	r1, r6, r5
 800afb0:	b289      	uxth	r1, r1
 800afb2:	4620      	mov	r0, r4
 800afb4:	f000 f988 	bl	800b2c8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800afb8:	42b5      	cmp	r5, r6
 800afba:	4601      	mov	r1, r0
 800afbc:	bfc8      	it	gt
 800afbe:	1a69      	subgt	r1, r5, r1
 800afc0:	f104 00b0 	add.w	r0, r4, #176	; 0xb0
 800afc4:	bfd8      	it	le
 800afc6:	1949      	addle	r1, r1, r5
 800afc8:	f7ff ffd1 	bl	800af6e <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>
 800afcc:	bd70      	pop	{r4, r5, r6, pc}
	...

0800afd0 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>:
 800afd0:	4291      	cmp	r1, r2
 800afd2:	b510      	push	{r4, lr}
 800afd4:	4604      	mov	r4, r0
 800afd6:	d105      	bne.n	800afe4 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x14>
 800afd8:	4b0a      	ldr	r3, [pc, #40]	; (800b004 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x34>)
 800afda:	4a0b      	ldr	r2, [pc, #44]	; (800b008 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x38>)
 800afdc:	480b      	ldr	r0, [pc, #44]	; (800b00c <_ZN8touchgfx14CircleProgress16setStartEndAngleEii+0x3c>)
 800afde:	2151      	movs	r1, #81	; 0x51
 800afe0:	f017 f896 	bl	8022110 <__assert_func>
 800afe4:	0149      	lsls	r1, r1, #5
 800afe6:	0153      	lsls	r3, r2, #5
 800afe8:	f8c0 10ec 	str.w	r1, [r0, #236]	; 0xec
 800afec:	f8c0 30f0 	str.w	r3, [r0, #240]	; 0xf0
 800aff0:	f8c0 20fc 	str.w	r2, [r0, #252]	; 0xfc
 800aff4:	f000 f860 	bl	800b0b8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 800aff8:	4601      	mov	r1, r0
 800affa:	4620      	mov	r0, r4
 800affc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b000:	f7ff bfc9 	b.w	800af96 <_ZN8touchgfx14CircleProgress8setValueEi>
 800b004:	080247cf 	.word	0x080247cf
 800b008:	0802493c 	.word	0x0802493c
 800b00c:	080247e6 	.word	0x080247e6

0800b010 <_ZN8touchgfx14CircleProgressC1Ev>:
 800b010:	b570      	push	{r4, r5, r6, lr}
 800b012:	4604      	mov	r4, r0
 800b014:	4625      	mov	r5, r4
 800b016:	f000 f9a1 	bl	800b35c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 800b01a:	4b0e      	ldr	r3, [pc, #56]	; (800b054 <_ZN8touchgfx14CircleProgressC1Ev+0x44>)
 800b01c:	f845 3bb0 	str.w	r3, [r5], #176
 800b020:	4628      	mov	r0, r5
 800b022:	f001 fe45 	bl	800ccb0 <_ZN8touchgfx6CircleC1Ev>
 800b026:	2600      	movs	r6, #0
 800b028:	4629      	mov	r1, r5
 800b02a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800b02e:	f000 fc8d 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b032:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b036:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b03a:	f8c4 60b4 	str.w	r6, [r4, #180]	; 0xb4
 800b03e:	4628      	mov	r0, r5
 800b040:	f7f8 ff0b 	bl	8003e5a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800b044:	4620      	mov	r0, r4
 800b046:	f44f 72b4 	mov.w	r2, #360	; 0x168
 800b04a:	4631      	mov	r1, r6
 800b04c:	f7ff ffc0 	bl	800afd0 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
 800b050:	4620      	mov	r0, r4
 800b052:	bd70      	pop	{r4, r5, r6, pc}
 800b054:	0802483c 	.word	0x0802483c

0800b058 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800b058:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800b05c:	4770      	bx	lr

0800b05e <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800b05e:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800b062:	4770      	bx	lr

0800b064 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800b064:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800b068:	4770      	bx	lr

0800b06a <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800b06a:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800b06e:	4770      	bx	lr

0800b070 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800b070:	b510      	push	{r4, lr}
 800b072:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800b076:	600c      	str	r4, [r1, #0]
 800b078:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800b07c:	6011      	str	r1, [r2, #0]
 800b07e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800b082:	801a      	strh	r2, [r3, #0]
 800b084:	9b02      	ldr	r3, [sp, #8]
 800b086:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800b08a:	801a      	strh	r2, [r3, #0]
 800b08c:	bd10      	pop	{r4, pc}

0800b08e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800b08e:	b510      	push	{r4, lr}
 800b090:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800b094:	600c      	str	r4, [r1, #0]
 800b096:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800b09a:	6011      	str	r1, [r2, #0]
 800b09c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800b0a0:	801a      	strh	r2, [r3, #0]
 800b0a2:	bd10      	pop	{r4, pc}

0800b0a4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800b0a4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800b0a8:	600b      	str	r3, [r1, #0]
 800b0aa:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800b0ae:	6013      	str	r3, [r2, #0]
 800b0b0:	4770      	bx	lr

0800b0b2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800b0b2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800b0b6:	4770      	bx	lr

0800b0b8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800b0b8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800b0bc:	4770      	bx	lr

0800b0be <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_RtS2_>:
 800b0be:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b0c0:	460d      	mov	r5, r1
 800b0c2:	4614      	mov	r4, r2
 800b0c4:	9908      	ldr	r1, [sp, #32]
 800b0c6:	6802      	ldr	r2, [r0, #0]
 800b0c8:	9100      	str	r1, [sp, #0]
 800b0ca:	f8d2 609c 	ldr.w	r6, [r2, #156]	; 0x9c
 800b0ce:	a902      	add	r1, sp, #8
 800b0d0:	aa03      	add	r2, sp, #12
 800b0d2:	47b0      	blx	r6
 800b0d4:	9b02      	ldr	r3, [sp, #8]
 800b0d6:	802b      	strh	r3, [r5, #0]
 800b0d8:	9b03      	ldr	r3, [sp, #12]
 800b0da:	8023      	strh	r3, [r4, #0]
 800b0dc:	b004      	add	sp, #16
 800b0de:	bd70      	pop	{r4, r5, r6, pc}

0800b0e0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_Rt>:
 800b0e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b0e2:	4614      	mov	r4, r2
 800b0e4:	6802      	ldr	r2, [r0, #0]
 800b0e6:	460d      	mov	r5, r1
 800b0e8:	f8d2 60a0 	ldr.w	r6, [r2, #160]	; 0xa0
 800b0ec:	4669      	mov	r1, sp
 800b0ee:	aa01      	add	r2, sp, #4
 800b0f0:	47b0      	blx	r6
 800b0f2:	9b00      	ldr	r3, [sp, #0]
 800b0f4:	802b      	strh	r3, [r5, #0]
 800b0f6:	9b01      	ldr	r3, [sp, #4]
 800b0f8:	8023      	strh	r3, [r4, #0]
 800b0fa:	b002      	add	sp, #8
 800b0fc:	bd70      	pop	{r4, r5, r6, pc}

0800b0fe <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_>:
 800b0fe:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b100:	6803      	ldr	r3, [r0, #0]
 800b102:	460d      	mov	r5, r1
 800b104:	4614      	mov	r4, r2
 800b106:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b10a:	aa01      	add	r2, sp, #4
 800b10c:	4669      	mov	r1, sp
 800b10e:	4798      	blx	r3
 800b110:	9b00      	ldr	r3, [sp, #0]
 800b112:	802b      	strh	r3, [r5, #0]
 800b114:	9b01      	ldr	r3, [sp, #4]
 800b116:	8023      	strh	r3, [r4, #0]
 800b118:	b003      	add	sp, #12
 800b11a:	bd30      	pop	{r4, r5, pc}

0800b11c <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800b11c:	4770      	bx	lr

0800b11e <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800b11e:	b510      	push	{r4, lr}
 800b120:	21b0      	movs	r1, #176	; 0xb0
 800b122:	4604      	mov	r4, r0
 800b124:	f016 f9d5 	bl	80214d2 <_ZdlPvj>
 800b128:	4620      	mov	r0, r4
 800b12a:	bd10      	pop	{r4, pc}

0800b12c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800b12c:	b570      	push	{r4, r5, r6, lr}
 800b12e:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800b132:	428d      	cmp	r5, r1
 800b134:	bfb8      	it	lt
 800b136:	460d      	movlt	r5, r1
 800b138:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800b13c:	428d      	cmp	r5, r1
 800b13e:	4604      	mov	r4, r0
 800b140:	bfa8      	it	ge
 800b142:	460d      	movge	r5, r1
 800b144:	4616      	mov	r6, r2
 800b146:	b99a      	cbnz	r2, 800b170 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800b148:	6803      	ldr	r3, [r0, #0]
 800b14a:	4629      	mov	r1, r5
 800b14c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b150:	4798      	blx	r3
 800b152:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800b156:	b338      	cbz	r0, 800b1a8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x7c>
 800b158:	6803      	ldr	r3, [r0, #0]
 800b15a:	68db      	ldr	r3, [r3, #12]
 800b15c:	4798      	blx	r3
 800b15e:	b318      	cbz	r0, 800b1a8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x7c>
 800b160:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800b164:	6803      	ldr	r3, [r0, #0]
 800b166:	4621      	mov	r1, r4
 800b168:	689b      	ldr	r3, [r3, #8]
 800b16a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b16e:	4718      	bx	r3
 800b170:	f8d0 30a0 	ldr.w	r3, [r0, #160]	; 0xa0
 800b174:	2b00      	cmp	r3, #0
 800b176:	dd04      	ble.n	800b182 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x56>
 800b178:	f004 ff76 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 800b17c:	4621      	mov	r1, r4
 800b17e:	f004 ffab 	bl	80100d8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800b182:	6823      	ldr	r3, [r4, #0]
 800b184:	4620      	mov	r0, r4
 800b186:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b18a:	4798      	blx	r3
 800b18c:	2300      	movs	r3, #0
 800b18e:	e9c4 0526 	strd	r0, r5, [r4, #152]	; 0x98
 800b192:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
 800b196:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 800b19a:	f004 ff65 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 800b19e:	4621      	mov	r1, r4
 800b1a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1a4:	f004 bf66 	b.w	8010074 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 800b1a8:	bd70      	pop	{r4, r5, r6, pc}

0800b1aa <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800b1aa:	b510      	push	{r4, lr}
 800b1ac:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800b1b0:	4299      	cmp	r1, r3
 800b1b2:	bfb8      	it	lt
 800b1b4:	4619      	movlt	r1, r3
 800b1b6:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800b1ba:	4299      	cmp	r1, r3
 800b1bc:	bfa8      	it	ge
 800b1be:	4619      	movge	r1, r3
 800b1c0:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800b1c4:	428b      	cmp	r3, r1
 800b1c6:	4604      	mov	r4, r0
 800b1c8:	d010      	beq.n	800b1ec <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800b1ca:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800b1ce:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800b1d2:	b158      	cbz	r0, 800b1ec <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800b1d4:	6803      	ldr	r3, [r0, #0]
 800b1d6:	68db      	ldr	r3, [r3, #12]
 800b1d8:	4798      	blx	r3
 800b1da:	b138      	cbz	r0, 800b1ec <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800b1dc:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
 800b1e0:	6803      	ldr	r3, [r0, #0]
 800b1e2:	4621      	mov	r1, r4
 800b1e4:	689b      	ldr	r3, [r3, #8]
 800b1e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b1ea:	4718      	bx	r3
 800b1ec:	bd10      	pop	{r4, pc}
	...

0800b1f0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800b1f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1f4:	4291      	cmp	r1, r2
 800b1f6:	4604      	mov	r4, r0
 800b1f8:	460e      	mov	r6, r1
 800b1fa:	4615      	mov	r5, r2
 800b1fc:	4698      	mov	r8, r3
 800b1fe:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800b202:	db05      	blt.n	800b210 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x20>
 800b204:	4b11      	ldr	r3, [pc, #68]	; (800b24c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x5c>)
 800b206:	4a12      	ldr	r2, [pc, #72]	; (800b250 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 800b208:	2149      	movs	r1, #73	; 0x49
 800b20a:	4812      	ldr	r0, [pc, #72]	; (800b254 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x64>)
 800b20c:	f016 ff80 	bl	8022110 <__assert_func>
 800b210:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800b214:	6803      	ldr	r3, [r0, #0]
 800b216:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800b21a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b21e:	4798      	blx	r3
 800b220:	f1b8 0f00 	cmp.w	r8, #0
 800b224:	d10c      	bne.n	800b240 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x50>
 800b226:	1bad      	subs	r5, r5, r6
 800b228:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800b22c:	f8b4 3090 	ldrh.w	r3, [r4, #144]	; 0x90
 800b230:	f8a4 7092 	strh.w	r7, [r4, #146]	; 0x92
 800b234:	42bb      	cmp	r3, r7
 800b236:	d806      	bhi.n	800b246 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x56>
 800b238:	4b07      	ldr	r3, [pc, #28]	; (800b258 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x68>)
 800b23a:	4a05      	ldr	r2, [pc, #20]	; (800b250 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x60>)
 800b23c:	2156      	movs	r1, #86	; 0x56
 800b23e:	e7e4      	b.n	800b20a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x1a>
 800b240:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 800b244:	e7f2      	b.n	800b22c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x3c>
 800b246:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b24a:	bf00      	nop
 800b24c:	0802497e 	.word	0x0802497e
 800b250:	08024acc 	.word	0x08024acc
 800b254:	08024988 	.word	0x08024988
 800b258:	080249df 	.word	0x080249df

0800b25c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800b25c:	b570      	push	{r4, r5, r6, lr}
 800b25e:	4604      	mov	r4, r0
 800b260:	e9d4 3226 	ldrd	r3, r2, [r4, #152]	; 0x98
 800b264:	f8d0 00a4 	ldr.w	r0, [r0, #164]	; 0xa4
 800b268:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800b26c:	3001      	adds	r0, #1
 800b26e:	1ad2      	subs	r2, r2, r3
 800b270:	b212      	sxth	r2, r2
 800b272:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
 800b276:	f8b4 30a0 	ldrh.w	r3, [r4, #160]	; 0xa0
 800b27a:	2100      	movs	r1, #0
 800b27c:	b280      	uxth	r0, r0
 800b27e:	47a8      	blx	r5
 800b280:	f8d4 1098 	ldr.w	r1, [r4, #152]	; 0x98
 800b284:	6823      	ldr	r3, [r4, #0]
 800b286:	4401      	add	r1, r0
 800b288:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b28c:	4620      	mov	r0, r4
 800b28e:	4798      	blx	r3
 800b290:	e9d4 3228 	ldrd	r3, r2, [r4, #160]	; 0xa0
 800b294:	429a      	cmp	r2, r3
 800b296:	db16      	blt.n	800b2c6 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x6a>
 800b298:	2300      	movs	r3, #0
 800b29a:	e9c4 3328 	strd	r3, r3, [r4, #160]	; 0xa0
 800b29e:	f004 fee3 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 800b2a2:	4621      	mov	r1, r4
 800b2a4:	f004 ff18 	bl	80100d8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800b2a8:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800b2ac:	b158      	cbz	r0, 800b2c6 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x6a>
 800b2ae:	6803      	ldr	r3, [r0, #0]
 800b2b0:	68db      	ldr	r3, [r3, #12]
 800b2b2:	4798      	blx	r3
 800b2b4:	b138      	cbz	r0, 800b2c6 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x6a>
 800b2b6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800b2ba:	6803      	ldr	r3, [r0, #0]
 800b2bc:	4621      	mov	r1, r4
 800b2be:	689b      	ldr	r3, [r3, #8]
 800b2c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b2c4:	4718      	bx	r3
 800b2c6:	bd70      	pop	{r4, r5, r6, pc}

0800b2c8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800b2c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b2ca:	4604      	mov	r4, r0
 800b2cc:	460d      	mov	r5, r1
 800b2ce:	b1a9      	cbz	r1, 800b2fc <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800b2d0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800b2d4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800b2d8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800b2dc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800b2e0:	ab01      	add	r3, sp, #4
 800b2e2:	1a12      	subs	r2, r2, r0
 800b2e4:	1b89      	subs	r1, r1, r6
 800b2e6:	1a38      	subs	r0, r7, r0
 800b2e8:	f006 f840 	bl	801136c <_ZN8touchgfx6muldivElllRl>
 800b2ec:	4629      	mov	r1, r5
 800b2ee:	ab01      	add	r3, sp, #4
 800b2f0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800b2f4:	4430      	add	r0, r6
 800b2f6:	f006 f839 	bl	801136c <_ZN8touchgfx6muldivElllRl>
 800b2fa:	b285      	uxth	r5, r0
 800b2fc:	4628      	mov	r0, r5
 800b2fe:	b003      	add	sp, #12
 800b300:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b302 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800b302:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b306:	4604      	mov	r4, r0
 800b308:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800b30c:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800b310:	460e      	mov	r6, r1
 800b312:	4615      	mov	r5, r2
 800b314:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800b318:	4619      	mov	r1, r3
 800b31a:	463a      	mov	r2, r7
 800b31c:	3058      	adds	r0, #88	; 0x58
 800b31e:	4698      	mov	r8, r3
 800b320:	f7f8 fd9b 	bl	8003e5a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800b324:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b328:	4446      	add	r6, r8
 800b32a:	42b3      	cmp	r3, r6
 800b32c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b330:	bfb8      	it	lt
 800b332:	8126      	strhlt	r6, [r4, #8]
 800b334:	443d      	add	r5, r7
 800b336:	42ab      	cmp	r3, r5
 800b338:	bfb8      	it	lt
 800b33a:	8165      	strhlt	r5, [r4, #10]
 800b33c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b340 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800b340:	b510      	push	{r4, lr}
 800b342:	4604      	mov	r4, r0
 800b344:	302c      	adds	r0, #44	; 0x2c
 800b346:	f003 f917 	bl	800e578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b34a:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800b34e:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800b352:	4620      	mov	r0, r4
 800b354:	f7f8 fd81 	bl	8003e5a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800b358:	bd10      	pop	{r4, pc}
	...

0800b35c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800b35c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b360:	4604      	mov	r4, r0
 800b362:	4626      	mov	r6, r4
 800b364:	2500      	movs	r5, #0
 800b366:	f7f7 fa6d 	bl	8002844 <_ZN8touchgfx8DrawableC1Ev>
 800b36a:	4b23      	ldr	r3, [pc, #140]	; (800b3f8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800b36c:	62a5      	str	r5, [r4, #40]	; 0x28
 800b36e:	f846 3b2c 	str.w	r3, [r6], #44
 800b372:	af02      	add	r7, sp, #8
 800b374:	2226      	movs	r2, #38	; 0x26
 800b376:	f64f 78ff 	movw	r8, #65535	; 0xffff
 800b37a:	4629      	mov	r1, r5
 800b37c:	4630      	mov	r0, r6
 800b37e:	f827 8d04 	strh.w	r8, [r7, #-4]!
 800b382:	f016 ff51 	bl	8022228 <memset>
 800b386:	4630      	mov	r0, r6
 800b388:	f7f7 fa5c 	bl	8002844 <_ZN8touchgfx8DrawableC1Ev>
 800b38c:	4b1b      	ldr	r3, [pc, #108]	; (800b3fc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800b38e:	62e3      	str	r3, [r4, #44]	; 0x2c
 800b390:	4639      	mov	r1, r7
 800b392:	4630      	mov	r0, r6
 800b394:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800b398:	f8a4 8052 	strh.w	r8, [r4, #82]	; 0x52
 800b39c:	f884 8054 	strb.w	r8, [r4, #84]	; 0x54
 800b3a0:	f003 f8ea 	bl	800e578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b3a4:	4638      	mov	r0, r7
 800b3a6:	f7f7 fa4d 	bl	8002844 <_ZN8touchgfx8DrawableC1Ev>
 800b3aa:	4b15      	ldr	r3, [pc, #84]	; (800b400 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800b3ac:	65a3      	str	r3, [r4, #88]	; 0x58
 800b3ae:	2364      	movs	r3, #100	; 0x64
 800b3b0:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800b3b4:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800b3b8:	4b12      	ldr	r3, [pc, #72]	; (800b404 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800b3ba:	f8c4 50ac 	str.w	r5, [r4, #172]	; 0xac
 800b3be:	e9c4 3525 	strd	r3, r5, [r4, #148]	; 0x94
 800b3c2:	4629      	mov	r1, r5
 800b3c4:	4630      	mov	r0, r6
 800b3c6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800b3ca:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800b3ce:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800b3d2:	f7f7 f9ef 	bl	80027b4 <_ZN8touchgfx8Drawable4setXEs>
 800b3d6:	4629      	mov	r1, r5
 800b3d8:	4630      	mov	r0, r6
 800b3da:	f7f7 f9ed 	bl	80027b8 <_ZN8touchgfx8Drawable4setYEs>
 800b3de:	4631      	mov	r1, r6
 800b3e0:	4620      	mov	r0, r4
 800b3e2:	f000 fab3 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b3e6:	4620      	mov	r0, r4
 800b3e8:	4639      	mov	r1, r7
 800b3ea:	f000 faaf 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b3ee:	4620      	mov	r0, r4
 800b3f0:	b002      	add	sp, #8
 800b3f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b3f6:	bf00      	nop
 800b3f8:	08024a04 	.word	0x08024a04
 800b3fc:	08025c78 	.word	0x08025c78
 800b400:	08024dc8 	.word	0x08024dc8
 800b404:	08011ad7 	.word	0x08011ad7

0800b408 <_ZN8touchgfx12DigitalClock14setDisplayModeENS0_11DisplayModeE>:
 800b408:	f880 102f 	strb.w	r1, [r0, #47]	; 0x2f
 800b40c:	4770      	bx	lr

0800b40e <_ZNK8touchgfx12DigitalClock14getDisplayModeEv>:
 800b40e:	f890 002f 	ldrb.w	r0, [r0, #47]	; 0x2f
 800b412:	4770      	bx	lr

0800b414 <_ZN8touchgfx12DigitalClock8setWidthEs>:
 800b414:	8101      	strh	r1, [r0, #8]
 800b416:	8781      	strh	r1, [r0, #60]	; 0x3c
 800b418:	4770      	bx	lr

0800b41a <_ZN8touchgfx12DigitalClock9setHeightEs>:
 800b41a:	8141      	strh	r1, [r0, #10]
 800b41c:	87c1      	strh	r1, [r0, #62]	; 0x3e
 800b41e:	4770      	bx	lr

0800b420 <_ZN8touchgfx12DigitalClock8setAlphaEh>:
 800b420:	f880 106a 	strb.w	r1, [r0, #106]	; 0x6a
 800b424:	4770      	bx	lr

0800b426 <_ZNK8touchgfx12DigitalClock8getAlphaEv>:
 800b426:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b42a:	4770      	bx	lr

0800b42c <_ZNK8touchgfx12DigitalClock8getColorEv>:
 800b42c:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800b42e:	4770      	bx	lr

0800b430 <_ZN8touchgfx12DigitalClockD1Ev>:
 800b430:	4770      	bx	lr

0800b432 <_ZN8touchgfx12DigitalClock8setColorENS_9colortypeE>:
 800b432:	6641      	str	r1, [r0, #100]	; 0x64
 800b434:	3034      	adds	r0, #52	; 0x34
 800b436:	f005 bdba 	b.w	8010fae <_ZNK8touchgfx8Drawable10invalidateEv>
	...

0800b43c <_ZN8touchgfx12DigitalClock12setBaselineYEs>:
 800b43c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b440:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b444:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b448:	4293      	cmp	r3, r2
 800b44a:	4605      	mov	r5, r0
 800b44c:	d026      	beq.n	800b49c <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x60>
 800b44e:	6802      	ldr	r2, [r0, #0]
 800b450:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 800b454:	6d56      	ldr	r6, [r2, #84]	; 0x54
 800b456:	4a12      	ldr	r2, [pc, #72]	; (800b4a0 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x64>)
 800b458:	6812      	ldr	r2, [r2, #0]
 800b45a:	b28c      	uxth	r4, r1
 800b45c:	b92a      	cbnz	r2, 800b46a <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x2e>
 800b45e:	4b11      	ldr	r3, [pc, #68]	; (800b4a4 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x68>)
 800b460:	4a11      	ldr	r2, [pc, #68]	; (800b4a8 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x6c>)
 800b462:	21b1      	movs	r1, #177	; 0xb1
 800b464:	4811      	ldr	r0, [pc, #68]	; (800b4ac <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x70>)
 800b466:	f016 fe53 	bl	8022110 <__assert_func>
 800b46a:	4911      	ldr	r1, [pc, #68]	; (800b4b0 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x74>)
 800b46c:	8809      	ldrh	r1, [r1, #0]
 800b46e:	4299      	cmp	r1, r3
 800b470:	d803      	bhi.n	800b47a <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x3e>
 800b472:	4b10      	ldr	r3, [pc, #64]	; (800b4b4 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x78>)
 800b474:	4a0c      	ldr	r2, [pc, #48]	; (800b4a8 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x6c>)
 800b476:	21b2      	movs	r1, #178	; 0xb2
 800b478:	e7f4      	b.n	800b464 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x28>
 800b47a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800b47e:	4b0e      	ldr	r3, [pc, #56]	; (800b4b8 <_ZN8touchgfx12DigitalClock12setBaselineYEs+0x7c>)
 800b480:	681b      	ldr	r3, [r3, #0]
 800b482:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800b486:	6803      	ldr	r3, [r0, #0]
 800b488:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b48a:	4798      	blx	r3
 800b48c:	1a22      	subs	r2, r4, r0
 800b48e:	4639      	mov	r1, r7
 800b490:	4628      	mov	r0, r5
 800b492:	4633      	mov	r3, r6
 800b494:	b212      	sxth	r2, r2
 800b496:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b49a:	4718      	bx	r3
 800b49c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b4a0:	2000e450 	.word	0x2000e450
 800b4a4:	08023fab 	.word	0x08023fab
 800b4a8:	08024c34 	.word	0x08024c34
 800b4ac:	08024039 	.word	0x08024039
 800b4b0:	2000e454 	.word	0x2000e454
 800b4b4:	08024062 	.word	0x08024062
 800b4b8:	2000e458 	.word	0x2000e458

0800b4bc <_ZN8touchgfx12DigitalClockD0Ev>:
 800b4bc:	b510      	push	{r4, lr}
 800b4be:	218c      	movs	r1, #140	; 0x8c
 800b4c0:	4604      	mov	r4, r0
 800b4c2:	f016 f806 	bl	80214d2 <_ZdlPvj>
 800b4c6:	4620      	mov	r0, r4
 800b4c8:	bd10      	pop	{r4, pc}
	...

0800b4cc <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE>:
 800b4cc:	b513      	push	{r0, r1, r4, lr}
 800b4ce:	4b08      	ldr	r3, [pc, #32]	; (800b4f0 <_ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE+0x24>)
 800b4d0:	9300      	str	r3, [sp, #0]
 800b4d2:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800b4d6:	888b      	ldrh	r3, [r1, #4]
 800b4d8:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b4dc:	4669      	mov	r1, sp
 800b4de:	4620      	mov	r0, r4
 800b4e0:	f002 fd39 	bl	800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 800b4e4:	4620      	mov	r0, r4
 800b4e6:	f005 fd62 	bl	8010fae <_ZNK8touchgfx8Drawable10invalidateEv>
 800b4ea:	b002      	add	sp, #8
 800b4ec:	bd10      	pop	{r4, pc}
 800b4ee:	bf00      	nop
 800b4f0:	080238d0 	.word	0x080238d0

0800b4f4 <_ZN8touchgfx12DigitalClock11updateClockEv>:
 800b4f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b4f8:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800b4fc:	b085      	sub	sp, #20
 800b4fe:	4604      	mov	r4, r0
 800b500:	b9fb      	cbnz	r3, 800b542 <_ZN8touchgfx12DigitalClock11updateClockEv+0x4e>
 800b502:	f890 3030 	ldrb.w	r3, [r0, #48]	; 0x30
 800b506:	4a3f      	ldr	r2, [pc, #252]	; (800b604 <_ZN8touchgfx12DigitalClock11updateClockEv+0x110>)
 800b508:	4e3f      	ldr	r6, [pc, #252]	; (800b608 <_ZN8touchgfx12DigitalClock11updateClockEv+0x114>)
 800b50a:	f100 0574 	add.w	r5, r0, #116	; 0x74
 800b50e:	2b00      	cmp	r3, #0
 800b510:	bf08      	it	eq
 800b512:	4616      	moveq	r6, r2
 800b514:	f000 f961 	bl	800b7da <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 800b518:	4607      	mov	r7, r0
 800b51a:	4620      	mov	r0, r4
 800b51c:	f000 f970 	bl	800b800 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800b520:	4680      	mov	r8, r0
 800b522:	4620      	mov	r0, r4
 800b524:	f000 f965 	bl	800b7f2 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 800b528:	2800      	cmp	r0, #0
 800b52a:	bf14      	ite	ne
 800b52c:	2341      	movne	r3, #65	; 0x41
 800b52e:	2350      	moveq	r3, #80	; 0x50
 800b530:	e9cd 8300 	strd	r8, r3, [sp]
 800b534:	4632      	mov	r2, r6
 800b536:	463b      	mov	r3, r7
 800b538:	210c      	movs	r1, #12
 800b53a:	4628      	mov	r0, r5
 800b53c:	f007 fe08 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800b540:	e016      	b.n	800b570 <_ZN8touchgfx12DigitalClock11updateClockEv+0x7c>
 800b542:	2b01      	cmp	r3, #1
 800b544:	d11b      	bne.n	800b57e <_ZN8touchgfx12DigitalClock11updateClockEv+0x8a>
 800b546:	f890 3030 	ldrb.w	r3, [r0, #48]	; 0x30
 800b54a:	4a30      	ldr	r2, [pc, #192]	; (800b60c <_ZN8touchgfx12DigitalClock11updateClockEv+0x118>)
 800b54c:	4d30      	ldr	r5, [pc, #192]	; (800b610 <_ZN8touchgfx12DigitalClock11updateClockEv+0x11c>)
 800b54e:	2b00      	cmp	r3, #0
 800b550:	bf08      	it	eq
 800b552:	4615      	moveq	r5, r2
 800b554:	f000 f93e 	bl	800b7d4 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 800b558:	4606      	mov	r6, r0
 800b55a:	4620      	mov	r0, r4
 800b55c:	f000 f950 	bl	800b800 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800b560:	4633      	mov	r3, r6
 800b562:	9000      	str	r0, [sp, #0]
 800b564:	462a      	mov	r2, r5
 800b566:	210c      	movs	r1, #12
 800b568:	f104 0074 	add.w	r0, r4, #116	; 0x74
 800b56c:	f007 fdf0 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800b570:	f104 0034 	add.w	r0, r4, #52	; 0x34
 800b574:	b005      	add	sp, #20
 800b576:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b57a:	f005 bd18 	b.w	8010fae <_ZNK8touchgfx8Drawable10invalidateEv>
 800b57e:	2b02      	cmp	r3, #2
 800b580:	d125      	bne.n	800b5ce <_ZN8touchgfx12DigitalClock11updateClockEv+0xda>
 800b582:	f890 3030 	ldrb.w	r3, [r0, #48]	; 0x30
 800b586:	4a23      	ldr	r2, [pc, #140]	; (800b614 <_ZN8touchgfx12DigitalClock11updateClockEv+0x120>)
 800b588:	4e23      	ldr	r6, [pc, #140]	; (800b618 <_ZN8touchgfx12DigitalClock11updateClockEv+0x124>)
 800b58a:	f100 0574 	add.w	r5, r0, #116	; 0x74
 800b58e:	2b00      	cmp	r3, #0
 800b590:	bf08      	it	eq
 800b592:	4616      	moveq	r6, r2
 800b594:	f000 f921 	bl	800b7da <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>
 800b598:	4607      	mov	r7, r0
 800b59a:	4620      	mov	r0, r4
 800b59c:	f000 f930 	bl	800b800 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800b5a0:	4680      	mov	r8, r0
 800b5a2:	4620      	mov	r0, r4
 800b5a4:	f000 f92f 	bl	800b806 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 800b5a8:	4681      	mov	r9, r0
 800b5aa:	4620      	mov	r0, r4
 800b5ac:	f000 f921 	bl	800b7f2 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>
 800b5b0:	2800      	cmp	r0, #0
 800b5b2:	bf14      	ite	ne
 800b5b4:	2341      	movne	r3, #65	; 0x41
 800b5b6:	2350      	moveq	r3, #80	; 0x50
 800b5b8:	e9cd 9301 	strd	r9, r3, [sp, #4]
 800b5bc:	f8cd 8000 	str.w	r8, [sp]
 800b5c0:	463b      	mov	r3, r7
 800b5c2:	4632      	mov	r2, r6
 800b5c4:	210c      	movs	r1, #12
 800b5c6:	4628      	mov	r0, r5
 800b5c8:	f007 fdc2 	bl	8013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800b5cc:	e7d0      	b.n	800b570 <_ZN8touchgfx12DigitalClock11updateClockEv+0x7c>
 800b5ce:	2b03      	cmp	r3, #3
 800b5d0:	d1ce      	bne.n	800b570 <_ZN8touchgfx12DigitalClock11updateClockEv+0x7c>
 800b5d2:	f890 3030 	ldrb.w	r3, [r0, #48]	; 0x30
 800b5d6:	4a11      	ldr	r2, [pc, #68]	; (800b61c <_ZN8touchgfx12DigitalClock11updateClockEv+0x128>)
 800b5d8:	4d11      	ldr	r5, [pc, #68]	; (800b620 <_ZN8touchgfx12DigitalClock11updateClockEv+0x12c>)
 800b5da:	2b00      	cmp	r3, #0
 800b5dc:	bf08      	it	eq
 800b5de:	4615      	moveq	r5, r2
 800b5e0:	f000 f8f8 	bl	800b7d4 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>
 800b5e4:	4606      	mov	r6, r0
 800b5e6:	4620      	mov	r0, r4
 800b5e8:	f000 f90a 	bl	800b800 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 800b5ec:	4607      	mov	r7, r0
 800b5ee:	4620      	mov	r0, r4
 800b5f0:	f000 f909 	bl	800b806 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 800b5f4:	4633      	mov	r3, r6
 800b5f6:	e9cd 7000 	strd	r7, r0, [sp]
 800b5fa:	462a      	mov	r2, r5
 800b5fc:	210c      	movs	r1, #12
 800b5fe:	f104 0074 	add.w	r0, r4, #116	; 0x74
 800b602:	e79b      	b.n	800b53c <_ZN8touchgfx12DigitalClock11updateClockEv+0x48>
 800b604:	08024b25 	.word	0x08024b25
 800b608:	08024b4f 	.word	0x08024b4f
 800b60c:	08024b31 	.word	0x08024b31
 800b610:	08024b6f 	.word	0x08024b6f
 800b614:	08024b4c 	.word	0x08024b4c
 800b618:	08024b39 	.word	0x08024b39
 800b61c:	08024b6c 	.word	0x08024b6c
 800b620:	08024b5d 	.word	0x08024b5d

0800b624 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800b624:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b626:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800b628:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b62c:	4299      	cmp	r1, r3
 800b62e:	4606      	mov	r6, r0
 800b630:	d02a      	beq.n	800b688 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800b632:	4b16      	ldr	r3, [pc, #88]	; (800b68c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800b634:	681b      	ldr	r3, [r3, #0]
 800b636:	b92b      	cbnz	r3, 800b644 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800b638:	4b15      	ldr	r3, [pc, #84]	; (800b690 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800b63a:	4a16      	ldr	r2, [pc, #88]	; (800b694 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800b63c:	21b1      	movs	r1, #177	; 0xb1
 800b63e:	4816      	ldr	r0, [pc, #88]	; (800b698 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800b640:	f016 fd66 	bl	8022110 <__assert_func>
 800b644:	4a15      	ldr	r2, [pc, #84]	; (800b69c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800b646:	8812      	ldrh	r2, [r2, #0]
 800b648:	428a      	cmp	r2, r1
 800b64a:	d803      	bhi.n	800b654 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800b64c:	4b14      	ldr	r3, [pc, #80]	; (800b6a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800b64e:	4a11      	ldr	r2, [pc, #68]	; (800b694 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800b650:	21b2      	movs	r1, #178	; 0xb2
 800b652:	e7f4      	b.n	800b63e <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800b654:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800b658:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800b65c:	4b11      	ldr	r3, [pc, #68]	; (800b6a4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800b65e:	7854      	ldrb	r4, [r2, #1]
 800b660:	681b      	ldr	r3, [r3, #0]
 800b662:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800b666:	682b      	ldr	r3, [r5, #0]
 800b668:	69df      	ldr	r7, [r3, #28]
 800b66a:	4b0f      	ldr	r3, [pc, #60]	; (800b6a8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800b66c:	6818      	ldr	r0, [r3, #0]
 800b66e:	f7f8 fe95 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 800b672:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800b676:	2300      	movs	r3, #0
 800b678:	9300      	str	r3, [sp, #0]
 800b67a:	4602      	mov	r2, r0
 800b67c:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800b67e:	4621      	mov	r1, r4
 800b680:	4628      	mov	r0, r5
 800b682:	47b8      	blx	r7
 800b684:	b003      	add	sp, #12
 800b686:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b688:	2000      	movs	r0, #0
 800b68a:	e7fb      	b.n	800b684 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800b68c:	2000e450 	.word	0x2000e450
 800b690:	08023fab 	.word	0x08023fab
 800b694:	08024c34 	.word	0x08024c34
 800b698:	08024039 	.word	0x08024039
 800b69c:	2000e454 	.word	0x2000e454
 800b6a0:	08024062 	.word	0x08024062
 800b6a4:	2000e458 	.word	0x2000e458
 800b6a8:	2000e45c 	.word	0x2000e45c

0800b6ac <_ZNK8touchgfx12DigitalClock12getTextWidthEv>:
 800b6ac:	b508      	push	{r3, lr}
 800b6ae:	3034      	adds	r0, #52	; 0x34
 800b6b0:	f7ff ffb8 	bl	800b624 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>
 800b6b4:	bd08      	pop	{r3, pc}
	...

0800b6b8 <_ZN8touchgfx12DigitalClockC1Ev>:
 800b6b8:	b510      	push	{r4, lr}
 800b6ba:	4604      	mov	r4, r0
 800b6bc:	f000 f870 	bl	800b7a0 <_ZN8touchgfx13AbstractClockC1Ev>
 800b6c0:	2201      	movs	r2, #1
 800b6c2:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800b6c6:	4a1a      	ldr	r2, [pc, #104]	; (800b730 <_ZN8touchgfx12DigitalClockC1Ev+0x78>)
 800b6c8:	65e2      	str	r2, [r4, #92]	; 0x5c
 800b6ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b6ce:	f8a4 2060 	strh.w	r2, [r4, #96]	; 0x60
 800b6d2:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800b6d6:	66a2      	str	r2, [r4, #104]	; 0x68
 800b6d8:	4b16      	ldr	r3, [pc, #88]	; (800b734 <_ZN8touchgfx12DigitalClockC1Ev+0x7c>)
 800b6da:	4a17      	ldr	r2, [pc, #92]	; (800b738 <_ZN8touchgfx12DigitalClockC1Ev+0x80>)
 800b6dc:	6023      	str	r3, [r4, #0]
 800b6de:	6362      	str	r2, [r4, #52]	; 0x34
 800b6e0:	2303      	movs	r3, #3
 800b6e2:	4622      	mov	r2, r4
 800b6e4:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800b6e8:	2300      	movs	r3, #0
 800b6ea:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 800b6ee:	8723      	strh	r3, [r4, #56]	; 0x38
 800b6f0:	8763      	strh	r3, [r4, #58]	; 0x3a
 800b6f2:	87a3      	strh	r3, [r4, #60]	; 0x3c
 800b6f4:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800b6f6:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 800b6fa:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 800b6fe:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
 800b702:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 800b706:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800b70a:	6523      	str	r3, [r4, #80]	; 0x50
 800b70c:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800b710:	6663      	str	r3, [r4, #100]	; 0x64
 800b712:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
 800b716:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800b71a:	f822 3f74 	strh.w	r3, [r2, #116]!
 800b71e:	4620      	mov	r0, r4
 800b720:	6722      	str	r2, [r4, #112]	; 0x70
 800b722:	f104 0134 	add.w	r1, r4, #52	; 0x34
 800b726:	f000 f911 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b72a:	4620      	mov	r0, r4
 800b72c:	bd10      	pop	{r4, pc}
 800b72e:	bf00      	nop
 800b730:	080238d0 	.word	0x080238d0
 800b734:	08024b84 	.word	0x08024b84
 800b738:	08025b6c 	.word	0x08025b6c

0800b73c <_ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb>:
 800b73c:	f880 1030 	strb.w	r1, [r0, #48]	; 0x30
 800b740:	4770      	bx	lr

0800b742 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>:
 800b742:	b470      	push	{r4, r5, r6}
 800b744:	2518      	movs	r5, #24
 800b746:	fbb1 f6f5 	udiv	r6, r1, r5
 800b74a:	fb06 1115 	mls	r1, r6, r5, r1
 800b74e:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 800b752:	213c      	movs	r1, #60	; 0x3c
 800b754:	fbb2 f5f1 	udiv	r5, r2, r1
 800b758:	fb05 2211 	mls	r2, r5, r1, r2
 800b75c:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 800b760:	fbb3 f2f1 	udiv	r2, r3, r1
 800b764:	fb02 3311 	mls	r3, r2, r1, r3
 800b768:	f880 302e 	strb.w	r3, [r0, #46]	; 0x2e
 800b76c:	6803      	ldr	r3, [r0, #0]
 800b76e:	bc70      	pop	{r4, r5, r6}
 800b770:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800b774:	4718      	bx	r3

0800b776 <_ZN8touchgfx13AbstractClock13setTime12HourEhhhb>:
 800b776:	b4f0      	push	{r4, r5, r6, r7}
 800b778:	6804      	ldr	r4, [r0, #0]
 800b77a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800b77e:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
 800b782:	2e00      	cmp	r6, #0
 800b784:	f04f 040c 	mov.w	r4, #12
 800b788:	fbb1 f7f4 	udiv	r7, r1, r4
 800b78c:	fb07 1114 	mls	r1, r7, r4, r1
 800b790:	bf18      	it	ne
 800b792:	2400      	movne	r4, #0
 800b794:	fa54 f181 	uxtab	r1, r4, r1
 800b798:	46ac      	mov	ip, r5
 800b79a:	b2c9      	uxtb	r1, r1
 800b79c:	bcf0      	pop	{r4, r5, r6, r7}
 800b79e:	4760      	bx	ip

0800b7a0 <_ZN8touchgfx13AbstractClockC1Ev>:
 800b7a0:	2101      	movs	r1, #1
 800b7a2:	2200      	movs	r2, #0
 800b7a4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b7a8:	4909      	ldr	r1, [pc, #36]	; (800b7d0 <_ZN8touchgfx13AbstractClockC1Ev+0x30>)
 800b7aa:	8082      	strh	r2, [r0, #4]
 800b7ac:	80c2      	strh	r2, [r0, #6]
 800b7ae:	8102      	strh	r2, [r0, #8]
 800b7b0:	8142      	strh	r2, [r0, #10]
 800b7b2:	8182      	strh	r2, [r0, #12]
 800b7b4:	81c2      	strh	r2, [r0, #14]
 800b7b6:	8202      	strh	r2, [r0, #16]
 800b7b8:	8242      	strh	r2, [r0, #18]
 800b7ba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b7be:	61c2      	str	r2, [r0, #28]
 800b7c0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b7c4:	6001      	str	r1, [r0, #0]
 800b7c6:	6282      	str	r2, [r0, #40]	; 0x28
 800b7c8:	8582      	strh	r2, [r0, #44]	; 0x2c
 800b7ca:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800b7ce:	4770      	bx	lr
 800b7d0:	08024c6c 	.word	0x08024c6c

0800b7d4 <_ZNK8touchgfx13AbstractClock16getCurrentHour24Ev>:
 800b7d4:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800b7d8:	4770      	bx	lr

0800b7da <_ZNK8touchgfx13AbstractClock16getCurrentHour12Ev>:
 800b7da:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800b7de:	220c      	movs	r2, #12
 800b7e0:	f100 030b 	add.w	r3, r0, #11
 800b7e4:	fb93 f0f2 	sdiv	r0, r3, r2
 800b7e8:	fb02 3010 	mls	r0, r2, r0, r3
 800b7ec:	3001      	adds	r0, #1
 800b7ee:	b2c0      	uxtb	r0, r0
 800b7f0:	4770      	bx	lr

0800b7f2 <_ZNK8touchgfx13AbstractClock12getCurrentAMEv>:
 800b7f2:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800b7f6:	280b      	cmp	r0, #11
 800b7f8:	bf8c      	ite	hi
 800b7fa:	2000      	movhi	r0, #0
 800b7fc:	2001      	movls	r0, #1
 800b7fe:	4770      	bx	lr

0800b800 <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>:
 800b800:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 800b804:	4770      	bx	lr

0800b806 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>:
 800b806:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 800b80a:	4770      	bx	lr

0800b80c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800b80c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b80e:	2000      	movs	r0, #0
 800b810:	b12b      	cbz	r3, 800b81e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800b812:	b920      	cbnz	r0, 800b81e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800b814:	1a5a      	subs	r2, r3, r1
 800b816:	4250      	negs	r0, r2
 800b818:	4150      	adcs	r0, r2
 800b81a:	699b      	ldr	r3, [r3, #24]
 800b81c:	e7f8      	b.n	800b810 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800b81e:	4770      	bx	lr

0800b820 <_ZN8touchgfx9Container9removeAllEv>:
 800b820:	2200      	movs	r2, #0
 800b822:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b824:	b123      	cbz	r3, 800b830 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800b826:	6999      	ldr	r1, [r3, #24]
 800b828:	6281      	str	r1, [r0, #40]	; 0x28
 800b82a:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800b82e:	e7f8      	b.n	800b822 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800b830:	4770      	bx	lr

0800b832 <_ZN8touchgfx9Container6unlinkEv>:
 800b832:	2300      	movs	r3, #0
 800b834:	6283      	str	r3, [r0, #40]	; 0x28
 800b836:	4770      	bx	lr

0800b838 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800b838:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b83c:	461f      	mov	r7, r3
 800b83e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800b842:	460d      	mov	r5, r1
 800b844:	4616      	mov	r6, r2
 800b846:	b103      	cbz	r3, 800b84a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800b848:	6038      	str	r0, [r7, #0]
 800b84a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b84c:	b314      	cbz	r4, 800b894 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800b84e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b852:	b1eb      	cbz	r3, 800b890 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b854:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800b858:	428d      	cmp	r5, r1
 800b85a:	db19      	blt.n	800b890 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b85c:	8923      	ldrh	r3, [r4, #8]
 800b85e:	b289      	uxth	r1, r1
 800b860:	440b      	add	r3, r1
 800b862:	b21b      	sxth	r3, r3
 800b864:	429d      	cmp	r5, r3
 800b866:	da13      	bge.n	800b890 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b868:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800b86c:	4296      	cmp	r6, r2
 800b86e:	db0f      	blt.n	800b890 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b870:	8963      	ldrh	r3, [r4, #10]
 800b872:	b292      	uxth	r2, r2
 800b874:	4413      	add	r3, r2
 800b876:	b21b      	sxth	r3, r3
 800b878:	429e      	cmp	r6, r3
 800b87a:	da09      	bge.n	800b890 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b87c:	6823      	ldr	r3, [r4, #0]
 800b87e:	1ab2      	subs	r2, r6, r2
 800b880:	1a69      	subs	r1, r5, r1
 800b882:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800b886:	b212      	sxth	r2, r2
 800b888:	463b      	mov	r3, r7
 800b88a:	b209      	sxth	r1, r1
 800b88c:	4620      	mov	r0, r4
 800b88e:	47c0      	blx	r8
 800b890:	69a4      	ldr	r4, [r4, #24]
 800b892:	e7db      	b.n	800b84c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800b894:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b898 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800b898:	2200      	movs	r2, #0
 800b89a:	8002      	strh	r2, [r0, #0]
 800b89c:	8042      	strh	r2, [r0, #2]
 800b89e:	8082      	strh	r2, [r0, #4]
 800b8a0:	80c2      	strh	r2, [r0, #6]
 800b8a2:	4770      	bx	lr

0800b8a4 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800b8a4:	b570      	push	{r4, r5, r6, lr}
 800b8a6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b8a8:	460d      	mov	r5, r1
 800b8aa:	4616      	mov	r6, r2
 800b8ac:	b13c      	cbz	r4, 800b8be <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800b8ae:	6823      	ldr	r3, [r4, #0]
 800b8b0:	4620      	mov	r0, r4
 800b8b2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b8b4:	4632      	mov	r2, r6
 800b8b6:	4629      	mov	r1, r5
 800b8b8:	4798      	blx	r3
 800b8ba:	69a4      	ldr	r4, [r4, #24]
 800b8bc:	e7f6      	b.n	800b8ac <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800b8be:	bd70      	pop	{r4, r5, r6, pc}

0800b8c0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800b8c0:	b538      	push	{r3, r4, r5, lr}
 800b8c2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b8c4:	460d      	mov	r5, r1
 800b8c6:	b134      	cbz	r4, 800b8d6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800b8c8:	682b      	ldr	r3, [r5, #0]
 800b8ca:	4621      	mov	r1, r4
 800b8cc:	689b      	ldr	r3, [r3, #8]
 800b8ce:	4628      	mov	r0, r5
 800b8d0:	4798      	blx	r3
 800b8d2:	69a4      	ldr	r4, [r4, #24]
 800b8d4:	e7f7      	b.n	800b8c6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800b8d6:	bd38      	pop	{r3, r4, r5, pc}

0800b8d8 <_ZN8touchgfx9ContainerD1Ev>:
 800b8d8:	4770      	bx	lr

0800b8da <_ZN8touchgfx9ContainerD0Ev>:
 800b8da:	b510      	push	{r4, lr}
 800b8dc:	212c      	movs	r1, #44	; 0x2c
 800b8de:	4604      	mov	r4, r0
 800b8e0:	f015 fdf7 	bl	80214d2 <_ZdlPvj>
 800b8e4:	4620      	mov	r0, r4
 800b8e6:	bd10      	pop	{r4, pc}

0800b8e8 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800b8e8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b8ea:	b19b      	cbz	r3, 800b914 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800b8ec:	428b      	cmp	r3, r1
 800b8ee:	d109      	bne.n	800b904 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800b8f0:	699a      	ldr	r2, [r3, #24]
 800b8f2:	2100      	movs	r1, #0
 800b8f4:	6159      	str	r1, [r3, #20]
 800b8f6:	6282      	str	r2, [r0, #40]	; 0x28
 800b8f8:	b902      	cbnz	r2, 800b8fc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800b8fa:	4770      	bx	lr
 800b8fc:	6199      	str	r1, [r3, #24]
 800b8fe:	4770      	bx	lr
 800b900:	4613      	mov	r3, r2
 800b902:	b13a      	cbz	r2, 800b914 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800b904:	699a      	ldr	r2, [r3, #24]
 800b906:	428a      	cmp	r2, r1
 800b908:	d1fa      	bne.n	800b900 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800b90a:	698a      	ldr	r2, [r1, #24]
 800b90c:	619a      	str	r2, [r3, #24]
 800b90e:	2300      	movs	r3, #0
 800b910:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800b914:	4770      	bx	lr

0800b916 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800b916:	b410      	push	{r4}
 800b918:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b91a:	4604      	mov	r4, r0
 800b91c:	b92b      	cbnz	r3, 800b92a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800b91e:	6803      	ldr	r3, [r0, #0]
 800b920:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b924:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b926:	4611      	mov	r1, r2
 800b928:	4718      	bx	r3
 800b92a:	b941      	cbnz	r1, 800b93e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800b92c:	6193      	str	r3, [r2, #24]
 800b92e:	6282      	str	r2, [r0, #40]	; 0x28
 800b930:	6154      	str	r4, [r2, #20]
 800b932:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b936:	4770      	bx	lr
 800b938:	4603      	mov	r3, r0
 800b93a:	2800      	cmp	r0, #0
 800b93c:	d0f9      	beq.n	800b932 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800b93e:	4299      	cmp	r1, r3
 800b940:	6998      	ldr	r0, [r3, #24]
 800b942:	d1f9      	bne.n	800b938 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800b944:	6190      	str	r0, [r2, #24]
 800b946:	618a      	str	r2, [r1, #24]
 800b948:	e7f2      	b.n	800b930 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800b94c:	4288      	cmp	r0, r1
 800b94e:	b508      	push	{r3, lr}
 800b950:	d105      	bne.n	800b95e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800b952:	4b11      	ldr	r3, [pc, #68]	; (800b998 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800b954:	4a11      	ldr	r2, [pc, #68]	; (800b99c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b956:	2123      	movs	r1, #35	; 0x23
 800b958:	4811      	ldr	r0, [pc, #68]	; (800b9a0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800b95a:	f016 fbd9 	bl	8022110 <__assert_func>
 800b95e:	694b      	ldr	r3, [r1, #20]
 800b960:	b11b      	cbz	r3, 800b96a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800b962:	4b10      	ldr	r3, [pc, #64]	; (800b9a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800b964:	4a0d      	ldr	r2, [pc, #52]	; (800b99c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b966:	2124      	movs	r1, #36	; 0x24
 800b968:	e7f6      	b.n	800b958 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b96a:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800b96e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b970:	b913      	cbnz	r3, 800b978 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800b972:	6281      	str	r1, [r0, #40]	; 0x28
 800b974:	bd08      	pop	{r3, pc}
 800b976:	4613      	mov	r3, r2
 800b978:	699a      	ldr	r2, [r3, #24]
 800b97a:	b12a      	cbz	r2, 800b988 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800b97c:	428b      	cmp	r3, r1
 800b97e:	d1fa      	bne.n	800b976 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800b980:	4b09      	ldr	r3, [pc, #36]	; (800b9a8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800b982:	4a06      	ldr	r2, [pc, #24]	; (800b99c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b984:	2135      	movs	r1, #53	; 0x35
 800b986:	e7e7      	b.n	800b958 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b988:	428b      	cmp	r3, r1
 800b98a:	d103      	bne.n	800b994 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800b98c:	4b06      	ldr	r3, [pc, #24]	; (800b9a8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800b98e:	4a03      	ldr	r2, [pc, #12]	; (800b99c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b990:	2138      	movs	r1, #56	; 0x38
 800b992:	e7e1      	b.n	800b958 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b994:	6199      	str	r1, [r3, #24]
 800b996:	e7ed      	b.n	800b974 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800b998:	08024cf8 	.word	0x08024cf8
 800b99c:	08024e48 	.word	0x08024e48
 800b9a0:	08024d24 	.word	0x08024d24
 800b9a4:	08024d57 	.word	0x08024d57
 800b9a8:	08024d8d 	.word	0x08024d8d

0800b9ac <_ZN8touchgfx4RectaNERKS0_>:
 800b9ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b9b0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800b9b4:	888c      	ldrh	r4, [r1, #4]
 800b9b6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800b9ba:	443c      	add	r4, r7
 800b9bc:	b2a4      	uxth	r4, r4
 800b9be:	fa0f f884 	sxth.w	r8, r4
 800b9c2:	45c1      	cmp	r9, r8
 800b9c4:	da2f      	bge.n	800ba26 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b9c6:	8882      	ldrh	r2, [r0, #4]
 800b9c8:	444a      	add	r2, r9
 800b9ca:	b292      	uxth	r2, r2
 800b9cc:	fa0f fe82 	sxth.w	lr, r2
 800b9d0:	4577      	cmp	r7, lr
 800b9d2:	da28      	bge.n	800ba26 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b9d4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800b9d8:	88cb      	ldrh	r3, [r1, #6]
 800b9da:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800b9de:	442b      	add	r3, r5
 800b9e0:	b21b      	sxth	r3, r3
 800b9e2:	429e      	cmp	r6, r3
 800b9e4:	da1f      	bge.n	800ba26 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b9e6:	88c3      	ldrh	r3, [r0, #6]
 800b9e8:	4433      	add	r3, r6
 800b9ea:	b29b      	uxth	r3, r3
 800b9ec:	fa0f fc83 	sxth.w	ip, r3
 800b9f0:	4565      	cmp	r5, ip
 800b9f2:	da18      	bge.n	800ba26 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b9f4:	454f      	cmp	r7, r9
 800b9f6:	bfb8      	it	lt
 800b9f8:	464f      	movlt	r7, r9
 800b9fa:	42b5      	cmp	r5, r6
 800b9fc:	bfb8      	it	lt
 800b9fe:	4635      	movlt	r5, r6
 800ba00:	45f0      	cmp	r8, lr
 800ba02:	bfd8      	it	le
 800ba04:	4622      	movle	r2, r4
 800ba06:	1bd2      	subs	r2, r2, r7
 800ba08:	8082      	strh	r2, [r0, #4]
 800ba0a:	884a      	ldrh	r2, [r1, #2]
 800ba0c:	88c9      	ldrh	r1, [r1, #6]
 800ba0e:	8007      	strh	r7, [r0, #0]
 800ba10:	440a      	add	r2, r1
 800ba12:	b292      	uxth	r2, r2
 800ba14:	b211      	sxth	r1, r2
 800ba16:	458c      	cmp	ip, r1
 800ba18:	bfa8      	it	ge
 800ba1a:	4613      	movge	r3, r2
 800ba1c:	1b5b      	subs	r3, r3, r5
 800ba1e:	80c3      	strh	r3, [r0, #6]
 800ba20:	8045      	strh	r5, [r0, #2]
 800ba22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ba26:	2300      	movs	r3, #0
 800ba28:	8003      	strh	r3, [r0, #0]
 800ba2a:	8043      	strh	r3, [r0, #2]
 800ba2c:	8083      	strh	r3, [r0, #4]
 800ba2e:	80c3      	strh	r3, [r0, #6]
 800ba30:	e7f7      	b.n	800ba22 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ba32:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ba36:	2b00      	cmp	r3, #0
 800ba38:	dd06      	ble.n	800ba48 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ba3a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ba3e:	2800      	cmp	r0, #0
 800ba40:	bfcc      	ite	gt
 800ba42:	2000      	movgt	r0, #0
 800ba44:	2001      	movle	r0, #1
 800ba46:	4770      	bx	lr
 800ba48:	2001      	movs	r0, #1
 800ba4a:	4770      	bx	lr

0800ba4c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ba4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba50:	2300      	movs	r3, #0
 800ba52:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ba54:	8003      	strh	r3, [r0, #0]
 800ba56:	4604      	mov	r4, r0
 800ba58:	8043      	strh	r3, [r0, #2]
 800ba5a:	8083      	strh	r3, [r0, #4]
 800ba5c:	80c3      	strh	r3, [r0, #6]
 800ba5e:	2d00      	cmp	r5, #0
 800ba60:	d040      	beq.n	800bae4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ba62:	1d28      	adds	r0, r5, #4
 800ba64:	f7ff ffe5 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ba68:	b988      	cbnz	r0, 800ba8e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ba6a:	4620      	mov	r0, r4
 800ba6c:	f7ff ffe1 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ba70:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ba74:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ba78:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ba7c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ba80:	b138      	cbz	r0, 800ba92 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ba82:	8022      	strh	r2, [r4, #0]
 800ba84:	8063      	strh	r3, [r4, #2]
 800ba86:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ba8a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ba8e:	69ad      	ldr	r5, [r5, #24]
 800ba90:	e7e5      	b.n	800ba5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ba92:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ba96:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ba9a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ba9e:	4290      	cmp	r0, r2
 800baa0:	4607      	mov	r7, r0
 800baa2:	bfa8      	it	ge
 800baa4:	4617      	movge	r7, r2
 800baa6:	4472      	add	r2, lr
 800baa8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800baac:	8027      	strh	r7, [r4, #0]
 800baae:	4299      	cmp	r1, r3
 800bab0:	460e      	mov	r6, r1
 800bab2:	4440      	add	r0, r8
 800bab4:	bfa8      	it	ge
 800bab6:	461e      	movge	r6, r3
 800bab8:	4471      	add	r1, lr
 800baba:	4463      	add	r3, ip
 800babc:	b200      	sxth	r0, r0
 800babe:	b212      	sxth	r2, r2
 800bac0:	b209      	sxth	r1, r1
 800bac2:	b21b      	sxth	r3, r3
 800bac4:	4290      	cmp	r0, r2
 800bac6:	bfac      	ite	ge
 800bac8:	ebc7 0200 	rsbge	r2, r7, r0
 800bacc:	ebc7 0202 	rsblt	r2, r7, r2
 800bad0:	4299      	cmp	r1, r3
 800bad2:	bfac      	ite	ge
 800bad4:	ebc6 0301 	rsbge	r3, r6, r1
 800bad8:	ebc6 0303 	rsblt	r3, r6, r3
 800badc:	8066      	strh	r6, [r4, #2]
 800bade:	80a2      	strh	r2, [r4, #4]
 800bae0:	80e3      	strh	r3, [r4, #6]
 800bae2:	e7d4      	b.n	800ba8e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800bae4:	4620      	mov	r0, r4
 800bae6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800baea <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800baea:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800baee:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800baf2:	b383      	cbz	r3, 800bb56 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800baf4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800baf6:	b374      	cbz	r4, 800bb56 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800baf8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800bafc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800bb00:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800bb04:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800bb08:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bb0c:	b303      	cbz	r3, 800bb50 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800bb0e:	4668      	mov	r0, sp
 800bb10:	1d21      	adds	r1, r4, #4
 800bb12:	f8ad 5000 	strh.w	r5, [sp]
 800bb16:	f8ad 6002 	strh.w	r6, [sp, #2]
 800bb1a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800bb1e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800bb22:	f7ff ff43 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 800bb26:	4668      	mov	r0, sp
 800bb28:	f7ff ff83 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bb2c:	b980      	cbnz	r0, 800bb50 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800bb2e:	f8bd 3000 	ldrh.w	r3, [sp]
 800bb32:	88a2      	ldrh	r2, [r4, #4]
 800bb34:	1a9b      	subs	r3, r3, r2
 800bb36:	f8ad 3000 	strh.w	r3, [sp]
 800bb3a:	88e2      	ldrh	r2, [r4, #6]
 800bb3c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bb40:	1a9b      	subs	r3, r3, r2
 800bb42:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bb46:	6823      	ldr	r3, [r4, #0]
 800bb48:	4669      	mov	r1, sp
 800bb4a:	689b      	ldr	r3, [r3, #8]
 800bb4c:	4620      	mov	r0, r4
 800bb4e:	4798      	blx	r3
 800bb50:	69a4      	ldr	r4, [r4, #24]
 800bb52:	2c00      	cmp	r4, #0
 800bb54:	d1d8      	bne.n	800bb08 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800bb56:	b002      	add	sp, #8
 800bb58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bb5c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800bb5c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb5e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800bb62:	460d      	mov	r5, r1
 800bb64:	4616      	mov	r6, r2
 800bb66:	b323      	cbz	r3, 800bbb2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bb68:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bb6a:	b314      	cbz	r4, 800bbb2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bb6c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bb70:	b1eb      	cbz	r3, 800bbae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bb72:	6828      	ldr	r0, [r5, #0]
 800bb74:	6869      	ldr	r1, [r5, #4]
 800bb76:	466b      	mov	r3, sp
 800bb78:	c303      	stmia	r3!, {r0, r1}
 800bb7a:	4668      	mov	r0, sp
 800bb7c:	1d21      	adds	r1, r4, #4
 800bb7e:	f7ff ff15 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 800bb82:	4668      	mov	r0, sp
 800bb84:	f7ff ff55 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bb88:	b988      	cbnz	r0, 800bbae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bb8a:	f8bd 3000 	ldrh.w	r3, [sp]
 800bb8e:	88a2      	ldrh	r2, [r4, #4]
 800bb90:	1a9b      	subs	r3, r3, r2
 800bb92:	f8ad 3000 	strh.w	r3, [sp]
 800bb96:	88e2      	ldrh	r2, [r4, #6]
 800bb98:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bb9c:	1a9b      	subs	r3, r3, r2
 800bb9e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bba2:	6823      	ldr	r3, [r4, #0]
 800bba4:	4632      	mov	r2, r6
 800bba6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800bba8:	4669      	mov	r1, sp
 800bbaa:	4620      	mov	r0, r4
 800bbac:	4798      	blx	r3
 800bbae:	69a4      	ldr	r4, [r4, #24]
 800bbb0:	e7db      	b.n	800bb6a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800bbb2:	b002      	add	sp, #8
 800bbb4:	bd70      	pop	{r4, r5, r6, pc}

0800bbb6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800bbb6:	b513      	push	{r0, r1, r4, lr}
 800bbb8:	6803      	ldr	r3, [r0, #0]
 800bbba:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800bbbe:	2300      	movs	r3, #0
 800bbc0:	e9cd 3300 	strd	r3, r3, [sp]
 800bbc4:	466b      	mov	r3, sp
 800bbc6:	47a0      	blx	r4
 800bbc8:	b002      	add	sp, #8
 800bbca:	bd10      	pop	{r4, pc}

0800bbcc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800bbcc:	2301      	movs	r3, #1
 800bbce:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800bbd2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800bbd6:	4770      	bx	lr

0800bbd8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800bbd8:	2301      	movs	r3, #1
 800bbda:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800bbde:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800bbe2:	4770      	bx	lr

0800bbe4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800bbe4:	6843      	ldr	r3, [r0, #4]
 800bbe6:	2201      	movs	r2, #1
 800bbe8:	725a      	strb	r2, [r3, #9]
 800bbea:	6840      	ldr	r0, [r0, #4]
 800bbec:	6803      	ldr	r3, [r0, #0]
 800bbee:	691b      	ldr	r3, [r3, #16]
 800bbf0:	4718      	bx	r3

0800bbf2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800bbf2:	6840      	ldr	r0, [r0, #4]
 800bbf4:	6803      	ldr	r3, [r0, #0]
 800bbf6:	689b      	ldr	r3, [r3, #8]
 800bbf8:	4718      	bx	r3
	...

0800bbfc <_ZN8touchgfx3HAL10beginFrameEv>:
 800bbfc:	4b04      	ldr	r3, [pc, #16]	; (800bc10 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800bbfe:	781b      	ldrb	r3, [r3, #0]
 800bc00:	b123      	cbz	r3, 800bc0c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800bc02:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800bc06:	f080 0001 	eor.w	r0, r0, #1
 800bc0a:	4770      	bx	lr
 800bc0c:	2001      	movs	r0, #1
 800bc0e:	4770      	bx	lr
 800bc10:	2000e3de 	.word	0x2000e3de

0800bc14 <_ZN8touchgfx3HAL8endFrameEv>:
 800bc14:	b510      	push	{r4, lr}
 800bc16:	4604      	mov	r4, r0
 800bc18:	6840      	ldr	r0, [r0, #4]
 800bc1a:	6803      	ldr	r3, [r0, #0]
 800bc1c:	689b      	ldr	r3, [r3, #8]
 800bc1e:	4798      	blx	r3
 800bc20:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800bc24:	b113      	cbz	r3, 800bc2c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800bc26:	2301      	movs	r3, #1
 800bc28:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800bc2c:	bd10      	pop	{r4, pc}
	...

0800bc30 <_ZN8touchgfx3HAL4tickEv>:
 800bc30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bc32:	6803      	ldr	r3, [r0, #0]
 800bc34:	4d5c      	ldr	r5, [pc, #368]	; (800bda8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800bc36:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800bc3a:	4604      	mov	r4, r0
 800bc3c:	4798      	blx	r3
 800bc3e:	2800      	cmp	r0, #0
 800bc40:	f000 8097 	beq.w	800bd72 <_ZN8touchgfx3HAL4tickEv+0x142>
 800bc44:	2001      	movs	r0, #1
 800bc46:	f7f4 fd85 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800bc4a:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800bc4e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800bc52:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800bc56:	2600      	movs	r6, #0
 800bc58:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800bc5c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800bc60:	b133      	cbz	r3, 800bc70 <_ZN8touchgfx3HAL4tickEv+0x40>
 800bc62:	6823      	ldr	r3, [r4, #0]
 800bc64:	4620      	mov	r0, r4
 800bc66:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800bc6a:	4798      	blx	r3
 800bc6c:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800bc70:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800bc74:	6862      	ldr	r2, [r4, #4]
 800bc76:	f083 0301 	eor.w	r3, r3, #1
 800bc7a:	7253      	strb	r3, [r2, #9]
 800bc7c:	2601      	movs	r6, #1
 800bc7e:	702e      	strb	r6, [r5, #0]
 800bc80:	f004 f9f2 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 800bc84:	6803      	ldr	r3, [r0, #0]
 800bc86:	4631      	mov	r1, r6
 800bc88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bc8a:	4798      	blx	r3
 800bc8c:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800bc90:	b90b      	cbnz	r3, 800bc96 <_ZN8touchgfx3HAL4tickEv+0x66>
 800bc92:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800bc96:	f004 f9e7 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 800bc9a:	6803      	ldr	r3, [r0, #0]
 800bc9c:	695b      	ldr	r3, [r3, #20]
 800bc9e:	4798      	blx	r3
 800bca0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bca2:	6803      	ldr	r3, [r0, #0]
 800bca4:	691b      	ldr	r3, [r3, #16]
 800bca6:	4798      	blx	r3
 800bca8:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800bcac:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800bcb0:	3b01      	subs	r3, #1
 800bcb2:	b2db      	uxtb	r3, r3
 800bcb4:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800bcb8:	b10a      	cbz	r2, 800bcbe <_ZN8touchgfx3HAL4tickEv+0x8e>
 800bcba:	2b00      	cmp	r3, #0
 800bcbc:	d1eb      	bne.n	800bc96 <_ZN8touchgfx3HAL4tickEv+0x66>
 800bcbe:	4a3b      	ldr	r2, [pc, #236]	; (800bdac <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800bcc0:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800bcc4:	7813      	ldrb	r3, [r2, #0]
 800bcc6:	3301      	adds	r3, #1
 800bcc8:	b25b      	sxtb	r3, r3
 800bcca:	4299      	cmp	r1, r3
 800bccc:	7013      	strb	r3, [r2, #0]
 800bcce:	dc10      	bgt.n	800bcf2 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800bcd0:	68e0      	ldr	r0, [r4, #12]
 800bcd2:	2300      	movs	r3, #0
 800bcd4:	7013      	strb	r3, [r2, #0]
 800bcd6:	6803      	ldr	r3, [r0, #0]
 800bcd8:	aa03      	add	r2, sp, #12
 800bcda:	68db      	ldr	r3, [r3, #12]
 800bcdc:	a902      	add	r1, sp, #8
 800bcde:	4798      	blx	r3
 800bce0:	6823      	ldr	r3, [r4, #0]
 800bce2:	2800      	cmp	r0, #0
 800bce4:	d051      	beq.n	800bd8a <_ZN8touchgfx3HAL4tickEv+0x15a>
 800bce6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bcea:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800bcee:	4620      	mov	r0, r4
 800bcf0:	4798      	blx	r3
 800bcf2:	6960      	ldr	r0, [r4, #20]
 800bcf4:	2300      	movs	r3, #0
 800bcf6:	f88d 3007 	strb.w	r3, [sp, #7]
 800bcfa:	b158      	cbz	r0, 800bd14 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800bcfc:	6803      	ldr	r3, [r0, #0]
 800bcfe:	f10d 0107 	add.w	r1, sp, #7
 800bd02:	68db      	ldr	r3, [r3, #12]
 800bd04:	4798      	blx	r3
 800bd06:	b128      	cbz	r0, 800bd14 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800bd08:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bd0a:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800bd0e:	6803      	ldr	r3, [r0, #0]
 800bd10:	68db      	ldr	r3, [r3, #12]
 800bd12:	4798      	blx	r3
 800bd14:	f104 001c 	add.w	r0, r4, #28
 800bd18:	f013 f832 	bl	801ed80 <_ZN8touchgfx8Gestures4tickEv>
 800bd1c:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800bd20:	b30b      	cbz	r3, 800bd66 <_ZN8touchgfx3HAL4tickEv+0x136>
 800bd22:	6920      	ldr	r0, [r4, #16]
 800bd24:	6803      	ldr	r3, [r0, #0]
 800bd26:	691b      	ldr	r3, [r3, #16]
 800bd28:	4798      	blx	r3
 800bd2a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800bd2c:	4606      	mov	r6, r0
 800bd2e:	b903      	cbnz	r3, 800bd32 <_ZN8touchgfx3HAL4tickEv+0x102>
 800bd30:	6720      	str	r0, [r4, #112]	; 0x70
 800bd32:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800bd34:	4a1e      	ldr	r2, [pc, #120]	; (800bdb0 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800bd36:	1af3      	subs	r3, r6, r3
 800bd38:	4293      	cmp	r3, r2
 800bd3a:	d914      	bls.n	800bd66 <_ZN8touchgfx3HAL4tickEv+0x136>
 800bd3c:	6920      	ldr	r0, [r4, #16]
 800bd3e:	6803      	ldr	r3, [r0, #0]
 800bd40:	699b      	ldr	r3, [r3, #24]
 800bd42:	4798      	blx	r3
 800bd44:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800bd46:	2264      	movs	r2, #100	; 0x64
 800bd48:	1af3      	subs	r3, r6, r3
 800bd4a:	fbb3 f3f2 	udiv	r3, r3, r2
 800bd4e:	fbb0 f0f3 	udiv	r0, r0, r3
 800bd52:	2800      	cmp	r0, #0
 800bd54:	dc1e      	bgt.n	800bd94 <_ZN8touchgfx3HAL4tickEv+0x164>
 800bd56:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800bd5a:	6920      	ldr	r0, [r4, #16]
 800bd5c:	6803      	ldr	r3, [r0, #0]
 800bd5e:	2100      	movs	r1, #0
 800bd60:	69db      	ldr	r3, [r3, #28]
 800bd62:	4798      	blx	r3
 800bd64:	6726      	str	r6, [r4, #112]	; 0x70
 800bd66:	f004 f97f 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 800bd6a:	6803      	ldr	r3, [r0, #0]
 800bd6c:	2100      	movs	r1, #0
 800bd6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bd70:	4798      	blx	r3
 800bd72:	6823      	ldr	r3, [r4, #0]
 800bd74:	4620      	mov	r0, r4
 800bd76:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800bd7a:	4798      	blx	r3
 800bd7c:	2001      	movs	r0, #1
 800bd7e:	f7f4 fd05 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800bd82:	2300      	movs	r3, #0
 800bd84:	702b      	strb	r3, [r5, #0]
 800bd86:	b004      	add	sp, #16
 800bd88:	bd70      	pop	{r4, r5, r6, pc}
 800bd8a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800bd8e:	4620      	mov	r0, r4
 800bd90:	4798      	blx	r3
 800bd92:	e7ae      	b.n	800bcf2 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800bd94:	2863      	cmp	r0, #99	; 0x63
 800bd96:	bfcb      	itete	gt
 800bd98:	2300      	movgt	r3, #0
 800bd9a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800bd9e:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800bda2:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800bda6:	e7d8      	b.n	800bd5a <_ZN8touchgfx3HAL4tickEv+0x12a>
 800bda8:	2000e3e4 	.word	0x2000e3e4
 800bdac:	2000e3e5 	.word	0x2000e3e5
 800bdb0:	05f5e100 	.word	0x05f5e100

0800bdb4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800bdb4:	f7f4 bf80 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bdb8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800bdb8:	6581      	str	r1, [r0, #88]	; 0x58
 800bdba:	301c      	adds	r0, #28
 800bdbc:	f012 bfde 	b.w	801ed7c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800bdc0 <_ZN8touchgfx3HAL5touchEll>:
 800bdc0:	b530      	push	{r4, r5, lr}
 800bdc2:	b087      	sub	sp, #28
 800bdc4:	4604      	mov	r4, r0
 800bdc6:	a804      	add	r0, sp, #16
 800bdc8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800bdcc:	f003 ff36 	bl	800fc3c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800bdd0:	9b04      	ldr	r3, [sp, #16]
 800bdd2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800bdd6:	a906      	add	r1, sp, #24
 800bdd8:	9b05      	ldr	r3, [sp, #20]
 800bdda:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800bdde:	a803      	add	r0, sp, #12
 800bde0:	f003 ff6a 	bl	800fcb8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800bde4:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800bde8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800bdec:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800bdf0:	f104 001c 	add.w	r0, r4, #28
 800bdf4:	b189      	cbz	r1, 800be1a <_ZN8touchgfx3HAL5touchEll+0x5a>
 800bdf6:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800bdfa:	9300      	str	r3, [sp, #0]
 800bdfc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800be00:	4613      	mov	r3, r2
 800be02:	462a      	mov	r2, r5
 800be04:	f012 ffca 	bl	801ed9c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800be08:	b128      	cbz	r0, 800be16 <_ZN8touchgfx3HAL5touchEll+0x56>
 800be0a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800be0e:	65e3      	str	r3, [r4, #92]	; 0x5c
 800be10:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800be14:	6623      	str	r3, [r4, #96]	; 0x60
 800be16:	b007      	add	sp, #28
 800be18:	bd30      	pop	{r4, r5, pc}
 800be1a:	f013 f803 	bl	801ee24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800be1e:	2301      	movs	r3, #1
 800be20:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800be24:	e7f1      	b.n	800be0a <_ZN8touchgfx3HAL5touchEll+0x4a>

0800be26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800be26:	b570      	push	{r4, r5, r6, lr}
 800be28:	2b00      	cmp	r3, #0
 800be2a:	d050      	beq.n	800bece <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800be2c:	ea81 0002 	eor.w	r0, r1, r2
 800be30:	07c6      	lsls	r6, r0, #31
 800be32:	d508      	bpl.n	800be46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800be34:	3a01      	subs	r2, #1
 800be36:	18cc      	adds	r4, r1, r3
 800be38:	42a1      	cmp	r1, r4
 800be3a:	d048      	beq.n	800bece <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800be3c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800be40:	f801 0b01 	strb.w	r0, [r1], #1
 800be44:	e7f8      	b.n	800be38 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800be46:	07d5      	lsls	r5, r2, #31
 800be48:	bf42      	ittt	mi
 800be4a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800be4e:	f801 0b01 	strbmi.w	r0, [r1], #1
 800be52:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800be56:	2b01      	cmp	r3, #1
 800be58:	d915      	bls.n	800be86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800be5a:	ea82 0001 	eor.w	r0, r2, r1
 800be5e:	0784      	lsls	r4, r0, #30
 800be60:	d02d      	beq.n	800bebe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800be62:	1e94      	subs	r4, r2, #2
 800be64:	4608      	mov	r0, r1
 800be66:	18ce      	adds	r6, r1, r3
 800be68:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800be6c:	f820 5b02 	strh.w	r5, [r0], #2
 800be70:	1a35      	subs	r5, r6, r0
 800be72:	2d01      	cmp	r5, #1
 800be74:	d8f8      	bhi.n	800be68 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800be76:	1e98      	subs	r0, r3, #2
 800be78:	f020 0001 	bic.w	r0, r0, #1
 800be7c:	3002      	adds	r0, #2
 800be7e:	4401      	add	r1, r0
 800be80:	4402      	add	r2, r0
 800be82:	f003 0301 	and.w	r3, r3, #1
 800be86:	1f14      	subs	r4, r2, #4
 800be88:	4608      	mov	r0, r1
 800be8a:	18ce      	adds	r6, r1, r3
 800be8c:	1a35      	subs	r5, r6, r0
 800be8e:	2d03      	cmp	r5, #3
 800be90:	d810      	bhi.n	800beb4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800be92:	089c      	lsrs	r4, r3, #2
 800be94:	00a0      	lsls	r0, r4, #2
 800be96:	4401      	add	r1, r0
 800be98:	3801      	subs	r0, #1
 800be9a:	4402      	add	r2, r0
 800be9c:	f06f 0003 	mvn.w	r0, #3
 800bea0:	fb00 3404 	mla	r4, r0, r4, r3
 800bea4:	440c      	add	r4, r1
 800bea6:	42a1      	cmp	r1, r4
 800bea8:	d011      	beq.n	800bece <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800beaa:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800beae:	f801 3b01 	strb.w	r3, [r1], #1
 800beb2:	e7f8      	b.n	800bea6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800beb4:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800beb8:	f840 5b04 	str.w	r5, [r0], #4
 800bebc:	e7e6      	b.n	800be8c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800bebe:	0790      	lsls	r0, r2, #30
 800bec0:	d0e1      	beq.n	800be86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800bec2:	f832 0b02 	ldrh.w	r0, [r2], #2
 800bec6:	f821 0b02 	strh.w	r0, [r1], #2
 800beca:	3b02      	subs	r3, #2
 800becc:	e7db      	b.n	800be86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800bece:	2001      	movs	r0, #1
 800bed0:	bd70      	pop	{r4, r5, r6, pc}

0800bed2 <_ZN8touchgfx3HAL7noTouchEv>:
 800bed2:	b510      	push	{r4, lr}
 800bed4:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800bed8:	4604      	mov	r4, r0
 800beda:	b153      	cbz	r3, 800bef2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800bedc:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800bee0:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800bee4:	2101      	movs	r1, #1
 800bee6:	301c      	adds	r0, #28
 800bee8:	f012 ff9c 	bl	801ee24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800beec:	2300      	movs	r3, #0
 800beee:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800bef2:	bd10      	pop	{r4, pc}

0800bef4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800bef4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bef8:	4604      	mov	r4, r0
 800befa:	6980      	ldr	r0, [r0, #24]
 800befc:	b085      	sub	sp, #20
 800befe:	460f      	mov	r7, r1
 800bf00:	4690      	mov	r8, r2
 800bf02:	4699      	mov	r9, r3
 800bf04:	b930      	cbnz	r0, 800bf14 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800bf06:	4b1c      	ldr	r3, [pc, #112]	; (800bf78 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800bf08:	4a1c      	ldr	r2, [pc, #112]	; (800bf7c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800bf0a:	f44f 71a1 	mov.w	r1, #322	; 0x142
 800bf0e:	481c      	ldr	r0, [pc, #112]	; (800bf80 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800bf10:	f016 f8fe 	bl	8022110 <__assert_func>
 800bf14:	ad04      	add	r5, sp, #16
 800bf16:	2600      	movs	r6, #0
 800bf18:	f845 6d04 	str.w	r6, [r5, #-4]!
 800bf1c:	6806      	ldr	r6, [r0, #0]
 800bf1e:	9501      	str	r5, [sp, #4]
 800bf20:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800bf24:	9500      	str	r5, [sp, #0]
 800bf26:	6835      	ldr	r5, [r6, #0]
 800bf28:	47a8      	blx	r5
 800bf2a:	4d16      	ldr	r5, [pc, #88]	; (800bf84 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800bf2c:	4606      	mov	r6, r0
 800bf2e:	f8a5 9000 	strh.w	r9, [r5]
 800bf32:	f7f6 fcb7 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800bf36:	6803      	ldr	r3, [r0, #0]
 800bf38:	6a1b      	ldr	r3, [r3, #32]
 800bf3a:	4798      	blx	r3
 800bf3c:	2801      	cmp	r0, #1
 800bf3e:	d012      	beq.n	800bf66 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800bf40:	d306      	bcc.n	800bf50 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800bf42:	280d      	cmp	r0, #13
 800bf44:	d80b      	bhi.n	800bf5e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800bf46:	4b10      	ldr	r3, [pc, #64]	; (800bf88 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800bf48:	4a0c      	ldr	r2, [pc, #48]	; (800bf7c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800bf4a:	f44f 71b0 	mov.w	r1, #352	; 0x160
 800bf4e:	e7de      	b.n	800bf0e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800bf50:	882b      	ldrh	r3, [r5, #0]
 800bf52:	fb08 7203 	mla	r2, r8, r3, r7
 800bf56:	9b03      	ldr	r3, [sp, #12]
 800bf58:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800bf5c:	63e3      	str	r3, [r4, #60]	; 0x3c
 800bf5e:	4630      	mov	r0, r6
 800bf60:	b005      	add	sp, #20
 800bf62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bf66:	882a      	ldrh	r2, [r5, #0]
 800bf68:	9b03      	ldr	r3, [sp, #12]
 800bf6a:	fb08 7202 	mla	r2, r8, r2, r7
 800bf6e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800bf72:	1a9a      	subs	r2, r3, r2
 800bf74:	63e2      	str	r2, [r4, #60]	; 0x3c
 800bf76:	e7f2      	b.n	800bf5e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800bf78:	08024ef1 	.word	0x08024ef1
 800bf7c:	0802514b 	.word	0x0802514b
 800bf80:	08024f36 	.word	0x08024f36
 800bf84:	2000e3da 	.word	0x2000e3da
 800bf88:	08024f5c 	.word	0x08024f5c

0800bf8c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800bf8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bf90:	4698      	mov	r8, r3
 800bf92:	6803      	ldr	r3, [r0, #0]
 800bf94:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800bf96:	4b0f      	ldr	r3, [pc, #60]	; (800bfd4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800bf98:	b087      	sub	sp, #28
 800bf9a:	f8b3 9000 	ldrh.w	r9, [r3]
 800bf9e:	460e      	mov	r6, r1
 800bfa0:	4617      	mov	r7, r2
 800bfa2:	4604      	mov	r4, r0
 800bfa4:	f7f6 fc7e 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800bfa8:	6803      	ldr	r3, [r0, #0]
 800bfaa:	6a1b      	ldr	r3, [r3, #32]
 800bfac:	4798      	blx	r3
 800bfae:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800bfb2:	9302      	str	r3, [sp, #8]
 800bfb4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800bfb8:	9301      	str	r3, [sp, #4]
 800bfba:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800bfbe:	9300      	str	r3, [sp, #0]
 800bfc0:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800bfc4:	4643      	mov	r3, r8
 800bfc6:	463a      	mov	r2, r7
 800bfc8:	4631      	mov	r1, r6
 800bfca:	4620      	mov	r0, r4
 800bfcc:	47a8      	blx	r5
 800bfce:	b007      	add	sp, #28
 800bfd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bfd4:	2000e3da 	.word	0x2000e3da

0800bfd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800bfd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfdc:	4604      	mov	r4, r0
 800bfde:	b08b      	sub	sp, #44	; 0x2c
 800bfe0:	4610      	mov	r0, r2
 800bfe2:	460d      	mov	r5, r1
 800bfe4:	4691      	mov	r9, r2
 800bfe6:	461e      	mov	r6, r3
 800bfe8:	f007 f8d8 	bl	801319c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800bfec:	2800      	cmp	r0, #0
 800bfee:	f000 80a0 	beq.w	800c132 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800bff2:	6823      	ldr	r3, [r4, #0]
 800bff4:	f8df b170 	ldr.w	fp, [pc, #368]	; 800c168 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>
 800bff8:	6a1b      	ldr	r3, [r3, #32]
 800bffa:	f8df a170 	ldr.w	sl, [pc, #368]	; 800c16c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>
 800bffe:	4620      	mov	r0, r4
 800c000:	4798      	blx	r3
 800c002:	6823      	ldr	r3, [r4, #0]
 800c004:	4620      	mov	r0, r4
 800c006:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c008:	4798      	blx	r3
 800c00a:	f8bb 3000 	ldrh.w	r3, [fp]
 800c00e:	9301      	str	r3, [sp, #4]
 800c010:	f8ba 3000 	ldrh.w	r3, [sl]
 800c014:	9302      	str	r3, [sp, #8]
 800c016:	4b51      	ldr	r3, [pc, #324]	; (800c15c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 800c018:	881a      	ldrh	r2, [r3, #0]
 800c01a:	9203      	str	r2, [sp, #12]
 800c01c:	4a50      	ldr	r2, [pc, #320]	; (800c160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800c01e:	8812      	ldrh	r2, [r2, #0]
 800c020:	9204      	str	r2, [sp, #16]
 800c022:	af0a      	add	r7, sp, #40	; 0x28
 800c024:	4a4f      	ldr	r2, [pc, #316]	; (800c164 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x18c>)
 800c026:	f827 9d0c 	strh.w	r9, [r7, #-12]!
 800c02a:	7812      	ldrb	r2, [r2, #0]
 800c02c:	4698      	mov	r8, r3
 800c02e:	4638      	mov	r0, r7
 800c030:	2a00      	cmp	r2, #0
 800c032:	f040 8081 	bne.w	800c138 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x160>
 800c036:	f007 f96b 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c03a:	f8ab 0000 	strh.w	r0, [fp]
 800c03e:	4638      	mov	r0, r7
 800c040:	f007 f9a0 	bl	8013384 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c044:	f8aa 0000 	strh.w	r0, [sl]
 800c048:	4638      	mov	r0, r7
 800c04a:	f007 f961 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c04e:	f8a8 0000 	strh.w	r0, [r8]
 800c052:	4638      	mov	r0, r7
 800c054:	f007 f996 	bl	8013384 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c058:	4b41      	ldr	r3, [pc, #260]	; (800c160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800c05a:	8018      	strh	r0, [r3, #0]
 800c05c:	4648      	mov	r0, r9
 800c05e:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800c062:	f007 f89b 	bl	801319c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c066:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800c06a:	2200      	movs	r2, #0
 800c06c:	4611      	mov	r1, r2
 800c06e:	4628      	mov	r0, r5
 800c070:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800c074:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800c078:	f7f6 fbf4 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
 800c07c:	2301      	movs	r3, #1
 800c07e:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800c082:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800c086:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c08a:	2b00      	cmp	r3, #0
 800c08c:	dd5c      	ble.n	800c148 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 800c08e:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c092:	2b00      	cmp	r3, #0
 800c094:	dd58      	ble.n	800c148 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 800c096:	462a      	mov	r2, r5
 800c098:	ab08      	add	r3, sp, #32
 800c09a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c09e:	6851      	ldr	r1, [r2, #4]
 800c0a0:	c303      	stmia	r3!, {r0, r1}
 800c0a2:	4631      	mov	r1, r6
 800c0a4:	a808      	add	r0, sp, #32
 800c0a6:	f7ff fc81 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 800c0aa:	a807      	add	r0, sp, #28
 800c0ac:	f007 fac2 	bl	8013634 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c0b0:	4606      	mov	r6, r0
 800c0b2:	f7f6 fbf7 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800c0b6:	6803      	ldr	r3, [r0, #0]
 800c0b8:	6a1b      	ldr	r3, [r3, #32]
 800c0ba:	4798      	blx	r3
 800c0bc:	4286      	cmp	r6, r0
 800c0be:	d04a      	beq.n	800c156 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x17e>
 800c0c0:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800c0c2:	b150      	cbz	r0, 800c0da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 800c0c4:	a807      	add	r0, sp, #28
 800c0c6:	f007 fab5 	bl	8013634 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c0ca:	4606      	mov	r6, r0
 800c0cc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800c0ce:	6803      	ldr	r3, [r0, #0]
 800c0d0:	6a1b      	ldr	r3, [r3, #32]
 800c0d2:	4798      	blx	r3
 800c0d4:	1a33      	subs	r3, r6, r0
 800c0d6:	4258      	negs	r0, r3
 800c0d8:	4158      	adcs	r0, r3
 800c0da:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800c0de:	2600      	movs	r6, #0
 800c0e0:	682a      	ldr	r2, [r5, #0]
 800c0e2:	696b      	ldr	r3, [r5, #20]
 800c0e4:	616e      	str	r6, [r5, #20]
 800c0e6:	9305      	str	r3, [sp, #20]
 800c0e8:	6892      	ldr	r2, [r2, #8]
 800c0ea:	a908      	add	r1, sp, #32
 800c0ec:	4628      	mov	r0, r5
 800c0ee:	4790      	blx	r2
 800c0f0:	9b05      	ldr	r3, [sp, #20]
 800c0f2:	616b      	str	r3, [r5, #20]
 800c0f4:	4652      	mov	r2, sl
 800c0f6:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800c0fa:	4649      	mov	r1, r9
 800c0fc:	4628      	mov	r0, r5
 800c0fe:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800c102:	f7f6 fbaf 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
 800c106:	4b18      	ldr	r3, [pc, #96]	; (800c168 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>)
 800c108:	9a01      	ldr	r2, [sp, #4]
 800c10a:	801a      	strh	r2, [r3, #0]
 800c10c:	4b17      	ldr	r3, [pc, #92]	; (800c16c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>)
 800c10e:	9a02      	ldr	r2, [sp, #8]
 800c110:	801a      	strh	r2, [r3, #0]
 800c112:	4b12      	ldr	r3, [pc, #72]	; (800c15c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 800c114:	9a03      	ldr	r2, [sp, #12]
 800c116:	801a      	strh	r2, [r3, #0]
 800c118:	4b11      	ldr	r3, [pc, #68]	; (800c160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800c11a:	9a04      	ldr	r2, [sp, #16]
 800c11c:	801a      	strh	r2, [r3, #0]
 800c11e:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800c122:	6823      	ldr	r3, [r4, #0]
 800c124:	4620      	mov	r0, r4
 800c126:	6a1b      	ldr	r3, [r3, #32]
 800c128:	4798      	blx	r3
 800c12a:	6823      	ldr	r3, [r4, #0]
 800c12c:	4620      	mov	r0, r4
 800c12e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c130:	4798      	blx	r3
 800c132:	b00b      	add	sp, #44	; 0x2c
 800c134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c138:	f007 f924 	bl	8013384 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c13c:	f8ab 0000 	strh.w	r0, [fp]
 800c140:	4638      	mov	r0, r7
 800c142:	f007 f8e5 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c146:	e77d      	b.n	800c044 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x6c>
 800c148:	462a      	mov	r2, r5
 800c14a:	ab08      	add	r3, sp, #32
 800c14c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c150:	6851      	ldr	r1, [r2, #4]
 800c152:	c303      	stmia	r3!, {r0, r1}
 800c154:	e7a9      	b.n	800c0aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xd2>
 800c156:	2000      	movs	r0, #0
 800c158:	e7bf      	b.n	800c0da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 800c15a:	bf00      	nop
 800c15c:	2000e3d4 	.word	0x2000e3d4
 800c160:	2000e3d6 	.word	0x2000e3d6
 800c164:	2000e3d8 	.word	0x2000e3d8
 800c168:	2000e3da 	.word	0x2000e3da
 800c16c:	2000e3dc 	.word	0x2000e3dc

0800c170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800c170:	b510      	push	{r4, lr}
 800c172:	4b07      	ldr	r3, [pc, #28]	; (800c190 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800c174:	781b      	ldrb	r3, [r3, #0]
 800c176:	4604      	mov	r4, r0
 800c178:	b13b      	cbz	r3, 800c18a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c17a:	6803      	ldr	r3, [r0, #0]
 800c17c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c17e:	4798      	blx	r3
 800c180:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c182:	4283      	cmp	r3, r0
 800c184:	d101      	bne.n	800c18a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c186:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800c188:	bd10      	pop	{r4, pc}
 800c18a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800c18c:	e7fc      	b.n	800c188 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800c18e:	bf00      	nop
 800c190:	2000e3de 	.word	0x2000e3de

0800c194 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800c194:	b510      	push	{r4, lr}
 800c196:	4b0b      	ldr	r3, [pc, #44]	; (800c1c4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800c198:	781b      	ldrb	r3, [r3, #0]
 800c19a:	4604      	mov	r4, r0
 800c19c:	b95b      	cbnz	r3, 800c1b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c19e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800c1a2:	2b02      	cmp	r3, #2
 800c1a4:	d007      	beq.n	800c1b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c1a6:	6840      	ldr	r0, [r0, #4]
 800c1a8:	f000 fbea 	bl	800c980 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800c1ac:	b118      	cbz	r0, 800c1b6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c1ae:	6862      	ldr	r2, [r4, #4]
 800c1b0:	7a53      	ldrb	r3, [r2, #9]
 800c1b2:	2b00      	cmp	r3, #0
 800c1b4:	d0fc      	beq.n	800c1b0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800c1b6:	f7f4 fd77 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c1ba:	4620      	mov	r0, r4
 800c1bc:	f7ff ffd8 	bl	800c170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c1c0:	bd10      	pop	{r4, pc}
 800c1c2:	bf00      	nop
 800c1c4:	2000e3de 	.word	0x2000e3de

0800c1c8 <_ZN8touchgfx3HAL10initializeEv>:
 800c1c8:	b510      	push	{r4, lr}
 800c1ca:	4604      	mov	r4, r0
 800c1cc:	f7f4 fd44 	bl	8000c58 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c1d0:	6860      	ldr	r0, [r4, #4]
 800c1d2:	6803      	ldr	r3, [r0, #0]
 800c1d4:	68db      	ldr	r3, [r3, #12]
 800c1d6:	4798      	blx	r3
 800c1d8:	68e0      	ldr	r0, [r4, #12]
 800c1da:	6803      	ldr	r3, [r0, #0]
 800c1dc:	689b      	ldr	r3, [r3, #8]
 800c1de:	4798      	blx	r3
 800c1e0:	6823      	ldr	r3, [r4, #0]
 800c1e2:	4620      	mov	r0, r4
 800c1e4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800c1e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1ea:	4718      	bx	r3

0800c1ec <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800c1ec:	b508      	push	{r3, lr}
 800c1ee:	290d      	cmp	r1, #13
 800c1f0:	d817      	bhi.n	800c222 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800c1f2:	e8df f001 	tbb	[pc, r1]
 800c1f6:	090b      	.short	0x090b
 800c1f8:	0d0d0d07 	.word	0x0d0d0d07
 800c1fc:	1414140d 	.word	0x1414140d
 800c200:	0d0d1414 	.word	0x0d0d1414
 800c204:	2020      	movs	r0, #32
 800c206:	bd08      	pop	{r3, pc}
 800c208:	2018      	movs	r0, #24
 800c20a:	e7fc      	b.n	800c206 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c20c:	2010      	movs	r0, #16
 800c20e:	e7fa      	b.n	800c206 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c210:	4b05      	ldr	r3, [pc, #20]	; (800c228 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800c212:	4a06      	ldr	r2, [pc, #24]	; (800c22c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800c214:	4806      	ldr	r0, [pc, #24]	; (800c230 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800c216:	f44f 7111 	mov.w	r1, #580	; 0x244
 800c21a:	f015 ff79 	bl	8022110 <__assert_func>
 800c21e:	2008      	movs	r0, #8
 800c220:	e7f1      	b.n	800c206 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c222:	2000      	movs	r0, #0
 800c224:	e7ef      	b.n	800c206 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c226:	bf00      	nop
 800c228:	0802502f 	.word	0x0802502f
 800c22c:	0802530d 	.word	0x0802530d
 800c230:	08024f36 	.word	0x08024f36

0800c234 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800c234:	b570      	push	{r4, r5, r6, lr}
 800c236:	460d      	mov	r5, r1
 800c238:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800c23c:	4616      	mov	r6, r2
 800c23e:	461c      	mov	r4, r3
 800c240:	f7ff ffd4 	bl	800c1ec <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800c244:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800c248:	10c0      	asrs	r0, r0, #3
 800c24a:	fb06 5101 	mla	r1, r6, r1, r5
 800c24e:	fb00 4001 	mla	r0, r0, r1, r4
 800c252:	bd70      	pop	{r4, r5, r6, pc}

0800c254 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800c254:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c258:	b08a      	sub	sp, #40	; 0x28
 800c25a:	f04f 0c00 	mov.w	ip, #0
 800c25e:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800c262:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800c266:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800c26a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800c26e:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800c272:	f8cd c020 	str.w	ip, [sp, #32]
 800c276:	f1b8 0f02 	cmp.w	r8, #2
 800c27a:	4604      	mov	r4, r0
 800c27c:	469a      	mov	sl, r3
 800c27e:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800c282:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800c286:	d030      	beq.n	800c2ea <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800c288:	2bff      	cmp	r3, #255	; 0xff
 800c28a:	d12c      	bne.n	800c2e6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800c28c:	4560      	cmp	r0, ip
 800c28e:	bf14      	ite	ne
 800c290:	2004      	movne	r0, #4
 800c292:	2001      	moveq	r0, #1
 800c294:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c298:	9204      	str	r2, [sp, #16]
 800c29a:	4620      	mov	r0, r4
 800c29c:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800c2a0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c2a4:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c2a8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c2ac:	f8ad 501a 	strh.w	r5, [sp, #26]
 800c2b0:	f7ff ff5e 	bl	800c170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c2b4:	e9cd 9700 	strd	r9, r7, [sp]
 800c2b8:	4603      	mov	r3, r0
 800c2ba:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800c2be:	4651      	mov	r1, sl
 800c2c0:	4620      	mov	r0, r4
 800c2c2:	f7ff ffb7 	bl	800c234 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c2c6:	f8ad 901e 	strh.w	r9, [sp, #30]
 800c2ca:	9005      	str	r0, [sp, #20]
 800c2cc:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800c2d0:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800c2d4:	b106      	cbz	r6, 800c2d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800c2d6:	b98d      	cbnz	r5, 800c2fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800c2d8:	4b12      	ldr	r3, [pc, #72]	; (800c324 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800c2da:	4a13      	ldr	r2, [pc, #76]	; (800c328 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800c2dc:	f240 11c3 	movw	r1, #451	; 0x1c3
 800c2e0:	4812      	ldr	r0, [pc, #72]	; (800c32c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800c2e2:	f015 ff15 	bl	8022110 <__assert_func>
 800c2e6:	2004      	movs	r0, #4
 800c2e8:	e7d4      	b.n	800c294 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c2ea:	2bff      	cmp	r3, #255	; 0xff
 800c2ec:	d104      	bne.n	800c2f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800c2ee:	2800      	cmp	r0, #0
 800c2f0:	bf14      	ite	ne
 800c2f2:	2040      	movne	r0, #64	; 0x40
 800c2f4:	2020      	moveq	r0, #32
 800c2f6:	e7cd      	b.n	800c294 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c2f8:	2040      	movs	r0, #64	; 0x40
 800c2fa:	e7cb      	b.n	800c294 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c2fc:	6823      	ldr	r3, [r4, #0]
 800c2fe:	9d02      	ldr	r5, [sp, #8]
 800c300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c302:	4620      	mov	r0, r4
 800c304:	4798      	blx	r3
 800c306:	4228      	tst	r0, r5
 800c308:	d104      	bne.n	800c314 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800c30a:	4b09      	ldr	r3, [pc, #36]	; (800c330 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800c30c:	4a06      	ldr	r2, [pc, #24]	; (800c328 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800c30e:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 800c312:	e7e5      	b.n	800c2e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800c314:	6860      	ldr	r0, [r4, #4]
 800c316:	6803      	ldr	r3, [r0, #0]
 800c318:	a902      	add	r1, sp, #8
 800c31a:	685b      	ldr	r3, [r3, #4]
 800c31c:	4798      	blx	r3
 800c31e:	b00a      	add	sp, #40	; 0x28
 800c320:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c324:	08024fb2 	.word	0x08024fb2
 800c328:	080251af 	.word	0x080251af
 800c32c:	08024f36 	.word	0x08024f36
 800c330:	08024fea 	.word	0x08024fea

0800c334 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800c334:	b510      	push	{r4, lr}
 800c336:	b08a      	sub	sp, #40	; 0x28
 800c338:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800c33c:	9408      	str	r4, [sp, #32]
 800c33e:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800c342:	9407      	str	r4, [sp, #28]
 800c344:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800c348:	9406      	str	r4, [sp, #24]
 800c34a:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800c34e:	9405      	str	r4, [sp, #20]
 800c350:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800c354:	9404      	str	r4, [sp, #16]
 800c356:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800c35a:	9403      	str	r4, [sp, #12]
 800c35c:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800c360:	9402      	str	r4, [sp, #8]
 800c362:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800c366:	e9cd 3400 	strd	r3, r4, [sp]
 800c36a:	4613      	mov	r3, r2
 800c36c:	2200      	movs	r2, #0
 800c36e:	f7ff ff71 	bl	800c254 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c372:	b00a      	add	sp, #40	; 0x28
 800c374:	bd10      	pop	{r4, pc}
	...

0800c378 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800c378:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c37a:	b08b      	sub	sp, #44	; 0x2c
 800c37c:	4616      	mov	r6, r2
 800c37e:	460d      	mov	r5, r1
 800c380:	461f      	mov	r7, r3
 800c382:	4604      	mov	r4, r0
 800c384:	f7f6 fa8e 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800c388:	6803      	ldr	r3, [r0, #0]
 800c38a:	6a1b      	ldr	r3, [r3, #32]
 800c38c:	4798      	blx	r3
 800c38e:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800c392:	4b0d      	ldr	r3, [pc, #52]	; (800c3c8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800c394:	881b      	ldrh	r3, [r3, #0]
 800c396:	9306      	str	r3, [sp, #24]
 800c398:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c39c:	9305      	str	r3, [sp, #20]
 800c39e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c3a2:	9304      	str	r3, [sp, #16]
 800c3a4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c3a8:	9303      	str	r3, [sp, #12]
 800c3aa:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c3ae:	9302      	str	r3, [sp, #8]
 800c3b0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c3b4:	2200      	movs	r2, #0
 800c3b6:	e9cd 7300 	strd	r7, r3, [sp]
 800c3ba:	4629      	mov	r1, r5
 800c3bc:	4633      	mov	r3, r6
 800c3be:	4620      	mov	r0, r4
 800c3c0:	f7ff ff48 	bl	800c254 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c3c4:	b00b      	add	sp, #44	; 0x2c
 800c3c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c3c8:	2000e3da 	.word	0x2000e3da

0800c3cc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800c3cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3d0:	461f      	mov	r7, r3
 800c3d2:	4b14      	ldr	r3, [pc, #80]	; (800c424 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800c3d4:	b08a      	sub	sp, #40	; 0x28
 800c3d6:	4616      	mov	r6, r2
 800c3d8:	f8b3 8000 	ldrh.w	r8, [r3]
 800c3dc:	460d      	mov	r5, r1
 800c3de:	4604      	mov	r4, r0
 800c3e0:	f7f6 fa60 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800c3e4:	6803      	ldr	r3, [r0, #0]
 800c3e6:	6a1b      	ldr	r3, [r3, #32]
 800c3e8:	4798      	blx	r3
 800c3ea:	2302      	movs	r3, #2
 800c3ec:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800c3f0:	2301      	movs	r3, #1
 800c3f2:	9305      	str	r3, [sp, #20]
 800c3f4:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c3f8:	9304      	str	r3, [sp, #16]
 800c3fa:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c3fe:	9303      	str	r3, [sp, #12]
 800c400:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c404:	9302      	str	r3, [sp, #8]
 800c406:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c40a:	9008      	str	r0, [sp, #32]
 800c40c:	e9cd 7300 	strd	r7, r3, [sp]
 800c410:	2200      	movs	r2, #0
 800c412:	4633      	mov	r3, r6
 800c414:	4629      	mov	r1, r5
 800c416:	4620      	mov	r0, r4
 800c418:	f7ff ff1c 	bl	800c254 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c41c:	b00a      	add	sp, #40	; 0x28
 800c41e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c422:	bf00      	nop
 800c424:	2000e3da 	.word	0x2000e3da

0800c428 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800c428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c42c:	b08b      	sub	sp, #44	; 0x2c
 800c42e:	469b      	mov	fp, r3
 800c430:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800c434:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800c438:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800c43c:	2fff      	cmp	r7, #255	; 0xff
 800c43e:	bf14      	ite	ne
 800c440:	2308      	movne	r3, #8
 800c442:	2302      	moveq	r3, #2
 800c444:	2600      	movs	r6, #0
 800c446:	4604      	mov	r4, r0
 800c448:	4689      	mov	r9, r1
 800c44a:	4692      	mov	sl, r2
 800c44c:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800c450:	9608      	str	r6, [sp, #32]
 800c452:	f7ff fe8d 	bl	800c170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c456:	e9cd 8500 	strd	r8, r5, [sp]
 800c45a:	4603      	mov	r3, r0
 800c45c:	465a      	mov	r2, fp
 800c45e:	4651      	mov	r1, sl
 800c460:	4620      	mov	r0, r4
 800c462:	f7ff fee7 	bl	800c234 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c466:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c46a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c46e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800c472:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c476:	6823      	ldr	r3, [r4, #0]
 800c478:	9005      	str	r0, [sp, #20]
 800c47a:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800c47e:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800c482:	f8ad 601c 	strh.w	r6, [sp, #28]
 800c486:	f8ad 801e 	strh.w	r8, [sp, #30]
 800c48a:	f8cd 9020 	str.w	r9, [sp, #32]
 800c48e:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800c492:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c494:	9d02      	ldr	r5, [sp, #8]
 800c496:	4620      	mov	r0, r4
 800c498:	4798      	blx	r3
 800c49a:	4228      	tst	r0, r5
 800c49c:	d106      	bne.n	800c4ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800c49e:	4b07      	ldr	r3, [pc, #28]	; (800c4bc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800c4a0:	4a07      	ldr	r2, [pc, #28]	; (800c4c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800c4a2:	4808      	ldr	r0, [pc, #32]	; (800c4c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800c4a4:	f240 11fb 	movw	r1, #507	; 0x1fb
 800c4a8:	f015 fe32 	bl	8022110 <__assert_func>
 800c4ac:	6860      	ldr	r0, [r4, #4]
 800c4ae:	6803      	ldr	r3, [r0, #0]
 800c4b0:	a902      	add	r1, sp, #8
 800c4b2:	685b      	ldr	r3, [r3, #4]
 800c4b4:	4798      	blx	r3
 800c4b6:	b00b      	add	sp, #44	; 0x2c
 800c4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4bc:	08024fea 	.word	0x08024fea
 800c4c0:	08025278 	.word	0x08025278
 800c4c4:	08024f36 	.word	0x08024f36

0800c4c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800c4c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c4cc:	461f      	mov	r7, r3
 800c4ce:	4b0b      	ldr	r3, [pc, #44]	; (800c4fc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800c4d0:	460d      	mov	r5, r1
 800c4d2:	f8b3 8000 	ldrh.w	r8, [r3]
 800c4d6:	4616      	mov	r6, r2
 800c4d8:	4604      	mov	r4, r0
 800c4da:	f7f6 f9e3 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800c4de:	6803      	ldr	r3, [r0, #0]
 800c4e0:	6a1b      	ldr	r3, [r3, #32]
 800c4e2:	4798      	blx	r3
 800c4e4:	463b      	mov	r3, r7
 800c4e6:	e9cd 8000 	strd	r8, r0, [sp]
 800c4ea:	4632      	mov	r2, r6
 800c4ec:	4629      	mov	r1, r5
 800c4ee:	4620      	mov	r0, r4
 800c4f0:	f7ff fea0 	bl	800c234 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c4f4:	b002      	add	sp, #8
 800c4f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c4fa:	bf00      	nop
 800c4fc:	2000e3da 	.word	0x2000e3da

0800c500 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800c500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c504:	b088      	sub	sp, #32
 800c506:	4698      	mov	r8, r3
 800c508:	2300      	movs	r3, #0
 800c50a:	9306      	str	r3, [sp, #24]
 800c50c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c510:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800c514:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c518:	f8ad 6010 	strh.w	r6, [sp, #16]
 800c51c:	e9cd 3100 	strd	r3, r1, [sp]
 800c520:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c524:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c528:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800c52c:	f88d 301c 	strb.w	r3, [sp, #28]
 800c530:	4617      	mov	r7, r2
 800c532:	4604      	mov	r4, r0
 800c534:	f8ad 5012 	strh.w	r5, [sp, #18]
 800c538:	f7ff fe1a 	bl	800c170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c53c:	4642      	mov	r2, r8
 800c53e:	4603      	mov	r3, r0
 800c540:	4639      	mov	r1, r7
 800c542:	4620      	mov	r0, r4
 800c544:	f7ff ffc0 	bl	800c4c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c548:	4b16      	ldr	r3, [pc, #88]	; (800c5a4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800c54a:	9003      	str	r0, [sp, #12]
 800c54c:	881b      	ldrh	r3, [r3, #0]
 800c54e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c552:	f7f6 f9a7 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800c556:	6803      	ldr	r3, [r0, #0]
 800c558:	6a1b      	ldr	r3, [r3, #32]
 800c55a:	4798      	blx	r3
 800c55c:	f88d 001e 	strb.w	r0, [sp, #30]
 800c560:	f88d 001d 	strb.w	r0, [sp, #29]
 800c564:	b106      	cbz	r6, 800c568 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800c566:	b935      	cbnz	r5, 800c576 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800c568:	4b0f      	ldr	r3, [pc, #60]	; (800c5a8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800c56a:	4a10      	ldr	r2, [pc, #64]	; (800c5ac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800c56c:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800c570:	480f      	ldr	r0, [pc, #60]	; (800c5b0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800c572:	f015 fdcd 	bl	8022110 <__assert_func>
 800c576:	6823      	ldr	r3, [r4, #0]
 800c578:	9d00      	ldr	r5, [sp, #0]
 800c57a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c57c:	4620      	mov	r0, r4
 800c57e:	4798      	blx	r3
 800c580:	4228      	tst	r0, r5
 800c582:	d104      	bne.n	800c58e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800c584:	4b0b      	ldr	r3, [pc, #44]	; (800c5b4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800c586:	4a09      	ldr	r2, [pc, #36]	; (800c5ac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800c588:	f240 11e1 	movw	r1, #481	; 0x1e1
 800c58c:	e7f0      	b.n	800c570 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800c58e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c590:	6860      	ldr	r0, [r4, #4]
 800c592:	9306      	str	r3, [sp, #24]
 800c594:	6803      	ldr	r3, [r0, #0]
 800c596:	4669      	mov	r1, sp
 800c598:	685b      	ldr	r3, [r3, #4]
 800c59a:	4798      	blx	r3
 800c59c:	b008      	add	sp, #32
 800c59e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5a2:	bf00      	nop
 800c5a4:	2000e3da 	.word	0x2000e3da
 800c5a8:	08024fb2 	.word	0x08024fb2
 800c5ac:	08025061 	.word	0x08025061
 800c5b0:	08024f36 	.word	0x08024f36
 800c5b4:	08024fea 	.word	0x08024fea

0800c5b8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800c5b8:	b570      	push	{r4, r5, r6, lr}
 800c5ba:	b08a      	sub	sp, #40	; 0x28
 800c5bc:	466b      	mov	r3, sp
 800c5be:	e883 0006 	stmia.w	r3, {r1, r2}
 800c5c2:	4b20      	ldr	r3, [pc, #128]	; (800c644 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800c5c4:	781b      	ldrb	r3, [r3, #0]
 800c5c6:	4604      	mov	r4, r0
 800c5c8:	b933      	cbnz	r3, 800c5d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800c5ca:	4b1f      	ldr	r3, [pc, #124]	; (800c648 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800c5cc:	4a1f      	ldr	r2, [pc, #124]	; (800c64c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800c5ce:	4820      	ldr	r0, [pc, #128]	; (800c650 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800c5d0:	f44f 7103 	mov.w	r1, #524	; 0x20c
 800c5d4:	f015 fd9c 	bl	8022110 <__assert_func>
 800c5d8:	2300      	movs	r3, #0
 800c5da:	9308      	str	r3, [sp, #32]
 800c5dc:	2301      	movs	r3, #1
 800c5de:	9302      	str	r3, [sp, #8]
 800c5e0:	6803      	ldr	r3, [r0, #0]
 800c5e2:	f8bd 5000 	ldrh.w	r5, [sp]
 800c5e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c5e8:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800c5ec:	4798      	blx	r3
 800c5ee:	4632      	mov	r2, r6
 800c5f0:	4629      	mov	r1, r5
 800c5f2:	4603      	mov	r3, r0
 800c5f4:	4620      	mov	r0, r4
 800c5f6:	f7ff ff67 	bl	800c4c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c5fa:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c5fc:	9305      	str	r3, [sp, #20]
 800c5fe:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c602:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c606:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c60a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c60e:	4b11      	ldr	r3, [pc, #68]	; (800c654 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800c610:	9003      	str	r0, [sp, #12]
 800c612:	881b      	ldrh	r3, [r3, #0]
 800c614:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c618:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c61c:	f7f6 f942 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800c620:	6803      	ldr	r3, [r0, #0]
 800c622:	6a1b      	ldr	r3, [r3, #32]
 800c624:	4798      	blx	r3
 800c626:	23ff      	movs	r3, #255	; 0xff
 800c628:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800c62c:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800c630:	6860      	ldr	r0, [r4, #4]
 800c632:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c636:	6803      	ldr	r3, [r0, #0]
 800c638:	a902      	add	r1, sp, #8
 800c63a:	685b      	ldr	r3, [r3, #4]
 800c63c:	4798      	blx	r3
 800c63e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800c640:	b00a      	add	sp, #40	; 0x28
 800c642:	bd70      	pop	{r4, r5, r6, pc}
 800c644:	2000e3df 	.word	0x2000e3df
 800c648:	08024e83 	.word	0x08024e83
 800c64c:	08025105 	.word	0x08025105
 800c650:	08024f36 	.word	0x08024f36
 800c654:	2000e3da 	.word	0x2000e3da

0800c658 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800c658:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c65a:	b08b      	sub	sp, #44	; 0x2c
 800c65c:	466d      	mov	r5, sp
 800c65e:	e885 0006 	stmia.w	r5, {r1, r2}
 800c662:	461d      	mov	r5, r3
 800c664:	2300      	movs	r3, #0
 800c666:	9308      	str	r3, [sp, #32]
 800c668:	2301      	movs	r3, #1
 800c66a:	9302      	str	r3, [sp, #8]
 800c66c:	6803      	ldr	r3, [r0, #0]
 800c66e:	f8bd 6000 	ldrh.w	r6, [sp]
 800c672:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c674:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800c678:	4604      	mov	r4, r0
 800c67a:	4798      	blx	r3
 800c67c:	463a      	mov	r2, r7
 800c67e:	4631      	mov	r1, r6
 800c680:	4603      	mov	r3, r0
 800c682:	4620      	mov	r0, r4
 800c684:	f7ff ff20 	bl	800c4c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c688:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c68c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c690:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c694:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c698:	4b0e      	ldr	r3, [pc, #56]	; (800c6d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800c69a:	9003      	str	r0, [sp, #12]
 800c69c:	881b      	ldrh	r3, [r3, #0]
 800c69e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c6a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c6a4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c6a8:	9505      	str	r5, [sp, #20]
 800c6aa:	f7f6 f8fb 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800c6ae:	6803      	ldr	r3, [r0, #0]
 800c6b0:	6a1b      	ldr	r3, [r3, #32]
 800c6b2:	4798      	blx	r3
 800c6b4:	23ff      	movs	r3, #255	; 0xff
 800c6b6:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800c6ba:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800c6be:	6860      	ldr	r0, [r4, #4]
 800c6c0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c6c4:	6803      	ldr	r3, [r0, #0]
 800c6c6:	a902      	add	r1, sp, #8
 800c6c8:	685b      	ldr	r3, [r3, #4]
 800c6ca:	4798      	blx	r3
 800c6cc:	4628      	mov	r0, r5
 800c6ce:	b00b      	add	sp, #44	; 0x2c
 800c6d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c6d2:	bf00      	nop
 800c6d4:	2000e3da 	.word	0x2000e3da

0800c6d8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800c6d8:	b570      	push	{r4, r5, r6, lr}
 800c6da:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800c6de:	4604      	mov	r4, r0
 800c6e0:	b19b      	cbz	r3, 800c70a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800c6e2:	2002      	movs	r0, #2
 800c6e4:	f7f4 f86e 	bl	80007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800c6e8:	2300      	movs	r3, #0
 800c6ea:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c6ee:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800c6f2:	6823      	ldr	r3, [r4, #0]
 800c6f4:	4620      	mov	r0, r4
 800c6f6:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800c6fa:	f7ff fd39 	bl	800c170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c6fe:	462b      	mov	r3, r5
 800c700:	4601      	mov	r1, r0
 800c702:	4620      	mov	r0, r4
 800c704:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c708:	4718      	bx	r3
 800c70a:	bd70      	pop	{r4, r5, r6, pc}

0800c70c <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800c70c:	b570      	push	{r4, r5, r6, lr}
 800c70e:	4605      	mov	r5, r0
 800c710:	460c      	mov	r4, r1
 800c712:	2003      	movs	r0, #3
 800c714:	b149      	cbz	r1, 800c72a <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800c716:	f7f4 f81d 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c71a:	6928      	ldr	r0, [r5, #16]
 800c71c:	b168      	cbz	r0, 800c73a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800c71e:	6803      	ldr	r3, [r0, #0]
 800c720:	695b      	ldr	r3, [r3, #20]
 800c722:	2101      	movs	r1, #1
 800c724:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c728:	4718      	bx	r3
 800c72a:	f7f4 f82f 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c72e:	6928      	ldr	r0, [r5, #16]
 800c730:	b118      	cbz	r0, 800c73a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800c732:	6803      	ldr	r3, [r0, #0]
 800c734:	4621      	mov	r1, r4
 800c736:	695b      	ldr	r3, [r3, #20]
 800c738:	e7f4      	b.n	800c724 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800c73a:	bd70      	pop	{r4, r5, r6, pc}

0800c73c <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>:
 800c73c:	4770      	bx	lr

0800c73e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800c73e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800c742:	1a13      	subs	r3, r2, r0
 800c744:	4258      	negs	r0, r3
 800c746:	4158      	adcs	r0, r3
 800c748:	4770      	bx	lr

0800c74a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800c74a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800c74e:	1a9b      	subs	r3, r3, r2
 800c750:	2b00      	cmp	r3, #0
 800c752:	bfdc      	itt	le
 800c754:	6882      	ldrle	r2, [r0, #8]
 800c756:	189b      	addle	r3, r3, r2
 800c758:	2b01      	cmp	r3, #1
 800c75a:	bfcc      	ite	gt
 800c75c:	2000      	movgt	r0, #0
 800c75e:	2001      	movle	r0, #1
 800c760:	4770      	bx	lr

0800c762 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800c762:	6902      	ldr	r2, [r0, #16]
 800c764:	6840      	ldr	r0, [r0, #4]
 800c766:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800c76a:	4770      	bx	lr

0800c76c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800c76c:	6803      	ldr	r3, [r0, #0]
 800c76e:	691b      	ldr	r3, [r3, #16]
 800c770:	4718      	bx	r3

0800c772 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800c772:	4770      	bx	lr

0800c774 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800c774:	4770      	bx	lr

0800c776 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800c776:	4770      	bx	lr

0800c778 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800c778:	b570      	push	{r4, r5, r6, lr}
 800c77a:	2301      	movs	r3, #1
 800c77c:	7203      	strb	r3, [r0, #8]
 800c77e:	4604      	mov	r4, r0
 800c780:	6840      	ldr	r0, [r0, #4]
 800c782:	6803      	ldr	r3, [r0, #0]
 800c784:	699b      	ldr	r3, [r3, #24]
 800c786:	4798      	blx	r3
 800c788:	6803      	ldr	r3, [r0, #0]
 800c78a:	2b08      	cmp	r3, #8
 800c78c:	4605      	mov	r5, r0
 800c78e:	d01e      	beq.n	800c7ce <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800c790:	d80b      	bhi.n	800c7aa <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c792:	2b02      	cmp	r3, #2
 800c794:	d027      	beq.n	800c7e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800c796:	2b04      	cmp	r3, #4
 800c798:	d011      	beq.n	800c7be <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800c79a:	2b01      	cmp	r3, #1
 800c79c:	d028      	beq.n	800c7f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c79e:	4b17      	ldr	r3, [pc, #92]	; (800c7fc <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800c7a0:	4a17      	ldr	r2, [pc, #92]	; (800c800 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800c7a2:	4818      	ldr	r0, [pc, #96]	; (800c804 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800c7a4:	218c      	movs	r1, #140	; 0x8c
 800c7a6:	f015 fcb3 	bl	8022110 <__assert_func>
 800c7aa:	2b40      	cmp	r3, #64	; 0x40
 800c7ac:	d020      	beq.n	800c7f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c7ae:	d801      	bhi.n	800c7b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800c7b0:	2b20      	cmp	r3, #32
 800c7b2:	e7f3      	b.n	800c79c <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800c7b4:	2b80      	cmp	r3, #128	; 0x80
 800c7b6:	d01b      	beq.n	800c7f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c7b8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c7bc:	e7ee      	b.n	800c79c <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800c7be:	6823      	ldr	r3, [r4, #0]
 800c7c0:	7f01      	ldrb	r1, [r0, #28]
 800c7c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c7c4:	4620      	mov	r0, r4
 800c7c6:	4798      	blx	r3
 800c7c8:	6823      	ldr	r3, [r4, #0]
 800c7ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c7cc:	e006      	b.n	800c7dc <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800c7ce:	6823      	ldr	r3, [r4, #0]
 800c7d0:	7f01      	ldrb	r1, [r0, #28]
 800c7d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c7d4:	4620      	mov	r0, r4
 800c7d6:	4798      	blx	r3
 800c7d8:	6823      	ldr	r3, [r4, #0]
 800c7da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c7dc:	4629      	mov	r1, r5
 800c7de:	4620      	mov	r0, r4
 800c7e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7e4:	4718      	bx	r3
 800c7e6:	6823      	ldr	r3, [r4, #0]
 800c7e8:	4620      	mov	r0, r4
 800c7ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c7ec:	4798      	blx	r3
 800c7ee:	e7f3      	b.n	800c7d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800c7f0:	6823      	ldr	r3, [r4, #0]
 800c7f2:	4620      	mov	r0, r4
 800c7f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c7f6:	4798      	blx	r3
 800c7f8:	e7e6      	b.n	800c7c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800c7fa:	bf00      	nop
 800c7fc:	08025356 	.word	0x08025356
 800c800:	08025418 	.word	0x08025418
 800c804:	0802537b 	.word	0x0802537b

0800c808 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800c808:	b570      	push	{r4, r5, r6, lr}
 800c80a:	4604      	mov	r4, r0
 800c80c:	460e      	mov	r6, r1
 800c80e:	6860      	ldr	r0, [r4, #4]
 800c810:	6803      	ldr	r3, [r0, #0]
 800c812:	685b      	ldr	r3, [r3, #4]
 800c814:	4798      	blx	r3
 800c816:	2800      	cmp	r0, #0
 800c818:	d1f9      	bne.n	800c80e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800c81a:	4d0d      	ldr	r5, [pc, #52]	; (800c850 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800c81c:	6828      	ldr	r0, [r5, #0]
 800c81e:	6803      	ldr	r3, [r0, #0]
 800c820:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c822:	4798      	blx	r3
 800c824:	f7f4 fa4e 	bl	8000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800c828:	6828      	ldr	r0, [r5, #0]
 800c82a:	2101      	movs	r1, #1
 800c82c:	f7ff ff86 	bl	800c73c <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
 800c830:	6860      	ldr	r0, [r4, #4]
 800c832:	6803      	ldr	r3, [r0, #0]
 800c834:	4631      	mov	r1, r6
 800c836:	689b      	ldr	r3, [r3, #8]
 800c838:	4798      	blx	r3
 800c83a:	6823      	ldr	r3, [r4, #0]
 800c83c:	4620      	mov	r0, r4
 800c83e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c840:	4798      	blx	r3
 800c842:	6828      	ldr	r0, [r5, #0]
 800c844:	6803      	ldr	r3, [r0, #0]
 800c846:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c84a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c84c:	4718      	bx	r3
 800c84e:	bf00      	nop
 800c850:	2000e3e0 	.word	0x2000e3e0

0800c854 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800c854:	b508      	push	{r3, lr}
 800c856:	f7f4 fa27 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c85a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c85e:	f7f4 ba2b 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c862 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800c862:	b510      	push	{r4, lr}
 800c864:	2114      	movs	r1, #20
 800c866:	4604      	mov	r4, r0
 800c868:	f014 fe33 	bl	80214d2 <_ZdlPvj>
 800c86c:	4620      	mov	r0, r4
 800c86e:	bd10      	pop	{r4, pc}

0800c870 <_ZN8touchgfx13DMA_Interface5startEv>:
 800c870:	b510      	push	{r4, lr}
 800c872:	4604      	mov	r4, r0
 800c874:	6840      	ldr	r0, [r0, #4]
 800c876:	6803      	ldr	r3, [r0, #0]
 800c878:	681b      	ldr	r3, [r3, #0]
 800c87a:	4798      	blx	r3
 800c87c:	b948      	cbnz	r0, 800c892 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c87e:	7a63      	ldrb	r3, [r4, #9]
 800c880:	b13b      	cbz	r3, 800c892 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c882:	7a23      	ldrb	r3, [r4, #8]
 800c884:	b92b      	cbnz	r3, 800c892 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c886:	6823      	ldr	r3, [r4, #0]
 800c888:	4620      	mov	r0, r4
 800c88a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c88c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c890:	4718      	bx	r3
 800c892:	bd10      	pop	{r4, pc}

0800c894 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800c894:	b510      	push	{r4, lr}
 800c896:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800c89a:	1b12      	subs	r2, r2, r4
 800c89c:	2a00      	cmp	r2, #0
 800c89e:	bfdc      	itt	le
 800c8a0:	6883      	ldrle	r3, [r0, #8]
 800c8a2:	18d2      	addle	r2, r2, r3
 800c8a4:	2a01      	cmp	r2, #1
 800c8a6:	dd18      	ble.n	800c8da <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800c8a8:	6843      	ldr	r3, [r0, #4]
 800c8aa:	f101 021c 	add.w	r2, r1, #28
 800c8ae:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800c8b2:	f851 4b04 	ldr.w	r4, [r1], #4
 800c8b6:	f843 4b04 	str.w	r4, [r3], #4
 800c8ba:	4291      	cmp	r1, r2
 800c8bc:	d1f9      	bne.n	800c8b2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800c8be:	880a      	ldrh	r2, [r1, #0]
 800c8c0:	801a      	strh	r2, [r3, #0]
 800c8c2:	788a      	ldrb	r2, [r1, #2]
 800c8c4:	709a      	strb	r2, [r3, #2]
 800c8c6:	68c3      	ldr	r3, [r0, #12]
 800c8c8:	6882      	ldr	r2, [r0, #8]
 800c8ca:	f3bf 8f5b 	dmb	ish
 800c8ce:	3301      	adds	r3, #1
 800c8d0:	429a      	cmp	r2, r3
 800c8d2:	bfd8      	it	le
 800c8d4:	1a9b      	suble	r3, r3, r2
 800c8d6:	60c3      	str	r3, [r0, #12]
 800c8d8:	bd10      	pop	{r4, pc}
 800c8da:	4b03      	ldr	r3, [pc, #12]	; (800c8e8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800c8dc:	4a03      	ldr	r2, [pc, #12]	; (800c8ec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800c8de:	4804      	ldr	r0, [pc, #16]	; (800c8f0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800c8e0:	2139      	movs	r1, #57	; 0x39
 800c8e2:	f015 fc15 	bl	8022110 <__assert_func>
 800c8e6:	bf00      	nop
 800c8e8:	080253a1 	.word	0x080253a1
 800c8ec:	08025448 	.word	0x08025448
 800c8f0:	0802537b 	.word	0x0802537b

0800c8f4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800c8f4:	b510      	push	{r4, lr}
 800c8f6:	6803      	ldr	r3, [r0, #0]
 800c8f8:	681b      	ldr	r3, [r3, #0]
 800c8fa:	4604      	mov	r4, r0
 800c8fc:	4798      	blx	r3
 800c8fe:	b128      	cbz	r0, 800c90c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800c900:	4b07      	ldr	r3, [pc, #28]	; (800c920 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800c902:	4a08      	ldr	r2, [pc, #32]	; (800c924 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800c904:	4808      	ldr	r0, [pc, #32]	; (800c928 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800c906:	213f      	movs	r1, #63	; 0x3f
 800c908:	f015 fc02 	bl	8022110 <__assert_func>
 800c90c:	6923      	ldr	r3, [r4, #16]
 800c90e:	68a2      	ldr	r2, [r4, #8]
 800c910:	f3bf 8f5b 	dmb	ish
 800c914:	3301      	adds	r3, #1
 800c916:	429a      	cmp	r2, r3
 800c918:	bfd8      	it	le
 800c91a:	1a9b      	suble	r3, r3, r2
 800c91c:	6123      	str	r3, [r4, #16]
 800c91e:	bd10      	pop	{r4, pc}
 800c920:	080253c4 	.word	0x080253c4
 800c924:	08025496 	.word	0x08025496
 800c928:	0802537b 	.word	0x0802537b

0800c92c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800c92c:	b570      	push	{r4, r5, r6, lr}
 800c92e:	4604      	mov	r4, r0
 800c930:	6840      	ldr	r0, [r0, #4]
 800c932:	6803      	ldr	r3, [r0, #0]
 800c934:	681b      	ldr	r3, [r3, #0]
 800c936:	4798      	blx	r3
 800c938:	4605      	mov	r5, r0
 800c93a:	b930      	cbnz	r0, 800c94a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c93c:	7a23      	ldrb	r3, [r4, #8]
 800c93e:	b123      	cbz	r3, 800c94a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c940:	6860      	ldr	r0, [r4, #4]
 800c942:	6803      	ldr	r3, [r0, #0]
 800c944:	695b      	ldr	r3, [r3, #20]
 800c946:	4798      	blx	r3
 800c948:	7225      	strb	r5, [r4, #8]
 800c94a:	6860      	ldr	r0, [r4, #4]
 800c94c:	6803      	ldr	r3, [r0, #0]
 800c94e:	681b      	ldr	r3, [r3, #0]
 800c950:	4798      	blx	r3
 800c952:	b928      	cbnz	r0, 800c960 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800c954:	6823      	ldr	r3, [r4, #0]
 800c956:	4620      	mov	r0, r4
 800c958:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c95a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c95e:	4718      	bx	r3
 800c960:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c964:	f7f4 b9b6 	b.w	8000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800c968 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800c968:	b510      	push	{r4, lr}
 800c96a:	4c04      	ldr	r4, [pc, #16]	; (800c97c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800c96c:	6082      	str	r2, [r0, #8]
 800c96e:	2200      	movs	r2, #0
 800c970:	e9c0 4100 	strd	r4, r1, [r0]
 800c974:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800c978:	bd10      	pop	{r4, pc}
 800c97a:	bf00      	nop
 800c97c:	080253fc 	.word	0x080253fc

0800c980 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800c980:	6840      	ldr	r0, [r0, #4]
 800c982:	6803      	ldr	r3, [r0, #0]
 800c984:	681b      	ldr	r3, [r3, #0]
 800c986:	4718      	bx	r3

0800c988 <_ZN8touchgfx21AbstractPainterRGB56510renderInitEv>:
 800c988:	2001      	movs	r0, #1
 800c98a:	4770      	bx	lr

0800c98c <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh>:
 800c98c:	4413      	add	r3, r2
 800c98e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c992:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 800c996:	7a45      	ldrb	r5, [r0, #9]
 800c998:	7a03      	ldrb	r3, [r0, #8]
 800c99a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800c99c:	436b      	muls	r3, r5
 800c99e:	1c5d      	adds	r5, r3, #1
 800c9a0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 800c9a4:	122d      	asrs	r5, r5, #8
 800c9a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c9a8:	2dff      	cmp	r5, #255	; 0xff
 800c9aa:	eb06 0c03 	add.w	ip, r6, r3
 800c9ae:	d136      	bne.n	800ca1e <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x92>
 800c9b0:	4f37      	ldr	r7, [pc, #220]	; (800ca90 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x104>)
 800c9b2:	f816 eb01 	ldrb.w	lr, [r6], #1
 800c9b6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 800c9ba:	d107      	bne.n	800c9cc <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x40>
 800c9bc:	8a83      	ldrh	r3, [r0, #20]
 800c9be:	800b      	strh	r3, [r1, #0]
 800c9c0:	45b4      	cmp	ip, r6
 800c9c2:	f101 0102 	add.w	r1, r1, #2
 800c9c6:	d1f4      	bne.n	800c9b2 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x26>
 800c9c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c9cc:	f8b1 8000 	ldrh.w	r8, [r1]
 800c9d0:	8ac4      	ldrh	r4, [r0, #22]
 800c9d2:	ea6f 020e 	mvn.w	r2, lr
 800c9d6:	b2d2      	uxtb	r2, r2
 800c9d8:	ea08 0307 	and.w	r3, r8, r7
 800c9dc:	4353      	muls	r3, r2
 800c9de:	fb0e 3404 	mla	r4, lr, r4, r3
 800c9e2:	f408 69fc 	and.w	r9, r8, #2016	; 0x7e0
 800c9e6:	fb94 f4f5 	sdiv	r4, r4, r5
 800c9ea:	ea04 0307 	and.w	r3, r4, r7
 800c9ee:	8b04      	ldrh	r4, [r0, #24]
 800c9f0:	fb02 f909 	mul.w	r9, r2, r9
 800c9f4:	fb0e 9404 	mla	r4, lr, r4, r9
 800c9f8:	fb94 f4f5 	sdiv	r4, r4, r5
 800c9fc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 800ca00:	431c      	orrs	r4, r3
 800ca02:	f008 081f 	and.w	r8, r8, #31
 800ca06:	8b43      	ldrh	r3, [r0, #26]
 800ca08:	fb02 f208 	mul.w	r2, r2, r8
 800ca0c:	fb0e 2303 	mla	r3, lr, r3, r2
 800ca10:	fb93 f3f5 	sdiv	r3, r3, r5
 800ca14:	f003 031f 	and.w	r3, r3, #31
 800ca18:	431c      	orrs	r4, r3
 800ca1a:	800c      	strh	r4, [r1, #0]
 800ca1c:	e7d0      	b.n	800c9c0 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x34>
 800ca1e:	f8df 8070 	ldr.w	r8, [pc, #112]	; 800ca90 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x104>
 800ca22:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800ca26:	f816 3b01 	ldrb.w	r3, [r6], #1
 800ca2a:	f8b1 9000 	ldrh.w	r9, [r1]
 800ca2e:	8ac4      	ldrh	r4, [r0, #22]
 800ca30:	fb13 f305 	smulbb	r3, r3, r5
 800ca34:	b29b      	uxth	r3, r3
 800ca36:	1c5a      	adds	r2, r3, #1
 800ca38:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 800ca3c:	121b      	asrs	r3, r3, #8
 800ca3e:	43df      	mvns	r7, r3
 800ca40:	b2ff      	uxtb	r7, r7
 800ca42:	ea09 0208 	and.w	r2, r9, r8
 800ca46:	437a      	muls	r2, r7
 800ca48:	fb03 2404 	mla	r4, r3, r4, r2
 800ca4c:	f409 6afc 	and.w	sl, r9, #2016	; 0x7e0
 800ca50:	8b02      	ldrh	r2, [r0, #24]
 800ca52:	fb94 f4fe 	sdiv	r4, r4, lr
 800ca56:	fb07 fa0a 	mul.w	sl, r7, sl
 800ca5a:	fb03 a202 	mla	r2, r3, r2, sl
 800ca5e:	ea04 0408 	and.w	r4, r4, r8
 800ca62:	fb92 f2fe 	sdiv	r2, r2, lr
 800ca66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800ca6a:	4314      	orrs	r4, r2
 800ca6c:	f009 091f 	and.w	r9, r9, #31
 800ca70:	8b42      	ldrh	r2, [r0, #26]
 800ca72:	fb07 f709 	mul.w	r7, r7, r9
 800ca76:	fb03 7302 	mla	r3, r3, r2, r7
 800ca7a:	fb93 f3fe 	sdiv	r3, r3, lr
 800ca7e:	f003 031f 	and.w	r3, r3, #31
 800ca82:	431c      	orrs	r4, r3
 800ca84:	4566      	cmp	r6, ip
 800ca86:	f821 4b02 	strh.w	r4, [r1], #2
 800ca8a:	d1cc      	bne.n	800ca26 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x9a>
 800ca8c:	e79c      	b.n	800c9c8 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x3c>
 800ca8e:	bf00      	nop
 800ca90:	fffff800 	.word	0xfffff800

0800ca94 <_ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_>:
 800ca94:	b510      	push	{r4, lr}
 800ca96:	8ac4      	ldrh	r4, [r0, #22]
 800ca98:	1224      	asrs	r4, r4, #8
 800ca9a:	700c      	strb	r4, [r1, #0]
 800ca9c:	8b01      	ldrh	r1, [r0, #24]
 800ca9e:	10c9      	asrs	r1, r1, #3
 800caa0:	7011      	strb	r1, [r2, #0]
 800caa2:	7e82      	ldrb	r2, [r0, #26]
 800caa4:	00d2      	lsls	r2, r2, #3
 800caa6:	701a      	strb	r2, [r3, #0]
 800caa8:	9b02      	ldr	r3, [sp, #8]
 800caaa:	7a42      	ldrb	r2, [r0, #9]
 800caac:	701a      	strb	r2, [r3, #0]
 800caae:	2001      	movs	r0, #1
 800cab0:	bd10      	pop	{r4, pc}

0800cab2 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800cab2:	4770      	bx	lr

0800cab4 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800cab4:	b510      	push	{r4, lr}
 800cab6:	211c      	movs	r1, #28
 800cab8:	4604      	mov	r4, r0
 800caba:	f014 fd0a 	bl	80214d2 <_ZdlPvj>
 800cabe:	4620      	mov	r0, r4
 800cac0:	bd10      	pop	{r4, pc}

0800cac2 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh>:
 800cac2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cac6:	4617      	mov	r7, r2
 800cac8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800cacc:	b085      	sub	sp, #20
 800cace:	443a      	add	r2, r7
 800cad0:	60c2      	str	r2, [r0, #12]
 800cad2:	4698      	mov	r8, r3
 800cad4:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800cad8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cada:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800cadc:	441a      	add	r2, r3
 800cade:	6803      	ldr	r3, [r0, #0]
 800cae0:	6102      	str	r2, [r0, #16]
 800cae2:	695b      	ldr	r3, [r3, #20]
 800cae4:	4604      	mov	r4, r0
 800cae6:	460d      	mov	r5, r1
 800cae8:	4798      	blx	r3
 800caea:	2800      	cmp	r0, #0
 800caec:	d03a      	beq.n	800cb64 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa2>
 800caee:	4447      	add	r7, r8
 800caf0:	eb05 0547 	add.w	r5, r5, r7, lsl #1
 800caf4:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800caf6:	4437      	add	r7, r6
 800caf8:	6823      	ldr	r3, [r4, #0]
 800cafa:	f10d 020f 	add.w	r2, sp, #15
 800cafe:	9200      	str	r2, [sp, #0]
 800cb00:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800cb04:	f10d 020d 	add.w	r2, sp, #13
 800cb08:	f10d 030e 	add.w	r3, sp, #14
 800cb0c:	a903      	add	r1, sp, #12
 800cb0e:	4620      	mov	r0, r4
 800cb10:	47c0      	blx	r8
 800cb12:	b1f8      	cbz	r0, 800cb54 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x92>
 800cb14:	f89d 300f 	ldrb.w	r3, [sp, #15]
 800cb18:	7a20      	ldrb	r0, [r4, #8]
 800cb1a:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800cb1e:	f89d c00e 	ldrb.w	ip, [sp, #14]
 800cb22:	4358      	muls	r0, r3
 800cb24:	1c43      	adds	r3, r0, #1
 800cb26:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 800cb2a:	7830      	ldrb	r0, [r6, #0]
 800cb2c:	121b      	asrs	r3, r3, #8
 800cb2e:	fb10 f003 	smulbb	r0, r0, r3
 800cb32:	b283      	uxth	r3, r0
 800cb34:	1c58      	adds	r0, r3, #1
 800cb36:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800cb3a:	1200      	asrs	r0, r0, #8
 800cb3c:	6823      	ldr	r3, [r4, #0]
 800cb3e:	28ff      	cmp	r0, #255	; 0xff
 800cb40:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800cb44:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800cb48:	d10f      	bne.n	800cb6a <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa8>
 800cb4a:	f8cd c000 	str.w	ip, [sp]
 800cb4e:	4629      	mov	r1, r5
 800cb50:	4620      	mov	r0, r4
 800cb52:	47c0      	blx	r8
 800cb54:	68e3      	ldr	r3, [r4, #12]
 800cb56:	3601      	adds	r6, #1
 800cb58:	3301      	adds	r3, #1
 800cb5a:	42b7      	cmp	r7, r6
 800cb5c:	f105 0502 	add.w	r5, r5, #2
 800cb60:	60e3      	str	r3, [r4, #12]
 800cb62:	d1c9      	bne.n	800caf8 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x36>
 800cb64:	b005      	add	sp, #20
 800cb66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb6a:	8829      	ldrh	r1, [r5, #0]
 800cb6c:	fa1f fe80 	uxth.w	lr, r0
 800cb70:	ea4f 2921 	mov.w	r9, r1, asr #8
 800cb74:	43c0      	mvns	r0, r0
 800cb76:	b2c0      	uxtb	r0, r0
 800cb78:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 800cb7c:	fb12 f20e 	smulbb	r2, r2, lr
 800cb80:	fb09 2200 	mla	r2, r9, r0, r2
 800cb84:	ea4f 09e1 	mov.w	r9, r1, asr #3
 800cb88:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800cb8c:	fb13 f30e 	smulbb	r3, r3, lr
 800cb90:	fb09 3300 	mla	r3, r9, r0, r3
 800cb94:	00c9      	lsls	r1, r1, #3
 800cb96:	b29b      	uxth	r3, r3
 800cb98:	b2c9      	uxtb	r1, r1
 800cb9a:	fb1c fc0e 	smulbb	ip, ip, lr
 800cb9e:	b292      	uxth	r2, r2
 800cba0:	fb01 c000 	mla	r0, r1, r0, ip
 800cba4:	1c59      	adds	r1, r3, #1
 800cba6:	b280      	uxth	r0, r0
 800cba8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 800cbac:	1c51      	adds	r1, r2, #1
 800cbae:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 800cbb2:	1c41      	adds	r1, r0, #1
 800cbb4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 800cbb8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800cbbc:	9000      	str	r0, [sp, #0]
 800cbbe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800cbc2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800cbc6:	e7c2      	b.n	800cb4e <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x8c>

0800cbc8 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh>:
 800cbc8:	f89d 0000 	ldrb.w	r0, [sp]
 800cbcc:	00db      	lsls	r3, r3, #3
 800cbce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800cbd2:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 800cbd6:	4803      	ldr	r0, [pc, #12]	; (800cbe4 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh+0x1c>)
 800cbd8:	ea00 2202 	and.w	r2, r0, r2, lsl #8
 800cbdc:	4313      	orrs	r3, r2
 800cbde:	800b      	strh	r3, [r1, #0]
 800cbe0:	4770      	bx	lr
 800cbe2:	bf00      	nop
 800cbe4:	fffff800 	.word	0xfffff800

0800cbe8 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 800cbe8:	f880 102e 	strb.w	r1, [r0, #46]	; 0x2e
 800cbec:	4770      	bx	lr

0800cbee <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 800cbee:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 800cbf2:	4770      	bx	lr

0800cbf4 <_ZN8touchgfx6CircleD1Ev>:
 800cbf4:	4770      	bx	lr

0800cbf6 <_ZN8touchgfx6CircleD0Ev>:
 800cbf6:	b510      	push	{r4, lr}
 800cbf8:	214c      	movs	r1, #76	; 0x4c
 800cbfa:	4604      	mov	r4, r0
 800cbfc:	f014 fc69 	bl	80214d2 <_ZdlPvj>
 800cc00:	4620      	mov	r0, r4
 800cc02:	bd10      	pop	{r4, pc}

0800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800cc04:	b507      	push	{r0, r1, r2, lr}
 800cc06:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800cc0a:	ab01      	add	r3, sp, #4
 800cc0c:	6809      	ldr	r1, [r1, #0]
 800cc0e:	6800      	ldr	r0, [r0, #0]
 800cc10:	f004 fbac 	bl	801136c <_ZN8touchgfx6muldivElllRl>
 800cc14:	b003      	add	sp, #12
 800cc16:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800cc1c <_ZN8touchgfx7CWRUtil4sineEi>:
 800cc1c:	f44f 72b4 	mov.w	r2, #360	; 0x168
 800cc20:	fb90 f3f2 	sdiv	r3, r0, r2
 800cc24:	fb03 0312 	mls	r3, r3, r2, r0
 800cc28:	4413      	add	r3, r2
 800cc2a:	fb93 f0f2 	sdiv	r0, r3, r2
 800cc2e:	fb02 3010 	mls	r0, r2, r0, r3
 800cc32:	285a      	cmp	r0, #90	; 0x5a
 800cc34:	4b09      	ldr	r3, [pc, #36]	; (800cc5c <_ZN8touchgfx7CWRUtil4sineEi+0x40>)
 800cc36:	dc02      	bgt.n	800cc3e <_ZN8touchgfx7CWRUtil4sineEi+0x22>
 800cc38:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800cc3c:	4770      	bx	lr
 800cc3e:	28b4      	cmp	r0, #180	; 0xb4
 800cc40:	dc02      	bgt.n	800cc48 <_ZN8touchgfx7CWRUtil4sineEi+0x2c>
 800cc42:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800cc46:	e7f7      	b.n	800cc38 <_ZN8touchgfx7CWRUtil4sineEi+0x1c>
 800cc48:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800cc4c:	bfd4      	ite	le
 800cc4e:	38b4      	suble	r0, #180	; 0xb4
 800cc50:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800cc54:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800cc58:	4240      	negs	r0, r0
 800cc5a:	4770      	bx	lr
 800cc5c:	08025518 	.word	0x08025518

0800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800cc60:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800cc64:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cc66:	fb90 f3f2 	sdiv	r3, r0, r2
 800cc6a:	fb03 0012 	mls	r0, r3, r2, r0
 800cc6e:	4410      	add	r0, r2
 800cc70:	fb90 f4f2 	sdiv	r4, r0, r2
 800cc74:	fb02 0414 	mls	r4, r2, r4, r0
 800cc78:	f004 061f 	and.w	r6, r4, #31
 800cc7c:	1164      	asrs	r4, r4, #5
 800cc7e:	4620      	mov	r0, r4
 800cc80:	f7ff ffcc 	bl	800cc1c <_ZN8touchgfx7CWRUtil4sineEi>
 800cc84:	4605      	mov	r5, r0
 800cc86:	b90e      	cbnz	r6, 800cc8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x2c>
 800cc88:	b002      	add	sp, #8
 800cc8a:	bd70      	pop	{r4, r5, r6, pc}
 800cc8c:	1c60      	adds	r0, r4, #1
 800cc8e:	f7ff ffc5 	bl	800cc1c <_ZN8touchgfx7CWRUtil4sineEi>
 800cc92:	ab01      	add	r3, sp, #4
 800cc94:	2220      	movs	r2, #32
 800cc96:	4631      	mov	r1, r6
 800cc98:	1b40      	subs	r0, r0, r5
 800cc9a:	f004 fb67 	bl	801136c <_ZN8touchgfx6muldivElllRl>
 800cc9e:	4428      	add	r0, r5
 800cca0:	e7f2      	b.n	800cc88 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>

0800cca2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800cca2:	b508      	push	{r3, lr}
 800cca4:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 800cca8:	f7ff ffda 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800ccac:	bd08      	pop	{r3, pc}
	...

0800ccb0 <_ZN8touchgfx6CircleC1Ev>:
 800ccb0:	b510      	push	{r4, lr}
 800ccb2:	4604      	mov	r4, r0
 800ccb4:	f000 fca6 	bl	800d604 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800ccb8:	4b08      	ldr	r3, [pc, #32]	; (800ccdc <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800ccba:	6023      	str	r3, [r4, #0]
 800ccbc:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800ccc0:	2300      	movs	r3, #0
 800ccc2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
 800ccc6:	f24b 4205 	movw	r2, #46085	; 0xb405
 800ccca:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 800ccce:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 800ccd2:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 800ccd6:	60a3      	str	r3, [r4, #8]
 800ccd8:	4620      	mov	r0, r4
 800ccda:	bd10      	pop	{r4, pc}
 800ccdc:	080255d8 	.word	0x080255d8

0800cce0 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 800cce0:	29b4      	cmp	r1, #180	; 0xb4
 800cce2:	bfa8      	it	ge
 800cce4:	21b4      	movge	r1, #180	; 0xb4
 800cce6:	2901      	cmp	r1, #1
 800cce8:	bfb8      	it	lt
 800ccea:	2101      	movlt	r1, #1
 800ccec:	f880 1049 	strb.w	r1, [r0, #73]	; 0x49
 800ccf0:	4770      	bx	lr

0800ccf2 <_ZNK8touchgfx6Circle15getCapPrecisionEv>:
 800ccf2:	f890 0049 	ldrb.w	r0, [r0, #73]	; 0x49
 800ccf6:	4770      	bx	lr

0800ccf8 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800ccf8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ccfc:	4606      	mov	r6, r0
 800ccfe:	6810      	ldr	r0, [r2, #0]
 800cd00:	4698      	mov	r8, r3
 800cd02:	4691      	mov	r9, r2
 800cd04:	460f      	mov	r7, r1
 800cd06:	f7ff ffab 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cd0a:	a902      	add	r1, sp, #8
 800cd0c:	2402      	movs	r4, #2
 800cd0e:	f841 0d08 	str.w	r0, [r1, #-8]!
 800cd12:	4640      	mov	r0, r8
 800cd14:	f7ff ff76 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd18:	6b35      	ldr	r5, [r6, #48]	; 0x30
 800cd1a:	fb90 f0f4 	sdiv	r0, r0, r4
 800cd1e:	4405      	add	r5, r0
 800cd20:	f8d9 0000 	ldr.w	r0, [r9]
 800cd24:	f7ff ffbd 	bl	800cca2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cd28:	a902      	add	r1, sp, #8
 800cd2a:	f841 0d04 	str.w	r0, [r1, #-4]!
 800cd2e:	4640      	mov	r0, r8
 800cd30:	f7ff ff68 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd34:	6b72      	ldr	r2, [r6, #52]	; 0x34
 800cd36:	fb90 f0f4 	sdiv	r0, r0, r4
 800cd3a:	4629      	mov	r1, r5
 800cd3c:	1a12      	subs	r2, r2, r0
 800cd3e:	4638      	mov	r0, r7
 800cd40:	f012 faeb 	bl	801f31a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cd44:	b003      	add	sp, #12
 800cd46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800cd4a <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>:
 800cd4a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800cd4e:	9e08      	ldr	r6, [sp, #32]
 800cd50:	6830      	ldr	r0, [r6, #0]
 800cd52:	4698      	mov	r8, r3
 800cd54:	4615      	mov	r5, r2
 800cd56:	460f      	mov	r7, r1
 800cd58:	f7ff ff82 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cd5c:	a902      	add	r1, sp, #8
 800cd5e:	2402      	movs	r4, #2
 800cd60:	f841 0d08 	str.w	r0, [r1, #-8]!
 800cd64:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cd66:	f7ff ff4d 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd6a:	682d      	ldr	r5, [r5, #0]
 800cd6c:	fb90 f0f4 	sdiv	r0, r0, r4
 800cd70:	4405      	add	r5, r0
 800cd72:	6830      	ldr	r0, [r6, #0]
 800cd74:	f7ff ff95 	bl	800cca2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cd78:	a902      	add	r1, sp, #8
 800cd7a:	f841 0d04 	str.w	r0, [r1, #-4]!
 800cd7e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cd80:	f7ff ff40 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd84:	f8d8 2000 	ldr.w	r2, [r8]
 800cd88:	fb90 f0f4 	sdiv	r0, r0, r4
 800cd8c:	4629      	mov	r1, r5
 800cd8e:	1a12      	subs	r2, r2, r0
 800cd90:	4638      	mov	r0, r7
 800cd92:	f012 fa51 	bl	801f238 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cd96:	b002      	add	sp, #8
 800cd98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cd9c <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800cd9c:	b513      	push	{r0, r1, r4, lr}
 800cd9e:	e9cd 2300 	strd	r2, r3, [sp]
 800cda2:	f100 0334 	add.w	r3, r0, #52	; 0x34
 800cda6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 800cdaa:	f7ff ffce 	bl	800cd4a <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800cdae:	b002      	add	sp, #8
 800cdb0:	bd10      	pop	{r4, pc}

0800cdb2 <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800cdb2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cdb4:	680e      	ldr	r6, [r1, #0]
 800cdb6:	681f      	ldr	r7, [r3, #0]
 800cdb8:	9807      	ldr	r0, [sp, #28]
 800cdba:	e9dd 5405 	ldrd	r5, r4, [sp, #20]
 800cdbe:	42be      	cmp	r6, r7
 800cdc0:	bfb8      	it	lt
 800cdc2:	601e      	strlt	r6, [r3, #0]
 800cdc4:	680b      	ldr	r3, [r1, #0]
 800cdc6:	6829      	ldr	r1, [r5, #0]
 800cdc8:	428b      	cmp	r3, r1
 800cdca:	bfc8      	it	gt
 800cdcc:	602b      	strgt	r3, [r5, #0]
 800cdce:	6813      	ldr	r3, [r2, #0]
 800cdd0:	6821      	ldr	r1, [r4, #0]
 800cdd2:	428b      	cmp	r3, r1
 800cdd4:	bfb8      	it	lt
 800cdd6:	6023      	strlt	r3, [r4, #0]
 800cdd8:	6813      	ldr	r3, [r2, #0]
 800cdda:	6802      	ldr	r2, [r0, #0]
 800cddc:	4293      	cmp	r3, r2
 800cdde:	bfc8      	it	gt
 800cde0:	6003      	strgt	r3, [r0, #0]
 800cde2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cde4 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800cde4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cde8:	4606      	mov	r6, r0
 800cdea:	b089      	sub	sp, #36	; 0x24
 800cdec:	6808      	ldr	r0, [r1, #0]
 800cdee:	4690      	mov	r8, r2
 800cdf0:	461f      	mov	r7, r3
 800cdf2:	4689      	mov	r9, r1
 800cdf4:	f7ff ff34 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cdf8:	ad08      	add	r5, sp, #32
 800cdfa:	2402      	movs	r4, #2
 800cdfc:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ce00:	4640      	mov	r0, r8
 800ce02:	4629      	mov	r1, r5
 800ce04:	f7ff fefe 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ce08:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800ce0a:	fb90 f0f4 	sdiv	r0, r0, r4
 800ce0e:	4418      	add	r0, r3
 800ce10:	9005      	str	r0, [sp, #20]
 800ce12:	f8d9 0000 	ldr.w	r0, [r9]
 800ce16:	f7ff ff44 	bl	800cca2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800ce1a:	4629      	mov	r1, r5
 800ce1c:	9007      	str	r0, [sp, #28]
 800ce1e:	4640      	mov	r0, r8
 800ce20:	f7ff fef0 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ce24:	fb90 f0f4 	sdiv	r0, r0, r4
 800ce28:	6b74      	ldr	r4, [r6, #52]	; 0x34
 800ce2a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ce2c:	aa08      	add	r2, sp, #32
 800ce2e:	1a24      	subs	r4, r4, r0
 800ce30:	f842 4d08 	str.w	r4, [r2, #-8]!
 800ce34:	9302      	str	r3, [sp, #8]
 800ce36:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ce38:	9301      	str	r3, [sp, #4]
 800ce3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ce3c:	9300      	str	r3, [sp, #0]
 800ce3e:	a905      	add	r1, sp, #20
 800ce40:	463b      	mov	r3, r7
 800ce42:	4630      	mov	r0, r6
 800ce44:	f7ff ffb5 	bl	800cdb2 <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800ce48:	b009      	add	sp, #36	; 0x24
 800ce4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800ce4e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800ce4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce52:	4291      	cmp	r1, r2
 800ce54:	b08d      	sub	sp, #52	; 0x34
 800ce56:	e9cd 2106 	strd	r2, r1, [sp, #24]
 800ce5a:	bfc8      	it	gt
 800ce5c:	e9cd 1206 	strdgt	r1, r2, [sp, #24]
 800ce60:	461e      	mov	r6, r3
 800ce62:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ce66:	1a9b      	subs	r3, r3, r2
 800ce68:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800ce6c:	bfa2      	ittt	ge
 800ce6e:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800ce72:	2200      	movge	r2, #0
 800ce74:	e9cd 3206 	strdge	r3, r2, [sp, #24]
 800ce78:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800ce7a:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800ce7c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 800ce80:	ad0c      	add	r5, sp, #48	; 0x30
 800ce82:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800ce86:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ce8a:	f845 3d04 	str.w	r3, [r5, #-4]!
 800ce8e:	a907      	add	r1, sp, #28
 800ce90:	4633      	mov	r3, r6
 800ce92:	462a      	mov	r2, r5
 800ce94:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800ce98:	9700      	str	r7, [sp, #0]
 800ce9a:	4604      	mov	r4, r0
 800ce9c:	f7ff ffa2 	bl	800cde4 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800cea0:	9b07      	ldr	r3, [sp, #28]
 800cea2:	f44f 6034 	mov.w	r0, #2880	; 0xb40
 800cea6:	f103 0120 	add.w	r1, r3, #32
 800ceaa:	fb91 f3f0 	sdiv	r3, r1, r0
 800ceae:	fb00 1313 	mls	r3, r0, r3, r1
 800ceb2:	1ac3      	subs	r3, r0, r3
 800ceb4:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800ceb8:	fb93 f2f0 	sdiv	r2, r3, r0
 800cebc:	fb00 3312 	mls	r3, r0, r2, r3
 800cec0:	440b      	add	r3, r1
 800cec2:	f84a 3d0c 	str.w	r3, [sl, #-12]!
 800cec6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800cec8:	9906      	ldr	r1, [sp, #24]
 800ceca:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cecc:	4291      	cmp	r1, r2
 800cece:	db11      	blt.n	800cef4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xa6>
 800ced0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ced2:	9700      	str	r7, [sp, #0]
 800ced4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ced8:	930b      	str	r3, [sp, #44]	; 0x2c
 800ceda:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800cede:	4633      	mov	r3, r6
 800cee0:	462a      	mov	r2, r5
 800cee2:	4651      	mov	r1, sl
 800cee4:	4620      	mov	r0, r4
 800cee6:	f7ff ff7d 	bl	800cde4 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800ceea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ceec:	f503 6334 	add.w	r3, r3, #2880	; 0xb40
 800cef0:	9309      	str	r3, [sp, #36]	; 0x24
 800cef2:	e7e8      	b.n	800cec6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x78>
 800cef4:	f5a2 6234 	sub.w	r2, r2, #2880	; 0xb40
 800cef8:	4291      	cmp	r1, r2
 800cefa:	dd0c      	ble.n	800cf16 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xc8>
 800cefc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cefe:	9700      	str	r7, [sp, #0]
 800cf00:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800cf04:	930b      	str	r3, [sp, #44]	; 0x2c
 800cf06:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800cf0a:	4633      	mov	r3, r6
 800cf0c:	462a      	mov	r2, r5
 800cf0e:	a906      	add	r1, sp, #24
 800cf10:	4620      	mov	r0, r4
 800cf12:	f7ff ff67 	bl	800cde4 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800cf16:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cf18:	2b00      	cmp	r3, #0
 800cf1a:	f040 8097 	bne.w	800d04c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1fe>
 800cf1e:	e9dd 2106 	ldrd	r2, r1, [sp, #24]
 800cf22:	1a52      	subs	r2, r2, r1
 800cf24:	f5b2 5f34 	cmp.w	r2, #11520	; 0x2d00
 800cf28:	da0a      	bge.n	800cf40 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xf2>
 800cf2a:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800cf2e:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800cf32:	9700      	str	r7, [sp, #0]
 800cf34:	4633      	mov	r3, r6
 800cf36:	462a      	mov	r2, r5
 800cf38:	a90a      	add	r1, sp, #40	; 0x28
 800cf3a:	4620      	mov	r0, r4
 800cf3c:	f7ff ff52 	bl	800cde4 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800cf40:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800cf44:	2bb3      	cmp	r3, #179	; 0xb3
 800cf46:	d87e      	bhi.n	800d046 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800cf48:	e9dd 3006 	ldrd	r3, r0, [sp, #24]
 800cf4c:	1a1b      	subs	r3, r3, r0
 800cf4e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800cf52:	da78      	bge.n	800d046 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800cf54:	f7ff fe84 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cf58:	ad0c      	add	r5, sp, #48	; 0x30
 800cf5a:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800cf5e:	f845 0d04 	str.w	r0, [r5, #-4]!
 800cf62:	4658      	mov	r0, fp
 800cf64:	4629      	mov	r1, r5
 800cf66:	f7ff fe4d 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf6a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cf6c:	18c3      	adds	r3, r0, r3
 800cf6e:	9807      	ldr	r0, [sp, #28]
 800cf70:	9305      	str	r3, [sp, #20]
 800cf72:	f7ff fe96 	bl	800cca2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cf76:	4629      	mov	r1, r5
 800cf78:	900b      	str	r0, [sp, #44]	; 0x2c
 800cf7a:	4658      	mov	r0, fp
 800cf7c:	f7ff fe42 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf80:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800cf82:	9a05      	ldr	r2, [sp, #20]
 800cf84:	9700      	str	r7, [sp, #0]
 800cf86:	1a1b      	subs	r3, r3, r0
 800cf88:	f04f 0a02 	mov.w	sl, #2
 800cf8c:	9304      	str	r3, [sp, #16]
 800cf8e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cf90:	fb93 f3fa 	sdiv	r3, r3, sl
 800cf94:	1ad2      	subs	r2, r2, r3
 800cf96:	920a      	str	r2, [sp, #40]	; 0x28
 800cf98:	9a04      	ldr	r2, [sp, #16]
 800cf9a:	1ad3      	subs	r3, r2, r3
 800cf9c:	930b      	str	r3, [sp, #44]	; 0x2c
 800cf9e:	462a      	mov	r2, r5
 800cfa0:	4633      	mov	r3, r6
 800cfa2:	a90a      	add	r1, sp, #40	; 0x28
 800cfa4:	4620      	mov	r0, r4
 800cfa6:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800cfaa:	f7ff ff02 	bl	800cdb2 <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800cfae:	9a05      	ldr	r2, [sp, #20]
 800cfb0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cfb2:	fb93 f3fa 	sdiv	r3, r3, sl
 800cfb6:	189a      	adds	r2, r3, r2
 800cfb8:	920a      	str	r2, [sp, #40]	; 0x28
 800cfba:	9a04      	ldr	r2, [sp, #16]
 800cfbc:	9700      	str	r7, [sp, #0]
 800cfbe:	4413      	add	r3, r2
 800cfc0:	a90a      	add	r1, sp, #40	; 0x28
 800cfc2:	462a      	mov	r2, r5
 800cfc4:	930b      	str	r3, [sp, #44]	; 0x2c
 800cfc6:	4620      	mov	r0, r4
 800cfc8:	4633      	mov	r3, r6
 800cfca:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800cfce:	f7ff fef0 	bl	800cdb2 <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800cfd2:	9806      	ldr	r0, [sp, #24]
 800cfd4:	f7ff fe44 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cfd8:	4629      	mov	r1, r5
 800cfda:	900b      	str	r0, [sp, #44]	; 0x2c
 800cfdc:	4658      	mov	r0, fp
 800cfde:	f7ff fe11 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cfe2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cfe4:	18c3      	adds	r3, r0, r3
 800cfe6:	9806      	ldr	r0, [sp, #24]
 800cfe8:	9304      	str	r3, [sp, #16]
 800cfea:	f7ff fe5a 	bl	800cca2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cfee:	4629      	mov	r1, r5
 800cff0:	900b      	str	r0, [sp, #44]	; 0x2c
 800cff2:	4658      	mov	r0, fp
 800cff4:	f7ff fe06 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cff8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800cffa:	9a04      	ldr	r2, [sp, #16]
 800cffc:	9700      	str	r7, [sp, #0]
 800cffe:	eba3 0b00 	sub.w	fp, r3, r0
 800d002:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d004:	fb93 f3fa 	sdiv	r3, r3, sl
 800d008:	1ad2      	subs	r2, r2, r3
 800d00a:	ebab 0303 	sub.w	r3, fp, r3
 800d00e:	920a      	str	r2, [sp, #40]	; 0x28
 800d010:	930b      	str	r3, [sp, #44]	; 0x2c
 800d012:	462a      	mov	r2, r5
 800d014:	4633      	mov	r3, r6
 800d016:	a90a      	add	r1, sp, #40	; 0x28
 800d018:	4620      	mov	r0, r4
 800d01a:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d01e:	f7ff fec8 	bl	800cdb2 <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d022:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d024:	fb93 fafa 	sdiv	sl, r3, sl
 800d028:	9b04      	ldr	r3, [sp, #16]
 800d02a:	9700      	str	r7, [sp, #0]
 800d02c:	4453      	add	r3, sl
 800d02e:	930a      	str	r3, [sp, #40]	; 0x28
 800d030:	eb0a 030b 	add.w	r3, sl, fp
 800d034:	930b      	str	r3, [sp, #44]	; 0x2c
 800d036:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d03a:	4633      	mov	r3, r6
 800d03c:	462a      	mov	r2, r5
 800d03e:	a90a      	add	r1, sp, #40	; 0x28
 800d040:	4620      	mov	r0, r4
 800d042:	f7ff feb6 	bl	800cdb2 <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d046:	b00d      	add	sp, #52	; 0x34
 800d048:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d04c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d04e:	9700      	str	r7, [sp, #0]
 800d050:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d054:	930b      	str	r3, [sp, #44]	; 0x2c
 800d056:	462a      	mov	r2, r5
 800d058:	4633      	mov	r3, r6
 800d05a:	a907      	add	r1, sp, #28
 800d05c:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d060:	4620      	mov	r0, r4
 800d062:	f7ff febf 	bl	800cde4 <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800d066:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d068:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d06a:	9700      	str	r7, [sp, #0]
 800d06c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d070:	930b      	str	r3, [sp, #44]	; 0x2c
 800d072:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800d076:	4633      	mov	r3, r6
 800d078:	462a      	mov	r2, r5
 800d07a:	a906      	add	r1, sp, #24
 800d07c:	e75d      	b.n	800cf3a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xec>

0800d07e <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800d07e:	b530      	push	{r4, r5, lr}
 800d080:	4604      	mov	r4, r0
 800d082:	4608      	mov	r0, r1
 800d084:	4611      	mov	r1, r2
 800d086:	461a      	mov	r2, r3
 800d088:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d08c:	b089      	sub	sp, #36	; 0x24
 800d08e:	015b      	lsls	r3, r3, #5
 800d090:	9304      	str	r3, [sp, #16]
 800d092:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d096:	2500      	movs	r5, #0
 800d098:	015b      	lsls	r3, r3, #5
 800d09a:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800d09e:	ab07      	add	r3, sp, #28
 800d0a0:	9302      	str	r3, [sp, #8]
 800d0a2:	ab06      	add	r3, sp, #24
 800d0a4:	9301      	str	r3, [sp, #4]
 800d0a6:	ab05      	add	r3, sp, #20
 800d0a8:	9300      	str	r3, [sp, #0]
 800d0aa:	ab04      	add	r3, sp, #16
 800d0ac:	9505      	str	r5, [sp, #20]
 800d0ae:	f7ff fece 	bl	800ce4e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800d0b2:	2520      	movs	r5, #32
 800d0b4:	9a04      	ldr	r2, [sp, #16]
 800d0b6:	9805      	ldr	r0, [sp, #20]
 800d0b8:	fb92 f2f5 	sdiv	r2, r2, r5
 800d0bc:	fb90 f0f5 	sdiv	r0, r0, r5
 800d0c0:	b292      	uxth	r2, r2
 800d0c2:	3002      	adds	r0, #2
 800d0c4:	1a80      	subs	r0, r0, r2
 800d0c6:	9b06      	ldr	r3, [sp, #24]
 800d0c8:	9907      	ldr	r1, [sp, #28]
 800d0ca:	fb93 f3f5 	sdiv	r3, r3, r5
 800d0ce:	fb91 f1f5 	sdiv	r1, r1, r5
 800d0d2:	b29b      	uxth	r3, r3
 800d0d4:	3102      	adds	r1, #2
 800d0d6:	1ac9      	subs	r1, r1, r3
 800d0d8:	3a01      	subs	r2, #1
 800d0da:	3b01      	subs	r3, #1
 800d0dc:	80a0      	strh	r0, [r4, #4]
 800d0de:	4620      	mov	r0, r4
 800d0e0:	8022      	strh	r2, [r4, #0]
 800d0e2:	8063      	strh	r3, [r4, #2]
 800d0e4:	80e1      	strh	r1, [r4, #6]
 800d0e6:	b009      	add	sp, #36	; 0x24
 800d0e8:	bd30      	pop	{r4, r5, pc}

0800d0ea <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800d0ea:	b510      	push	{r4, lr}
 800d0ec:	e9d1 230f 	ldrd	r2, r3, [r1, #60]	; 0x3c
 800d0f0:	4604      	mov	r4, r0
 800d0f2:	f7ff ffc4 	bl	800d07e <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800d0f6:	4620      	mov	r0, r4
 800d0f8:	bd10      	pop	{r4, pc}

0800d0fa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 800d0fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d0fc:	e9d1 540f 	ldrd	r5, r4, [r1, #60]	; 0x3c
 800d100:	4606      	mov	r6, r0
 800d102:	f891 0048 	ldrb.w	r0, [r1, #72]	; 0x48
 800d106:	6813      	ldr	r3, [r2, #0]
 800d108:	42a5      	cmp	r5, r4
 800d10a:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800d10e:	da2b      	bge.n	800d168 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 800d110:	42a3      	cmp	r3, r4
 800d112:	dd14      	ble.n	800d13e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 800d114:	b168      	cbz	r0, 800d132 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800d116:	4267      	negs	r7, r4
 800d118:	fb97 f2f0 	sdiv	r2, r7, r0
 800d11c:	fb00 7212 	mls	r2, r0, r2, r7
 800d120:	1a82      	subs	r2, r0, r2
 800d122:	fb92 f7f0 	sdiv	r7, r2, r0
 800d126:	fb00 2017 	mls	r0, r0, r7, r2
 800d12a:	1a24      	subs	r4, r4, r0
 800d12c:	42ac      	cmp	r4, r5
 800d12e:	bfb8      	it	lt
 800d130:	462c      	movlt	r4, r5
 800d132:	4630      	mov	r0, r6
 800d134:	4622      	mov	r2, r4
 800d136:	f7ff ffa2 	bl	800d07e <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800d13a:	4630      	mov	r0, r6
 800d13c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d13e:	42ab      	cmp	r3, r5
 800d140:	dd0e      	ble.n	800d160 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 800d142:	b168      	cbz	r0, 800d160 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 800d144:	425f      	negs	r7, r3
 800d146:	fb97 f2f0 	sdiv	r2, r7, r0
 800d14a:	fb00 7212 	mls	r2, r0, r2, r7
 800d14e:	1a82      	subs	r2, r0, r2
 800d150:	fb92 f7f0 	sdiv	r7, r2, r0
 800d154:	fb00 2017 	mls	r0, r0, r7, r2
 800d158:	1a1b      	subs	r3, r3, r0
 800d15a:	42ab      	cmp	r3, r5
 800d15c:	bfb8      	it	lt
 800d15e:	462b      	movlt	r3, r5
 800d160:	4622      	mov	r2, r4
 800d162:	461c      	mov	r4, r3
 800d164:	4613      	mov	r3, r2
 800d166:	e7e4      	b.n	800d132 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800d168:	42a3      	cmp	r3, r4
 800d16a:	da10      	bge.n	800d18e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 800d16c:	b148      	cbz	r0, 800d182 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 800d16e:	fb94 f2f0 	sdiv	r2, r4, r0
 800d172:	fb00 4212 	mls	r2, r0, r2, r4
 800d176:	1a82      	subs	r2, r0, r2
 800d178:	fb92 f7f0 	sdiv	r7, r2, r0
 800d17c:	fb00 2017 	mls	r0, r0, r7, r2
 800d180:	4404      	add	r4, r0
 800d182:	42a5      	cmp	r5, r4
 800d184:	bfa8      	it	ge
 800d186:	4625      	movge	r5, r4
 800d188:	461c      	mov	r4, r3
 800d18a:	462b      	mov	r3, r5
 800d18c:	e7d1      	b.n	800d132 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800d18e:	42ab      	cmp	r3, r5
 800d190:	dacf      	bge.n	800d132 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800d192:	2800      	cmp	r0, #0
 800d194:	d0cd      	beq.n	800d132 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800d196:	fb93 f2f0 	sdiv	r2, r3, r0
 800d19a:	fb00 3212 	mls	r2, r0, r2, r3
 800d19e:	1a82      	subs	r2, r0, r2
 800d1a0:	fb92 f7f0 	sdiv	r7, r2, r0
 800d1a4:	fb00 2017 	mls	r0, r0, r7, r2
 800d1a8:	4403      	add	r3, r0
 800d1aa:	42ab      	cmp	r3, r5
 800d1ac:	bfa8      	it	ge
 800d1ae:	462b      	movge	r3, r5
 800d1b0:	e7bf      	b.n	800d132 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0800d1b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800d1b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d1b6:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800d1b8:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800d1ba:	b0ba      	sub	sp, #232	; 0xe8
 800d1bc:	429a      	cmp	r2, r3
 800d1be:	9303      	str	r3, [sp, #12]
 800d1c0:	9204      	str	r2, [sp, #16]
 800d1c2:	bfb8      	it	lt
 800d1c4:	e9cd 2303 	strdlt	r2, r3, [sp, #12]
 800d1c8:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 800d1cc:	1a9b      	subs	r3, r3, r2
 800d1ce:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800d1d2:	bfa2      	ittt	ge
 800d1d4:	2200      	movge	r2, #0
 800d1d6:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800d1da:	e9cd 2303 	strdge	r2, r3, [sp, #12]
 800d1de:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800d1e0:	4604      	mov	r4, r0
 800d1e2:	460f      	mov	r7, r1
 800d1e4:	ae0a      	add	r6, sp, #40	; 0x28
 800d1e6:	2a00      	cmp	r2, #0
 800d1e8:	d131      	bne.n	800d24e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x9c>
 800d1ea:	463a      	mov	r2, r7
 800d1ec:	4621      	mov	r1, r4
 800d1ee:	a80b      	add	r0, sp, #44	; 0x2c
 800d1f0:	f011 feca 	bl	801ef88 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d1f4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d1f6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d1f8:	9205      	str	r2, [sp, #20]
 800d1fa:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800d1fe:	9306      	str	r3, [sp, #24]
 800d200:	dc6d      	bgt.n	800d2de <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x12c>
 800d202:	9b03      	ldr	r3, [sp, #12]
 800d204:	9307      	str	r3, [sp, #28]
 800d206:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800d20a:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 800d20e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d212:	930a      	str	r3, [sp, #40]	; 0x28
 800d214:	aa07      	add	r2, sp, #28
 800d216:	4633      	mov	r3, r6
 800d218:	a90b      	add	r1, sp, #44	; 0x2c
 800d21a:	4620      	mov	r0, r4
 800d21c:	016d      	lsls	r5, r5, #5
 800d21e:	f7ff fd6b 	bl	800ccf8 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800d222:	9f07      	ldr	r7, [sp, #28]
 800d224:	2d00      	cmp	r5, #0
 800d226:	d163      	bne.n	800d2f0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x13e>
 800d228:	3720      	adds	r7, #32
 800d22a:	9a04      	ldr	r2, [sp, #16]
 800d22c:	9b06      	ldr	r3, [sp, #24]
 800d22e:	4639      	mov	r1, r7
 800d230:	4291      	cmp	r1, r2
 800d232:	442f      	add	r7, r5
 800d234:	dc69      	bgt.n	800d30a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x158>
 800d236:	9a05      	ldr	r2, [sp, #20]
 800d238:	9107      	str	r1, [sp, #28]
 800d23a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d23e:	930a      	str	r3, [sp, #40]	; 0x28
 800d240:	aa07      	add	r2, sp, #28
 800d242:	4633      	mov	r3, r6
 800d244:	a90b      	add	r1, sp, #44	; 0x2c
 800d246:	4620      	mov	r0, r4
 800d248:	f7ff fda8 	bl	800cd9c <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800d24c:	e7ed      	b.n	800d22a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x78>
 800d24e:	f9b1 c000 	ldrsh.w	ip, [r1]
 800d252:	88bd      	ldrh	r5, [r7, #4]
 800d254:	f9b1 0002 	ldrsh.w	r0, [r1, #2]
 800d258:	e9d4 310c 	ldrd	r3, r1, [r4, #48]	; 0x30
 800d25c:	4465      	add	r5, ip
 800d25e:	b22d      	sxth	r5, r5
 800d260:	eba3 1545 	sub.w	r5, r3, r5, lsl #5
 800d264:	2d00      	cmp	r5, #0
 800d266:	eba3 134c 	sub.w	r3, r3, ip, lsl #5
 800d26a:	bfb8      	it	lt
 800d26c:	426d      	neglt	r5, r5
 800d26e:	2b00      	cmp	r3, #0
 800d270:	bfb8      	it	lt
 800d272:	425b      	neglt	r3, r3
 800d274:	429d      	cmp	r5, r3
 800d276:	bfb8      	it	lt
 800d278:	461d      	movlt	r5, r3
 800d27a:	88fb      	ldrh	r3, [r7, #6]
 800d27c:	4403      	add	r3, r0
 800d27e:	b21b      	sxth	r3, r3
 800d280:	eba1 1343 	sub.w	r3, r1, r3, lsl #5
 800d284:	2b00      	cmp	r3, #0
 800d286:	eba1 1140 	sub.w	r1, r1, r0, lsl #5
 800d28a:	bfb8      	it	lt
 800d28c:	425b      	neglt	r3, r3
 800d28e:	2900      	cmp	r1, #0
 800d290:	bfb8      	it	lt
 800d292:	4249      	neglt	r1, r1
 800d294:	428b      	cmp	r3, r1
 800d296:	bfb8      	it	lt
 800d298:	460b      	movlt	r3, r1
 800d29a:	115b      	asrs	r3, r3, #5
 800d29c:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800d2a0:	116d      	asrs	r5, r5, #5
 800d2a2:	3301      	adds	r3, #1
 800d2a4:	435b      	muls	r3, r3
 800d2a6:	3501      	adds	r5, #1
 800d2a8:	fb05 3505 	mla	r5, r5, r5, r3
 800d2ac:	3001      	adds	r0, #1
 800d2ae:	2302      	movs	r3, #2
 800d2b0:	fb92 f2f3 	sdiv	r2, r2, r3
 800d2b4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d2b6:	1040      	asrs	r0, r0, #1
 800d2b8:	1a9a      	subs	r2, r3, r2
 800d2ba:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800d2be:	920a      	str	r2, [sp, #40]	; 0x28
 800d2c0:	f7ff fcac 	bl	800cc1c <_ZN8touchgfx7CWRUtil4sineEi>
 800d2c4:	a90b      	add	r1, sp, #44	; 0x2c
 800d2c6:	900b      	str	r0, [sp, #44]	; 0x2c
 800d2c8:	4630      	mov	r0, r6
 800d2ca:	f7ff fc9b 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d2ce:	2320      	movs	r3, #32
 800d2d0:	fb90 f0f3 	sdiv	r0, r0, r3
 800d2d4:	4340      	muls	r0, r0
 800d2d6:	42a8      	cmp	r0, r5
 800d2d8:	dd87      	ble.n	800d1ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x38>
 800d2da:	2401      	movs	r4, #1
 800d2dc:	e037      	b.n	800d34e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x19c>
 800d2de:	2102      	movs	r1, #2
 800d2e0:	fb93 f3f1 	sdiv	r3, r3, r1
 800d2e4:	4413      	add	r3, r2
 800d2e6:	9306      	str	r3, [sp, #24]
 800d2e8:	fb93 f3f1 	sdiv	r3, r3, r1
 800d2ec:	9305      	str	r3, [sp, #20]
 800d2ee:	e788      	b.n	800d202 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x50>
 800d2f0:	f107 0320 	add.w	r3, r7, #32
 800d2f4:	fb93 f7f5 	sdiv	r7, r3, r5
 800d2f8:	fb05 3717 	mls	r7, r5, r7, r3
 800d2fc:	1bea      	subs	r2, r5, r7
 800d2fe:	fb92 f7f5 	sdiv	r7, r2, r5
 800d302:	fb05 2717 	mls	r7, r5, r7, r2
 800d306:	441f      	add	r7, r3
 800d308:	e78f      	b.n	800d22a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x78>
 800d30a:	9907      	ldr	r1, [sp, #28]
 800d30c:	428a      	cmp	r2, r1
 800d30e:	dd09      	ble.n	800d324 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x172>
 800d310:	9a05      	ldr	r2, [sp, #20]
 800d312:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d316:	930a      	str	r3, [sp, #40]	; 0x28
 800d318:	aa04      	add	r2, sp, #16
 800d31a:	4633      	mov	r3, r6
 800d31c:	a90b      	add	r1, sp, #44	; 0x2c
 800d31e:	4620      	mov	r0, r4
 800d320:	f7ff fd3c 	bl	800cd9c <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800d324:	e9dd 3003 	ldrd	r3, r0, [sp, #12]
 800d328:	9a06      	ldr	r2, [sp, #24]
 800d32a:	1ac3      	subs	r3, r0, r3
 800d32c:	b99a      	cbnz	r2, 800d356 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1a4>
 800d32e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800d332:	da04      	bge.n	800d33e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800d334:	e9d4 120c 	ldrd	r1, r2, [r4, #48]	; 0x30
 800d338:	a80b      	add	r0, sp, #44	; 0x2c
 800d33a:	f011 ff7d 	bl	801f238 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d33e:	21ff      	movs	r1, #255	; 0xff
 800d340:	a80b      	add	r0, sp, #44	; 0x2c
 800d342:	f012 f8ee 	bl	801f522 <_ZN8touchgfx6Canvas6renderEh>
 800d346:	4604      	mov	r4, r0
 800d348:	a80b      	add	r0, sp, #44	; 0x2c
 800d34a:	f012 f929 	bl	801f5a0 <_ZN8touchgfx6CanvasD1Ev>
 800d34e:	4620      	mov	r0, r4
 800d350:	b03a      	add	sp, #232	; 0xe8
 800d352:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d356:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
 800d35a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800d35e:	ea4f 1747 	mov.w	r7, r7, lsl #5
 800d362:	da2b      	bge.n	800d3bc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x20a>
 800d364:	f7ff fc7c 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d368:	4631      	mov	r1, r6
 800d36a:	900a      	str	r0, [sp, #40]	; 0x28
 800d36c:	a805      	add	r0, sp, #20
 800d36e:	f7ff fc49 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d372:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d374:	4418      	add	r0, r3
 800d376:	9008      	str	r0, [sp, #32]
 800d378:	9804      	ldr	r0, [sp, #16]
 800d37a:	f7ff fc92 	bl	800cca2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d37e:	4631      	mov	r1, r6
 800d380:	900a      	str	r0, [sp, #40]	; 0x28
 800d382:	a805      	add	r0, sp, #20
 800d384:	f7ff fc3e 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d388:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d38a:	1a18      	subs	r0, r3, r0
 800d38c:	9b04      	ldr	r3, [sp, #16]
 800d38e:	9009      	str	r0, [sp, #36]	; 0x24
 800d390:	443b      	add	r3, r7
 800d392:	930a      	str	r3, [sp, #40]	; 0x28
 800d394:	f10d 0818 	add.w	r8, sp, #24
 800d398:	9b04      	ldr	r3, [sp, #16]
 800d39a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d39c:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 800d3a0:	4293      	cmp	r3, r2
 800d3a2:	dd0b      	ble.n	800d3bc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x20a>
 800d3a4:	ab09      	add	r3, sp, #36	; 0x24
 800d3a6:	e9cd 6800 	strd	r6, r8, [sp]
 800d3aa:	aa08      	add	r2, sp, #32
 800d3ac:	a90b      	add	r1, sp, #44	; 0x2c
 800d3ae:	4620      	mov	r0, r4
 800d3b0:	f7ff fccb 	bl	800cd4a <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800d3b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d3b6:	443b      	add	r3, r7
 800d3b8:	930a      	str	r3, [sp, #40]	; 0x28
 800d3ba:	e7ed      	b.n	800d398 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e6>
 800d3bc:	9a04      	ldr	r2, [sp, #16]
 800d3be:	9b07      	ldr	r3, [sp, #28]
 800d3c0:	429a      	cmp	r2, r3
 800d3c2:	dd0a      	ble.n	800d3da <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x228>
 800d3c4:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800d3c8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d3cc:	930a      	str	r3, [sp, #40]	; 0x28
 800d3ce:	aa04      	add	r2, sp, #16
 800d3d0:	4633      	mov	r3, r6
 800d3d2:	a90b      	add	r1, sp, #44	; 0x2c
 800d3d4:	4620      	mov	r0, r4
 800d3d6:	f7ff fce1 	bl	800cd9c <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800d3da:	f8dd 801c 	ldr.w	r8, [sp, #28]
 800d3de:	9b03      	ldr	r3, [sp, #12]
 800d3e0:	4642      	mov	r2, r8
 800d3e2:	429a      	cmp	r2, r3
 800d3e4:	eba8 0805 	sub.w	r8, r8, r5
 800d3e8:	db0c      	blt.n	800d404 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x252>
 800d3ea:	9207      	str	r2, [sp, #28]
 800d3ec:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800d3f0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d3f4:	930a      	str	r3, [sp, #40]	; 0x28
 800d3f6:	aa07      	add	r2, sp, #28
 800d3f8:	4633      	mov	r3, r6
 800d3fa:	a90b      	add	r1, sp, #44	; 0x2c
 800d3fc:	4620      	mov	r0, r4
 800d3fe:	f7ff fccd 	bl	800cd9c <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800d402:	e7ec      	b.n	800d3de <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22c>
 800d404:	9a07      	ldr	r2, [sp, #28]
 800d406:	4293      	cmp	r3, r2
 800d408:	da0a      	bge.n	800d420 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x26e>
 800d40a:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800d40e:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d412:	930a      	str	r3, [sp, #40]	; 0x28
 800d414:	aa03      	add	r2, sp, #12
 800d416:	4633      	mov	r3, r6
 800d418:	a90b      	add	r1, sp, #44	; 0x2c
 800d41a:	4620      	mov	r0, r4
 800d41c:	f7ff fcbe 	bl	800cd9c <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800d420:	e9dd 0303 	ldrd	r0, r3, [sp, #12]
 800d424:	1a1b      	subs	r3, r3, r0
 800d426:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800d42a:	da88      	bge.n	800d33e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800d42c:	f7ff fc18 	bl	800cc60 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d430:	4631      	mov	r1, r6
 800d432:	900a      	str	r0, [sp, #40]	; 0x28
 800d434:	a805      	add	r0, sp, #20
 800d436:	f7ff fbe5 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d43a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d43c:	4418      	add	r0, r3
 800d43e:	9008      	str	r0, [sp, #32]
 800d440:	9803      	ldr	r0, [sp, #12]
 800d442:	f7ff fc2e 	bl	800cca2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d446:	4631      	mov	r1, r6
 800d448:	900a      	str	r0, [sp, #40]	; 0x28
 800d44a:	a805      	add	r0, sp, #20
 800d44c:	f7ff fbda 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d450:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d452:	1a18      	subs	r0, r3, r0
 800d454:	9b03      	ldr	r3, [sp, #12]
 800d456:	9009      	str	r0, [sp, #36]	; 0x24
 800d458:	f5a3 53b4 	sub.w	r3, r3, #5760	; 0x1680
 800d45c:	443b      	add	r3, r7
 800d45e:	930a      	str	r3, [sp, #40]	; 0x28
 800d460:	ad06      	add	r5, sp, #24
 800d462:	9a03      	ldr	r2, [sp, #12]
 800d464:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d466:	429a      	cmp	r2, r3
 800d468:	f77f af69 	ble.w	800d33e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800d46c:	ab09      	add	r3, sp, #36	; 0x24
 800d46e:	e9cd 6500 	strd	r6, r5, [sp]
 800d472:	aa08      	add	r2, sp, #32
 800d474:	a90b      	add	r1, sp, #44	; 0x2c
 800d476:	4620      	mov	r0, r4
 800d478:	f7ff fc67 	bl	800cd4a <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800d47c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d47e:	443b      	add	r3, r7
 800d480:	930a      	str	r3, [sp, #40]	; 0x28
 800d482:	e7ee      	b.n	800d462 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b0>

0800d484 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 800d484:	6281      	str	r1, [r0, #40]	; 0x28
 800d486:	4770      	bx	lr

0800d488 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800d488:	b513      	push	{r0, r1, r4, lr}
 800d48a:	6803      	ldr	r3, [r0, #0]
 800d48c:	4604      	mov	r4, r0
 800d48e:	4601      	mov	r1, r0
 800d490:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d492:	4668      	mov	r0, sp
 800d494:	4798      	blx	r3
 800d496:	6823      	ldr	r3, [r4, #0]
 800d498:	4669      	mov	r1, sp
 800d49a:	691b      	ldr	r3, [r3, #16]
 800d49c:	4620      	mov	r0, r4
 800d49e:	4798      	blx	r3
 800d4a0:	b002      	add	sp, #8
 800d4a2:	bd10      	pop	{r4, pc}

0800d4a4 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 800d4a4:	b510      	push	{r4, lr}
 800d4a6:	2200      	movs	r2, #0
 800d4a8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800d4ac:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800d4b0:	8002      	strh	r2, [r0, #0]
 800d4b2:	8042      	strh	r2, [r0, #2]
 800d4b4:	8084      	strh	r4, [r0, #4]
 800d4b6:	80c1      	strh	r1, [r0, #6]
 800d4b8:	bd10      	pop	{r4, pc}

0800d4ba <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 800d4ba:	2200      	movs	r2, #0
 800d4bc:	8002      	strh	r2, [r0, #0]
 800d4be:	8042      	strh	r2, [r0, #2]
 800d4c0:	8082      	strh	r2, [r0, #4]
 800d4c2:	80c2      	strh	r2, [r0, #6]
 800d4c4:	4770      	bx	lr
	...

0800d4c8 <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 800d4c8:	b508      	push	{r3, lr}
 800d4ca:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d4cc:	b928      	cbnz	r0, 800d4da <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 800d4ce:	4b03      	ldr	r3, [pc, #12]	; (800d4dc <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 800d4d0:	4a03      	ldr	r2, [pc, #12]	; (800d4e0 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 800d4d2:	4804      	ldr	r0, [pc, #16]	; (800d4e4 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 800d4d4:	2123      	movs	r1, #35	; 0x23
 800d4d6:	f014 fe1b 	bl	8022110 <__assert_func>
 800d4da:	bd08      	pop	{r3, pc}
 800d4dc:	0802564c 	.word	0x0802564c
 800d4e0:	0802572c 	.word	0x0802572c
 800d4e4:	08025673 	.word	0x08025673

0800d4e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800d4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4ec:	4604      	mov	r4, r0
 800d4ee:	b089      	sub	sp, #36	; 0x24
 800d4f0:	6808      	ldr	r0, [r1, #0]
 800d4f2:	6849      	ldr	r1, [r1, #4]
 800d4f4:	ab02      	add	r3, sp, #8
 800d4f6:	c303      	stmia	r3!, {r0, r1}
 800d4f8:	4b41      	ldr	r3, [pc, #260]	; (800d600 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x118>)
 800d4fa:	781b      	ldrb	r3, [r3, #0]
 800d4fc:	2b01      	cmp	r3, #1
 800d4fe:	6823      	ldr	r3, [r4, #0]
 800d500:	4621      	mov	r1, r4
 800d502:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d504:	a804      	add	r0, sp, #16
 800d506:	bf1f      	itttt	ne
 800d508:	f10d 0906 	addne.w	r9, sp, #6
 800d50c:	ae03      	addne	r6, sp, #12
 800d50e:	f10d 050e 	addne.w	r5, sp, #14
 800d512:	f10d 080a 	addne.w	r8, sp, #10
 800d516:	bf01      	itttt	eq
 800d518:	f10d 090e 	addeq.w	r9, sp, #14
 800d51c:	f10d 0606 	addeq.w	r6, sp, #6
 800d520:	ad03      	addeq	r5, sp, #12
 800d522:	f10d 0808 	addeq.w	r8, sp, #8
 800d526:	4798      	blx	r3
 800d528:	f04f 0a00 	mov.w	sl, #0
 800d52c:	f04f 0b01 	mov.w	fp, #1
 800d530:	f9b5 3000 	ldrsh.w	r3, [r5]
 800d534:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800d538:	2b00      	cmp	r3, #0
 800d53a:	d056      	beq.n	800d5ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x102>
 800d53c:	4293      	cmp	r3, r2
 800d53e:	bfa8      	it	ge
 800d540:	4613      	movge	r3, r2
 800d542:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d546:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 800d54a:	2f00      	cmp	r7, #0
 800d54c:	dd34      	ble.n	800d5b8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd0>
 800d54e:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 800d552:	f8bd c014 	ldrh.w	ip, [sp, #20]
 800d556:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800d55a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800d55e:	f9b6 e000 	ldrsh.w	lr, [r6]
 800d562:	f9b9 1000 	ldrsh.w	r1, [r9]
 800d566:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d56a:	4484      	add	ip, r0
 800d56c:	fa0f fc8c 	sxth.w	ip, ip
 800d570:	4562      	cmp	r2, ip
 800d572:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d576:	f8ad e01c 	strh.w	lr, [sp, #28]
 800d57a:	f8ad 101e 	strh.w	r1, [sp, #30]
 800d57e:	da29      	bge.n	800d5d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800d580:	4472      	add	r2, lr
 800d582:	b212      	sxth	r2, r2
 800d584:	4290      	cmp	r0, r2
 800d586:	da25      	bge.n	800d5d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800d588:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 800d58c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d590:	4402      	add	r2, r0
 800d592:	b212      	sxth	r2, r2
 800d594:	4293      	cmp	r3, r2
 800d596:	da1d      	bge.n	800d5d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800d598:	440b      	add	r3, r1
 800d59a:	b21b      	sxth	r3, r3
 800d59c:	4298      	cmp	r0, r3
 800d59e:	da19      	bge.n	800d5d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800d5a0:	6823      	ldr	r3, [r4, #0]
 800d5a2:	a906      	add	r1, sp, #24
 800d5a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d5a6:	4620      	mov	r0, r4
 800d5a8:	4798      	blx	r3
 800d5aa:	b998      	cbnz	r0, 800d5d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800d5ac:	107f      	asrs	r7, r7, #1
 800d5ae:	f8ad 7006 	strh.w	r7, [sp, #6]
 800d5b2:	f04f 0a01 	mov.w	sl, #1
 800d5b6:	e7c6      	b.n	800d546 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d5b8:	d10c      	bne.n	800d5d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800d5ba:	f8ad b006 	strh.w	fp, [sp, #6]
 800d5be:	f8b8 2000 	ldrh.w	r2, [r8]
 800d5c2:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 800d5c6:	440a      	add	r2, r1
 800d5c8:	f8a8 2000 	strh.w	r2, [r8]
 800d5cc:	882b      	ldrh	r3, [r5, #0]
 800d5ce:	1a5b      	subs	r3, r3, r1
 800d5d0:	802b      	strh	r3, [r5, #0]
 800d5d2:	e7ad      	b.n	800d530 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d5d4:	f1ba 0f00 	cmp.w	sl, #0
 800d5d8:	d0f1      	beq.n	800d5be <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd6>
 800d5da:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800d5de:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800d5e2:	429a      	cmp	r2, r3
 800d5e4:	bf08      	it	eq
 800d5e6:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 800d5e8:	e7e9      	b.n	800d5be <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd6>
 800d5ea:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800d5ee:	429a      	cmp	r2, r3
 800d5f0:	bf04      	itt	eq
 800d5f2:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 800d5f6:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 800d5f8:	b009      	add	sp, #36	; 0x24
 800d5fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d5fe:	bf00      	nop
 800d600:	2000e3d8 	.word	0x2000e3d8

0800d604 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800d604:	2200      	movs	r2, #0
 800d606:	8082      	strh	r2, [r0, #4]
 800d608:	80c2      	strh	r2, [r0, #6]
 800d60a:	8102      	strh	r2, [r0, #8]
 800d60c:	8142      	strh	r2, [r0, #10]
 800d60e:	8182      	strh	r2, [r0, #12]
 800d610:	81c2      	strh	r2, [r0, #14]
 800d612:	8202      	strh	r2, [r0, #16]
 800d614:	8242      	strh	r2, [r0, #18]
 800d616:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d61a:	61c2      	str	r2, [r0, #28]
 800d61c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800d620:	2101      	movs	r1, #1
 800d622:	6282      	str	r2, [r0, #40]	; 0x28
 800d624:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d628:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d62c:	8582      	strh	r2, [r0, #44]	; 0x2c
 800d62e:	4903      	ldr	r1, [pc, #12]	; (800d63c <_ZN8touchgfx12CanvasWidgetC1Ev+0x38>)
 800d630:	6001      	str	r1, [r0, #0]
 800d632:	22ff      	movs	r2, #255	; 0xff
 800d634:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800d638:	4770      	bx	lr
 800d63a:	bf00      	nop
 800d63c:	080256b8 	.word	0x080256b8

0800d640 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 800d640:	f101 0368 	add.w	r3, r1, #104	; 0x68
 800d644:	4602      	mov	r2, r0
 800d646:	cb03      	ldmia	r3!, {r0, r1}
 800d648:	6010      	str	r0, [r2, #0]
 800d64a:	6051      	str	r1, [r2, #4]
 800d64c:	4610      	mov	r0, r2
 800d64e:	4770      	bx	lr

0800d650 <_ZN8touchgfx4LineD1Ev>:
 800d650:	4770      	bx	lr

0800d652 <_ZN8touchgfx4LineD0Ev>:
 800d652:	b510      	push	{r4, lr}
 800d654:	2174      	movs	r1, #116	; 0x74
 800d656:	4604      	mov	r4, r0
 800d658:	f013 ff3b 	bl	80214d2 <_ZdlPvj>
 800d65c:	4620      	mov	r0, r4
 800d65e:	bd10      	pop	{r4, pc}

0800d660 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800d660:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d664:	f9b1 5004 	ldrsh.w	r5, [r1, #4]
 800d668:	2d00      	cmp	r5, #0
 800d66a:	dd34      	ble.n	800d6d6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x76>
 800d66c:	f9b1 c006 	ldrsh.w	ip, [r1, #6]
 800d670:	f1bc 0f00 	cmp.w	ip, #0
 800d674:	dd2f      	ble.n	800d6d6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x76>
 800d676:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d67a:	f9b1 e000 	ldrsh.w	lr, [r1]
 800d67e:	2c00      	cmp	r4, #0
 800d680:	dd2b      	ble.n	800d6da <_ZN8touchgfx4Rect11expandToFitERKS0_+0x7a>
 800d682:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 800d686:	2f00      	cmp	r7, #0
 800d688:	dd27      	ble.n	800d6da <_ZN8touchgfx4Rect11expandToFitERKS0_+0x7a>
 800d68a:	f9b0 8000 	ldrsh.w	r8, [r0]
 800d68e:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800d692:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800d696:	45f0      	cmp	r8, lr
 800d698:	4646      	mov	r6, r8
 800d69a:	4475      	add	r5, lr
 800d69c:	bfa8      	it	ge
 800d69e:	4676      	movge	r6, lr
 800d6a0:	4444      	add	r4, r8
 800d6a2:	4293      	cmp	r3, r2
 800d6a4:	4619      	mov	r1, r3
 800d6a6:	b22d      	sxth	r5, r5
 800d6a8:	bfa8      	it	ge
 800d6aa:	4611      	movge	r1, r2
 800d6ac:	b224      	sxth	r4, r4
 800d6ae:	4462      	add	r2, ip
 800d6b0:	443b      	add	r3, r7
 800d6b2:	42a5      	cmp	r5, r4
 800d6b4:	bfac      	ite	ge
 800d6b6:	ebc6 0405 	rsbge	r4, r6, r5
 800d6ba:	ebc6 0404 	rsblt	r4, r6, r4
 800d6be:	b212      	sxth	r2, r2
 800d6c0:	b21b      	sxth	r3, r3
 800d6c2:	8006      	strh	r6, [r0, #0]
 800d6c4:	8041      	strh	r1, [r0, #2]
 800d6c6:	8084      	strh	r4, [r0, #4]
 800d6c8:	429a      	cmp	r2, r3
 800d6ca:	bfac      	ite	ge
 800d6cc:	ebc1 0302 	rsbge	r3, r1, r2
 800d6d0:	ebc1 0303 	rsblt	r3, r1, r3
 800d6d4:	80c3      	strh	r3, [r0, #6]
 800d6d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d6da:	f8a0 e000 	strh.w	lr, [r0]
 800d6de:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800d6e2:	8043      	strh	r3, [r0, #2]
 800d6e4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800d6e8:	8083      	strh	r3, [r0, #4]
 800d6ea:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800d6ee:	e7f1      	b.n	800d6d4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x74>

0800d6f0 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 800d6f0:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 800d6f4:	bf2c      	ite	cs
 800d6f6:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 800d6fa:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 800d6fe:	2300      	movs	r3, #0
 800d700:	1899      	adds	r1, r3, r2
 800d702:	4288      	cmp	r0, r1
 800d704:	bf24      	itt	cs
 800d706:	1853      	addcs	r3, r2, r1
 800d708:	1a40      	subcs	r0, r0, r1
 800d70a:	0892      	lsrs	r2, r2, #2
 800d70c:	ea4f 0353 	mov.w	r3, r3, lsr #1
 800d710:	d1f6      	bne.n	800d700 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 800d712:	4618      	mov	r0, r3
 800d714:	4770      	bx	lr
	...

0800d718 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 800d718:	2800      	cmp	r0, #0
 800d71a:	b508      	push	{r3, lr}
 800d71c:	da05      	bge.n	800d72a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 800d71e:	4240      	negs	r0, r0
 800d720:	f7ff fffa 	bl	800d718 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800d724:	4240      	negs	r0, r0
 800d726:	b240      	sxtb	r0, r0
 800d728:	bd08      	pop	{r3, pc}
 800d72a:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 800d72e:	dc11      	bgt.n	800d754 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 800d730:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 800d734:	dd09      	ble.n	800d74a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 800d736:	4340      	muls	r0, r0
 800d738:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 800d73c:	f7ff ffd8 	bl	800d6f0 <_ZN8touchgfx7CWRUtil5isqrtEm>
 800d740:	f7ff ffea 	bl	800d718 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800d744:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800d748:	e7ed      	b.n	800d726 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 800d74a:	3003      	adds	r0, #3
 800d74c:	10c0      	asrs	r0, r0, #3
 800d74e:	4b02      	ldr	r3, [pc, #8]	; (800d758 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 800d750:	5618      	ldrsb	r0, [r3, r0]
 800d752:	e7e9      	b.n	800d728 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 800d754:	2000      	movs	r0, #0
 800d756:	e7e7      	b.n	800d728 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 800d758:	0802577a 	.word	0x0802577a

0800d75c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 800d75c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d75e:	460c      	mov	r4, r1
 800d760:	1e01      	subs	r1, r0, #0
 800d762:	4615      	mov	r5, r2
 800d764:	db01      	blt.n	800d76a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0xe>
 800d766:	2c00      	cmp	r4, #0
 800d768:	da06      	bge.n	800d778 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1c>
 800d76a:	4b11      	ldr	r3, [pc, #68]	; (800d7b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x54>)
 800d76c:	4a11      	ldr	r2, [pc, #68]	; (800d7b4 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x58>)
 800d76e:	4812      	ldr	r0, [pc, #72]	; (800d7b8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x5c>)
 800d770:	f240 3112 	movw	r1, #786	; 0x312
 800d774:	f014 fccc 	bl	8022110 <__assert_func>
 800d778:	428c      	cmp	r4, r1
 800d77a:	dd06      	ble.n	800d78a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x2e>
 800d77c:	4620      	mov	r0, r4
 800d77e:	f7ff ffed 	bl	800d75c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800d782:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800d786:	b003      	add	sp, #12
 800d788:	bd30      	pop	{r4, r5, pc}
 800d78a:	4349      	muls	r1, r1
 800d78c:	fb04 1004 	mla	r0, r4, r4, r1
 800d790:	f7ff ffae 	bl	800d6f0 <_ZN8touchgfx7CWRUtil5isqrtEm>
 800d794:	6028      	str	r0, [r5, #0]
 800d796:	2800      	cmp	r0, #0
 800d798:	d0f5      	beq.n	800d786 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x2a>
 800d79a:	4602      	mov	r2, r0
 800d79c:	ab01      	add	r3, sp, #4
 800d79e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800d7a2:	4620      	mov	r0, r4
 800d7a4:	f003 fde2 	bl	801136c <_ZN8touchgfx6muldivElllRl>
 800d7a8:	f7ff ffb6 	bl	800d718 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 800d7ac:	e7eb      	b.n	800d786 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x2a>
 800d7ae:	bf00      	nop
 800d7b0:	080257d5 	.word	0x080257d5
 800d7b4:	08025898 	.word	0x08025898
 800d7b8:	080257e6 	.word	0x080257e6

0800d7bc <_ZN8touchgfx4LineC1Ev>:
 800d7bc:	b510      	push	{r4, lr}
 800d7be:	4604      	mov	r4, r0
 800d7c0:	f7ff ff20 	bl	800d604 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800d7c4:	4b0c      	ldr	r3, [pc, #48]	; (800d7f8 <_ZN8touchgfx4LineC1Ev+0x3c>)
 800d7c6:	6023      	str	r3, [r4, #0]
 800d7c8:	2220      	movs	r2, #32
 800d7ca:	2300      	movs	r3, #0
 800d7cc:	6422      	str	r2, [r4, #64]	; 0x40
 800d7ce:	2212      	movs	r2, #18
 800d7d0:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 800d7d4:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 800d7d8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d7dc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800d7e0:	e9c4 3314 	strd	r3, r3, [r4, #80]	; 0x50
 800d7e4:	e9c4 3316 	strd	r3, r3, [r4, #88]	; 0x58
 800d7e8:	e9c4 3318 	strd	r3, r3, [r4, #96]	; 0x60
 800d7ec:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68
 800d7f0:	6722      	str	r2, [r4, #112]	; 0x70
 800d7f2:	60a3      	str	r3, [r4, #8]
 800d7f4:	4620      	mov	r0, r4
 800d7f6:	bd10      	pop	{r4, pc}
 800d7f8:	08025824 	.word	0x08025824

0800d7fc <_ZN8touchgfx4Line17updateCachedShapeEv>:
 800d7fc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d800:	6b86      	ldr	r6, [r0, #56]	; 0x38
 800d802:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800d804:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800d806:	6b42      	ldr	r2, [r0, #52]	; 0x34
 800d808:	1af6      	subs	r6, r6, r3
 800d80a:	4604      	mov	r4, r0
 800d80c:	eba5 0502 	sub.w	r5, r5, r2
 800d810:	f040 808c 	bne.w	800d92c <_ZN8touchgfx4Line17updateCachedShapeEv+0x130>
 800d814:	b955      	cbnz	r5, 800d82c <_ZN8touchgfx4Line17updateCachedShapeEv+0x30>
 800d816:	e9c0 3314 	strd	r3, r3, [r0, #80]	; 0x50
 800d81a:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 800d81e:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 800d822:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 800d826:	b003      	add	sp, #12
 800d828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d82c:	ea85 77e5 	eor.w	r7, r5, r5, asr #31
 800d830:	eba7 77e5 	sub.w	r7, r7, r5, asr #31
 800d834:	463a      	mov	r2, r7
 800d836:	4629      	mov	r1, r5
 800d838:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800d83a:	f003 fdb6 	bl	80113aa <_ZN8touchgfx6muldivElll>
 800d83e:	f04f 0802 	mov.w	r8, #2
 800d842:	4631      	mov	r1, r6
 800d844:	fb90 f5f8 	sdiv	r5, r0, r8
 800d848:	463a      	mov	r2, r7
 800d84a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800d84c:	f003 fdad 	bl	80113aa <_ZN8touchgfx6muldivElll>
 800d850:	f894 a044 	ldrb.w	sl, [r4, #68]	; 0x44
 800d854:	fb90 f0f8 	sdiv	r0, r0, r8
 800d858:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
 800d85c:	6ba7      	ldr	r7, [r4, #56]	; 0x38
 800d85e:	6be6      	ldr	r6, [r4, #60]	; 0x3c
 800d860:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800d862:	eba8 0305 	sub.w	r3, r8, r5
 800d866:	f1ba 0f00 	cmp.w	sl, #0
 800d86a:	f040 80b8 	bne.w	800d9de <_ZN8touchgfx4Line17updateCachedShapeEv+0x1e2>
 800d86e:	64a3      	str	r3, [r4, #72]	; 0x48
 800d870:	1843      	adds	r3, r0, r1
 800d872:	65a3      	str	r3, [r4, #88]	; 0x58
 800d874:	1b7b      	subs	r3, r7, r5
 800d876:	64e3      	str	r3, [r4, #76]	; 0x4c
 800d878:	1983      	adds	r3, r0, r6
 800d87a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800d87c:	19eb      	adds	r3, r5, r7
 800d87e:	6523      	str	r3, [r4, #80]	; 0x50
 800d880:	1a33      	subs	r3, r6, r0
 800d882:	6623      	str	r3, [r4, #96]	; 0x60
 800d884:	eb05 0308 	add.w	r3, r5, r8
 800d888:	6563      	str	r3, [r4, #84]	; 0x54
 800d88a:	1a0b      	subs	r3, r1, r0
 800d88c:	f8d4 e048 	ldr.w	lr, [r4, #72]	; 0x48
 800d890:	6663      	str	r3, [r4, #100]	; 0x64
 800d892:	f8d4 c058 	ldr.w	ip, [r4, #88]	; 0x58
 800d896:	f8cd c000 	str.w	ip, [sp]
 800d89a:	f104 0358 	add.w	r3, r4, #88	; 0x58
 800d89e:	f104 094c 	add.w	r9, r4, #76	; 0x4c
 800d8a2:	9301      	str	r3, [sp, #4]
 800d8a4:	4672      	mov	r2, lr
 800d8a6:	f859 bb04 	ldr.w	fp, [r9], #4
 800d8aa:	9b00      	ldr	r3, [sp, #0]
 800d8ac:	45de      	cmp	lr, fp
 800d8ae:	bfa8      	it	ge
 800d8b0:	46de      	movge	lr, fp
 800d8b2:	455a      	cmp	r2, fp
 800d8b4:	bfb8      	it	lt
 800d8b6:	465a      	movlt	r2, fp
 800d8b8:	f8d9 b00c 	ldr.w	fp, [r9, #12]
 800d8bc:	45dc      	cmp	ip, fp
 800d8be:	bfa8      	it	ge
 800d8c0:	46dc      	movge	ip, fp
 800d8c2:	455b      	cmp	r3, fp
 800d8c4:	bfb8      	it	lt
 800d8c6:	465b      	movlt	r3, fp
 800d8c8:	9300      	str	r3, [sp, #0]
 800d8ca:	9b01      	ldr	r3, [sp, #4]
 800d8cc:	454b      	cmp	r3, r9
 800d8ce:	d1ea      	bne.n	800d8a6 <_ZN8touchgfx4Line17updateCachedShapeEv+0xaa>
 800d8d0:	f04f 0920 	mov.w	r9, #32
 800d8d4:	9b00      	ldr	r3, [sp, #0]
 800d8d6:	fb92 f2f9 	sdiv	r2, r2, r9
 800d8da:	fb93 f3f9 	sdiv	r3, r3, r9
 800d8de:	3201      	adds	r2, #1
 800d8e0:	3301      	adds	r3, #1
 800d8e2:	fb9e fef9 	sdiv	lr, lr, r9
 800d8e6:	fb9c fcf9 	sdiv	ip, ip, r9
 800d8ea:	f8a4 e068 	strh.w	lr, [r4, #104]	; 0x68
 800d8ee:	f8a4 c06a 	strh.w	ip, [r4, #106]	; 0x6a
 800d8f2:	eba2 0e0e 	sub.w	lr, r2, lr
 800d8f6:	eba3 0c0c 	sub.w	ip, r3, ip
 800d8fa:	f1ba 0f01 	cmp.w	sl, #1
 800d8fe:	f8a4 e06c 	strh.w	lr, [r4, #108]	; 0x6c
 800d902:	f8a4 c06e 	strh.w	ip, [r4, #110]	; 0x6e
 800d906:	d18e      	bne.n	800d826 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2a>
 800d908:	eba8 0305 	sub.w	r3, r8, r5
 800d90c:	64a3      	str	r3, [r4, #72]	; 0x48
 800d90e:	1843      	adds	r3, r0, r1
 800d910:	65a3      	str	r3, [r4, #88]	; 0x58
 800d912:	1b7b      	subs	r3, r7, r5
 800d914:	64e3      	str	r3, [r4, #76]	; 0x4c
 800d916:	442f      	add	r7, r5
 800d918:	1983      	adds	r3, r0, r6
 800d91a:	4445      	add	r5, r8
 800d91c:	1a36      	subs	r6, r6, r0
 800d91e:	1a08      	subs	r0, r1, r0
 800d920:	65e3      	str	r3, [r4, #92]	; 0x5c
 800d922:	6527      	str	r7, [r4, #80]	; 0x50
 800d924:	6626      	str	r6, [r4, #96]	; 0x60
 800d926:	6565      	str	r5, [r4, #84]	; 0x54
 800d928:	6660      	str	r0, [r4, #100]	; 0x64
 800d92a:	e77c      	b.n	800d826 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2a>
 800d92c:	ea86 77e6 	eor.w	r7, r6, r6, asr #31
 800d930:	eba7 77e6 	sub.w	r7, r7, r6, asr #31
 800d934:	2d00      	cmp	r5, #0
 800d936:	f43f af7d 	beq.w	800d834 <_ZN8touchgfx4Line17updateCachedShapeEv+0x38>
 800d93a:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 800d93e:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 800d942:	fb93 f2f7 	sdiv	r2, r3, r7
 800d946:	fb07 3312 	mls	r3, r7, r2, r3
 800d94a:	b34b      	cbz	r3, 800d9a0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1a4>
 800d94c:	fb97 f2f3 	sdiv	r2, r7, r3
 800d950:	fb03 7712 	mls	r7, r3, r2, r7
 800d954:	2f00      	cmp	r7, #0
 800d956:	d1f4      	bne.n	800d942 <_ZN8touchgfx4Line17updateCachedShapeEv+0x146>
 800d958:	2b01      	cmp	r3, #1
 800d95a:	bf18      	it	ne
 800d95c:	fb96 f6f3 	sdivne	r6, r6, r3
 800d960:	ea86 71e6 	eor.w	r1, r6, r6, asr #31
 800d964:	eba1 71e6 	sub.w	r1, r1, r6, asr #31
 800d968:	f24b 5204 	movw	r2, #46340	; 0xb504
 800d96c:	bf18      	it	ne
 800d96e:	fb95 f5f3 	sdivne	r5, r5, r3
 800d972:	4291      	cmp	r1, r2
 800d974:	dd16      	ble.n	800d9a4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1a8>
 800d976:	2d00      	cmp	r5, #0
 800d978:	da49      	bge.n	800da0e <_ZN8touchgfx4Line17updateCachedShapeEv+0x212>
 800d97a:	4b27      	ldr	r3, [pc, #156]	; (800da18 <_ZN8touchgfx4Line17updateCachedShapeEv+0x21c>)
 800d97c:	429d      	cmp	r5, r3
 800d97e:	da27      	bge.n	800d9d0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1d4>
 800d980:	426a      	negs	r2, r5
 800d982:	f24b 5304 	movw	r3, #46340	; 0xb504
 800d986:	fb91 f1f3 	sdiv	r1, r1, r3
 800d98a:	fb92 f3f3 	sdiv	r3, r2, r3
 800d98e:	4299      	cmp	r1, r3
 800d990:	bfcc      	ite	gt
 800d992:	1c4b      	addgt	r3, r1, #1
 800d994:	3301      	addle	r3, #1
 800d996:	fb96 f6f3 	sdiv	r6, r6, r3
 800d99a:	fb95 f5f3 	sdiv	r5, r5, r3
 800d99e:	e00f      	b.n	800d9c0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1c4>
 800d9a0:	463b      	mov	r3, r7
 800d9a2:	e7d9      	b.n	800d958 <_ZN8touchgfx4Line17updateCachedShapeEv+0x15c>
 800d9a4:	2d00      	cmp	r5, #0
 800d9a6:	fb92 f2f1 	sdiv	r2, r2, r1
 800d9aa:	da13      	bge.n	800d9d4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1d8>
 800d9ac:	4269      	negs	r1, r5
 800d9ae:	f24b 5304 	movw	r3, #46340	; 0xb504
 800d9b2:	fb93 f3f1 	sdiv	r3, r3, r1
 800d9b6:	429a      	cmp	r2, r3
 800d9b8:	bfa8      	it	ge
 800d9ba:	461a      	movge	r2, r3
 800d9bc:	4356      	muls	r6, r2
 800d9be:	4355      	muls	r5, r2
 800d9c0:	fb05 f005 	mul.w	r0, r5, r5
 800d9c4:	fb06 0006 	mla	r0, r6, r6, r0
 800d9c8:	f7ff fe92 	bl	800d6f0 <_ZN8touchgfx7CWRUtil5isqrtEm>
 800d9cc:	4607      	mov	r7, r0
 800d9ce:	e731      	b.n	800d834 <_ZN8touchgfx4Line17updateCachedShapeEv+0x38>
 800d9d0:	2200      	movs	r2, #0
 800d9d2:	e7eb      	b.n	800d9ac <_ZN8touchgfx4Line17updateCachedShapeEv+0x1b0>
 800d9d4:	4629      	mov	r1, r5
 800d9d6:	e7ea      	b.n	800d9ae <_ZN8touchgfx4Line17updateCachedShapeEv+0x1b2>
 800d9d8:	4629      	mov	r1, r5
 800d9da:	2200      	movs	r2, #0
 800d9dc:	e7e7      	b.n	800d9ae <_ZN8touchgfx4Line17updateCachedShapeEv+0x1b2>
 800d9de:	1a1b      	subs	r3, r3, r0
 800d9e0:	64a3      	str	r3, [r4, #72]	; 0x48
 800d9e2:	1843      	adds	r3, r0, r1
 800d9e4:	1b5b      	subs	r3, r3, r5
 800d9e6:	65a3      	str	r3, [r4, #88]	; 0x58
 800d9e8:	1b7b      	subs	r3, r7, r5
 800d9ea:	4403      	add	r3, r0
 800d9ec:	64e3      	str	r3, [r4, #76]	; 0x4c
 800d9ee:	1983      	adds	r3, r0, r6
 800d9f0:	442b      	add	r3, r5
 800d9f2:	65e3      	str	r3, [r4, #92]	; 0x5c
 800d9f4:	19eb      	adds	r3, r5, r7
 800d9f6:	4403      	add	r3, r0
 800d9f8:	6523      	str	r3, [r4, #80]	; 0x50
 800d9fa:	1a33      	subs	r3, r6, r0
 800d9fc:	442b      	add	r3, r5
 800d9fe:	6623      	str	r3, [r4, #96]	; 0x60
 800da00:	eb05 0308 	add.w	r3, r5, r8
 800da04:	1a1b      	subs	r3, r3, r0
 800da06:	6563      	str	r3, [r4, #84]	; 0x54
 800da08:	1a0b      	subs	r3, r1, r0
 800da0a:	1b5b      	subs	r3, r3, r5
 800da0c:	e73e      	b.n	800d88c <_ZN8touchgfx4Line17updateCachedShapeEv+0x90>
 800da0e:	4295      	cmp	r5, r2
 800da10:	dde2      	ble.n	800d9d8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x1dc>
 800da12:	462a      	mov	r2, r5
 800da14:	e7b5      	b.n	800d982 <_ZN8touchgfx4Line17updateCachedShapeEv+0x186>
 800da16:	bf00      	nop
 800da18:	ffff4afc 	.word	0xffff4afc

0800da1c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 800da1c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800da1e:	428b      	cmp	r3, r1
 800da20:	d102      	bne.n	800da28 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 800da22:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800da24:	4293      	cmp	r3, r2
 800da26:	d003      	beq.n	800da30 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 800da28:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
 800da2c:	f7ff bee6 	b.w	800d7fc <_ZN8touchgfx4Line17updateCachedShapeEv>
 800da30:	4770      	bx	lr

0800da32 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 800da32:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800da34:	428b      	cmp	r3, r1
 800da36:	d102      	bne.n	800da3e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 800da38:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800da3a:	4293      	cmp	r3, r2
 800da3c:	d003      	beq.n	800da46 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 800da3e:	e9c0 120e 	strd	r1, r2, [r0, #56]	; 0x38
 800da42:	f7ff bedb 	b.w	800d7fc <_ZN8touchgfx4Line17updateCachedShapeEv>
 800da46:	4770      	bx	lr

0800da48 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 800da48:	f880 1044 	strb.w	r1, [r0, #68]	; 0x44
 800da4c:	f7ff bed6 	b.w	800d7fc <_ZN8touchgfx4Line17updateCachedShapeEv>

0800da50 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 800da50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800da54:	b0b3      	sub	sp, #204	; 0xcc
 800da56:	4604      	mov	r4, r0
 800da58:	460a      	mov	r2, r1
 800da5a:	ad32      	add	r5, sp, #200	; 0xc8
 800da5c:	4601      	mov	r1, r0
 800da5e:	a803      	add	r0, sp, #12
 800da60:	f011 fa92 	bl	801ef88 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800da64:	2300      	movs	r3, #0
 800da66:	f845 3dc8 	str.w	r3, [r5, #-200]!
 800da6a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800da6c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800da6e:	6da1      	ldr	r1, [r4, #88]	; 0x58
 800da70:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800da72:	1ac0      	subs	r0, r0, r3
 800da74:	eba1 0102 	sub.w	r1, r1, r2
 800da78:	d43c      	bmi.n	800daf4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xa4>
 800da7a:	2900      	cmp	r1, #0
 800da7c:	462a      	mov	r2, r5
 800da7e:	db33      	blt.n	800dae8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x98>
 800da80:	f7ff fe6c 	bl	800d75c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800da84:	f100 075a 	add.w	r7, r0, #90	; 0x5a
 800da88:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800da8a:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800da8c:	a803      	add	r0, sp, #12
 800da8e:	f011 fc44 	bl	801f31a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800da92:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800da94:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800da96:	a803      	add	r0, sp, #12
 800da98:	f011 fbce 	bl	801f238 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800da9c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800daa0:	2b01      	cmp	r3, #1
 800daa2:	d137      	bne.n	800db14 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xc4>
 800daa4:	6f26      	ldr	r6, [r4, #112]	; 0x70
 800daa6:	2eb3      	cmp	r6, #179	; 0xb3
 800daa8:	dc34      	bgt.n	800db14 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xc4>
 800daaa:	eba7 0906 	sub.w	r9, r7, r6
 800daae:	4648      	mov	r0, r9
 800dab0:	f7ff f8b4 	bl	800cc1c <_ZN8touchgfx7CWRUtil4sineEi>
 800dab4:	a901      	add	r1, sp, #4
 800dab6:	9001      	str	r0, [sp, #4]
 800dab8:	4628      	mov	r0, r5
 800daba:	f7ff f8a3 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dabe:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800dac0:	eb00 0801 	add.w	r8, r0, r1
 800dac4:	f1c9 005a 	rsb	r0, r9, #90	; 0x5a
 800dac8:	f7ff f8a8 	bl	800cc1c <_ZN8touchgfx7CWRUtil4sineEi>
 800dacc:	a902      	add	r1, sp, #8
 800dace:	9002      	str	r0, [sp, #8]
 800dad0:	4628      	mov	r0, r5
 800dad2:	f7ff f897 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800dad6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800dad8:	4641      	mov	r1, r8
 800dada:	1a12      	subs	r2, r2, r0
 800dadc:	a803      	add	r0, sp, #12
 800dade:	f011 fbab 	bl	801f238 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800dae2:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800dae4:	441e      	add	r6, r3
 800dae6:	e7de      	b.n	800daa6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x56>
 800dae8:	4249      	negs	r1, r1
 800daea:	f7ff fe37 	bl	800d75c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800daee:	f1c0 075a 	rsb	r7, r0, #90	; 0x5a
 800daf2:	e7c9      	b.n	800da88 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x38>
 800daf4:	2900      	cmp	r1, #0
 800daf6:	f1c0 0000 	rsb	r0, r0, #0
 800dafa:	462a      	mov	r2, r5
 800dafc:	db04      	blt.n	800db08 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb8>
 800dafe:	f7ff fe2d 	bl	800d75c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800db02:	f5c0 7787 	rsb	r7, r0, #270	; 0x10e
 800db06:	e7bf      	b.n	800da88 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x38>
 800db08:	4249      	negs	r1, r1
 800db0a:	f7ff fe27 	bl	800d75c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 800db0e:	f500 7787 	add.w	r7, r0, #270	; 0x10e
 800db12:	e7b9      	b.n	800da88 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x38>
 800db14:	6e22      	ldr	r2, [r4, #96]	; 0x60
 800db16:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800db18:	a803      	add	r0, sp, #12
 800db1a:	f011 fb8d 	bl	801f238 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800db1e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800db20:	6d61      	ldr	r1, [r4, #84]	; 0x54
 800db22:	a803      	add	r0, sp, #12
 800db24:	f011 fb88 	bl	801f238 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800db28:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800db2c:	2b01      	cmp	r3, #1
 800db2e:	d123      	bne.n	800db78 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x128>
 800db30:	6f26      	ldr	r6, [r4, #112]	; 0x70
 800db32:	f1c6 06b4 	rsb	r6, r6, #180	; 0xb4
 800db36:	2e00      	cmp	r6, #0
 800db38:	dd1e      	ble.n	800db78 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x128>
 800db3a:	eb06 0907 	add.w	r9, r6, r7
 800db3e:	4648      	mov	r0, r9
 800db40:	f7ff f86c 	bl	800cc1c <_ZN8touchgfx7CWRUtil4sineEi>
 800db44:	a901      	add	r1, sp, #4
 800db46:	9001      	str	r0, [sp, #4]
 800db48:	4628      	mov	r0, r5
 800db4a:	f7ff f85b 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800db4e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800db50:	eb00 0801 	add.w	r8, r0, r1
 800db54:	f1c9 005a 	rsb	r0, r9, #90	; 0x5a
 800db58:	f7ff f860 	bl	800cc1c <_ZN8touchgfx7CWRUtil4sineEi>
 800db5c:	a902      	add	r1, sp, #8
 800db5e:	9002      	str	r0, [sp, #8]
 800db60:	4628      	mov	r0, r5
 800db62:	f7ff f84f 	bl	800cc04 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800db66:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800db68:	4641      	mov	r1, r8
 800db6a:	1a12      	subs	r2, r2, r0
 800db6c:	a803      	add	r0, sp, #12
 800db6e:	f011 fb63 	bl	801f238 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800db72:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800db74:	1af6      	subs	r6, r6, r3
 800db76:	e7de      	b.n	800db36 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xe6>
 800db78:	21ff      	movs	r1, #255	; 0xff
 800db7a:	a803      	add	r0, sp, #12
 800db7c:	f011 fcd1 	bl	801f522 <_ZN8touchgfx6Canvas6renderEh>
 800db80:	4604      	mov	r4, r0
 800db82:	a803      	add	r0, sp, #12
 800db84:	f011 fd0c 	bl	801f5a0 <_ZN8touchgfx6CanvasD1Ev>
 800db88:	4620      	mov	r0, r4
 800db8a:	b033      	add	sp, #204	; 0xcc
 800db8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800db90 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800db90:	2200      	movs	r2, #0
 800db92:	8002      	strh	r2, [r0, #0]
 800db94:	8042      	strh	r2, [r0, #2]
 800db96:	8082      	strh	r2, [r0, #4]
 800db98:	80c2      	strh	r2, [r0, #6]
 800db9a:	4770      	bx	lr

0800db9c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800db9c:	b570      	push	{r4, r5, r6, lr}
 800db9e:	6803      	ldr	r3, [r0, #0]
 800dba0:	4604      	mov	r4, r0
 800dba2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dba4:	4615      	mov	r5, r2
 800dba6:	4798      	blx	r3
 800dba8:	6823      	ldr	r3, [r4, #0]
 800dbaa:	4629      	mov	r1, r5
 800dbac:	4620      	mov	r0, r4
 800dbae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800dbb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbb4:	4718      	bx	r3

0800dbb6 <_ZN8touchgfx8TextAreaD1Ev>:
 800dbb6:	4770      	bx	lr

0800dbb8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800dbb8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dbba:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dbbc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800dbc0:	4299      	cmp	r1, r3
 800dbc2:	d029      	beq.n	800dc18 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800dbc4:	4b15      	ldr	r3, [pc, #84]	; (800dc1c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800dbc6:	681b      	ldr	r3, [r3, #0]
 800dbc8:	b92b      	cbnz	r3, 800dbd6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800dbca:	4b15      	ldr	r3, [pc, #84]	; (800dc20 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800dbcc:	4a15      	ldr	r2, [pc, #84]	; (800dc24 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800dbce:	21b1      	movs	r1, #177	; 0xb1
 800dbd0:	4815      	ldr	r0, [pc, #84]	; (800dc28 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800dbd2:	f014 fa9d 	bl	8022110 <__assert_func>
 800dbd6:	4a15      	ldr	r2, [pc, #84]	; (800dc2c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800dbd8:	8812      	ldrh	r2, [r2, #0]
 800dbda:	428a      	cmp	r2, r1
 800dbdc:	d803      	bhi.n	800dbe6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800dbde:	4b14      	ldr	r3, [pc, #80]	; (800dc30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800dbe0:	4a10      	ldr	r2, [pc, #64]	; (800dc24 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800dbe2:	21b2      	movs	r1, #178	; 0xb2
 800dbe4:	e7f4      	b.n	800dbd0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800dbe6:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800dbea:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800dbee:	4b11      	ldr	r3, [pc, #68]	; (800dc34 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800dbf0:	7854      	ldrb	r4, [r2, #1]
 800dbf2:	681b      	ldr	r3, [r3, #0]
 800dbf4:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800dbf8:	682b      	ldr	r3, [r5, #0]
 800dbfa:	69de      	ldr	r6, [r3, #28]
 800dbfc:	4b0e      	ldr	r3, [pc, #56]	; (800dc38 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800dbfe:	6818      	ldr	r0, [r3, #0]
 800dc00:	f7f6 fbcc 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 800dc04:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800dc08:	2300      	movs	r3, #0
 800dc0a:	4602      	mov	r2, r0
 800dc0c:	9300      	str	r3, [sp, #0]
 800dc0e:	4621      	mov	r1, r4
 800dc10:	4628      	mov	r0, r5
 800dc12:	47b0      	blx	r6
 800dc14:	b002      	add	sp, #8
 800dc16:	bd70      	pop	{r4, r5, r6, pc}
 800dc18:	2000      	movs	r0, #0
 800dc1a:	e7fb      	b.n	800dc14 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800dc1c:	2000e450 	.word	0x2000e450
 800dc20:	08023fab 	.word	0x08023fab
 800dc24:	0802597c 	.word	0x0802597c
 800dc28:	08024039 	.word	0x08024039
 800dc2c:	2000e454 	.word	0x2000e454
 800dc30:	08024062 	.word	0x08024062
 800dc34:	2000e458 	.word	0x2000e458
 800dc38:	2000e45c 	.word	0x2000e45c

0800dc3c <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800dc3c:	b570      	push	{r4, r5, r6, lr}
 800dc3e:	6803      	ldr	r3, [r0, #0]
 800dc40:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800dc42:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800dc44:	4b11      	ldr	r3, [pc, #68]	; (800dc8c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800dc46:	681b      	ldr	r3, [r3, #0]
 800dc48:	4604      	mov	r4, r0
 800dc4a:	b28d      	uxth	r5, r1
 800dc4c:	b92b      	cbnz	r3, 800dc5a <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800dc4e:	4b10      	ldr	r3, [pc, #64]	; (800dc90 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800dc50:	4a10      	ldr	r2, [pc, #64]	; (800dc94 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800dc52:	21b1      	movs	r1, #177	; 0xb1
 800dc54:	4810      	ldr	r0, [pc, #64]	; (800dc98 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800dc56:	f014 fa5b 	bl	8022110 <__assert_func>
 800dc5a:	4910      	ldr	r1, [pc, #64]	; (800dc9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800dc5c:	8809      	ldrh	r1, [r1, #0]
 800dc5e:	4291      	cmp	r1, r2
 800dc60:	d803      	bhi.n	800dc6a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800dc62:	4b0f      	ldr	r3, [pc, #60]	; (800dca0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800dc64:	4a0b      	ldr	r2, [pc, #44]	; (800dc94 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800dc66:	21b2      	movs	r1, #178	; 0xb2
 800dc68:	e7f4      	b.n	800dc54 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800dc6a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800dc6e:	4b0d      	ldr	r3, [pc, #52]	; (800dca4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800dc70:	681b      	ldr	r3, [r3, #0]
 800dc72:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800dc76:	6803      	ldr	r3, [r0, #0]
 800dc78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dc7a:	4798      	blx	r3
 800dc7c:	1a29      	subs	r1, r5, r0
 800dc7e:	4633      	mov	r3, r6
 800dc80:	4620      	mov	r0, r4
 800dc82:	b209      	sxth	r1, r1
 800dc84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dc88:	4718      	bx	r3
 800dc8a:	bf00      	nop
 800dc8c:	2000e450 	.word	0x2000e450
 800dc90:	08023fab 	.word	0x08023fab
 800dc94:	0802597c 	.word	0x0802597c
 800dc98:	08024039 	.word	0x08024039
 800dc9c:	2000e454 	.word	0x2000e454
 800dca0:	08024062 	.word	0x08024062
 800dca4:	2000e458 	.word	0x2000e458

0800dca8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800dca8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dcac:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800dcae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800dcb2:	4293      	cmp	r3, r2
 800dcb4:	b08c      	sub	sp, #48	; 0x30
 800dcb6:	4604      	mov	r4, r0
 800dcb8:	4688      	mov	r8, r1
 800dcba:	d05f      	beq.n	800dd7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800dcbc:	4e31      	ldr	r6, [pc, #196]	; (800dd84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800dcbe:	6832      	ldr	r2, [r6, #0]
 800dcc0:	b92a      	cbnz	r2, 800dcce <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800dcc2:	4b31      	ldr	r3, [pc, #196]	; (800dd88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800dcc4:	4a31      	ldr	r2, [pc, #196]	; (800dd8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800dcc6:	21b1      	movs	r1, #177	; 0xb1
 800dcc8:	4831      	ldr	r0, [pc, #196]	; (800dd90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800dcca:	f014 fa21 	bl	8022110 <__assert_func>
 800dcce:	4d31      	ldr	r5, [pc, #196]	; (800dd94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800dcd0:	8829      	ldrh	r1, [r5, #0]
 800dcd2:	4299      	cmp	r1, r3
 800dcd4:	d803      	bhi.n	800dcde <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800dcd6:	4b30      	ldr	r3, [pc, #192]	; (800dd98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800dcd8:	4a2c      	ldr	r2, [pc, #176]	; (800dd8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800dcda:	21b2      	movs	r1, #178	; 0xb2
 800dcdc:	e7f4      	b.n	800dcc8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800dcde:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800dce2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800dce6:	4b2d      	ldr	r3, [pc, #180]	; (800dd9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800dce8:	681b      	ldr	r3, [r3, #0]
 800dcea:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800dcee:	2a00      	cmp	r2, #0
 800dcf0:	d044      	beq.n	800dd7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800dcf2:	784b      	ldrb	r3, [r1, #1]
 800dcf4:	9207      	str	r2, [sp, #28]
 800dcf6:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800dcfa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800dcfe:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800dd02:	4b27      	ldr	r3, [pc, #156]	; (800dda0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800dd04:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800dd08:	681b      	ldr	r3, [r3, #0]
 800dd0a:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800dd0e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800dd12:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800dd16:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800dd1a:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800dd1e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800dd20:	9009      	str	r0, [sp, #36]	; 0x24
 800dd22:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800dd26:	f88d 9020 	strb.w	r9, [sp, #32]
 800dd2a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800dd2e:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800dd32:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800dd36:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800dd3a:	b10a      	cbz	r2, 800dd40 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800dd3c:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800dd3e:	b907      	cbnz	r7, 800dd42 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800dd40:	689f      	ldr	r7, [r3, #8]
 800dd42:	f10d 0914 	add.w	r9, sp, #20
 800dd46:	4621      	mov	r1, r4
 800dd48:	4648      	mov	r0, r9
 800dd4a:	f003 f9de 	bl	801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd4e:	6833      	ldr	r3, [r6, #0]
 800dd50:	2b00      	cmp	r3, #0
 800dd52:	d0b6      	beq.n	800dcc2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800dd54:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dd56:	882b      	ldrh	r3, [r5, #0]
 800dd58:	428b      	cmp	r3, r1
 800dd5a:	d9bc      	bls.n	800dcd6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800dd5c:	4b11      	ldr	r3, [pc, #68]	; (800dda4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800dd5e:	6818      	ldr	r0, [r3, #0]
 800dd60:	f7f6 fb1c 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 800dd64:	2300      	movs	r3, #0
 800dd66:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800dd6a:	ab07      	add	r3, sp, #28
 800dd6c:	9001      	str	r0, [sp, #4]
 800dd6e:	9300      	str	r3, [sp, #0]
 800dd70:	e899 0006 	ldmia.w	r9, {r1, r2}
 800dd74:	4643      	mov	r3, r8
 800dd76:	4638      	mov	r0, r7
 800dd78:	f7f6 fac2 	bl	8004300 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800dd7c:	b00c      	add	sp, #48	; 0x30
 800dd7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dd82:	bf00      	nop
 800dd84:	2000e450 	.word	0x2000e450
 800dd88:	08023fab 	.word	0x08023fab
 800dd8c:	0802597c 	.word	0x0802597c
 800dd90:	08024039 	.word	0x08024039
 800dd94:	2000e454 	.word	0x2000e454
 800dd98:	08024062 	.word	0x08024062
 800dd9c:	2000e458 	.word	0x2000e458
 800dda0:	2000e3e0 	.word	0x2000e3e0
 800dda4:	2000e45c 	.word	0x2000e45c

0800dda8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800dda8:	b40e      	push	{r1, r2, r3}
 800ddaa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ddae:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ddb0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ddb4:	4293      	cmp	r3, r2
 800ddb6:	b09b      	sub	sp, #108	; 0x6c
 800ddb8:	4604      	mov	r4, r0
 800ddba:	d061      	beq.n	800de80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800ddbc:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800de94 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800ddc0:	aa24      	add	r2, sp, #144	; 0x90
 800ddc2:	9203      	str	r2, [sp, #12]
 800ddc4:	f8da 2000 	ldr.w	r2, [sl]
 800ddc8:	b92a      	cbnz	r2, 800ddd6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800ddca:	4b2e      	ldr	r3, [pc, #184]	; (800de84 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800ddcc:	4a2e      	ldr	r2, [pc, #184]	; (800de88 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800ddce:	21b1      	movs	r1, #177	; 0xb1
 800ddd0:	482e      	ldr	r0, [pc, #184]	; (800de8c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800ddd2:	f014 f99d 	bl	8022110 <__assert_func>
 800ddd6:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800de98 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800ddda:	f8b8 1000 	ldrh.w	r1, [r8]
 800ddde:	4299      	cmp	r1, r3
 800dde0:	d803      	bhi.n	800ddea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800dde2:	4b2b      	ldr	r3, [pc, #172]	; (800de90 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800dde4:	4a28      	ldr	r2, [pc, #160]	; (800de88 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800dde6:	21b2      	movs	r1, #178	; 0xb2
 800dde8:	e7f2      	b.n	800ddd0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800ddea:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800de9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800ddee:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ddf2:	f8d9 3000 	ldr.w	r3, [r9]
 800ddf6:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800ddfa:	683b      	ldr	r3, [r7, #0]
 800ddfc:	4638      	mov	r0, r7
 800ddfe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800de00:	4798      	blx	r3
 800de02:	4606      	mov	r6, r0
 800de04:	b205      	sxth	r5, r0
 800de06:	a804      	add	r0, sp, #16
 800de08:	f003 fe96 	bl	8011b38 <_ZN8touchgfx12TextProviderC1Ev>
 800de0c:	683b      	ldr	r3, [r7, #0]
 800de0e:	4638      	mov	r0, r7
 800de10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800de12:	4798      	blx	r3
 800de14:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800de16:	9a03      	ldr	r2, [sp, #12]
 800de18:	4603      	mov	r3, r0
 800de1a:	a804      	add	r0, sp, #16
 800de1c:	f003 fed1 	bl	8011bc2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800de20:	f8da 3000 	ldr.w	r3, [sl]
 800de24:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800de28:	2b00      	cmp	r3, #0
 800de2a:	d0ce      	beq.n	800ddca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800de2c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800de2e:	f8b8 0000 	ldrh.w	r0, [r8]
 800de32:	4290      	cmp	r0, r2
 800de34:	d9d5      	bls.n	800dde2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800de36:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800de3a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800de3e:	787a      	ldrb	r2, [r7, #1]
 800de40:	f8d9 3000 	ldr.w	r3, [r9]
 800de44:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800de48:	9700      	str	r7, [sp, #0]
 800de4a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800de4e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800de52:	a804      	add	r0, sp, #16
 800de54:	f001 fc9c 	bl	800f790 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800de58:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800de5c:	18a9      	adds	r1, r5, r2
 800de5e:	2900      	cmp	r1, #0
 800de60:	b203      	sxth	r3, r0
 800de62:	dd0b      	ble.n	800de7c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800de64:	3b01      	subs	r3, #1
 800de66:	fb13 f302 	smulbb	r3, r3, r2
 800de6a:	fb16 3300 	smlabb	r3, r6, r0, r3
 800de6e:	b21d      	sxth	r5, r3
 800de70:	4628      	mov	r0, r5
 800de72:	b01b      	add	sp, #108	; 0x6c
 800de74:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800de78:	b003      	add	sp, #12
 800de7a:	4770      	bx	lr
 800de7c:	2b00      	cmp	r3, #0
 800de7e:	dcf7      	bgt.n	800de70 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800de80:	2500      	movs	r5, #0
 800de82:	e7f5      	b.n	800de70 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800de84:	08023fab 	.word	0x08023fab
 800de88:	0802597c 	.word	0x0802597c
 800de8c:	08024039 	.word	0x08024039
 800de90:	08024062 	.word	0x08024062
 800de94:	2000e450 	.word	0x2000e450
 800de98:	2000e454 	.word	0x2000e454
 800de9c:	2000e458 	.word	0x2000e458

0800dea0 <_ZN8touchgfx8TextAreaD0Ev>:
 800dea0:	b510      	push	{r4, lr}
 800dea2:	213c      	movs	r1, #60	; 0x3c
 800dea4:	4604      	mov	r4, r0
 800dea6:	f013 fb14 	bl	80214d2 <_ZdlPvj>
 800deaa:	4620      	mov	r0, r4
 800deac:	bd10      	pop	{r4, pc}
	...

0800deb0 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800deb0:	b570      	push	{r4, r5, r6, lr}
 800deb2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800deb4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800deb8:	4299      	cmp	r1, r3
 800deba:	4604      	mov	r4, r0
 800debc:	d01e      	beq.n	800defc <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800debe:	6803      	ldr	r3, [r0, #0]
 800dec0:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800dec2:	4b0f      	ldr	r3, [pc, #60]	; (800df00 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800dec4:	681b      	ldr	r3, [r3, #0]
 800dec6:	b92b      	cbnz	r3, 800ded4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800dec8:	4b0e      	ldr	r3, [pc, #56]	; (800df04 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800deca:	4a0f      	ldr	r2, [pc, #60]	; (800df08 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800decc:	21b1      	movs	r1, #177	; 0xb1
 800dece:	480f      	ldr	r0, [pc, #60]	; (800df0c <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800ded0:	f014 f91e 	bl	8022110 <__assert_func>
 800ded4:	4b0e      	ldr	r3, [pc, #56]	; (800df10 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800ded6:	881b      	ldrh	r3, [r3, #0]
 800ded8:	428b      	cmp	r3, r1
 800deda:	d803      	bhi.n	800dee4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800dedc:	4b0d      	ldr	r3, [pc, #52]	; (800df14 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800dede:	4a0a      	ldr	r2, [pc, #40]	; (800df08 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800dee0:	21b2      	movs	r1, #178	; 0xb2
 800dee2:	e7f4      	b.n	800dece <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800dee4:	4b0c      	ldr	r3, [pc, #48]	; (800df18 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800dee6:	6818      	ldr	r0, [r3, #0]
 800dee8:	f7f6 fa58 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 800deec:	2300      	movs	r3, #0
 800deee:	4601      	mov	r1, r0
 800def0:	46ac      	mov	ip, r5
 800def2:	4620      	mov	r0, r4
 800def4:	461a      	mov	r2, r3
 800def6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800defa:	4760      	bx	ip
 800defc:	2000      	movs	r0, #0
 800defe:	bd70      	pop	{r4, r5, r6, pc}
 800df00:	2000e450 	.word	0x2000e450
 800df04:	08023fab 	.word	0x08023fab
 800df08:	0802597c 	.word	0x0802597c
 800df0c:	08024039 	.word	0x08024039
 800df10:	2000e454 	.word	0x2000e454
 800df14:	08024062 	.word	0x08024062
 800df18:	2000e45c 	.word	0x2000e45c

0800df1c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800df1c:	b538      	push	{r3, r4, r5, lr}
 800df1e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800df20:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800df24:	429a      	cmp	r2, r3
 800df26:	4604      	mov	r4, r0
 800df28:	d014      	beq.n	800df54 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800df2a:	6803      	ldr	r3, [r0, #0]
 800df2c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800df2e:	4798      	blx	r3
 800df30:	6823      	ldr	r3, [r4, #0]
 800df32:	4605      	mov	r5, r0
 800df34:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800df36:	4620      	mov	r0, r4
 800df38:	4798      	blx	r3
 800df3a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800df3e:	b22d      	sxth	r5, r5
 800df40:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800df44:	4601      	mov	r1, r0
 800df46:	bf06      	itte	eq
 800df48:	4602      	moveq	r2, r0
 800df4a:	4629      	moveq	r1, r5
 800df4c:	462a      	movne	r2, r5
 800df4e:	4620      	mov	r0, r4
 800df50:	f7f5 ff83 	bl	8003e5a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800df54:	bd38      	pop	{r3, r4, r5, pc}

0800df56 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800df56:	888a      	ldrh	r2, [r1, #4]
 800df58:	8582      	strh	r2, [r0, #44]	; 0x2c
 800df5a:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800df5e:	b922      	cbnz	r2, 800df6a <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800df60:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800df64:	b90b      	cbnz	r3, 800df6a <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800df66:	f7ff bfd9 	b.w	800df1c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800df6a:	4770      	bx	lr

0800df6c <_ZNK8touchgfx3Box12getSolidRectEv>:
 800df6c:	2300      	movs	r3, #0
 800df6e:	8083      	strh	r3, [r0, #4]
 800df70:	80c3      	strh	r3, [r0, #6]
 800df72:	8003      	strh	r3, [r0, #0]
 800df74:	8043      	strh	r3, [r0, #2]
 800df76:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800df7a:	2bff      	cmp	r3, #255	; 0xff
 800df7c:	bf01      	itttt	eq
 800df7e:	890b      	ldrheq	r3, [r1, #8]
 800df80:	8083      	strheq	r3, [r0, #4]
 800df82:	894b      	ldrheq	r3, [r1, #10]
 800df84:	80c3      	strheq	r3, [r0, #6]
 800df86:	4770      	bx	lr

0800df88 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800df88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800df8a:	4604      	mov	r4, r0
 800df8c:	6808      	ldr	r0, [r1, #0]
 800df8e:	6849      	ldr	r1, [r1, #4]
 800df90:	466b      	mov	r3, sp
 800df92:	c303      	stmia	r3!, {r0, r1}
 800df94:	6823      	ldr	r3, [r4, #0]
 800df96:	4669      	mov	r1, sp
 800df98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800df9a:	4620      	mov	r0, r4
 800df9c:	4798      	blx	r3
 800df9e:	4b08      	ldr	r3, [pc, #32]	; (800dfc0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800dfa0:	681b      	ldr	r3, [r3, #0]
 800dfa2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800dfa6:	b10a      	cbz	r2, 800dfac <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800dfa8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800dfaa:	b900      	cbnz	r0, 800dfae <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800dfac:	6898      	ldr	r0, [r3, #8]
 800dfae:	6803      	ldr	r3, [r0, #0]
 800dfb0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dfb2:	699d      	ldr	r5, [r3, #24]
 800dfb4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800dfb8:	4669      	mov	r1, sp
 800dfba:	47a8      	blx	r5
 800dfbc:	b003      	add	sp, #12
 800dfbe:	bd30      	pop	{r4, r5, pc}
 800dfc0:	2000e3e0 	.word	0x2000e3e0

0800dfc4 <_ZN8touchgfx3BoxD1Ev>:
 800dfc4:	4770      	bx	lr

0800dfc6 <_ZN8touchgfx3BoxD0Ev>:
 800dfc6:	b510      	push	{r4, lr}
 800dfc8:	212c      	movs	r1, #44	; 0x2c
 800dfca:	4604      	mov	r4, r0
 800dfcc:	f013 fa81 	bl	80214d2 <_ZdlPvj>
 800dfd0:	4620      	mov	r0, r4
 800dfd2:	bd10      	pop	{r4, pc}

0800dfd4 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 800dfd4:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 800dfd8:	600b      	str	r3, [r1, #0]
 800dfda:	f9b0 314e 	ldrsh.w	r3, [r0, #334]	; 0x14e
 800dfde:	6013      	str	r3, [r2, #0]
 800dfe0:	4770      	bx	lr

0800dfe2 <_ZN8touchgfx5Gauge8setWidthEs>:
 800dfe2:	8101      	strh	r1, [r0, #8]
 800dfe4:	f8a0 10b8 	strh.w	r1, [r0, #184]	; 0xb8
 800dfe8:	f8a0 115c 	strh.w	r1, [r0, #348]	; 0x15c
 800dfec:	4770      	bx	lr

0800dfee <_ZN8touchgfx5Gauge9setHeightEs>:
 800dfee:	8141      	strh	r1, [r0, #10]
 800dff0:	f8a0 10ba 	strh.w	r1, [r0, #186]	; 0xba
 800dff4:	f8a0 115e 	strh.w	r1, [r0, #350]	; 0x15e
 800dff8:	4770      	bx	lr

0800dffa <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 800dffa:	f8d0 0144 	ldr.w	r0, [r0, #324]	; 0x144
 800dffe:	4770      	bx	lr

0800e000 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 800e000:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800e004:	4770      	bx	lr

0800e006 <_ZN8touchgfx5Gauge8setAlphaEh>:
 800e006:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800e00a:	f880 10d8 	strb.w	r1, [r0, #216]	; 0xd8
 800e00e:	f880 1182 	strb.w	r1, [r0, #386]	; 0x182
 800e012:	4770      	bx	lr

0800e014 <_ZNK8touchgfx5Gauge8getAlphaEv>:
 800e014:	f890 00d8 	ldrb.w	r0, [r0, #216]	; 0xd8
 800e018:	4770      	bx	lr

0800e01a <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 800e01a:	4770      	bx	lr

0800e01c <_ZN8touchgfx5GaugeD1Ev>:
 800e01c:	4770      	bx	lr

0800e01e <_ZN8touchgfx5GaugeD0Ev>:
 800e01e:	b510      	push	{r4, lr}
 800e020:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 800e024:	4604      	mov	r4, r0
 800e026:	f013 fa54 	bl	80214d2 <_ZdlPvj>
 800e02a:	4620      	mov	r0, r4
 800e02c:	bd10      	pop	{r4, pc}
	...

0800e030 <_ZN8touchgfx5GaugeC1Ev>:
 800e030:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e032:	4604      	mov	r4, r0
 800e034:	4626      	mov	r6, r4
 800e036:	f7fd f991 	bl	800b35c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 800e03a:	4b18      	ldr	r3, [pc, #96]	; (800e09c <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 800e03c:	f846 3bb0 	str.w	r3, [r6], #176
 800e040:	a902      	add	r1, sp, #8
 800e042:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e046:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800e04a:	4630      	mov	r0, r6
 800e04c:	f011 fb4c 	bl	801f6e8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 800e050:	2500      	movs	r5, #0
 800e052:	2301      	movs	r3, #1
 800e054:	f504 77aa 	add.w	r7, r4, #340	; 0x154
 800e058:	f884 3140 	strb.w	r3, [r4, #320]	; 0x140
 800e05c:	f884 3141 	strb.w	r3, [r4, #321]	; 0x141
 800e060:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
 800e064:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 800e068:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 800e06c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 800e070:	4638      	mov	r0, r7
 800e072:	f7fe fe1d 	bl	800ccb0 <_ZN8touchgfx6CircleC1Ev>
 800e076:	f104 0158 	add.w	r1, r4, #88	; 0x58
 800e07a:	4620      	mov	r0, r4
 800e07c:	f7fd fc34 	bl	800b8e8 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800e080:	4639      	mov	r1, r7
 800e082:	4620      	mov	r0, r4
 800e084:	f7fd fc62 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e088:	4620      	mov	r0, r4
 800e08a:	4631      	mov	r1, r6
 800e08c:	f7fd fc5e 	bl	800b94c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e090:	4620      	mov	r0, r4
 800e092:	f884 5179 	strb.w	r5, [r4, #377]	; 0x179
 800e096:	b003      	add	sp, #12
 800e098:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e09a:	bf00      	nop
 800e09c:	08025a44 	.word	0x08025a44

0800e0a0 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 800e0a0:	f880 1140 	strb.w	r1, [r0, #320]	; 0x140
 800e0a4:	4770      	bx	lr

0800e0a6 <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 800e0a6:	f880 1141 	strb.w	r1, [r0, #321]	; 0x141
 800e0aa:	4770      	bx	lr

0800e0ac <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 800e0ac:	b538      	push	{r3, r4, r5, lr}
 800e0ae:	8902      	ldrh	r2, [r0, #8]
 800e0b0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e0b4:	f8a0 20b8 	strh.w	r2, [r0, #184]	; 0xb8
 800e0b8:	4604      	mov	r4, r0
 800e0ba:	f100 05b0 	add.w	r5, r0, #176	; 0xb0
 800e0be:	2200      	movs	r2, #0
 800e0c0:	4611      	mov	r1, r2
 800e0c2:	f8a0 30ba 	strh.w	r3, [r0, #186]	; 0xba
 800e0c6:	4628      	mov	r0, r5
 800e0c8:	f7f4 fbcc 	bl	8002864 <_ZN8touchgfx8Drawable5setXYEss>
 800e0cc:	f9b4 2152 	ldrsh.w	r2, [r4, #338]	; 0x152
 800e0d0:	f9b4 314e 	ldrsh.w	r3, [r4, #334]	; 0x14e
 800e0d4:	1a9b      	subs	r3, r3, r2
 800e0d6:	ee07 3a90 	vmov	s15, r3
 800e0da:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 800e0de:	f9b4 314c 	ldrsh.w	r3, [r4, #332]	; 0x14c
 800e0e2:	1a9b      	subs	r3, r3, r2
 800e0e4:	ee07 3a10 	vmov	s14, r3
 800e0e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e0ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e0f0:	edc4 7a38 	vstr	s15, [r4, #224]	; 0xe0
 800e0f4:	ed84 7a37 	vstr	s14, [r4, #220]	; 0xdc
 800e0f8:	4628      	mov	r0, r5
 800e0fa:	f011 fb3f 	bl	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800e0fe:	4b16      	ldr	r3, [pc, #88]	; (800e158 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 800e100:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800e104:	4628      	mov	r0, r5
 800e106:	f011 fb39 	bl	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800e10a:	f9b4 314e 	ldrsh.w	r3, [r4, #334]	; 0x14e
 800e10e:	f9b4 214c 	ldrsh.w	r2, [r4, #332]	; 0x14c
 800e112:	ee07 3a90 	vmov	s15, r3
 800e116:	ee07 2a10 	vmov	s14, r2
 800e11a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e11e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e122:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800e126:	ed84 7a3d 	vstr	s14, [r4, #244]	; 0xf4
 800e12a:	edc4 7a3e 	vstr	s15, [r4, #248]	; 0xf8
 800e12e:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 800e132:	4628      	mov	r0, r5
 800e134:	f011 fb22 	bl	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800e138:	f8d4 30f8 	ldr.w	r3, [r4, #248]	; 0xf8
 800e13c:	f8d4 20f4 	ldr.w	r2, [r4, #244]	; 0xf4
 800e140:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800e144:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800e148:	4628      	mov	r0, r5
 800e14a:	f011 fb17 	bl	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800e14e:	2301      	movs	r3, #1
 800e150:	f884 30d9 	strb.w	r3, [r4, #217]	; 0xd9
 800e154:	bd38      	pop	{r3, r4, r5, pc}
 800e156:	bf00      	nop
 800e158:	43960000 	.word	0x43960000

0800e15c <_ZN8touchgfx5Gauge9setNeedleEtss>:
 800e15c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e15e:	4604      	mov	r4, r0
 800e160:	a802      	add	r0, sp, #8
 800e162:	4616      	mov	r6, r2
 800e164:	f820 1d04 	strh.w	r1, [r0, #-4]!
 800e168:	461d      	mov	r5, r3
 800e16a:	4601      	mov	r1, r0
 800e16c:	f104 00b0 	add.w	r0, r4, #176	; 0xb0
 800e170:	f011 fc5a 	bl	801fa28 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 800e174:	f8a4 6150 	strh.w	r6, [r4, #336]	; 0x150
 800e178:	f8a4 5152 	strh.w	r5, [r4, #338]	; 0x152
 800e17c:	4620      	mov	r0, r4
 800e17e:	f7ff ff95 	bl	800e0ac <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 800e182:	b002      	add	sp, #8
 800e184:	bd70      	pop	{r4, r5, r6, pc}

0800e186 <_ZN8touchgfx5Gauge9setCenterEii>:
 800e186:	b570      	push	{r4, r5, r6, lr}
 800e188:	4606      	mov	r6, r0
 800e18a:	460d      	mov	r5, r1
 800e18c:	f8a6 114c 	strh.w	r1, [r6, #332]	; 0x14c
 800e190:	f8a6 214e 	strh.w	r2, [r6, #334]	; 0x14e
 800e194:	4614      	mov	r4, r2
 800e196:	f7ff ff89 	bl	800e0ac <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 800e19a:	f9b6 215a 	ldrsh.w	r2, [r6, #346]	; 0x15a
 800e19e:	f9b6 1158 	ldrsh.w	r1, [r6, #344]	; 0x158
 800e1a2:	1aa4      	subs	r4, r4, r2
 800e1a4:	1a6d      	subs	r5, r5, r1
 800e1a6:	0164      	lsls	r4, r4, #5
 800e1a8:	016d      	lsls	r5, r5, #5
 800e1aa:	3410      	adds	r4, #16
 800e1ac:	3510      	adds	r5, #16
 800e1ae:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 800e1b2:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 800e1b6:	bd70      	pop	{r4, r5, r6, pc}

0800e1b8 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 800e1b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e1ba:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e1bc:	0149      	lsls	r1, r1, #5
 800e1be:	4299      	cmp	r1, r3
 800e1c0:	4604      	mov	r4, r0
 800e1c2:	9101      	str	r1, [sp, #4]
 800e1c4:	d00b      	beq.n	800e1de <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 800e1c6:	4601      	mov	r1, r0
 800e1c8:	aa01      	add	r2, sp, #4
 800e1ca:	a802      	add	r0, sp, #8
 800e1cc:	f7fe ff95 	bl	800d0fa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 800e1d0:	9b01      	ldr	r3, [sp, #4]
 800e1d2:	6423      	str	r3, [r4, #64]	; 0x40
 800e1d4:	6823      	ldr	r3, [r4, #0]
 800e1d6:	a902      	add	r1, sp, #8
 800e1d8:	691b      	ldr	r3, [r3, #16]
 800e1da:	4620      	mov	r0, r4
 800e1dc:	4798      	blx	r3
 800e1de:	b004      	add	sp, #16
 800e1e0:	bd10      	pop	{r4, pc}
	...

0800e1e4 <_ZN8touchgfx5Gauge8setValueEi>:
 800e1e4:	b570      	push	{r4, r5, r6, lr}
 800e1e6:	4604      	mov	r4, r0
 800e1e8:	f7fc ffdf 	bl	800b1aa <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800e1ec:	e9d4 3228 	ldrd	r3, r2, [r4, #160]	; 0xa0
 800e1f0:	429a      	cmp	r2, r3
 800e1f2:	bfac      	ite	ge
 800e1f4:	f894 3141 	ldrbge.w	r3, [r4, #321]	; 0x141
 800e1f8:	f894 3140 	ldrblt.w	r3, [r4, #320]	; 0x140
 800e1fc:	f884 30d9 	strb.w	r3, [r4, #217]	; 0xd9
 800e200:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 800e204:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800e208:	1ac9      	subs	r1, r1, r3
 800e20a:	2900      	cmp	r1, #0
 800e20c:	bfb8      	it	lt
 800e20e:	4249      	neglt	r1, r1
 800e210:	b289      	uxth	r1, r1
 800e212:	4620      	mov	r0, r4
 800e214:	f7fd f858 	bl	800b2c8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800e218:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800e21c:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
 800e220:	eddf 6a19 	vldr	s13, [pc, #100]	; 800e288 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 800e224:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800e28c <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 800e228:	429a      	cmp	r2, r3
 800e22a:	4605      	mov	r5, r0
 800e22c:	f504 76aa 	add.w	r6, r4, #340	; 0x154
 800e230:	f104 00b0 	add.w	r0, r4, #176	; 0xb0
 800e234:	da15      	bge.n	800e262 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 800e236:	1b5b      	subs	r3, r3, r5
 800e238:	ee07 3a90 	vmov	s15, r3
 800e23c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e240:	edd4 0a3a 	vldr	s1, [r4, #232]	; 0xe8
 800e244:	ed94 0a39 	vldr	s0, [r4, #228]	; 0xe4
 800e248:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 800e24c:	ee21 1a07 	vmul.f32	s2, s2, s14
 800e250:	f011 fcdf 	bl	801fc12 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 800e254:	f8d4 1144 	ldr.w	r1, [r4, #324]	; 0x144
 800e258:	1b49      	subs	r1, r1, r5
 800e25a:	4630      	mov	r0, r6
 800e25c:	f7ff ffac 	bl	800e1b8 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 800e260:	bd70      	pop	{r4, r5, r6, pc}
 800e262:	442b      	add	r3, r5
 800e264:	ee07 3a90 	vmov	s15, r3
 800e268:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e26c:	edd4 0a3a 	vldr	s1, [r4, #232]	; 0xe8
 800e270:	ed94 0a39 	vldr	s0, [r4, #228]	; 0xe4
 800e274:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 800e278:	ee21 1a07 	vmul.f32	s2, s2, s14
 800e27c:	f011 fcc9 	bl	801fc12 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 800e280:	f8d4 1144 	ldr.w	r1, [r4, #324]	; 0x144
 800e284:	4429      	add	r1, r5
 800e286:	e7e8      	b.n	800e25a <_ZN8touchgfx5Gauge8setValueEi+0x76>
 800e288:	43340000 	.word	0x43340000
 800e28c:	40490fdb 	.word	0x40490fdb

0800e290 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 800e290:	4291      	cmp	r1, r2
 800e292:	b510      	push	{r4, lr}
 800e294:	4604      	mov	r4, r0
 800e296:	d105      	bne.n	800e2a4 <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x14>
 800e298:	4b0b      	ldr	r3, [pc, #44]	; (800e2c8 <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x38>)
 800e29a:	4a0c      	ldr	r2, [pc, #48]	; (800e2cc <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x3c>)
 800e29c:	480c      	ldr	r0, [pc, #48]	; (800e2d0 <_ZN8touchgfx5Gauge16setStartEndAngleEii+0x40>)
 800e29e:	215a      	movs	r1, #90	; 0x5a
 800e2a0:	f013 ff36 	bl	8022110 <__assert_func>
 800e2a4:	f8c0 1144 	str.w	r1, [r0, #324]	; 0x144
 800e2a8:	f8c0 2148 	str.w	r2, [r0, #328]	; 0x148
 800e2ac:	0149      	lsls	r1, r1, #5
 800e2ae:	0152      	lsls	r2, r2, #5
 800e2b0:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 800e2b4:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 800e2b8:	f7fc fefe 	bl	800b0b8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 800e2bc:	4601      	mov	r1, r0
 800e2be:	4620      	mov	r0, r4
 800e2c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e2c4:	f7ff bf8e 	b.w	800e1e4 <_ZN8touchgfx5Gauge8setValueEi>
 800e2c8:	080247cf 	.word	0x080247cf
 800e2cc:	08025b28 	.word	0x08025b28
 800e2d0:	08025a10 	.word	0x08025a10

0800e2d4 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800e2d4:	4770      	bx	lr
	...

0800e2d8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800e2d8:	b570      	push	{r4, r5, r6, lr}
 800e2da:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e2dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e2e0:	4299      	cmp	r1, r3
 800e2e2:	4604      	mov	r4, r0
 800e2e4:	d01e      	beq.n	800e324 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800e2e6:	6803      	ldr	r3, [r0, #0]
 800e2e8:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800e2ea:	4b0f      	ldr	r3, [pc, #60]	; (800e328 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800e2ec:	681b      	ldr	r3, [r3, #0]
 800e2ee:	b92b      	cbnz	r3, 800e2fc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800e2f0:	4b0e      	ldr	r3, [pc, #56]	; (800e32c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800e2f2:	4a0f      	ldr	r2, [pc, #60]	; (800e330 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800e2f4:	21b1      	movs	r1, #177	; 0xb1
 800e2f6:	480f      	ldr	r0, [pc, #60]	; (800e334 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800e2f8:	f013 ff0a 	bl	8022110 <__assert_func>
 800e2fc:	4b0e      	ldr	r3, [pc, #56]	; (800e338 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800e2fe:	881b      	ldrh	r3, [r3, #0]
 800e300:	428b      	cmp	r3, r1
 800e302:	d803      	bhi.n	800e30c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800e304:	4b0d      	ldr	r3, [pc, #52]	; (800e33c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800e306:	4a0a      	ldr	r2, [pc, #40]	; (800e330 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800e308:	21b2      	movs	r1, #178	; 0xb2
 800e30a:	e7f4      	b.n	800e2f6 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800e30c:	4b0c      	ldr	r3, [pc, #48]	; (800e340 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800e30e:	6818      	ldr	r0, [r3, #0]
 800e310:	f7f6 f844 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 800e314:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800e316:	4601      	mov	r1, r0
 800e318:	46ac      	mov	ip, r5
 800e31a:	4620      	mov	r0, r4
 800e31c:	2300      	movs	r3, #0
 800e31e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e322:	4760      	bx	ip
 800e324:	2000      	movs	r0, #0
 800e326:	bd70      	pop	{r4, r5, r6, pc}
 800e328:	2000e450 	.word	0x2000e450
 800e32c:	08023fab 	.word	0x08023fab
 800e330:	08025bdc 	.word	0x08025bdc
 800e334:	08024039 	.word	0x08024039
 800e338:	2000e454 	.word	0x2000e454
 800e33c:	08024062 	.word	0x08024062
 800e340:	2000e45c 	.word	0x2000e45c

0800e344 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800e344:	b510      	push	{r4, lr}
 800e346:	2140      	movs	r1, #64	; 0x40
 800e348:	4604      	mov	r4, r0
 800e34a:	f013 f8c2 	bl	80214d2 <_ZdlPvj>
 800e34e:	4620      	mov	r0, r4
 800e350:	bd10      	pop	{r4, pc}
	...

0800e354 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800e354:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e358:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800e35a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e35e:	4293      	cmp	r3, r2
 800e360:	b08c      	sub	sp, #48	; 0x30
 800e362:	4604      	mov	r4, r0
 800e364:	460e      	mov	r6, r1
 800e366:	d05d      	beq.n	800e424 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800e368:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800e448 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800e36c:	f8d8 2000 	ldr.w	r2, [r8]
 800e370:	b92a      	cbnz	r2, 800e37e <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800e372:	4b2e      	ldr	r3, [pc, #184]	; (800e42c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800e374:	4a2e      	ldr	r2, [pc, #184]	; (800e430 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800e376:	21b1      	movs	r1, #177	; 0xb1
 800e378:	482e      	ldr	r0, [pc, #184]	; (800e434 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800e37a:	f013 fec9 	bl	8022110 <__assert_func>
 800e37e:	4f2e      	ldr	r7, [pc, #184]	; (800e438 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800e380:	8839      	ldrh	r1, [r7, #0]
 800e382:	4299      	cmp	r1, r3
 800e384:	d803      	bhi.n	800e38e <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800e386:	4b2d      	ldr	r3, [pc, #180]	; (800e43c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800e388:	4a29      	ldr	r2, [pc, #164]	; (800e430 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800e38a:	21b2      	movs	r1, #178	; 0xb2
 800e38c:	e7f4      	b.n	800e378 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800e38e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800e392:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e396:	4b2a      	ldr	r3, [pc, #168]	; (800e440 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800e398:	681b      	ldr	r3, [r3, #0]
 800e39a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800e39e:	2a00      	cmp	r2, #0
 800e3a0:	d040      	beq.n	800e424 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800e3a2:	784b      	ldrb	r3, [r1, #1]
 800e3a4:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e3a8:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800e3ac:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e3b0:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800e3b4:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800e3b8:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800e3ba:	9207      	str	r2, [sp, #28]
 800e3bc:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800e3c0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e3c4:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800e3c8:	f88d 9020 	strb.w	r9, [sp, #32]
 800e3cc:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e3d0:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e3d4:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800e3d8:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800e3dc:	9009      	str	r0, [sp, #36]	; 0x24
 800e3de:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800e3e2:	f7f4 fa5f 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800e3e6:	ad05      	add	r5, sp, #20
 800e3e8:	4681      	mov	r9, r0
 800e3ea:	4621      	mov	r1, r4
 800e3ec:	4628      	mov	r0, r5
 800e3ee:	f002 fe8c 	bl	801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e3f2:	f8d8 3000 	ldr.w	r3, [r8]
 800e3f6:	2b00      	cmp	r3, #0
 800e3f8:	d0bb      	beq.n	800e372 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800e3fa:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e3fc:	883b      	ldrh	r3, [r7, #0]
 800e3fe:	428b      	cmp	r3, r1
 800e400:	d9c1      	bls.n	800e386 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800e402:	4b10      	ldr	r3, [pc, #64]	; (800e444 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800e404:	6818      	ldr	r0, [r3, #0]
 800e406:	f7f5 ffc9 	bl	800439c <_ZNK8touchgfx5Texts7getTextEt>
 800e40a:	2300      	movs	r3, #0
 800e40c:	9303      	str	r3, [sp, #12]
 800e40e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e410:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800e414:	ab07      	add	r3, sp, #28
 800e416:	9300      	str	r3, [sp, #0]
 800e418:	e895 0006 	ldmia.w	r5, {r1, r2}
 800e41c:	4633      	mov	r3, r6
 800e41e:	4648      	mov	r0, r9
 800e420:	f7f5 ff6e 	bl	8004300 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e424:	b00c      	add	sp, #48	; 0x30
 800e426:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e42a:	bf00      	nop
 800e42c:	08023fab 	.word	0x08023fab
 800e430:	08025bdc 	.word	0x08025bdc
 800e434:	08024039 	.word	0x08024039
 800e438:	2000e454 	.word	0x2000e454
 800e43c:	08024062 	.word	0x08024062
 800e440:	2000e458 	.word	0x2000e458
 800e444:	2000e45c 	.word	0x2000e45c
 800e448:	2000e450 	.word	0x2000e450

0800e44c <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e44c:	4770      	bx	lr

0800e44e <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e44e:	b510      	push	{r4, lr}
 800e450:	2134      	movs	r1, #52	; 0x34
 800e452:	4604      	mov	r4, r0
 800e454:	f013 f83d 	bl	80214d2 <_ZdlPvj>
 800e458:	4620      	mov	r0, r4
 800e45a:	bd10      	pop	{r4, pc}

0800e45c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e45c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e460:	4604      	mov	r4, r0
 800e462:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e464:	8962      	ldrh	r2, [r4, #10]
 800e466:	b218      	sxth	r0, r3
 800e468:	460e      	mov	r6, r1
 800e46a:	005b      	lsls	r3, r3, #1
 800e46c:	8921      	ldrh	r1, [r4, #8]
 800e46e:	b29b      	uxth	r3, r3
 800e470:	1ac9      	subs	r1, r1, r3
 800e472:	b08e      	sub	sp, #56	; 0x38
 800e474:	b209      	sxth	r1, r1
 800e476:	1ad3      	subs	r3, r2, r3
 800e478:	b21b      	sxth	r3, r3
 800e47a:	2900      	cmp	r1, #0
 800e47c:	f8ad 0000 	strh.w	r0, [sp]
 800e480:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e484:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e488:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e48c:	dd5e      	ble.n	800e54c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e48e:	2b00      	cmp	r3, #0
 800e490:	dd5c      	ble.n	800e54c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e492:	6830      	ldr	r0, [r6, #0]
 800e494:	6871      	ldr	r1, [r6, #4]
 800e496:	ab02      	add	r3, sp, #8
 800e498:	c303      	stmia	r3!, {r0, r1}
 800e49a:	4669      	mov	r1, sp
 800e49c:	a802      	add	r0, sp, #8
 800e49e:	f7fd fa85 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 800e4a2:	4620      	mov	r0, r4
 800e4a4:	a902      	add	r1, sp, #8
 800e4a6:	f7ff fd6f 	bl	800df88 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e4aa:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e4ac:	2800      	cmp	r0, #0
 800e4ae:	d05f      	beq.n	800e570 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e4b0:	8963      	ldrh	r3, [r4, #10]
 800e4b2:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e4b6:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e4ba:	1a1f      	subs	r7, r3, r0
 800e4bc:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e4c0:	b202      	sxth	r2, r0
 800e4c2:	2500      	movs	r5, #0
 800e4c4:	b21b      	sxth	r3, r3
 800e4c6:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e4ca:	1a09      	subs	r1, r1, r0
 800e4cc:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e4d0:	9506      	str	r5, [sp, #24]
 800e4d2:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e4d6:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e4da:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e4de:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e4e2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e4e6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e4ea:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e4ee:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e4f2:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e4f6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e4fa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e4fe:	af04      	add	r7, sp, #16
 800e500:	ab06      	add	r3, sp, #24
 800e502:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e506:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e50a:	e887 0003 	stmia.w	r7, {r0, r1}
 800e50e:	4631      	mov	r1, r6
 800e510:	4638      	mov	r0, r7
 800e512:	f7fd fa4b 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 800e516:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e51a:	2b00      	cmp	r3, #0
 800e51c:	dd12      	ble.n	800e544 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e51e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e522:	2b00      	cmp	r3, #0
 800e524:	dd0e      	ble.n	800e544 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e526:	6823      	ldr	r3, [r4, #0]
 800e528:	4639      	mov	r1, r7
 800e52a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e52c:	4620      	mov	r0, r4
 800e52e:	4798      	blx	r3
 800e530:	f7f4 f9b8 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800e534:	6803      	ldr	r3, [r0, #0]
 800e536:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e538:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800e53c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e540:	4639      	mov	r1, r7
 800e542:	47c0      	blx	r8
 800e544:	3501      	adds	r5, #1
 800e546:	2d04      	cmp	r5, #4
 800e548:	d1da      	bne.n	800e500 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e54a:	e011      	b.n	800e570 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e54c:	6830      	ldr	r0, [r6, #0]
 800e54e:	6871      	ldr	r1, [r6, #4]
 800e550:	ab06      	add	r3, sp, #24
 800e552:	c303      	stmia	r3!, {r0, r1}
 800e554:	6823      	ldr	r3, [r4, #0]
 800e556:	a906      	add	r1, sp, #24
 800e558:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e55a:	4620      	mov	r0, r4
 800e55c:	4798      	blx	r3
 800e55e:	f7f4 f9a1 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 800e562:	6803      	ldr	r3, [r0, #0]
 800e564:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e566:	699d      	ldr	r5, [r3, #24]
 800e568:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e56c:	a906      	add	r1, sp, #24
 800e56e:	47a8      	blx	r5
 800e570:	b00e      	add	sp, #56	; 0x38
 800e572:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e576 <_ZN8touchgfx5ImageD1Ev>:
 800e576:	4770      	bx	lr

0800e578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e578:	b570      	push	{r4, r5, r6, lr}
 800e57a:	880b      	ldrh	r3, [r1, #0]
 800e57c:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e57e:	4604      	mov	r4, r0
 800e580:	4608      	mov	r0, r1
 800e582:	460d      	mov	r5, r1
 800e584:	f004 fec4 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e588:	4606      	mov	r6, r0
 800e58a:	4628      	mov	r0, r5
 800e58c:	f004 fefa 	bl	8013384 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e590:	6823      	ldr	r3, [r4, #0]
 800e592:	4605      	mov	r5, r0
 800e594:	b231      	sxth	r1, r6
 800e596:	4620      	mov	r0, r4
 800e598:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e59a:	4798      	blx	r3
 800e59c:	6823      	ldr	r3, [r4, #0]
 800e59e:	b229      	sxth	r1, r5
 800e5a0:	4620      	mov	r0, r4
 800e5a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e5a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e5a8:	4718      	bx	r3

0800e5aa <_ZN8touchgfx5ImageD0Ev>:
 800e5aa:	b510      	push	{r4, lr}
 800e5ac:	212c      	movs	r1, #44	; 0x2c
 800e5ae:	4604      	mov	r4, r0
 800e5b0:	f012 ff8f 	bl	80214d2 <_ZdlPvj>
 800e5b4:	4620      	mov	r0, r4
 800e5b6:	bd10      	pop	{r4, pc}

0800e5b8 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e5b8:	b510      	push	{r4, lr}
 800e5ba:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e5be:	2bff      	cmp	r3, #255	; 0xff
 800e5c0:	4604      	mov	r4, r0
 800e5c2:	d006      	beq.n	800e5d2 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e5c4:	2300      	movs	r3, #0
 800e5c6:	8003      	strh	r3, [r0, #0]
 800e5c8:	8043      	strh	r3, [r0, #2]
 800e5ca:	8083      	strh	r3, [r0, #4]
 800e5cc:	80c3      	strh	r3, [r0, #6]
 800e5ce:	4620      	mov	r0, r4
 800e5d0:	bd10      	pop	{r4, pc}
 800e5d2:	3126      	adds	r1, #38	; 0x26
 800e5d4:	f004 ff10 	bl	80133f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e5d8:	e7f9      	b.n	800e5ce <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0800e5dc <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e5dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5e0:	4604      	mov	r4, r0
 800e5e2:	b088      	sub	sp, #32
 800e5e4:	f854 3b26 	ldr.w	r3, [r4], #38
 800e5e8:	2500      	movs	r5, #0
 800e5ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e5ec:	460f      	mov	r7, r1
 800e5ee:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e5f2:	a904      	add	r1, sp, #16
 800e5f4:	4606      	mov	r6, r0
 800e5f6:	4798      	blx	r3
 800e5f8:	4620      	mov	r0, r4
 800e5fa:	f004 fe89 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e5fe:	4680      	mov	r8, r0
 800e600:	4620      	mov	r0, r4
 800e602:	f004 febf 	bl	8013384 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e606:	9506      	str	r5, [sp, #24]
 800e608:	ad06      	add	r5, sp, #24
 800e60a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e60e:	4639      	mov	r1, r7
 800e610:	4628      	mov	r0, r5
 800e612:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e616:	f7fd f9c9 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 800e61a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e61e:	2b00      	cmp	r3, #0
 800e620:	dd19      	ble.n	800e656 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e622:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e626:	2b00      	cmp	r3, #0
 800e628:	dd15      	ble.n	800e656 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e62a:	4b0c      	ldr	r3, [pc, #48]	; (800e65c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e62c:	681b      	ldr	r3, [r3, #0]
 800e62e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e632:	b10a      	cbz	r2, 800e638 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e634:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e636:	b900      	cbnz	r0, 800e63a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e638:	6898      	ldr	r0, [r3, #8]
 800e63a:	6801      	ldr	r1, [r0, #0]
 800e63c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e640:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e644:	2701      	movs	r7, #1
 800e646:	9702      	str	r7, [sp, #8]
 800e648:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800e64c:	e9cd 5600 	strd	r5, r6, [sp]
 800e650:	688d      	ldr	r5, [r1, #8]
 800e652:	4621      	mov	r1, r4
 800e654:	47a8      	blx	r5
 800e656:	b008      	add	sp, #32
 800e658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e65c:	2000e3e0 	.word	0x2000e3e0

0800e660 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e660:	4b02      	ldr	r3, [pc, #8]	; (800e66c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e662:	6018      	str	r0, [r3, #0]
 800e664:	4b02      	ldr	r3, [pc, #8]	; (800e670 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e666:	6019      	str	r1, [r3, #0]
 800e668:	4770      	bx	lr
 800e66a:	bf00      	nop
 800e66c:	2000e3e8 	.word	0x2000e3e8
 800e670:	2000e3fc 	.word	0x2000e3fc

0800e674 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>:
 800e674:	b538      	push	{r3, r4, r5, lr}
 800e676:	4c2b      	ldr	r4, [pc, #172]	; (800e724 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb0>)
 800e678:	4b2b      	ldr	r3, [pc, #172]	; (800e728 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb4>)
 800e67a:	6821      	ldr	r1, [r4, #0]
 800e67c:	681a      	ldr	r2, [r3, #0]
 800e67e:	4d2b      	ldr	r5, [pc, #172]	; (800e72c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb8>)
 800e680:	4281      	cmp	r1, r0
 800e682:	492b      	ldr	r1, [pc, #172]	; (800e730 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xbc>)
 800e684:	d108      	bne.n	800e698 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800e686:	682b      	ldr	r3, [r5, #0]
 800e688:	4293      	cmp	r3, r2
 800e68a:	d105      	bne.n	800e698 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800e68c:	6808      	ldr	r0, [r1, #0]
 800e68e:	280f      	cmp	r0, #15
 800e690:	bf94      	ite	ls
 800e692:	2000      	movls	r0, #0
 800e694:	2001      	movhi	r0, #1
 800e696:	bd38      	pop	{r3, r4, r5, pc}
 800e698:	4b26      	ldr	r3, [pc, #152]	; (800e734 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc0>)
 800e69a:	6020      	str	r0, [r4, #0]
 800e69c:	681b      	ldr	r3, [r3, #0]
 800e69e:	602a      	str	r2, [r5, #0]
 800e6a0:	4298      	cmp	r0, r3
 800e6a2:	d905      	bls.n	800e6b0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x3c>
 800e6a4:	4b24      	ldr	r3, [pc, #144]	; (800e738 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800e6a6:	4a25      	ldr	r2, [pc, #148]	; (800e73c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800e6a8:	2137      	movs	r1, #55	; 0x37
 800e6aa:	4825      	ldr	r0, [pc, #148]	; (800e740 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xcc>)
 800e6ac:	f013 fd30 	bl	8022110 <__assert_func>
 800e6b0:	f010 0403 	ands.w	r4, r0, #3
 800e6b4:	bf1f      	itttt	ne
 800e6b6:	f1c4 0504 	rsbne	r5, r4, #4
 800e6ba:	3b04      	subne	r3, #4
 800e6bc:	1952      	addne	r2, r2, r5
 800e6be:	191b      	addne	r3, r3, r4
 800e6c0:	4402      	add	r2, r0
 800e6c2:	1a1b      	subs	r3, r3, r0
 800e6c4:	3001      	adds	r0, #1
 800e6c6:	f020 0401 	bic.w	r4, r0, #1
 800e6ca:	4d1e      	ldr	r5, [pc, #120]	; (800e744 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd0>)
 800e6cc:	42a3      	cmp	r3, r4
 800e6ce:	602a      	str	r2, [r5, #0]
 800e6d0:	d203      	bcs.n	800e6da <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x66>
 800e6d2:	4b19      	ldr	r3, [pc, #100]	; (800e738 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800e6d4:	4a19      	ldr	r2, [pc, #100]	; (800e73c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800e6d6:	214a      	movs	r1, #74	; 0x4a
 800e6d8:	e7e7      	b.n	800e6aa <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800e6da:	f010 0002 	ands.w	r0, r0, #2
 800e6de:	bf1f      	itttt	ne
 800e6e0:	f1c0 0504 	rsbne	r5, r0, #4
 800e6e4:	1952      	addne	r2, r2, r5
 800e6e6:	1f05      	subne	r5, r0, #4
 800e6e8:	195b      	addne	r3, r3, r5
 800e6ea:	1b1b      	subs	r3, r3, r4
 800e6ec:	4d16      	ldr	r5, [pc, #88]	; (800e748 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd4>)
 800e6ee:	4422      	add	r2, r4
 800e6f0:	429c      	cmp	r4, r3
 800e6f2:	602a      	str	r2, [r5, #0]
 800e6f4:	d903      	bls.n	800e6fe <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x8a>
 800e6f6:	4b10      	ldr	r3, [pc, #64]	; (800e738 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800e6f8:	4a10      	ldr	r2, [pc, #64]	; (800e73c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800e6fa:	215d      	movs	r1, #93	; 0x5d
 800e6fc:	e7d5      	b.n	800e6aa <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800e6fe:	b120      	cbz	r0, 800e70a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x96>
 800e700:	f1c0 0504 	rsb	r5, r0, #4
 800e704:	3804      	subs	r0, #4
 800e706:	442a      	add	r2, r5
 800e708:	4403      	add	r3, r0
 800e70a:	1b1b      	subs	r3, r3, r4
 800e70c:	480f      	ldr	r0, [pc, #60]	; (800e74c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd8>)
 800e70e:	600b      	str	r3, [r1, #0]
 800e710:	4422      	add	r2, r4
 800e712:	2b0f      	cmp	r3, #15
 800e714:	6002      	str	r2, [r0, #0]
 800e716:	d803      	bhi.n	800e720 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xac>
 800e718:	4b0d      	ldr	r3, [pc, #52]	; (800e750 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xdc>)
 800e71a:	4a08      	ldr	r2, [pc, #32]	; (800e73c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800e71c:	2170      	movs	r1, #112	; 0x70
 800e71e:	e7c4      	b.n	800e6aa <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800e720:	2001      	movs	r0, #1
 800e722:	e7b8      	b.n	800e696 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x22>
 800e724:	2000e3f0 	.word	0x2000e3f0
 800e728:	2000e3e8 	.word	0x2000e3e8
 800e72c:	2000e3f8 	.word	0x2000e3f8
 800e730:	2000e400 	.word	0x2000e400
 800e734:	2000e3fc 	.word	0x2000e3fc
 800e738:	08025cd8 	.word	0x08025cd8
 800e73c:	08025da0 	.word	0x08025da0
 800e740:	08025d11 	.word	0x08025d11
 800e744:	2000e404 	.word	0x2000e404
 800e748:	2000e3f4 	.word	0x2000e3f4
 800e74c:	2000e3ec 	.word	0x2000e3ec
 800e750:	08025d5b 	.word	0x08025d5b

0800e754 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>:
 800e754:	4b04      	ldr	r3, [pc, #16]	; (800e768 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x14>)
 800e756:	6818      	ldr	r0, [r3, #0]
 800e758:	b120      	cbz	r0, 800e764 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x10>
 800e75a:	4b04      	ldr	r3, [pc, #16]	; (800e76c <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x18>)
 800e75c:	6818      	ldr	r0, [r3, #0]
 800e75e:	3000      	adds	r0, #0
 800e760:	bf18      	it	ne
 800e762:	2001      	movne	r0, #1
 800e764:	4770      	bx	lr
 800e766:	bf00      	nop
 800e768:	2000e3e8 	.word	0x2000e3e8
 800e76c:	2000e3fc 	.word	0x2000e3fc

0800e770 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>:
 800e770:	4b01      	ldr	r3, [pc, #4]	; (800e778 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv+0x8>)
 800e772:	6818      	ldr	r0, [r3, #0]
 800e774:	4770      	bx	lr
 800e776:	bf00      	nop
 800e778:	2000e3f0 	.word	0x2000e3f0

0800e77c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>:
 800e77c:	4b01      	ldr	r3, [pc, #4]	; (800e784 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv+0x8>)
 800e77e:	6818      	ldr	r0, [r3, #0]
 800e780:	4770      	bx	lr
 800e782:	bf00      	nop
 800e784:	2000e3f8 	.word	0x2000e3f8

0800e788 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>:
 800e788:	4b01      	ldr	r3, [pc, #4]	; (800e790 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv+0x8>)
 800e78a:	6818      	ldr	r0, [r3, #0]
 800e78c:	4770      	bx	lr
 800e78e:	bf00      	nop
 800e790:	2000e404 	.word	0x2000e404

0800e794 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>:
 800e794:	4b01      	ldr	r3, [pc, #4]	; (800e79c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv+0x8>)
 800e796:	6818      	ldr	r0, [r3, #0]
 800e798:	4770      	bx	lr
 800e79a:	bf00      	nop
 800e79c:	2000e3f4 	.word	0x2000e3f4

0800e7a0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e7a0:	4b01      	ldr	r3, [pc, #4]	; (800e7a8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e7a2:	6818      	ldr	r0, [r3, #0]
 800e7a4:	4770      	bx	lr
 800e7a6:	bf00      	nop
 800e7a8:	2000e3ec 	.word	0x2000e3ec

0800e7ac <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e7ac:	4b01      	ldr	r3, [pc, #4]	; (800e7b4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e7ae:	6818      	ldr	r0, [r3, #0]
 800e7b0:	4770      	bx	lr
 800e7b2:	bf00      	nop
 800e7b4:	2000e400 	.word	0x2000e400

0800e7b8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7bc:	4696      	mov	lr, r2
 800e7be:	4605      	mov	r5, r0
 800e7c0:	4614      	mov	r4, r2
 800e7c2:	460e      	mov	r6, r1
 800e7c4:	461f      	mov	r7, r3
 800e7c6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e7ca:	b097      	sub	sp, #92	; 0x5c
 800e7cc:	f10d 0c1c 	add.w	ip, sp, #28
 800e7d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e7d4:	f8de 3000 	ldr.w	r3, [lr]
 800e7d8:	f8cc 3000 	str.w	r3, [ip]
 800e7dc:	f104 0e14 	add.w	lr, r4, #20
 800e7e0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e7e4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e7e8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e7ec:	f8de 3000 	ldr.w	r3, [lr]
 800e7f0:	f8cc 3000 	str.w	r3, [ip]
 800e7f4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e7f8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e7fc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e800:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e804:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800e808:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800e80c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800e810:	f8de 3000 	ldr.w	r3, [lr]
 800e814:	f8cc 3000 	str.w	r3, [ip]
 800e818:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e81a:	682b      	ldr	r3, [r5, #0]
 800e81c:	9201      	str	r2, [sp, #4]
 800e81e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e822:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e824:	9200      	str	r2, [sp, #0]
 800e826:	f8cd 8008 	str.w	r8, [sp, #8]
 800e82a:	f8d3 b038 	ldr.w	fp, [r3, #56]	; 0x38
 800e82e:	aa07      	add	r2, sp, #28
 800e830:	463b      	mov	r3, r7
 800e832:	4631      	mov	r1, r6
 800e834:	4628      	mov	r0, r5
 800e836:	47d8      	blx	fp
 800e838:	46a6      	mov	lr, r4
 800e83a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e83e:	f10d 0c1c 	add.w	ip, sp, #28
 800e842:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e846:	f8de 3000 	ldr.w	r3, [lr]
 800e84a:	f8cc 3000 	str.w	r3, [ip]
 800e84e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e852:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e856:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e85a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e85e:	343c      	adds	r4, #60	; 0x3c
 800e860:	f8de 3000 	ldr.w	r3, [lr]
 800e864:	f8cc 3000 	str.w	r3, [ip]
 800e868:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e86a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e86e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e872:	6823      	ldr	r3, [r4, #0]
 800e874:	f8cc 3000 	str.w	r3, [ip]
 800e878:	682b      	ldr	r3, [r5, #0]
 800e87a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e87e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e880:	9201      	str	r2, [sp, #4]
 800e882:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e884:	9200      	str	r2, [sp, #0]
 800e886:	f8cd 8008 	str.w	r8, [sp, #8]
 800e88a:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800e88c:	aa07      	add	r2, sp, #28
 800e88e:	463b      	mov	r3, r7
 800e890:	4631      	mov	r1, r6
 800e892:	4628      	mov	r0, r5
 800e894:	47a0      	blx	r4
 800e896:	b017      	add	sp, #92	; 0x5c
 800e898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e89c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e89c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e8a0:	b08d      	sub	sp, #52	; 0x34
 800e8a2:	4688      	mov	r8, r1
 800e8a4:	9916      	ldr	r1, [sp, #88]	; 0x58
 800e8a6:	f8d3 c000 	ldr.w	ip, [r3]
 800e8aa:	680f      	ldr	r7, [r1, #0]
 800e8ac:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800e8b0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800e8b4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800e8b8:	edd3 6a07 	vldr	s13, [r3, #28]
 800e8bc:	9918      	ldr	r1, [sp, #96]	; 0x60
 800e8be:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800e8c2:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e8c6:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e8ca:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800e8ce:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800e8d2:	eba7 070c 	sub.w	r7, r7, ip
 800e8d6:	42bc      	cmp	r4, r7
 800e8d8:	bfa8      	it	ge
 800e8da:	463c      	movge	r4, r7
 800e8dc:	ee07 4a90 	vmov	s15, r4
 800e8e0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e8e4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800e8e8:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e8ec:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e8f0:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e8f4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800e8f8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e8fc:	eb09 0e0c 	add.w	lr, r9, ip
 800e900:	4571      	cmp	r1, lr
 800e902:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e906:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e90a:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e90e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e912:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e916:	f340 808d 	ble.w	800ea34 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800e91a:	eba1 060e 	sub.w	r6, r1, lr
 800e91e:	fb96 f5f4 	sdiv	r5, r6, r4
 800e922:	ee07 5a10 	vmov	s14, r5
 800e926:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e92a:	2d00      	cmp	r5, #0
 800e92c:	fb04 6615 	mls	r6, r4, r5, r6
 800e930:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e934:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e938:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e93c:	dd13      	ble.n	800e966 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800e93e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e942:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e946:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e94a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e94e:	bf18      	it	ne
 800e950:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e954:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e958:	bf08      	it	eq
 800e95a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e95e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e962:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e966:	fb05 f204 	mul.w	r2, r5, r4
 800e96a:	1abf      	subs	r7, r7, r2
 800e96c:	4494      	add	ip, r2
 800e96e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e972:	4411      	add	r1, r2
 800e974:	eb09 020c 	add.w	r2, r9, ip
 800e978:	443a      	add	r2, r7
 800e97a:	b209      	sxth	r1, r1
 800e97c:	428a      	cmp	r2, r1
 800e97e:	bfc4      	itt	gt
 800e980:	eba1 0209 	subgt.w	r2, r1, r9
 800e984:	eba2 070c 	subgt.w	r7, r2, ip
 800e988:	2f00      	cmp	r7, #0
 800e98a:	dd50      	ble.n	800ea2e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800e98c:	fb97 f1f4 	sdiv	r1, r7, r4
 800e990:	fb04 7211 	mls	r2, r4, r1, r7
 800e994:	b90a      	cbnz	r2, 800e99a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800e996:	3901      	subs	r1, #1
 800e998:	4622      	mov	r2, r4
 800e99a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e99e:	6840      	ldr	r0, [r0, #4]
 800e9a0:	900b      	str	r0, [sp, #44]	; 0x2c
 800e9a2:	f8d0 a000 	ldr.w	sl, [r0]
 800e9a6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800e9a8:	9008      	str	r0, [sp, #32]
 800e9aa:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800e9ae:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e9b0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800e9b4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e9b8:	695b      	ldr	r3, [r3, #20]
 800e9ba:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e9bc:	445b      	add	r3, fp
 800e9be:	eef0 6a42 	vmov.f32	s13, s4
 800e9c2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e9c6:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e9ca:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e9ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e9d2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e9d6:	9307      	str	r3, [sp, #28]
 800e9d8:	ee17 7a90 	vmov	r7, s15
 800e9dc:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e9e0:	eeb0 7a61 	vmov.f32	s14, s3
 800e9e4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e9e8:	ee16 3a90 	vmov	r3, s13
 800e9ec:	fb97 f7f4 	sdiv	r7, r7, r4
 800e9f0:	ee17 ca90 	vmov	ip, s15
 800e9f4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e9f8:	fb9c fcf4 	sdiv	ip, ip, r4
 800e9fc:	fb0c 3306 	mla	r3, ip, r6, r3
 800ea00:	9302      	str	r3, [sp, #8]
 800ea02:	ee17 3a10 	vmov	r3, s14
 800ea06:	44b6      	add	lr, r6
 800ea08:	fb04 e505 	mla	r5, r4, r5, lr
 800ea0c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800ea10:	fb07 3706 	mla	r7, r7, r6, r3
 800ea14:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800ea18:	e9cd 4700 	strd	r4, r7, [sp]
 800ea1c:	2900      	cmp	r1, #0
 800ea1e:	bfcc      	ite	gt
 800ea20:	46a1      	movgt	r9, r4
 800ea22:	4691      	movle	r9, r2
 800ea24:	eba9 0306 	sub.w	r3, r9, r6
 800ea28:	f8da 4008 	ldr.w	r4, [sl, #8]
 800ea2c:	47a0      	blx	r4
 800ea2e:	b00d      	add	sp, #52	; 0x34
 800ea30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea34:	2500      	movs	r5, #0
 800ea36:	462e      	mov	r6, r5
 800ea38:	e799      	b.n	800e96e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800ea3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ea3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea40:	b0db      	sub	sp, #364	; 0x16c
 800ea42:	461d      	mov	r5, r3
 800ea44:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800ea48:	930a      	str	r3, [sp, #40]	; 0x28
 800ea4a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800ea4e:	930b      	str	r3, [sp, #44]	; 0x2c
 800ea50:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800ea54:	9310      	str	r3, [sp, #64]	; 0x40
 800ea56:	6803      	ldr	r3, [r0, #0]
 800ea58:	910f      	str	r1, [sp, #60]	; 0x3c
 800ea5a:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 800ea5c:	9009      	str	r0, [sp, #36]	; 0x24
 800ea5e:	4614      	mov	r4, r2
 800ea60:	4629      	mov	r1, r5
 800ea62:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800ea66:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800ea6a:	47b8      	blx	r7
 800ea6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ea6e:	6058      	str	r0, [r3, #4]
 800ea70:	2800      	cmp	r0, #0
 800ea72:	f000 83a1 	beq.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea76:	682b      	ldr	r3, [r5, #0]
 800ea78:	9314      	str	r3, [sp, #80]	; 0x50
 800ea7a:	686b      	ldr	r3, [r5, #4]
 800ea7c:	9315      	str	r3, [sp, #84]	; 0x54
 800ea7e:	4bc4      	ldr	r3, [pc, #784]	; (800ed90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800ea80:	ed94 7a02 	vldr	s14, [r4, #8]
 800ea84:	7819      	ldrb	r1, [r3, #0]
 800ea86:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800ea8a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800ea8e:	2900      	cmp	r1, #0
 800ea90:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ea94:	bf16      	itet	ne
 800ea96:	4619      	movne	r1, r3
 800ea98:	4611      	moveq	r1, r2
 800ea9a:	4613      	movne	r3, r2
 800ea9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eaa0:	9116      	str	r1, [sp, #88]	; 0x58
 800eaa2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800eaa6:	f240 8387 	bls.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eaaa:	ed94 7a07 	vldr	s14, [r4, #28]
 800eaae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800eab2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eab6:	f240 837f 	bls.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eaba:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800eabe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800eac2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eac6:	f240 8377 	bls.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eaca:	6822      	ldr	r2, [r4, #0]
 800eacc:	4bb1      	ldr	r3, [pc, #708]	; (800ed94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800eace:	429a      	cmp	r2, r3
 800ead0:	f2c0 8372 	blt.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ead4:	49b0      	ldr	r1, [pc, #704]	; (800ed98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800ead6:	6963      	ldr	r3, [r4, #20]
 800ead8:	428a      	cmp	r2, r1
 800eada:	f300 836d 	bgt.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eade:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800eae2:	48ae      	ldr	r0, [pc, #696]	; (800ed9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800eae4:	33ff      	adds	r3, #255	; 0xff
 800eae6:	4283      	cmp	r3, r0
 800eae8:	f200 8366 	bhi.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eaec:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800eaee:	4dac      	ldr	r5, [pc, #688]	; (800eda0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800eaf0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800eaf4:	33ff      	adds	r3, #255	; 0xff
 800eaf6:	42ab      	cmp	r3, r5
 800eaf8:	f200 835e 	bhi.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eafc:	6862      	ldr	r2, [r4, #4]
 800eafe:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800eb02:	33ff      	adds	r3, #255	; 0xff
 800eb04:	4283      	cmp	r3, r0
 800eb06:	f200 8357 	bhi.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eb0a:	69a1      	ldr	r1, [r4, #24]
 800eb0c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800eb10:	33ff      	adds	r3, #255	; 0xff
 800eb12:	4283      	cmp	r3, r0
 800eb14:	f200 8350 	bhi.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eb18:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800eb1a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800eb1e:	30ff      	adds	r0, #255	; 0xff
 800eb20:	42a8      	cmp	r0, r5
 800eb22:	f200 8349 	bhi.w	800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eb26:	428a      	cmp	r2, r1
 800eb28:	f280 8110 	bge.w	800ed4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800eb2c:	429a      	cmp	r2, r3
 800eb2e:	f300 8119 	bgt.w	800ed64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800eb32:	4299      	cmp	r1, r3
 800eb34:	f280 811d 	bge.w	800ed72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800eb38:	2502      	movs	r5, #2
 800eb3a:	2701      	movs	r7, #1
 800eb3c:	46a9      	mov	r9, r5
 800eb3e:	46b8      	mov	r8, r7
 800eb40:	f04f 0a00 	mov.w	sl, #0
 800eb44:	4621      	mov	r1, r4
 800eb46:	a849      	add	r0, sp, #292	; 0x124
 800eb48:	f003 fdae 	bl	80126a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800eb4c:	4622      	mov	r2, r4
 800eb4e:	4653      	mov	r3, sl
 800eb50:	a949      	add	r1, sp, #292	; 0x124
 800eb52:	f8cd 9000 	str.w	r9, [sp]
 800eb56:	a819      	add	r0, sp, #100	; 0x64
 800eb58:	f003 fed6 	bl	8012908 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800eb5c:	4622      	mov	r2, r4
 800eb5e:	4653      	mov	r3, sl
 800eb60:	a949      	add	r1, sp, #292	; 0x124
 800eb62:	f8cd 8000 	str.w	r8, [sp]
 800eb66:	a829      	add	r0, sp, #164	; 0xa4
 800eb68:	f003 fece 	bl	8012908 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800eb6c:	4643      	mov	r3, r8
 800eb6e:	4622      	mov	r2, r4
 800eb70:	a949      	add	r1, sp, #292	; 0x124
 800eb72:	f8cd 9000 	str.w	r9, [sp]
 800eb76:	a839      	add	r0, sp, #228	; 0xe4
 800eb78:	f003 fec6 	bl	8012908 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800eb7c:	42af      	cmp	r7, r5
 800eb7e:	bfb5      	itete	lt
 800eb80:	2300      	movlt	r3, #0
 800eb82:	2301      	movge	r3, #1
 800eb84:	930e      	strlt	r3, [sp, #56]	; 0x38
 800eb86:	930e      	strge	r3, [sp, #56]	; 0x38
 800eb88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800eb8a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800eb8e:	af12      	add	r7, sp, #72	; 0x48
 800eb90:	bfb9      	ittee	lt
 800eb92:	ad29      	addlt	r5, sp, #164	; 0xa4
 800eb94:	ac19      	addlt	r4, sp, #100	; 0x64
 800eb96:	ad19      	addge	r5, sp, #100	; 0x64
 800eb98:	ac29      	addge	r4, sp, #164	; 0xa4
 800eb9a:	e887 0003 	stmia.w	r7, {r0, r1}
 800eb9e:	b928      	cbnz	r0, 800ebac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800eba0:	4b80      	ldr	r3, [pc, #512]	; (800eda4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800eba2:	6818      	ldr	r0, [r3, #0]
 800eba4:	6803      	ldr	r3, [r0, #0]
 800eba6:	6a1b      	ldr	r3, [r3, #32]
 800eba8:	4798      	blx	r3
 800ebaa:	6038      	str	r0, [r7, #0]
 800ebac:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ebae:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ebb2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ebb6:	930c      	str	r3, [sp, #48]	; 0x30
 800ebb8:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ebba:	6963      	ldr	r3, [r4, #20]
 800ebbc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800ebbe:	440b      	add	r3, r1
 800ebc0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ebc4:	4408      	add	r0, r1
 800ebc6:	b200      	sxth	r0, r0
 800ebc8:	4283      	cmp	r3, r0
 800ebca:	900d      	str	r0, [sp, #52]	; 0x34
 800ebcc:	f280 80dd 	bge.w	800ed8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800ebd0:	428b      	cmp	r3, r1
 800ebd2:	da08      	bge.n	800ebe6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ebd4:	2a00      	cmp	r2, #0
 800ebd6:	dd06      	ble.n	800ebe6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ebd8:	1acb      	subs	r3, r1, r3
 800ebda:	429a      	cmp	r2, r3
 800ebdc:	f2c0 80e4 	blt.w	800eda8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800ebe0:	2b00      	cmp	r3, #0
 800ebe2:	f300 80e2 	bgt.w	800edaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800ebe6:	6967      	ldr	r7, [r4, #20]
 800ebe8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ebea:	443b      	add	r3, r7
 800ebec:	461f      	mov	r7, r3
 800ebee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ebf0:	1bdf      	subs	r7, r3, r7
 800ebf2:	4297      	cmp	r7, r2
 800ebf4:	bfa8      	it	ge
 800ebf6:	4617      	movge	r7, r2
 800ebf8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ebfc:	2f00      	cmp	r7, #0
 800ebfe:	f340 8166 	ble.w	800eece <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800ec02:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ec04:	6829      	ldr	r1, [r5, #0]
 800ec06:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ec0a:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ec0e:	6820      	ldr	r0, [r4, #0]
 800ec10:	4411      	add	r1, r2
 800ec12:	4299      	cmp	r1, r3
 800ec14:	dd1a      	ble.n	800ec4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ec16:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ec1a:	440b      	add	r3, r1
 800ec1c:	4402      	add	r2, r0
 800ec1e:	b21b      	sxth	r3, r3
 800ec20:	429a      	cmp	r2, r3
 800ec22:	dc13      	bgt.n	800ec4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ec24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ec26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ec28:	681b      	ldr	r3, [r3, #0]
 800ec2a:	9206      	str	r2, [sp, #24]
 800ec2c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ec2e:	9205      	str	r2, [sp, #20]
 800ec30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ec32:	9500      	str	r5, [sp, #0]
 800ec34:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ec38:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ec3a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ec3c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ec40:	a912      	add	r1, sp, #72	; 0x48
 800ec42:	f8d3 9044 	ldr.w	r9, [r3, #68]	; 0x44
 800ec46:	aa49      	add	r2, sp, #292	; 0x124
 800ec48:	4623      	mov	r3, r4
 800ec4a:	47c8      	blx	r9
 800ec4c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ec50:	441a      	add	r2, r3
 800ec52:	6963      	ldr	r3, [r4, #20]
 800ec54:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ec58:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ec5c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ec60:	68a1      	ldr	r1, [r4, #8]
 800ec62:	ed94 6a08 	vldr	s12, [r4, #32]
 800ec66:	6022      	str	r2, [r4, #0]
 800ec68:	3301      	adds	r3, #1
 800ec6a:	6163      	str	r3, [r4, #20]
 800ec6c:	69a3      	ldr	r3, [r4, #24]
 800ec6e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ec72:	3b01      	subs	r3, #1
 800ec74:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ec78:	61a3      	str	r3, [r4, #24]
 800ec7a:	6923      	ldr	r3, [r4, #16]
 800ec7c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ec80:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ec84:	edd4 6a07 	vldr	s13, [r4, #28]
 800ec88:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ec8c:	440b      	add	r3, r1
 800ec8e:	68e1      	ldr	r1, [r4, #12]
 800ec90:	6123      	str	r3, [r4, #16]
 800ec92:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ec96:	428b      	cmp	r3, r1
 800ec98:	edc4 6a07 	vstr	s13, [r4, #28]
 800ec9c:	db15      	blt.n	800ecca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800ec9e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800eca2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800eca6:	3201      	adds	r2, #1
 800eca8:	edc4 6a07 	vstr	s13, [r4, #28]
 800ecac:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ecb0:	6022      	str	r2, [r4, #0]
 800ecb2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ecb6:	1a5b      	subs	r3, r3, r1
 800ecb8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ecbc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ecc0:	6123      	str	r3, [r4, #16]
 800ecc2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ecc6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ecca:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ecce:	441a      	add	r2, r3
 800ecd0:	696b      	ldr	r3, [r5, #20]
 800ecd2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ecd6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ecda:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ecde:	68a9      	ldr	r1, [r5, #8]
 800ece0:	ed95 6a08 	vldr	s12, [r5, #32]
 800ece4:	602a      	str	r2, [r5, #0]
 800ece6:	3301      	adds	r3, #1
 800ece8:	616b      	str	r3, [r5, #20]
 800ecea:	69ab      	ldr	r3, [r5, #24]
 800ecec:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ecf0:	3b01      	subs	r3, #1
 800ecf2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ecf6:	61ab      	str	r3, [r5, #24]
 800ecf8:	692b      	ldr	r3, [r5, #16]
 800ecfa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ecfe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed02:	edd5 6a07 	vldr	s13, [r5, #28]
 800ed06:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ed0a:	440b      	add	r3, r1
 800ed0c:	68e9      	ldr	r1, [r5, #12]
 800ed0e:	612b      	str	r3, [r5, #16]
 800ed10:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ed14:	428b      	cmp	r3, r1
 800ed16:	edc5 6a07 	vstr	s13, [r5, #28]
 800ed1a:	db15      	blt.n	800ed48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ed1c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800ed20:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ed24:	3201      	adds	r2, #1
 800ed26:	edc5 6a07 	vstr	s13, [r5, #28]
 800ed2a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ed2e:	602a      	str	r2, [r5, #0]
 800ed30:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ed34:	1a5b      	subs	r3, r3, r1
 800ed36:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ed3a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ed3e:	612b      	str	r3, [r5, #16]
 800ed40:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ed44:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ed48:	3f01      	subs	r7, #1
 800ed4a:	e757      	b.n	800ebfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ed4c:	4299      	cmp	r1, r3
 800ed4e:	dc13      	bgt.n	800ed78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ed50:	429a      	cmp	r2, r3
 800ed52:	da14      	bge.n	800ed7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ed54:	2502      	movs	r5, #2
 800ed56:	2703      	movs	r7, #3
 800ed58:	46a9      	mov	r9, r5
 800ed5a:	f04f 0800 	mov.w	r8, #0
 800ed5e:	f04f 0a01 	mov.w	sl, #1
 800ed62:	e6ef      	b.n	800eb44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ed64:	2501      	movs	r5, #1
 800ed66:	2700      	movs	r7, #0
 800ed68:	46a9      	mov	r9, r5
 800ed6a:	46b8      	mov	r8, r7
 800ed6c:	f04f 0a02 	mov.w	sl, #2
 800ed70:	e6e8      	b.n	800eb44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ed72:	2501      	movs	r5, #1
 800ed74:	2702      	movs	r7, #2
 800ed76:	e6e1      	b.n	800eb3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ed78:	2500      	movs	r5, #0
 800ed7a:	2701      	movs	r7, #1
 800ed7c:	e7f4      	b.n	800ed68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ed7e:	2702      	movs	r7, #2
 800ed80:	2503      	movs	r5, #3
 800ed82:	f04f 0900 	mov.w	r9, #0
 800ed86:	46b8      	mov	r8, r7
 800ed88:	e7e9      	b.n	800ed5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ed8a:	4613      	mov	r3, r2
 800ed8c:	e728      	b.n	800ebe0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ed8e:	bf00      	nop
 800ed90:	2000e3d8 	.word	0x2000e3d8
 800ed94:	fffd8f01 	.word	0xfffd8f01
 800ed98:	00027100 	.word	0x00027100
 800ed9c:	0004e1ff 	.word	0x0004e1ff
 800eda0:	0004e1fe 	.word	0x0004e1fe
 800eda4:	2000e3e0 	.word	0x2000e3e0
 800eda8:	4613      	mov	r3, r2
 800edaa:	992b      	ldr	r1, [sp, #172]	; 0xac
 800edac:	9111      	str	r1, [sp, #68]	; 0x44
 800edae:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800edb2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800edb6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800edb8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800edbc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800edc0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800edc4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800edc8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800edcc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800edd0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800edd4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800edd8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800eddc:	469e      	mov	lr, r3
 800edde:	469c      	mov	ip, r3
 800ede0:	f04f 0900 	mov.w	r9, #0
 800ede4:	f1bc 0f00 	cmp.w	ip, #0
 800ede8:	d147      	bne.n	800ee7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800edea:	eb03 0c07 	add.w	ip, r3, r7
 800edee:	1ad7      	subs	r7, r2, r3
 800edf0:	f1b9 0f00 	cmp.w	r9, #0
 800edf4:	d009      	beq.n	800ee0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800edf6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800edfa:	9029      	str	r0, [sp, #164]	; 0xa4
 800edfc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800ee00:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800ee04:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800ee08:	912d      	str	r1, [sp, #180]	; 0xb4
 800ee0a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ee0c:	9111      	str	r1, [sp, #68]	; 0x44
 800ee0e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ee12:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ee16:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ee1a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ee1e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ee22:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ee26:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ee2a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ee2e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ee32:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ee36:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ee3a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ee3e:	f04f 0800 	mov.w	r8, #0
 800ee42:	f1be 0f00 	cmp.w	lr, #0
 800ee46:	d031      	beq.n	800eeac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ee48:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ee4a:	4431      	add	r1, r6
 800ee4c:	4549      	cmp	r1, r9
 800ee4e:	4450      	add	r0, sl
 800ee50:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ee54:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ee58:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ee5c:	db08      	blt.n	800ee70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ee5e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ee62:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ee66:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ee6a:	3001      	adds	r0, #1
 800ee6c:	eba1 0109 	sub.w	r1, r1, r9
 800ee70:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ee74:	f04f 0801 	mov.w	r8, #1
 800ee78:	e7e3      	b.n	800ee42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ee7a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ee7c:	4431      	add	r1, r6
 800ee7e:	4541      	cmp	r1, r8
 800ee80:	4450      	add	r0, sl
 800ee82:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ee86:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ee8a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ee8e:	db08      	blt.n	800eea2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ee90:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ee94:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ee98:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ee9c:	3001      	adds	r0, #1
 800ee9e:	eba1 0108 	sub.w	r1, r1, r8
 800eea2:	f10c 3cff 	add.w	ip, ip, #4294967295
 800eea6:	f04f 0901 	mov.w	r9, #1
 800eeaa:	e79b      	b.n	800ede4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800eeac:	449c      	add	ip, r3
 800eeae:	1aff      	subs	r7, r7, r3
 800eeb0:	f1b8 0f00 	cmp.w	r8, #0
 800eeb4:	d009      	beq.n	800eeca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800eeb6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800eeba:	9019      	str	r0, [sp, #100]	; 0x64
 800eebc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800eec0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800eec4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800eec8:	911d      	str	r1, [sp, #116]	; 0x74
 800eeca:	1ad2      	subs	r2, r2, r3
 800eecc:	e68b      	b.n	800ebe6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800eece:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800eed0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800eed2:	2b00      	cmp	r3, #0
 800eed4:	f000 80d1 	beq.w	800f07a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800eed8:	ad19      	add	r5, sp, #100	; 0x64
 800eeda:	ac39      	add	r4, sp, #228	; 0xe4
 800eedc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800eede:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800eee2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800eee6:	930c      	str	r3, [sp, #48]	; 0x30
 800eee8:	990c      	ldr	r1, [sp, #48]	; 0x30
 800eeea:	6963      	ldr	r3, [r4, #20]
 800eeec:	440b      	add	r3, r1
 800eeee:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800eef2:	4408      	add	r0, r1
 800eef4:	b200      	sxth	r0, r0
 800eef6:	4283      	cmp	r3, r0
 800eef8:	900d      	str	r0, [sp, #52]	; 0x34
 800eefa:	f280 80c1 	bge.w	800f080 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800eefe:	428b      	cmp	r3, r1
 800ef00:	da08      	bge.n	800ef14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ef02:	2a00      	cmp	r2, #0
 800ef04:	dd06      	ble.n	800ef14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ef06:	1acb      	subs	r3, r1, r3
 800ef08:	429a      	cmp	r2, r3
 800ef0a:	f2c0 80bb 	blt.w	800f084 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ef0e:	2b00      	cmp	r3, #0
 800ef10:	f300 80b9 	bgt.w	800f086 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ef14:	6967      	ldr	r7, [r4, #20]
 800ef16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ef18:	443b      	add	r3, r7
 800ef1a:	461f      	mov	r7, r3
 800ef1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ef1e:	1bdf      	subs	r7, r3, r7
 800ef20:	4297      	cmp	r7, r2
 800ef22:	bfa8      	it	ge
 800ef24:	4617      	movge	r7, r2
 800ef26:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ef2a:	2f00      	cmp	r7, #0
 800ef2c:	f340 813c 	ble.w	800f1a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ef30:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ef32:	6829      	ldr	r1, [r5, #0]
 800ef34:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ef38:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ef3c:	6820      	ldr	r0, [r4, #0]
 800ef3e:	4411      	add	r1, r2
 800ef40:	4299      	cmp	r1, r3
 800ef42:	dd1a      	ble.n	800ef7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ef44:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ef48:	440b      	add	r3, r1
 800ef4a:	4402      	add	r2, r0
 800ef4c:	b21b      	sxth	r3, r3
 800ef4e:	429a      	cmp	r2, r3
 800ef50:	dc13      	bgt.n	800ef7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ef52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ef54:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ef56:	681b      	ldr	r3, [r3, #0]
 800ef58:	9206      	str	r2, [sp, #24]
 800ef5a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ef5c:	9205      	str	r2, [sp, #20]
 800ef5e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ef60:	9500      	str	r5, [sp, #0]
 800ef62:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ef66:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ef68:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ef6a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ef6e:	a912      	add	r1, sp, #72	; 0x48
 800ef70:	f8d3 9044 	ldr.w	r9, [r3, #68]	; 0x44
 800ef74:	aa49      	add	r2, sp, #292	; 0x124
 800ef76:	4623      	mov	r3, r4
 800ef78:	47c8      	blx	r9
 800ef7a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ef7e:	441a      	add	r2, r3
 800ef80:	6963      	ldr	r3, [r4, #20]
 800ef82:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ef86:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ef8a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ef8e:	68a1      	ldr	r1, [r4, #8]
 800ef90:	ed94 6a08 	vldr	s12, [r4, #32]
 800ef94:	6022      	str	r2, [r4, #0]
 800ef96:	3301      	adds	r3, #1
 800ef98:	6163      	str	r3, [r4, #20]
 800ef9a:	69a3      	ldr	r3, [r4, #24]
 800ef9c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800efa0:	3b01      	subs	r3, #1
 800efa2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800efa6:	61a3      	str	r3, [r4, #24]
 800efa8:	6923      	ldr	r3, [r4, #16]
 800efaa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800efae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800efb2:	edd4 6a07 	vldr	s13, [r4, #28]
 800efb6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800efba:	440b      	add	r3, r1
 800efbc:	68e1      	ldr	r1, [r4, #12]
 800efbe:	6123      	str	r3, [r4, #16]
 800efc0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800efc4:	428b      	cmp	r3, r1
 800efc6:	edc4 6a07 	vstr	s13, [r4, #28]
 800efca:	db15      	blt.n	800eff8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800efcc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800efd0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800efd4:	3201      	adds	r2, #1
 800efd6:	edc4 6a07 	vstr	s13, [r4, #28]
 800efda:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800efde:	6022      	str	r2, [r4, #0]
 800efe0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800efe4:	1a5b      	subs	r3, r3, r1
 800efe6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800efea:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800efee:	6123      	str	r3, [r4, #16]
 800eff0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800eff4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800eff8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800effc:	441a      	add	r2, r3
 800effe:	696b      	ldr	r3, [r5, #20]
 800f000:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f004:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f008:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f00c:	68a9      	ldr	r1, [r5, #8]
 800f00e:	ed95 6a08 	vldr	s12, [r5, #32]
 800f012:	602a      	str	r2, [r5, #0]
 800f014:	3301      	adds	r3, #1
 800f016:	616b      	str	r3, [r5, #20]
 800f018:	69ab      	ldr	r3, [r5, #24]
 800f01a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f01e:	3b01      	subs	r3, #1
 800f020:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f024:	61ab      	str	r3, [r5, #24]
 800f026:	692b      	ldr	r3, [r5, #16]
 800f028:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f02c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f030:	edd5 6a07 	vldr	s13, [r5, #28]
 800f034:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f038:	440b      	add	r3, r1
 800f03a:	68e9      	ldr	r1, [r5, #12]
 800f03c:	612b      	str	r3, [r5, #16]
 800f03e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f042:	428b      	cmp	r3, r1
 800f044:	edc5 6a07 	vstr	s13, [r5, #28]
 800f048:	db15      	blt.n	800f076 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f04a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f04e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f052:	3201      	adds	r2, #1
 800f054:	edc5 6a07 	vstr	s13, [r5, #28]
 800f058:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f05c:	602a      	str	r2, [r5, #0]
 800f05e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f062:	1a5b      	subs	r3, r3, r1
 800f064:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f068:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f06c:	612b      	str	r3, [r5, #16]
 800f06e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f072:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f076:	3f01      	subs	r7, #1
 800f078:	e757      	b.n	800ef2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f07a:	ad39      	add	r5, sp, #228	; 0xe4
 800f07c:	ac19      	add	r4, sp, #100	; 0x64
 800f07e:	e72d      	b.n	800eedc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f080:	4613      	mov	r3, r2
 800f082:	e744      	b.n	800ef0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f084:	4613      	mov	r3, r2
 800f086:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800f08a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800f08c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800f090:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800f094:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800f098:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800f09c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800f0a0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800f0a4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800f0a8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800f0aa:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800f0ae:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800f0b2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800f0b6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800f0ba:	960e      	str	r6, [sp, #56]	; 0x38
 800f0bc:	469e      	mov	lr, r3
 800f0be:	461f      	mov	r7, r3
 800f0c0:	f04f 0900 	mov.w	r9, #0
 800f0c4:	2f00      	cmp	r7, #0
 800f0c6:	d146      	bne.n	800f156 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f0c8:	449c      	add	ip, r3
 800f0ca:	1ad7      	subs	r7, r2, r3
 800f0cc:	f1b9 0f00 	cmp.w	r9, #0
 800f0d0:	d009      	beq.n	800f0e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f0d2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800f0d6:	9039      	str	r0, [sp, #228]	; 0xe4
 800f0d8:	913d      	str	r1, [sp, #244]	; 0xf4
 800f0da:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800f0de:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800f0e2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800f0e6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f0e8:	910e      	str	r1, [sp, #56]	; 0x38
 800f0ea:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f0ee:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f0f2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f0f6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f0fa:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f0fe:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f102:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f106:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f10a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f10e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f112:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f116:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f11a:	f04f 0800 	mov.w	r8, #0
 800f11e:	f1be 0f00 	cmp.w	lr, #0
 800f122:	d030      	beq.n	800f186 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f124:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f126:	4431      	add	r1, r6
 800f128:	4549      	cmp	r1, r9
 800f12a:	4450      	add	r0, sl
 800f12c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f130:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f134:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f138:	db08      	blt.n	800f14c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f13a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f13e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f142:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f146:	3001      	adds	r0, #1
 800f148:	eba1 0109 	sub.w	r1, r1, r9
 800f14c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f150:	f04f 0801 	mov.w	r8, #1
 800f154:	e7e3      	b.n	800f11e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f156:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800f158:	4431      	add	r1, r6
 800f15a:	4541      	cmp	r1, r8
 800f15c:	4450      	add	r0, sl
 800f15e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f162:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f166:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f16a:	db08      	blt.n	800f17e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f16c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f170:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f174:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f178:	3001      	adds	r0, #1
 800f17a:	eba1 0108 	sub.w	r1, r1, r8
 800f17e:	3f01      	subs	r7, #1
 800f180:	f04f 0901 	mov.w	r9, #1
 800f184:	e79e      	b.n	800f0c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f186:	449c      	add	ip, r3
 800f188:	1aff      	subs	r7, r7, r3
 800f18a:	f1b8 0f00 	cmp.w	r8, #0
 800f18e:	d009      	beq.n	800f1a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f190:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f194:	9019      	str	r0, [sp, #100]	; 0x64
 800f196:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f19a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f19e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f1a2:	911d      	str	r1, [sp, #116]	; 0x74
 800f1a4:	1ad2      	subs	r2, r2, r3
 800f1a6:	e6b5      	b.n	800ef14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f1a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f1aa:	681b      	ldr	r3, [r3, #0]
 800f1ac:	b923      	cbnz	r3, 800f1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f1ae:	4b04      	ldr	r3, [pc, #16]	; (800f1c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f1b0:	6818      	ldr	r0, [r3, #0]
 800f1b2:	6803      	ldr	r3, [r0, #0]
 800f1b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f1b6:	4798      	blx	r3
 800f1b8:	b05b      	add	sp, #364	; 0x16c
 800f1ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f1be:	bf00      	nop
 800f1c0:	2000e3e0 	.word	0x2000e3e0

0800f1c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800f1c4:	b570      	push	{r4, r5, r6, lr}
 800f1c6:	4604      	mov	r4, r0
 800f1c8:	2500      	movs	r5, #0
 800f1ca:	7223      	strb	r3, [r4, #8]
 800f1cc:	9804      	ldr	r0, [sp, #16]
 800f1ce:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f1d2:	8025      	strh	r5, [r4, #0]
 800f1d4:	6061      	str	r1, [r4, #4]
 800f1d6:	7263      	strb	r3, [r4, #9]
 800f1d8:	60e0      	str	r0, [r4, #12]
 800f1da:	8222      	strh	r2, [r4, #16]
 800f1dc:	8265      	strh	r5, [r4, #18]
 800f1de:	82a5      	strh	r5, [r4, #20]
 800f1e0:	82e5      	strh	r5, [r4, #22]
 800f1e2:	8325      	strh	r5, [r4, #24]
 800f1e4:	8365      	strh	r5, [r4, #26]
 800f1e6:	83a5      	strh	r5, [r4, #28]
 800f1e8:	77a5      	strb	r5, [r4, #30]
 800f1ea:	6803      	ldr	r3, [r0, #0]
 800f1ec:	695b      	ldr	r3, [r3, #20]
 800f1ee:	4798      	blx	r3
 800f1f0:	4606      	mov	r6, r0
 800f1f2:	b1f8      	cbz	r0, 800f234 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800f1f4:	68e0      	ldr	r0, [r4, #12]
 800f1f6:	6803      	ldr	r3, [r0, #0]
 800f1f8:	4631      	mov	r1, r6
 800f1fa:	68db      	ldr	r3, [r3, #12]
 800f1fc:	4798      	blx	r3
 800f1fe:	7b43      	ldrb	r3, [r0, #13]
 800f200:	7a82      	ldrb	r2, [r0, #10]
 800f202:	005b      	lsls	r3, r3, #1
 800f204:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f208:	4313      	orrs	r3, r2
 800f20a:	83a3      	strh	r3, [r4, #28]
 800f20c:	7a63      	ldrb	r3, [r4, #9]
 800f20e:	2b04      	cmp	r3, #4
 800f210:	4605      	mov	r5, r0
 800f212:	d10f      	bne.n	800f234 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800f214:	68e0      	ldr	r0, [r4, #12]
 800f216:	6803      	ldr	r3, [r0, #0]
 800f218:	462a      	mov	r2, r5
 800f21a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f21c:	4631      	mov	r1, r6
 800f21e:	4798      	blx	r3
 800f220:	7b6b      	ldrb	r3, [r5, #13]
 800f222:	005b      	lsls	r3, r3, #1
 800f224:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f228:	7aab      	ldrb	r3, [r5, #10]
 800f22a:	4313      	orrs	r3, r2
 800f22c:	4418      	add	r0, r3
 800f22e:	8ba3      	ldrh	r3, [r4, #28]
 800f230:	4418      	add	r0, r3
 800f232:	83a0      	strh	r0, [r4, #28]
 800f234:	4620      	mov	r0, r4
 800f236:	bd70      	pop	{r4, r5, r6, pc}

0800f238 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f23c:	2400      	movs	r4, #0
 800f23e:	b085      	sub	sp, #20
 800f240:	4681      	mov	r9, r0
 800f242:	4688      	mov	r8, r1
 800f244:	4692      	mov	sl, r2
 800f246:	469b      	mov	fp, r3
 800f248:	4627      	mov	r7, r4
 800f24a:	4625      	mov	r5, r4
 800f24c:	4626      	mov	r6, r4
 800f24e:	4554      	cmp	r4, sl
 800f250:	da2a      	bge.n	800f2a8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f252:	2300      	movs	r3, #0
 800f254:	9303      	str	r3, [sp, #12]
 800f256:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f25a:	429d      	cmp	r5, r3
 800f25c:	d004      	beq.n	800f268 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f25e:	f242 030b 	movw	r3, #8203	; 0x200b
 800f262:	429d      	cmp	r5, r3
 800f264:	bf18      	it	ne
 800f266:	462f      	movne	r7, r5
 800f268:	ab03      	add	r3, sp, #12
 800f26a:	4642      	mov	r2, r8
 800f26c:	4659      	mov	r1, fp
 800f26e:	4648      	mov	r0, r9
 800f270:	f002 ffa0 	bl	80121b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f274:	4605      	mov	r5, r0
 800f276:	b1b8      	cbz	r0, 800f2a8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f278:	280a      	cmp	r0, #10
 800f27a:	d015      	beq.n	800f2a8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f27c:	9a03      	ldr	r2, [sp, #12]
 800f27e:	b18a      	cbz	r2, 800f2a4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f280:	7b50      	ldrb	r0, [r2, #13]
 800f282:	7a93      	ldrb	r3, [r2, #10]
 800f284:	8895      	ldrh	r5, [r2, #4]
 800f286:	0040      	lsls	r0, r0, #1
 800f288:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800f28c:	4303      	orrs	r3, r0
 800f28e:	9301      	str	r3, [sp, #4]
 800f290:	f8d8 3000 	ldr.w	r3, [r8]
 800f294:	4639      	mov	r1, r7
 800f296:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f298:	4640      	mov	r0, r8
 800f29a:	4798      	blx	r3
 800f29c:	9b01      	ldr	r3, [sp, #4]
 800f29e:	4418      	add	r0, r3
 800f2a0:	4406      	add	r6, r0
 800f2a2:	b2b6      	uxth	r6, r6
 800f2a4:	3401      	adds	r4, #1
 800f2a6:	e7d2      	b.n	800f24e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f2a8:	4630      	mov	r0, r6
 800f2aa:	b005      	add	sp, #20
 800f2ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f2b0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f2b0:	2a02      	cmp	r2, #2
 800f2b2:	b530      	push	{r4, r5, lr}
 800f2b4:	d011      	beq.n	800f2da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f2b6:	2a03      	cmp	r2, #3
 800f2b8:	d01c      	beq.n	800f2f4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f2ba:	2a01      	cmp	r2, #1
 800f2bc:	d10c      	bne.n	800f2d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f2be:	888b      	ldrh	r3, [r1, #4]
 800f2c0:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f2c4:	8801      	ldrh	r1, [r0, #0]
 800f2c6:	8844      	ldrh	r4, [r0, #2]
 800f2c8:	8004      	strh	r4, [r0, #0]
 800f2ca:	1a9b      	subs	r3, r3, r2
 800f2cc:	1a5b      	subs	r3, r3, r1
 800f2ce:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f2d2:	8043      	strh	r3, [r0, #2]
 800f2d4:	8081      	strh	r1, [r0, #4]
 800f2d6:	80c2      	strh	r2, [r0, #6]
 800f2d8:	bd30      	pop	{r4, r5, pc}
 800f2da:	88cb      	ldrh	r3, [r1, #6]
 800f2dc:	88c2      	ldrh	r2, [r0, #6]
 800f2de:	1a9b      	subs	r3, r3, r2
 800f2e0:	8842      	ldrh	r2, [r0, #2]
 800f2e2:	1a9b      	subs	r3, r3, r2
 800f2e4:	888a      	ldrh	r2, [r1, #4]
 800f2e6:	8881      	ldrh	r1, [r0, #4]
 800f2e8:	8043      	strh	r3, [r0, #2]
 800f2ea:	1a52      	subs	r2, r2, r1
 800f2ec:	8801      	ldrh	r1, [r0, #0]
 800f2ee:	1a52      	subs	r2, r2, r1
 800f2f0:	8002      	strh	r2, [r0, #0]
 800f2f2:	e7f1      	b.n	800f2d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f2f4:	88cb      	ldrh	r3, [r1, #6]
 800f2f6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f2fa:	8841      	ldrh	r1, [r0, #2]
 800f2fc:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f300:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f304:	8045      	strh	r5, [r0, #2]
 800f306:	1a9b      	subs	r3, r3, r2
 800f308:	1a5b      	subs	r3, r3, r1
 800f30a:	8003      	strh	r3, [r0, #0]
 800f30c:	8082      	strh	r2, [r0, #4]
 800f30e:	80c4      	strh	r4, [r0, #6]
 800f310:	e7e2      	b.n	800f2d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f312 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f312:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f316:	b09f      	sub	sp, #124	; 0x7c
 800f318:	9116      	str	r1, [sp, #88]	; 0x58
 800f31a:	9317      	str	r3, [sp, #92]	; 0x5c
 800f31c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f31e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f320:	8809      	ldrh	r1, [r1, #0]
 800f322:	889b      	ldrh	r3, [r3, #4]
 800f324:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800f328:	9212      	str	r2, [sp, #72]	; 0x48
 800f32a:	440b      	add	r3, r1
 800f32c:	b21b      	sxth	r3, r3
 800f32e:	9310      	str	r3, [sp, #64]	; 0x40
 800f330:	f8d8 3000 	ldr.w	r3, [r8]
 800f334:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800f338:	7a59      	ldrb	r1, [r3, #9]
 800f33a:	7a1b      	ldrb	r3, [r3, #8]
 800f33c:	9315      	str	r3, [sp, #84]	; 0x54
 800f33e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f340:	9011      	str	r0, [sp, #68]	; 0x44
 800f342:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800f346:	9114      	str	r1, [sp, #80]	; 0x50
 800f348:	f9b3 5000 	ldrsh.w	r5, [r3]
 800f34c:	2a00      	cmp	r2, #0
 800f34e:	d067      	beq.n	800f420 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800f350:	f898 3010 	ldrb.w	r3, [r8, #16]
 800f354:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800f356:	2b04      	cmp	r3, #4
 800f358:	bf14      	ite	ne
 800f35a:	2301      	movne	r3, #1
 800f35c:	2302      	moveq	r3, #2
 800f35e:	4413      	add	r3, r2
 800f360:	f04f 0900 	mov.w	r9, #0
 800f364:	930f      	str	r3, [sp, #60]	; 0x3c
 800f366:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800f36a:	464c      	mov	r4, r9
 800f36c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800f370:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800f374:	4293      	cmp	r3, r2
 800f376:	f280 808c 	bge.w	800f492 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800f37a:	2300      	movs	r3, #0
 800f37c:	931c      	str	r3, [sp, #112]	; 0x70
 800f37e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f382:	429c      	cmp	r4, r3
 800f384:	d006      	beq.n	800f394 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800f386:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f388:	f242 020b 	movw	r2, #8203	; 0x200b
 800f38c:	4294      	cmp	r4, r2
 800f38e:	bf18      	it	ne
 800f390:	4623      	movne	r3, r4
 800f392:	930d      	str	r3, [sp, #52]	; 0x34
 800f394:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f396:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800f398:	f8d8 2000 	ldr.w	r2, [r8]
 800f39c:	428b      	cmp	r3, r1
 800f39e:	db41      	blt.n	800f424 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800f3a0:	6813      	ldr	r3, [r2, #0]
 800f3a2:	4610      	mov	r0, r2
 800f3a4:	695b      	ldr	r3, [r3, #20]
 800f3a6:	4798      	blx	r3
 800f3a8:	4604      	mov	r4, r0
 800f3aa:	f8d8 0000 	ldr.w	r0, [r8]
 800f3ae:	6803      	ldr	r3, [r0, #0]
 800f3b0:	aa1d      	add	r2, sp, #116	; 0x74
 800f3b2:	689e      	ldr	r6, [r3, #8]
 800f3b4:	4621      	mov	r1, r4
 800f3b6:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f3ba:	47b0      	blx	r6
 800f3bc:	901c      	str	r0, [sp, #112]	; 0x70
 800f3be:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f3c2:	429c      	cmp	r4, r3
 800f3c4:	f000 80e9 	beq.w	800f59a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800f3c8:	f242 030b 	movw	r3, #8203	; 0x200b
 800f3cc:	429c      	cmp	r4, r3
 800f3ce:	f000 80e4 	beq.w	800f59a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800f3d2:	2c00      	cmp	r4, #0
 800f3d4:	f000 80f6 	beq.w	800f5c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800f3d8:	2c0a      	cmp	r4, #10
 800f3da:	d060      	beq.n	800f49e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800f3dc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f3de:	b36a      	cbz	r2, 800f43c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800f3e0:	8894      	ldrh	r4, [r2, #4]
 800f3e2:	f1bb 0f00 	cmp.w	fp, #0
 800f3e6:	d03b      	beq.n	800f460 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800f3e8:	f892 900d 	ldrb.w	r9, [r2, #13]
 800f3ec:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f3f0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800f3f4:	f892 900a 	ldrb.w	r9, [r2, #10]
 800f3f8:	f1bb 0f01 	cmp.w	fp, #1
 800f3fc:	ea49 0903 	orr.w	r9, r9, r3
 800f400:	d134      	bne.n	800f46c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800f402:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f404:	eba5 0509 	sub.w	r5, r5, r9
 800f408:	2b00      	cmp	r3, #0
 800f40a:	d14f      	bne.n	800f4ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800f40c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f40e:	eb09 0305 	add.w	r3, r9, r5
 800f412:	4413      	add	r3, r2
 800f414:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f416:	f9b2 2000 	ldrsh.w	r2, [r2]
 800f41a:	4293      	cmp	r3, r2
 800f41c:	da51      	bge.n	800f4c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800f41e:	e038      	b.n	800f492 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800f420:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f422:	e79d      	b.n	800f360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800f424:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f428:	9301      	str	r3, [sp, #4]
 800f42a:	ab1d      	add	r3, sp, #116	; 0x74
 800f42c:	9300      	str	r3, [sp, #0]
 800f42e:	4659      	mov	r1, fp
 800f430:	ab1c      	add	r3, sp, #112	; 0x70
 800f432:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f434:	f002 ff16 	bl	8012264 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800f438:	4604      	mov	r4, r0
 800f43a:	e7c0      	b.n	800f3be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800f43c:	f8d8 0000 	ldr.w	r0, [r8]
 800f440:	6803      	ldr	r3, [r0, #0]
 800f442:	691b      	ldr	r3, [r3, #16]
 800f444:	4798      	blx	r3
 800f446:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f44a:	4298      	cmp	r0, r3
 800f44c:	f000 80a5 	beq.w	800f59a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800f450:	f242 030b 	movw	r3, #8203	; 0x200b
 800f454:	4298      	cmp	r0, r3
 800f456:	f000 80a0 	beq.w	800f59a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800f45a:	f1bb 0f00 	cmp.w	fp, #0
 800f45e:	d100      	bne.n	800f462 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800f460:	444d      	add	r5, r9
 800f462:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f464:	2a00      	cmp	r2, #0
 800f466:	d1bf      	bne.n	800f3e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800f468:	4691      	mov	r9, r2
 800f46a:	e096      	b.n	800f59a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800f46c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f46e:	2b00      	cmp	r3, #0
 800f470:	f000 80aa 	beq.w	800f5c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800f474:	f1bb 0f00 	cmp.w	fp, #0
 800f478:	d118      	bne.n	800f4ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800f47a:	f8d8 0000 	ldr.w	r0, [r8]
 800f47e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800f480:	6803      	ldr	r3, [r0, #0]
 800f482:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f484:	4798      	blx	r3
 800f486:	4405      	add	r5, r0
 800f488:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800f48a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f48c:	1aeb      	subs	r3, r5, r3
 800f48e:	4293      	cmp	r3, r2
 800f490:	dd17      	ble.n	800f4c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800f492:	2c00      	cmp	r4, #0
 800f494:	f000 8096 	beq.w	800f5c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800f498:	2c0a      	cmp	r4, #10
 800f49a:	f040 8084 	bne.w	800f5a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800f49e:	240a      	movs	r4, #10
 800f4a0:	fab4 f084 	clz	r0, r4
 800f4a4:	0940      	lsrs	r0, r0, #5
 800f4a6:	b01f      	add	sp, #124	; 0x7c
 800f4a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f4ac:	f8d8 0000 	ldr.w	r0, [r8]
 800f4b0:	990d      	ldr	r1, [sp, #52]	; 0x34
 800f4b2:	6803      	ldr	r3, [r0, #0]
 800f4b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f4b6:	4798      	blx	r3
 800f4b8:	f1bb 0f01 	cmp.w	fp, #1
 800f4bc:	eba5 0500 	sub.w	r5, r5, r0
 800f4c0:	d0a4      	beq.n	800f40c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800f4c2:	981c      	ldr	r0, [sp, #112]	; 0x70
 800f4c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f4c6:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800f4ca:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f4ce:	7b43      	ldrb	r3, [r0, #13]
 800f4d0:	015b      	lsls	r3, r3, #5
 800f4d2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f4d6:	7983      	ldrb	r3, [r0, #6]
 800f4d8:	4429      	add	r1, r5
 800f4da:	4313      	orrs	r3, r2
 800f4dc:	440b      	add	r3, r1
 800f4de:	42b3      	cmp	r3, r6
 800f4e0:	db5b      	blt.n	800f59a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800f4e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f4e4:	4299      	cmp	r1, r3
 800f4e6:	da58      	bge.n	800f59a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800f4e8:	f8d8 0000 	ldr.w	r0, [r8]
 800f4ec:	6803      	ldr	r3, [r0, #0]
 800f4ee:	42ae      	cmp	r6, r5
 800f4f0:	bfc8      	it	gt
 800f4f2:	1b76      	subgt	r6, r6, r5
 800f4f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f4f6:	bfcc      	ite	gt
 800f4f8:	b2b6      	uxthgt	r6, r6
 800f4fa:	2600      	movle	r6, #0
 800f4fc:	4798      	blx	r3
 800f4fe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800f500:	7b5a      	ldrb	r2, [r3, #13]
 800f502:	00d1      	lsls	r1, r2, #3
 800f504:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800f508:	7a19      	ldrb	r1, [r3, #8]
 800f50a:	4339      	orrs	r1, r7
 800f50c:	0657      	lsls	r7, r2, #25
 800f50e:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800f510:	bf44      	itt	mi
 800f512:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800f516:	b209      	sxthmi	r1, r1
 800f518:	19c7      	adds	r7, r0, r7
 800f51a:	1a7f      	subs	r7, r7, r1
 800f51c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f51e:	b2bf      	uxth	r7, r7
 800f520:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f524:	fa0f fa87 	sxth.w	sl, r7
 800f528:	4551      	cmp	r1, sl
 800f52a:	dd3a      	ble.n	800f5a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800f52c:	0112      	lsls	r2, r2, #4
 800f52e:	79d8      	ldrb	r0, [r3, #7]
 800f530:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f534:	4302      	orrs	r2, r0
 800f536:	4492      	add	sl, r2
 800f538:	4551      	cmp	r1, sl
 800f53a:	dc2e      	bgt.n	800f59a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800f53c:	1bcf      	subs	r7, r1, r7
 800f53e:	b2bf      	uxth	r7, r7
 800f540:	468a      	mov	sl, r1
 800f542:	9319      	str	r3, [sp, #100]	; 0x64
 800f544:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f546:	f8d8 0000 	ldr.w	r0, [r8]
 800f54a:	681a      	ldr	r2, [r3, #0]
 800f54c:	6801      	ldr	r1, [r0, #0]
 800f54e:	6c93      	ldr	r3, [r2, #72]	; 0x48
 800f550:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800f552:	9313      	str	r3, [sp, #76]	; 0x4c
 800f554:	9218      	str	r2, [sp, #96]	; 0x60
 800f556:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800f558:	4788      	blx	r1
 800f55a:	f898 1006 	ldrb.w	r1, [r8, #6]
 800f55e:	910b      	str	r1, [sp, #44]	; 0x2c
 800f560:	f898 100e 	ldrb.w	r1, [r8, #14]
 800f564:	910a      	str	r1, [sp, #40]	; 0x28
 800f566:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800f56a:	9109      	str	r1, [sp, #36]	; 0x24
 800f56c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f56e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800f572:	9305      	str	r3, [sp, #20]
 800f574:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f576:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800f578:	9206      	str	r2, [sp, #24]
 800f57a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800f57e:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800f582:	e9cd a601 	strd	sl, r6, [sp, #4]
 800f586:	442e      	add	r6, r5
 800f588:	b236      	sxth	r6, r6
 800f58a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f58c:	9600      	str	r6, [sp, #0]
 800f58e:	681a      	ldr	r2, [r3, #0]
 800f590:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f592:	685b      	ldr	r3, [r3, #4]
 800f594:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f596:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f598:	47b0      	blx	r6
 800f59a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f59c:	3301      	adds	r3, #1
 800f59e:	930e      	str	r3, [sp, #56]	; 0x38
 800f5a0:	e6e6      	b.n	800f370 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800f5a2:	2700      	movs	r7, #0
 800f5a4:	e7cd      	b.n	800f542 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800f5a6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800f5a8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f5aa:	3501      	adds	r5, #1
 800f5ac:	429d      	cmp	r5, r3
 800f5ae:	f6bf af77 	bge.w	800f4a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800f5b2:	4659      	mov	r1, fp
 800f5b4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f5b6:	f7f4 fe5f 	bl	8004278 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f5ba:	4604      	mov	r4, r0
 800f5bc:	b110      	cbz	r0, 800f5c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800f5be:	280a      	cmp	r0, #10
 800f5c0:	d1f2      	bne.n	800f5a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800f5c2:	e76c      	b.n	800f49e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800f5c4:	2400      	movs	r4, #0
 800f5c6:	e76b      	b.n	800f4a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800f5c8:	f1bb 0f00 	cmp.w	fp, #0
 800f5cc:	f43f af5c 	beq.w	800f488 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800f5d0:	e777      	b.n	800f4c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800f5d2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800f5d2:	b530      	push	{r4, r5, lr}
 800f5d4:	8a44      	ldrh	r4, [r0, #18]
 800f5d6:	8ac5      	ldrh	r5, [r0, #22]
 800f5d8:	82c3      	strh	r3, [r0, #22]
 800f5da:	442c      	add	r4, r5
 800f5dc:	1ae4      	subs	r4, r4, r3
 800f5de:	8244      	strh	r4, [r0, #18]
 800f5e0:	8b03      	ldrh	r3, [r0, #24]
 800f5e2:	8a84      	ldrh	r4, [r0, #20]
 800f5e4:	4422      	add	r2, r4
 800f5e6:	440c      	add	r4, r1
 800f5e8:	1a59      	subs	r1, r3, r1
 800f5ea:	8342      	strh	r2, [r0, #26]
 800f5ec:	8284      	strh	r4, [r0, #20]
 800f5ee:	8301      	strh	r1, [r0, #24]
 800f5f0:	bd30      	pop	{r4, r5, pc}

0800f5f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800f5f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5f6:	7a43      	ldrb	r3, [r0, #9]
 800f5f8:	1eda      	subs	r2, r3, #3
 800f5fa:	b087      	sub	sp, #28
 800f5fc:	4604      	mov	r4, r0
 800f5fe:	b2d2      	uxtb	r2, r2
 800f600:	460f      	mov	r7, r1
 800f602:	2900      	cmp	r1, #0
 800f604:	d036      	beq.n	800f674 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800f606:	2a01      	cmp	r2, #1
 800f608:	d932      	bls.n	800f670 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800f60a:	1e58      	subs	r0, r3, #1
 800f60c:	f1d0 0b00 	rsbs	fp, r0, #0
 800f610:	eb4b 0b00 	adc.w	fp, fp, r0
 800f614:	1e99      	subs	r1, r3, #2
 800f616:	424b      	negs	r3, r1
 800f618:	414b      	adcs	r3, r1
 800f61a:	9303      	str	r3, [sp, #12]
 800f61c:	2300      	movs	r3, #0
 800f61e:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800f622:	2500      	movs	r5, #0
 800f624:	8265      	strh	r5, [r4, #18]
 800f626:	82a5      	strh	r5, [r4, #20]
 800f628:	46a9      	mov	r9, r5
 800f62a:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800f62e:	2300      	movs	r3, #0
 800f630:	9305      	str	r3, [sp, #20]
 800f632:	8823      	ldrh	r3, [r4, #0]
 800f634:	2b20      	cmp	r3, #32
 800f636:	d02b      	beq.n	800f690 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800f638:	eba3 020a 	sub.w	r2, r3, sl
 800f63c:	4256      	negs	r6, r2
 800f63e:	4156      	adcs	r6, r2
 800f640:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f644:	4293      	cmp	r3, r2
 800f646:	d004      	beq.n	800f652 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800f648:	4553      	cmp	r3, sl
 800f64a:	bf16      	itet	ne
 800f64c:	4699      	movne	r9, r3
 800f64e:	2601      	moveq	r6, #1
 800f650:	2600      	movne	r6, #0
 800f652:	ab05      	add	r3, sp, #20
 800f654:	68e2      	ldr	r2, [r4, #12]
 800f656:	7a21      	ldrb	r1, [r4, #8]
 800f658:	6860      	ldr	r0, [r4, #4]
 800f65a:	f002 fdab 	bl	80121b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f65e:	8020      	strh	r0, [r4, #0]
 800f660:	b9c8      	cbnz	r0, 800f696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800f662:	8b22      	ldrh	r2, [r4, #24]
 800f664:	2300      	movs	r3, #0
 800f666:	4611      	mov	r1, r2
 800f668:	4620      	mov	r0, r4
 800f66a:	f7ff ffb2 	bl	800f5d2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f66e:	e066      	b.n	800f73e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800f670:	468b      	mov	fp, r1
 800f672:	e7cf      	b.n	800f614 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800f674:	3b01      	subs	r3, #1
 800f676:	2a01      	cmp	r2, #1
 800f678:	bf8c      	ite	hi
 800f67a:	2200      	movhi	r2, #0
 800f67c:	2201      	movls	r2, #1
 800f67e:	2b01      	cmp	r3, #1
 800f680:	bf8c      	ite	hi
 800f682:	2300      	movhi	r3, #0
 800f684:	2301      	movls	r3, #1
 800f686:	9202      	str	r2, [sp, #8]
 800f688:	9301      	str	r3, [sp, #4]
 800f68a:	9103      	str	r1, [sp, #12]
 800f68c:	468b      	mov	fp, r1
 800f68e:	e7c8      	b.n	800f622 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800f690:	4699      	mov	r9, r3
 800f692:	2601      	movs	r6, #1
 800f694:	e7dd      	b.n	800f652 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800f696:	8ae3      	ldrh	r3, [r4, #22]
 800f698:	280a      	cmp	r0, #10
 800f69a:	f103 0301 	add.w	r3, r3, #1
 800f69e:	82e3      	strh	r3, [r4, #22]
 800f6a0:	d0df      	beq.n	800f662 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800f6a2:	9a05      	ldr	r2, [sp, #20]
 800f6a4:	bb42      	cbnz	r2, 800f6f8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800f6a6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f6aa:	4298      	cmp	r0, r3
 800f6ac:	d001      	beq.n	800f6b2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800f6ae:	4550      	cmp	r0, sl
 800f6b0:	d1bd      	bne.n	800f62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f6b2:	8823      	ldrh	r3, [r4, #0]
 800f6b4:	8b21      	ldrh	r1, [r4, #24]
 800f6b6:	2b20      	cmp	r3, #32
 800f6b8:	d001      	beq.n	800f6be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800f6ba:	4553      	cmp	r3, sl
 800f6bc:	d131      	bne.n	800f722 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800f6be:	2e00      	cmp	r6, #0
 800f6c0:	bf0a      	itet	eq
 800f6c2:	460d      	moveq	r5, r1
 800f6c4:	4630      	movne	r0, r6
 800f6c6:	2001      	moveq	r0, #1
 800f6c8:	440a      	add	r2, r1
 800f6ca:	8aa3      	ldrh	r3, [r4, #20]
 800f6cc:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800f6d0:	b292      	uxth	r2, r2
 800f6d2:	8322      	strh	r2, [r4, #24]
 800f6d4:	4413      	add	r3, r2
 800f6d6:	2f00      	cmp	r7, #0
 800f6d8:	d03a      	beq.n	800f750 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800f6da:	f1bb 0f00 	cmp.w	fp, #0
 800f6de:	d102      	bne.n	800f6e6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800f6e0:	9903      	ldr	r1, [sp, #12]
 800f6e2:	b301      	cbz	r1, 800f726 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800f6e4:	b1f8      	cbz	r0, 800f726 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800f6e6:	8ba1      	ldrh	r1, [r4, #28]
 800f6e8:	4419      	add	r1, r3
 800f6ea:	458c      	cmp	ip, r1
 800f6ec:	da2a      	bge.n	800f744 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800f6ee:	8a61      	ldrh	r1, [r4, #18]
 800f6f0:	b341      	cbz	r1, 800f744 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800f6f2:	4563      	cmp	r3, ip
 800f6f4:	dd9b      	ble.n	800f62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f6f6:	e01c      	b.n	800f732 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800f6f8:	8893      	ldrh	r3, [r2, #4]
 800f6fa:	8023      	strh	r3, [r4, #0]
 800f6fc:	f892 800d 	ldrb.w	r8, [r2, #13]
 800f700:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800f704:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800f708:	f892 800a 	ldrb.w	r8, [r2, #10]
 800f70c:	ea48 0800 	orr.w	r8, r8, r0
 800f710:	68e0      	ldr	r0, [r4, #12]
 800f712:	6803      	ldr	r3, [r0, #0]
 800f714:	4649      	mov	r1, r9
 800f716:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f718:	4798      	blx	r3
 800f71a:	eb08 0200 	add.w	r2, r8, r0
 800f71e:	b292      	uxth	r2, r2
 800f720:	e7c7      	b.n	800f6b2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800f722:	2000      	movs	r0, #0
 800f724:	e7d0      	b.n	800f6c8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800f726:	4563      	cmp	r3, ip
 800f728:	dd81      	ble.n	800f62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f72a:	8a63      	ldrh	r3, [r4, #18]
 800f72c:	2b00      	cmp	r3, #0
 800f72e:	f43f af7e 	beq.w	800f62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f732:	2301      	movs	r3, #1
 800f734:	77a3      	strb	r3, [r4, #30]
 800f736:	8ba2      	ldrh	r2, [r4, #28]
 800f738:	8b63      	ldrh	r3, [r4, #26]
 800f73a:	4413      	add	r3, r2
 800f73c:	8363      	strh	r3, [r4, #26]
 800f73e:	b007      	add	sp, #28
 800f740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f744:	2300      	movs	r3, #0
 800f746:	4611      	mov	r1, r2
 800f748:	4620      	mov	r0, r4
 800f74a:	f7ff ff42 	bl	800f5d2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f74e:	e76e      	b.n	800f62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f750:	4563      	cmp	r3, ip
 800f752:	dd14      	ble.n	800f77e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800f754:	9b02      	ldr	r3, [sp, #8]
 800f756:	b113      	cbz	r3, 800f75e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800f758:	2301      	movs	r3, #1
 800f75a:	460a      	mov	r2, r1
 800f75c:	e783      	b.n	800f666 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800f75e:	9b01      	ldr	r3, [sp, #4]
 800f760:	2b00      	cmp	r3, #0
 800f762:	f43f af64 	beq.w	800f62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f766:	2800      	cmp	r0, #0
 800f768:	f47f af61 	bne.w	800f62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f76c:	b116      	cbz	r6, 800f774 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800f76e:	2301      	movs	r3, #1
 800f770:	462a      	mov	r2, r5
 800f772:	e779      	b.n	800f668 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800f774:	8a63      	ldrh	r3, [r4, #18]
 800f776:	2b00      	cmp	r3, #0
 800f778:	f43f af59 	beq.w	800f62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f77c:	e7df      	b.n	800f73e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800f77e:	2800      	cmp	r0, #0
 800f780:	f47f af55 	bne.w	800f62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f784:	2e00      	cmp	r6, #0
 800f786:	f43f af52 	beq.w	800f62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f78a:	2301      	movs	r3, #1
 800f78c:	462a      	mov	r2, r5
 800f78e:	e7db      	b.n	800f748 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800f790 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800f790:	b530      	push	{r4, r5, lr}
 800f792:	4605      	mov	r5, r0
 800f794:	b08b      	sub	sp, #44	; 0x2c
 800f796:	b191      	cbz	r1, 800f7be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800f798:	e9cd 3100 	strd	r3, r1, [sp]
 800f79c:	4613      	mov	r3, r2
 800f79e:	4601      	mov	r1, r0
 800f7a0:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800f7a4:	a802      	add	r0, sp, #8
 800f7a6:	f7ff fd0d 	bl	800f1c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800f7aa:	2401      	movs	r4, #1
 800f7ac:	2100      	movs	r1, #0
 800f7ae:	a802      	add	r0, sp, #8
 800f7b0:	f7ff ff1f 	bl	800f5f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f7b4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f7b8:	b163      	cbz	r3, 800f7d4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800f7ba:	3401      	adds	r4, #1
 800f7bc:	e7f6      	b.n	800f7ac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800f7be:	f002 fdf1 	bl	80123a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f7c2:	2401      	movs	r4, #1
 800f7c4:	280a      	cmp	r0, #10
 800f7c6:	4628      	mov	r0, r5
 800f7c8:	bf08      	it	eq
 800f7ca:	3401      	addeq	r4, #1
 800f7cc:	f002 fdea 	bl	80123a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f7d0:	2800      	cmp	r0, #0
 800f7d2:	d1f7      	bne.n	800f7c4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800f7d4:	b2a0      	uxth	r0, r4
 800f7d6:	b00b      	add	sp, #44	; 0x2c
 800f7d8:	bd30      	pop	{r4, r5, pc}

0800f7da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800f7da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7de:	b0db      	sub	sp, #364	; 0x16c
 800f7e0:	4689      	mov	r9, r1
 800f7e2:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800f7e6:	900a      	str	r0, [sp, #40]	; 0x28
 800f7e8:	461c      	mov	r4, r3
 800f7ea:	f1ba 0f00 	cmp.w	sl, #0
 800f7ee:	f000 80a5 	beq.w	800f93c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800f7f2:	681b      	ldr	r3, [r3, #0]
 800f7f4:	2b00      	cmp	r3, #0
 800f7f6:	f000 80a1 	beq.w	800f93c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800f7fa:	7ba3      	ldrb	r3, [r4, #14]
 800f7fc:	2b00      	cmp	r3, #0
 800f7fe:	f000 809d 	beq.w	800f93c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800f802:	6810      	ldr	r0, [r2, #0]
 800f804:	6851      	ldr	r1, [r2, #4]
 800f806:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800f80a:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800f80e:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800f812:	4643      	mov	r3, r8
 800f814:	c303      	stmia	r3!, {r0, r1}
 800f816:	2500      	movs	r5, #0
 800f818:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800f81c:	79a2      	ldrb	r2, [r4, #6]
 800f81e:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800f822:	a90e      	add	r1, sp, #56	; 0x38
 800f824:	4640      	mov	r0, r8
 800f826:	950e      	str	r5, [sp, #56]	; 0x38
 800f828:	f7ff fd42 	bl	800f2b0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f82c:	a90e      	add	r1, sp, #56	; 0x38
 800f82e:	4608      	mov	r0, r1
 800f830:	79a2      	ldrb	r2, [r4, #6]
 800f832:	af18      	add	r7, sp, #96	; 0x60
 800f834:	f7ff fd3c 	bl	800f2b0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f838:	4638      	mov	r0, r7
 800f83a:	f002 f97d 	bl	8011b38 <_ZN8touchgfx12TextProviderC1Ev>
 800f83e:	6820      	ldr	r0, [r4, #0]
 800f840:	6803      	ldr	r3, [r0, #0]
 800f842:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f844:	4798      	blx	r3
 800f846:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800f848:	4603      	mov	r3, r0
 800f84a:	4651      	mov	r1, sl
 800f84c:	4638      	mov	r0, r7
 800f84e:	f002 f9b8 	bl	8011bc2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800f852:	6820      	ldr	r0, [r4, #0]
 800f854:	7923      	ldrb	r3, [r4, #4]
 800f856:	9308      	str	r3, [sp, #32]
 800f858:	6803      	ldr	r3, [r0, #0]
 800f85a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f85c:	4798      	blx	r3
 800f85e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f862:	181e      	adds	r6, r3, r0
 800f864:	42ae      	cmp	r6, r5
 800f866:	dd06      	ble.n	800f876 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800f868:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800f86c:	4282      	cmp	r2, r0
 800f86e:	bfa4      	itt	ge
 800f870:	189d      	addge	r5, r3, r2
 800f872:	fb95 f5f6 	sdivge	r5, r5, r6
 800f876:	a82e      	add	r0, sp, #184	; 0xb8
 800f878:	f002 f95e 	bl	8011b38 <_ZN8touchgfx12TextProviderC1Ev>
 800f87c:	7c23      	ldrb	r3, [r4, #16]
 800f87e:	b14b      	cbz	r3, 800f894 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800f880:	6820      	ldr	r0, [r4, #0]
 800f882:	6803      	ldr	r3, [r0, #0]
 800f884:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f886:	4798      	blx	r3
 800f888:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800f88a:	4603      	mov	r3, r0
 800f88c:	4651      	mov	r1, sl
 800f88e:	a82e      	add	r0, sp, #184	; 0xb8
 800f890:	f002 f997 	bl	8011bc2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800f894:	7c21      	ldrb	r1, [r4, #16]
 800f896:	9101      	str	r1, [sp, #4]
 800f898:	6821      	ldr	r1, [r4, #0]
 800f89a:	7963      	ldrb	r3, [r4, #5]
 800f89c:	9100      	str	r1, [sp, #0]
 800f89e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800f8a2:	a92e      	add	r1, sp, #184	; 0xb8
 800f8a4:	a810      	add	r0, sp, #64	; 0x40
 800f8a6:	f7ff fc8d 	bl	800f1c4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800f8aa:	7c23      	ldrb	r3, [r4, #16]
 800f8ac:	b9bb      	cbnz	r3, 800f8de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800f8ae:	fa1f fa86 	uxth.w	sl, r6
 800f8b2:	2d00      	cmp	r5, #0
 800f8b4:	dd45      	ble.n	800f942 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800f8b6:	4638      	mov	r0, r7
 800f8b8:	f002 fd74 	bl	80123a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f8bc:	2800      	cmp	r0, #0
 800f8be:	d03d      	beq.n	800f93c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800f8c0:	280a      	cmp	r0, #10
 800f8c2:	d1f6      	bne.n	800f8b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800f8c4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800f8c8:	4453      	add	r3, sl
 800f8ca:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800f8ce:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800f8d2:	eba3 030a 	sub.w	r3, r3, sl
 800f8d6:	3d01      	subs	r5, #1
 800f8d8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800f8dc:	e7e9      	b.n	800f8b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800f8de:	0073      	lsls	r3, r6, #1
 800f8e0:	9309      	str	r3, [sp, #36]	; 0x24
 800f8e2:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800f8e6:	fa1f fa86 	uxth.w	sl, r6
 800f8ea:	2d00      	cmp	r5, #0
 800f8ec:	dd29      	ble.n	800f942 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800f8ee:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800f8f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f8f4:	428b      	cmp	r3, r1
 800f8f6:	bfd4      	ite	le
 800f8f8:	2100      	movle	r1, #0
 800f8fa:	2101      	movgt	r1, #1
 800f8fc:	a810      	add	r0, sp, #64	; 0x40
 800f8fe:	f7ff fe78 	bl	800f5f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f902:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800f906:	3b01      	subs	r3, #1
 800f908:	b29b      	uxth	r3, r3
 800f90a:	455b      	cmp	r3, fp
 800f90c:	930b      	str	r3, [sp, #44]	; 0x2c
 800f90e:	d005      	beq.n	800f91c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800f910:	7961      	ldrb	r1, [r4, #5]
 800f912:	4638      	mov	r0, r7
 800f914:	f7f4 fcb0 	bl	8004278 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f918:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f91a:	e7f4      	b.n	800f906 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800f91c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800f920:	4453      	add	r3, sl
 800f922:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800f926:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800f92a:	eba3 030a 	sub.w	r3, r3, sl
 800f92e:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800f932:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f936:	3d01      	subs	r5, #1
 800f938:	2b00      	cmp	r3, #0
 800f93a:	d1d6      	bne.n	800f8ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800f93c:	b05b      	add	sp, #364	; 0x16c
 800f93e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f942:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800f946:	ad44      	add	r5, sp, #272	; 0x110
 800f948:	f04f 0b00 	mov.w	fp, #0
 800f94c:	7c23      	ldrb	r3, [r4, #16]
 800f94e:	2b00      	cmp	r3, #0
 800f950:	d067      	beq.n	800fa22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800f952:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800f956:	458a      	cmp	sl, r1
 800f958:	bfd4      	ite	le
 800f95a:	2100      	movle	r1, #0
 800f95c:	2101      	movgt	r1, #1
 800f95e:	a810      	add	r0, sp, #64	; 0x40
 800f960:	f7ff fe47 	bl	800f5f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f964:	9b08      	ldr	r3, [sp, #32]
 800f966:	2b00      	cmp	r3, #0
 800f968:	d056      	beq.n	800fa18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800f96a:	7c23      	ldrb	r3, [r4, #16]
 800f96c:	9309      	str	r3, [sp, #36]	; 0x24
 800f96e:	2258      	movs	r2, #88	; 0x58
 800f970:	4639      	mov	r1, r7
 800f972:	4628      	mov	r0, r5
 800f974:	f012 fc4a 	bl	802220c <memcpy>
 800f978:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f97a:	2b00      	cmp	r3, #0
 800f97c:	d059      	beq.n	800fa32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800f97e:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800f982:	7922      	ldrb	r2, [r4, #4]
 800f984:	2a01      	cmp	r2, #1
 800f986:	d13d      	bne.n	800fa04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800f988:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800f98c:	1ac0      	subs	r0, r0, r3
 800f98e:	2302      	movs	r3, #2
 800f990:	fb90 f0f3 	sdiv	r0, r0, r3
 800f994:	b200      	sxth	r0, r0
 800f996:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800f99a:	4418      	add	r0, r3
 800f99c:	7c23      	ldrb	r3, [r4, #16]
 800f99e:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800f9a2:	2b00      	cmp	r3, #0
 800f9a4:	d03a      	beq.n	800fa1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800f9a6:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800f9aa:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800f9ae:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800f9b2:	9500      	str	r5, [sp, #0]
 800f9b4:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800f9b8:	e9cd b703 	strd	fp, r7, [sp, #12]
 800f9bc:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800f9c0:	464a      	mov	r2, r9
 800f9c2:	2100      	movs	r1, #0
 800f9c4:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f9c6:	f7ff fca4 	bl	800f312 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800f9ca:	2800      	cmp	r0, #0
 800f9cc:	d1b6      	bne.n	800f93c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800f9ce:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800f9d2:	b2b2      	uxth	r2, r6
 800f9d4:	4611      	mov	r1, r2
 800f9d6:	4413      	add	r3, r2
 800f9d8:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800f9dc:	1a52      	subs	r2, r2, r1
 800f9de:	7c21      	ldrb	r1, [r4, #16]
 800f9e0:	b21b      	sxth	r3, r3
 800f9e2:	b212      	sxth	r2, r2
 800f9e4:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800f9e8:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800f9ec:	b109      	cbz	r1, 800f9f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800f9ee:	42b2      	cmp	r2, r6
 800f9f0:	dba4      	blt.n	800f93c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800f9f2:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800f9f6:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800f9fa:	440a      	add	r2, r1
 800f9fc:	b212      	sxth	r2, r2
 800f9fe:	4293      	cmp	r3, r2
 800fa00:	dda4      	ble.n	800f94c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800fa02:	e79b      	b.n	800f93c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800fa04:	2a02      	cmp	r2, #2
 800fa06:	d105      	bne.n	800fa14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800fa08:	7be2      	ldrb	r2, [r4, #15]
 800fa0a:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800fa0e:	1a80      	subs	r0, r0, r2
 800fa10:	1ac0      	subs	r0, r0, r3
 800fa12:	e7bf      	b.n	800f994 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800fa14:	2000      	movs	r0, #0
 800fa16:	e7be      	b.n	800f996 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800fa18:	7be0      	ldrb	r0, [r4, #15]
 800fa1a:	e7bc      	b.n	800f996 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800fa1c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800fa20:	e7c3      	b.n	800f9aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800fa22:	9b08      	ldr	r3, [sp, #32]
 800fa24:	2b00      	cmp	r3, #0
 800fa26:	d0f7      	beq.n	800fa18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800fa28:	2258      	movs	r2, #88	; 0x58
 800fa2a:	4639      	mov	r1, r7
 800fa2c:	4628      	mov	r0, r5
 800fa2e:	f012 fbed 	bl	802220c <memcpy>
 800fa32:	2300      	movs	r3, #0
 800fa34:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800fa38:	6821      	ldr	r1, [r4, #0]
 800fa3a:	4628      	mov	r0, r5
 800fa3c:	f7ff fbfc 	bl	800f238 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800fa40:	b203      	sxth	r3, r0
 800fa42:	e79e      	b.n	800f982 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800fa44 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800fa44:	b510      	push	{r4, lr}
 800fa46:	2b02      	cmp	r3, #2
 800fa48:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fa4c:	d00b      	beq.n	800fa66 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800fa4e:	2b03      	cmp	r3, #3
 800fa50:	d00e      	beq.n	800fa70 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800fa52:	2b01      	cmp	r3, #1
 800fa54:	d001      	beq.n	800fa5a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800fa56:	1860      	adds	r0, r4, r1
 800fa58:	bd10      	pop	{r4, pc}
 800fa5a:	8880      	ldrh	r0, [r0, #4]
 800fa5c:	4420      	add	r0, r4
 800fa5e:	b200      	sxth	r0, r0
 800fa60:	1a80      	subs	r0, r0, r2
 800fa62:	3801      	subs	r0, #1
 800fa64:	e7f8      	b.n	800fa58 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800fa66:	8880      	ldrh	r0, [r0, #4]
 800fa68:	4420      	add	r0, r4
 800fa6a:	b200      	sxth	r0, r0
 800fa6c:	1a40      	subs	r0, r0, r1
 800fa6e:	e7f8      	b.n	800fa62 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800fa70:	18a0      	adds	r0, r4, r2
 800fa72:	e7f1      	b.n	800fa58 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800fa74 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800fa74:	b510      	push	{r4, lr}
 800fa76:	2b02      	cmp	r3, #2
 800fa78:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800fa7c:	d006      	beq.n	800fa8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800fa7e:	2b03      	cmp	r3, #3
 800fa80:	d00a      	beq.n	800fa98 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800fa82:	2b01      	cmp	r3, #1
 800fa84:	bf14      	ite	ne
 800fa86:	18a0      	addne	r0, r4, r2
 800fa88:	1860      	addeq	r0, r4, r1
 800fa8a:	bd10      	pop	{r4, pc}
 800fa8c:	88c0      	ldrh	r0, [r0, #6]
 800fa8e:	4420      	add	r0, r4
 800fa90:	b200      	sxth	r0, r0
 800fa92:	1a80      	subs	r0, r0, r2
 800fa94:	3801      	subs	r0, #1
 800fa96:	e7f8      	b.n	800fa8a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800fa98:	88c0      	ldrh	r0, [r0, #6]
 800fa9a:	4420      	add	r0, r4
 800fa9c:	b200      	sxth	r0, r0
 800fa9e:	1a40      	subs	r0, r0, r1
 800faa0:	e7f8      	b.n	800fa94 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800faa4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800faa4:	4b01      	ldr	r3, [pc, #4]	; (800faac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800faa6:	2200      	movs	r2, #0
 800faa8:	601a      	str	r2, [r3, #0]
 800faaa:	4770      	bx	lr
 800faac:	2000e408 	.word	0x2000e408

0800fab0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800fab0:	4603      	mov	r3, r0
 800fab2:	b1c8      	cbz	r0, 800fae8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800fab4:	0c02      	lsrs	r2, r0, #16
 800fab6:	0412      	lsls	r2, r2, #16
 800fab8:	b9a2      	cbnz	r2, 800fae4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800faba:	0403      	lsls	r3, r0, #16
 800fabc:	2010      	movs	r0, #16
 800fabe:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800fac2:	bf04      	itt	eq
 800fac4:	021b      	lsleq	r3, r3, #8
 800fac6:	3008      	addeq	r0, #8
 800fac8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800facc:	bf04      	itt	eq
 800face:	011b      	lsleq	r3, r3, #4
 800fad0:	3004      	addeq	r0, #4
 800fad2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800fad6:	bf04      	itt	eq
 800fad8:	009b      	lsleq	r3, r3, #2
 800fada:	3002      	addeq	r0, #2
 800fadc:	2b00      	cmp	r3, #0
 800fade:	db04      	blt.n	800faea <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800fae0:	3001      	adds	r0, #1
 800fae2:	4770      	bx	lr
 800fae4:	2000      	movs	r0, #0
 800fae6:	e7ea      	b.n	800fabe <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800fae8:	2020      	movs	r0, #32
 800faea:	4770      	bx	lr

0800faec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800faec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800faf0:	b087      	sub	sp, #28
 800faf2:	4681      	mov	r9, r0
 800faf4:	4698      	mov	r8, r3
 800faf6:	4610      	mov	r0, r2
 800faf8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800fafc:	460d      	mov	r5, r1
 800fafe:	b981      	cbnz	r1, 800fb22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800fb00:	b14b      	cbz	r3, 800fb16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800fb02:	460b      	mov	r3, r1
 800fb04:	e9cd 4700 	strd	r4, r7, [sp]
 800fb08:	464a      	mov	r2, r9
 800fb0a:	4641      	mov	r1, r8
 800fb0c:	f7ff ffee 	bl	800faec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fb10:	b007      	add	sp, #28
 800fb12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fb16:	f04f 33ff 	mov.w	r3, #4294967295
 800fb1a:	603b      	str	r3, [r7, #0]
 800fb1c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800fb20:	e7f6      	b.n	800fb10 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800fb22:	fa32 fa01 	lsrs.w	sl, r2, r1
 800fb26:	d107      	bne.n	800fb38 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800fb28:	fb09 f602 	mul.w	r6, r9, r2
 800fb2c:	fbb6 f0f4 	udiv	r0, r6, r4
 800fb30:	fb04 6610 	mls	r6, r4, r0, r6
 800fb34:	603e      	str	r6, [r7, #0]
 800fb36:	e7eb      	b.n	800fb10 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800fb38:	2601      	movs	r6, #1
 800fb3a:	408e      	lsls	r6, r1
 800fb3c:	3e01      	subs	r6, #1
 800fb3e:	4016      	ands	r6, r2
 800fb40:	fa09 fb01 	lsl.w	fp, r9, r1
 800fb44:	4630      	mov	r0, r6
 800fb46:	fbbb f3f4 	udiv	r3, fp, r4
 800fb4a:	9302      	str	r3, [sp, #8]
 800fb4c:	fb0a f303 	mul.w	r3, sl, r3
 800fb50:	9303      	str	r3, [sp, #12]
 800fb52:	f7ff ffad 	bl	800fab0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fb56:	464a      	mov	r2, r9
 800fb58:	460b      	mov	r3, r1
 800fb5a:	e9cd 4700 	strd	r4, r7, [sp]
 800fb5e:	4601      	mov	r1, r0
 800fb60:	4630      	mov	r0, r6
 800fb62:	f7ff ffc3 	bl	800faec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fb66:	9b02      	ldr	r3, [sp, #8]
 800fb68:	fb04 bb13 	mls	fp, r4, r3, fp
 800fb6c:	4606      	mov	r6, r0
 800fb6e:	4658      	mov	r0, fp
 800fb70:	eb05 0108 	add.w	r1, r5, r8
 800fb74:	f7ff ff9c 	bl	800fab0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fb78:	ab05      	add	r3, sp, #20
 800fb7a:	e9cd 4300 	strd	r4, r3, [sp]
 800fb7e:	465a      	mov	r2, fp
 800fb80:	4603      	mov	r3, r0
 800fb82:	4650      	mov	r0, sl
 800fb84:	f7ff ffb2 	bl	800faec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fb88:	6839      	ldr	r1, [r7, #0]
 800fb8a:	9a05      	ldr	r2, [sp, #20]
 800fb8c:	9b03      	ldr	r3, [sp, #12]
 800fb8e:	4411      	add	r1, r2
 800fb90:	fbb1 f2f4 	udiv	r2, r1, r4
 800fb94:	18d3      	adds	r3, r2, r3
 800fb96:	441e      	add	r6, r3
 800fb98:	fb04 1412 	mls	r4, r4, r2, r1
 800fb9c:	4430      	add	r0, r6
 800fb9e:	603c      	str	r4, [r7, #0]
 800fba0:	e7b6      	b.n	800fb10 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800fba2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800fba2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fba6:	b085      	sub	sp, #20
 800fba8:	f1b0 0900 	subs.w	r9, r0, #0
 800fbac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800fbae:	461d      	mov	r5, r3
 800fbb0:	bfbf      	itttt	lt
 800fbb2:	6823      	ldrlt	r3, [r4, #0]
 800fbb4:	425b      	neglt	r3, r3
 800fbb6:	f1c9 0900 	rsblt	r9, r9, #0
 800fbba:	6023      	strlt	r3, [r4, #0]
 800fbbc:	bfb4      	ite	lt
 800fbbe:	f04f 36ff 	movlt.w	r6, #4294967295
 800fbc2:	2601      	movge	r6, #1
 800fbc4:	2a00      	cmp	r2, #0
 800fbc6:	4617      	mov	r7, r2
 800fbc8:	da04      	bge.n	800fbd4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800fbca:	6823      	ldr	r3, [r4, #0]
 800fbcc:	425b      	negs	r3, r3
 800fbce:	4257      	negs	r7, r2
 800fbd0:	4276      	negs	r6, r6
 800fbd2:	6023      	str	r3, [r4, #0]
 800fbd4:	2d00      	cmp	r5, #0
 800fbd6:	4638      	mov	r0, r7
 800fbd8:	bfba      	itte	lt
 800fbda:	426d      	neglt	r5, r5
 800fbdc:	f04f 38ff 	movlt.w	r8, #4294967295
 800fbe0:	f04f 0801 	movge.w	r8, #1
 800fbe4:	f7ff ff64 	bl	800fab0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fbe8:	ab03      	add	r3, sp, #12
 800fbea:	e9cd 5300 	strd	r5, r3, [sp]
 800fbee:	463a      	mov	r2, r7
 800fbf0:	4603      	mov	r3, r0
 800fbf2:	4648      	mov	r0, r9
 800fbf4:	f7ff ff7a 	bl	800faec <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fbf8:	6823      	ldr	r3, [r4, #0]
 800fbfa:	9a03      	ldr	r2, [sp, #12]
 800fbfc:	4546      	cmp	r6, r8
 800fbfe:	441a      	add	r2, r3
 800fc00:	fb92 f3f5 	sdiv	r3, r2, r5
 800fc04:	4418      	add	r0, r3
 800fc06:	bf18      	it	ne
 800fc08:	4240      	negne	r0, r0
 800fc0a:	fb05 2313 	mls	r3, r5, r3, r2
 800fc0e:	1c72      	adds	r2, r6, #1
 800fc10:	6023      	str	r3, [r4, #0]
 800fc12:	d105      	bne.n	800fc20 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800fc14:	2b00      	cmp	r3, #0
 800fc16:	f1c3 0200 	rsb	r2, r3, #0
 800fc1a:	db0b      	blt.n	800fc34 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800fc1c:	6022      	str	r2, [r4, #0]
 800fc1e:	e006      	b.n	800fc2e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fc20:	2e01      	cmp	r6, #1
 800fc22:	d104      	bne.n	800fc2e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fc24:	2b00      	cmp	r3, #0
 800fc26:	da02      	bge.n	800fc2e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fc28:	442b      	add	r3, r5
 800fc2a:	3801      	subs	r0, #1
 800fc2c:	6023      	str	r3, [r4, #0]
 800fc2e:	b005      	add	sp, #20
 800fc30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fc34:	3801      	subs	r0, #1
 800fc36:	1b52      	subs	r2, r2, r5
 800fc38:	e7f0      	b.n	800fc1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800fc3c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800fc3c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800fc40:	4c1c      	ldr	r4, [pc, #112]	; (800fcb4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800fc42:	6807      	ldr	r7, [r0, #0]
 800fc44:	69a3      	ldr	r3, [r4, #24]
 800fc46:	4605      	mov	r5, r0
 800fc48:	b92b      	cbnz	r3, 800fc56 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800fc4a:	6840      	ldr	r0, [r0, #4]
 800fc4c:	e9c5 7000 	strd	r7, r0, [r5]
 800fc50:	b004      	add	sp, #16
 800fc52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc56:	68a2      	ldr	r2, [r4, #8]
 800fc58:	6820      	ldr	r0, [r4, #0]
 800fc5a:	ae04      	add	r6, sp, #16
 800fc5c:	f04f 0802 	mov.w	r8, #2
 800fc60:	fb93 f1f8 	sdiv	r1, r3, r8
 800fc64:	440a      	add	r2, r1
 800fc66:	f846 2d04 	str.w	r2, [r6, #-4]!
 800fc6a:	69e1      	ldr	r1, [r4, #28]
 800fc6c:	9600      	str	r6, [sp, #0]
 800fc6e:	463a      	mov	r2, r7
 800fc70:	f7ff ff97 	bl	800fba2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fc74:	69a3      	ldr	r3, [r4, #24]
 800fc76:	686a      	ldr	r2, [r5, #4]
 800fc78:	6a21      	ldr	r1, [r4, #32]
 800fc7a:	9600      	str	r6, [sp, #0]
 800fc7c:	4607      	mov	r7, r0
 800fc7e:	6860      	ldr	r0, [r4, #4]
 800fc80:	f7ff ff8f 	bl	800fba2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fc84:	6962      	ldr	r2, [r4, #20]
 800fc86:	69a3      	ldr	r3, [r4, #24]
 800fc88:	fb93 f8f8 	sdiv	r8, r3, r8
 800fc8c:	4442      	add	r2, r8
 800fc8e:	9203      	str	r2, [sp, #12]
 800fc90:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800fc92:	682a      	ldr	r2, [r5, #0]
 800fc94:	9600      	str	r6, [sp, #0]
 800fc96:	4407      	add	r7, r0
 800fc98:	68e0      	ldr	r0, [r4, #12]
 800fc9a:	f7ff ff82 	bl	800fba2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fc9e:	9600      	str	r6, [sp, #0]
 800fca0:	4680      	mov	r8, r0
 800fca2:	69a3      	ldr	r3, [r4, #24]
 800fca4:	686a      	ldr	r2, [r5, #4]
 800fca6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800fca8:	6920      	ldr	r0, [r4, #16]
 800fcaa:	f7ff ff7a 	bl	800fba2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fcae:	4440      	add	r0, r8
 800fcb0:	e7cc      	b.n	800fc4c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800fcb2:	bf00      	nop
 800fcb4:	2000e40c 	.word	0x2000e40c

0800fcb8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800fcb8:	b510      	push	{r4, lr}
 800fcba:	4b07      	ldr	r3, [pc, #28]	; (800fcd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800fcbc:	781b      	ldrb	r3, [r3, #0]
 800fcbe:	2b01      	cmp	r3, #1
 800fcc0:	d108      	bne.n	800fcd4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800fcc2:	4b06      	ldr	r3, [pc, #24]	; (800fcdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800fcc4:	880c      	ldrh	r4, [r1, #0]
 800fcc6:	881b      	ldrh	r3, [r3, #0]
 800fcc8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fccc:	3b01      	subs	r3, #1
 800fcce:	1b1b      	subs	r3, r3, r4
 800fcd0:	8003      	strh	r3, [r0, #0]
 800fcd2:	800a      	strh	r2, [r1, #0]
 800fcd4:	bd10      	pop	{r4, pc}
 800fcd6:	bf00      	nop
 800fcd8:	2000e3d8 	.word	0x2000e3d8
 800fcdc:	2000e3dc 	.word	0x2000e3dc

0800fce0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800fce0:	b510      	push	{r4, lr}
 800fce2:	4b0a      	ldr	r3, [pc, #40]	; (800fd0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800fce4:	781b      	ldrb	r3, [r3, #0]
 800fce6:	2b01      	cmp	r3, #1
 800fce8:	d10e      	bne.n	800fd08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800fcea:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fcee:	8843      	ldrh	r3, [r0, #2]
 800fcf0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fcf4:	8044      	strh	r4, [r0, #2]
 800fcf6:	18ca      	adds	r2, r1, r3
 800fcf8:	4b05      	ldr	r3, [pc, #20]	; (800fd10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800fcfa:	881b      	ldrh	r3, [r3, #0]
 800fcfc:	1a9b      	subs	r3, r3, r2
 800fcfe:	8003      	strh	r3, [r0, #0]
 800fd00:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fd04:	80c3      	strh	r3, [r0, #6]
 800fd06:	8081      	strh	r1, [r0, #4]
 800fd08:	bd10      	pop	{r4, pc}
 800fd0a:	bf00      	nop
 800fd0c:	2000e3d8 	.word	0x2000e3d8
 800fd10:	2000e3d4 	.word	0x2000e3d4

0800fd14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800fd14:	b510      	push	{r4, lr}
 800fd16:	4b07      	ldr	r3, [pc, #28]	; (800fd34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800fd18:	781b      	ldrb	r3, [r3, #0]
 800fd1a:	2b01      	cmp	r3, #1
 800fd1c:	d108      	bne.n	800fd30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800fd1e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fd22:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fd26:	8003      	strh	r3, [r0, #0]
 800fd28:	8893      	ldrh	r3, [r2, #4]
 800fd2a:	3b01      	subs	r3, #1
 800fd2c:	1b1b      	subs	r3, r3, r4
 800fd2e:	800b      	strh	r3, [r1, #0]
 800fd30:	bd10      	pop	{r4, pc}
 800fd32:	bf00      	nop
 800fd34:	2000e3d8 	.word	0x2000e3d8

0800fd38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800fd38:	b513      	push	{r0, r1, r4, lr}
 800fd3a:	4b08      	ldr	r3, [pc, #32]	; (800fd5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800fd3c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fd40:	4b07      	ldr	r3, [pc, #28]	; (800fd60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800fd42:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fd46:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fd4a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fd4e:	2400      	movs	r4, #0
 800fd50:	466a      	mov	r2, sp
 800fd52:	9400      	str	r4, [sp, #0]
 800fd54:	f7ff ffde 	bl	800fd14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800fd58:	b002      	add	sp, #8
 800fd5a:	bd10      	pop	{r4, pc}
 800fd5c:	2000e3d4 	.word	0x2000e3d4
 800fd60:	2000e3d6 	.word	0x2000e3d6

0800fd64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800fd64:	4b0b      	ldr	r3, [pc, #44]	; (800fd94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800fd66:	781b      	ldrb	r3, [r3, #0]
 800fd68:	2b01      	cmp	r3, #1
 800fd6a:	d111      	bne.n	800fd90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800fd6c:	680b      	ldr	r3, [r1, #0]
 800fd6e:	ed90 7a00 	vldr	s14, [r0]
 800fd72:	6003      	str	r3, [r0, #0]
 800fd74:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800fd78:	eddf 6a07 	vldr	s13, [pc, #28]	; 800fd98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800fd7c:	ee07 3a90 	vmov	s15, r3
 800fd80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fd84:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fd88:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800fd8c:	edc1 7a00 	vstr	s15, [r1]
 800fd90:	4770      	bx	lr
 800fd92:	bf00      	nop
 800fd94:	2000e3d8 	.word	0x2000e3d8
 800fd98:	38d1b717 	.word	0x38d1b717

0800fd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800fd9c:	b510      	push	{r4, lr}
 800fd9e:	4b0a      	ldr	r3, [pc, #40]	; (800fdc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800fda0:	781b      	ldrb	r3, [r3, #0]
 800fda2:	2b01      	cmp	r3, #1
 800fda4:	460a      	mov	r2, r1
 800fda6:	d10d      	bne.n	800fdc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800fda8:	8881      	ldrh	r1, [r0, #4]
 800fdaa:	8803      	ldrh	r3, [r0, #0]
 800fdac:	440b      	add	r3, r1
 800fdae:	4601      	mov	r1, r0
 800fdb0:	3b01      	subs	r3, #1
 800fdb2:	f821 3b02 	strh.w	r3, [r1], #2
 800fdb6:	f7ff ffad 	bl	800fd14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800fdba:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fdbe:	88c2      	ldrh	r2, [r0, #6]
 800fdc0:	8082      	strh	r2, [r0, #4]
 800fdc2:	80c3      	strh	r3, [r0, #6]
 800fdc4:	bd10      	pop	{r4, pc}
 800fdc6:	bf00      	nop
 800fdc8:	2000e3d8 	.word	0x2000e3d8

0800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800fdcc:	b507      	push	{r0, r1, r2, lr}
 800fdce:	4b09      	ldr	r3, [pc, #36]	; (800fdf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800fdd0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fdd4:	4b08      	ldr	r3, [pc, #32]	; (800fdf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800fdd6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fdda:	2100      	movs	r1, #0
 800fddc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fde0:	9100      	str	r1, [sp, #0]
 800fde2:	4669      	mov	r1, sp
 800fde4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fde8:	f7ff ffd8 	bl	800fd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800fdec:	b003      	add	sp, #12
 800fdee:	f85d fb04 	ldr.w	pc, [sp], #4
 800fdf2:	bf00      	nop
 800fdf4:	2000e3d4 	.word	0x2000e3d4
 800fdf8:	2000e3d6 	.word	0x2000e3d6

0800fdfc <_ZN8touchgfx11Application13requestRedrawEv>:
 800fdfc:	4b06      	ldr	r3, [pc, #24]	; (800fe18 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800fdfe:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fe02:	4b06      	ldr	r3, [pc, #24]	; (800fe1c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800fe04:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800fe08:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fe0c:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800fe10:	2100      	movs	r1, #0
 800fe12:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800fe16:	4770      	bx	lr
 800fe18:	2000e3d4 	.word	0x2000e3d4
 800fe1c:	2000e3d6 	.word	0x2000e3d6

0800fe20 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800fe20:	4b03      	ldr	r3, [pc, #12]	; (800fe30 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800fe22:	6818      	ldr	r0, [r3, #0]
 800fe24:	b110      	cbz	r0, 800fe2c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800fe26:	6803      	ldr	r3, [r0, #0]
 800fe28:	699b      	ldr	r3, [r3, #24]
 800fe2a:	4718      	bx	r3
 800fe2c:	4770      	bx	lr
 800fe2e:	bf00      	nop
 800fe30:	2000e43c 	.word	0x2000e43c

0800fe34 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800fe34:	4770      	bx	lr
	...

0800fe38 <_ZN8touchgfx11Application4drawEv>:
 800fe38:	b507      	push	{r0, r1, r2, lr}
 800fe3a:	4b09      	ldr	r3, [pc, #36]	; (800fe60 <_ZN8touchgfx11Application4drawEv+0x28>)
 800fe3c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fe40:	4b08      	ldr	r3, [pc, #32]	; (800fe64 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800fe42:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fe46:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fe4a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fe4e:	6803      	ldr	r3, [r0, #0]
 800fe50:	2100      	movs	r1, #0
 800fe52:	9100      	str	r1, [sp, #0]
 800fe54:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fe56:	4669      	mov	r1, sp
 800fe58:	4798      	blx	r3
 800fe5a:	b003      	add	sp, #12
 800fe5c:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe60:	2000e3d4 	.word	0x2000e3d4
 800fe64:	2000e3d6 	.word	0x2000e3d6

0800fe68 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800fe68:	4b03      	ldr	r3, [pc, #12]	; (800fe78 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800fe6a:	6818      	ldr	r0, [r3, #0]
 800fe6c:	b110      	cbz	r0, 800fe74 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800fe6e:	6803      	ldr	r3, [r0, #0]
 800fe70:	69db      	ldr	r3, [r3, #28]
 800fe72:	4718      	bx	r3
 800fe74:	4770      	bx	lr
 800fe76:	bf00      	nop
 800fe78:	2000e43c 	.word	0x2000e43c

0800fe7c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800fe7c:	4b03      	ldr	r3, [pc, #12]	; (800fe8c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800fe7e:	6818      	ldr	r0, [r3, #0]
 800fe80:	b110      	cbz	r0, 800fe88 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800fe82:	6803      	ldr	r3, [r0, #0]
 800fe84:	6a1b      	ldr	r3, [r3, #32]
 800fe86:	4718      	bx	r3
 800fe88:	4770      	bx	lr
 800fe8a:	bf00      	nop
 800fe8c:	2000e43c 	.word	0x2000e43c

0800fe90 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800fe90:	4b03      	ldr	r3, [pc, #12]	; (800fea0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800fe92:	6818      	ldr	r0, [r3, #0]
 800fe94:	b110      	cbz	r0, 800fe9c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800fe96:	6803      	ldr	r3, [r0, #0]
 800fe98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fe9a:	4718      	bx	r3
 800fe9c:	4770      	bx	lr
 800fe9e:	bf00      	nop
 800fea0:	2000e43c 	.word	0x2000e43c

0800fea4 <_ZN8touchgfx11Application15handleTickEventEv>:
 800fea4:	b570      	push	{r4, r5, r6, lr}
 800fea6:	4d34      	ldr	r5, [pc, #208]	; (800ff78 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800fea8:	4604      	mov	r4, r0
 800feaa:	6828      	ldr	r0, [r5, #0]
 800feac:	b140      	cbz	r0, 800fec0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800feae:	7a03      	ldrb	r3, [r0, #8]
 800feb0:	b933      	cbnz	r3, 800fec0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800feb2:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800feb6:	6803      	ldr	r3, [r0, #0]
 800feb8:	689b      	ldr	r3, [r3, #8]
 800feba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800febe:	4718      	bx	r3
 800fec0:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800fec4:	b97b      	cbnz	r3, 800fee6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fec6:	b170      	cbz	r0, 800fee6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fec8:	7a03      	ldrb	r3, [r0, #8]
 800feca:	b163      	cbz	r3, 800fee6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fecc:	4b2b      	ldr	r3, [pc, #172]	; (800ff7c <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800fece:	6818      	ldr	r0, [r3, #0]
 800fed0:	b110      	cbz	r0, 800fed8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800fed2:	6803      	ldr	r3, [r0, #0]
 800fed4:	691b      	ldr	r3, [r3, #16]
 800fed6:	4798      	blx	r3
 800fed8:	6828      	ldr	r0, [r5, #0]
 800feda:	6803      	ldr	r3, [r0, #0]
 800fedc:	68db      	ldr	r3, [r3, #12]
 800fede:	4798      	blx	r3
 800fee0:	2301      	movs	r3, #1
 800fee2:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800fee6:	2500      	movs	r5, #0
 800fee8:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800feec:	42a8      	cmp	r0, r5
 800feee:	dd0c      	ble.n	800ff0a <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800fef0:	1963      	adds	r3, r4, r5
 800fef2:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800fef6:	b132      	cbz	r2, 800ff06 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800fef8:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800fefc:	4413      	add	r3, r2
 800fefe:	6858      	ldr	r0, [r3, #4]
 800ff00:	6803      	ldr	r3, [r0, #0]
 800ff02:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800ff04:	4798      	blx	r3
 800ff06:	3501      	adds	r5, #1
 800ff08:	e7ee      	b.n	800fee8 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800ff0a:	2300      	movs	r3, #0
 800ff0c:	461a      	mov	r2, r3
 800ff0e:	4298      	cmp	r0, r3
 800ff10:	d114      	bne.n	800ff3c <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800ff12:	1d25      	adds	r5, r4, #4
 800ff14:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800ff18:	1e48      	subs	r0, r1, #1
 800ff1a:	b280      	uxth	r0, r0
 800ff1c:	4291      	cmp	r1, r2
 800ff1e:	dd24      	ble.n	800ff6a <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800ff20:	4288      	cmp	r0, r1
 800ff22:	d2fb      	bcs.n	800ff1c <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800ff24:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800ff28:	3304      	adds	r3, #4
 800ff2a:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800ff2e:	428b      	cmp	r3, r1
 800ff30:	d018      	beq.n	800ff64 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800ff32:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800ff36:	f843 6c04 	str.w	r6, [r3, #-4]
 800ff3a:	e7f8      	b.n	800ff2e <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800ff3c:	18e1      	adds	r1, r4, r3
 800ff3e:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800ff42:	b16d      	cbz	r5, 800ff60 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800ff44:	429a      	cmp	r2, r3
 800ff46:	d00a      	beq.n	800ff5e <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800ff48:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800ff4c:	4431      	add	r1, r6
 800ff4e:	684e      	ldr	r6, [r1, #4]
 800ff50:	b291      	uxth	r1, r2
 800ff52:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800ff56:	604e      	str	r6, [r1, #4]
 800ff58:	18a1      	adds	r1, r4, r2
 800ff5a:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800ff5e:	3201      	adds	r2, #1
 800ff60:	3301      	adds	r3, #1
 800ff62:	e7d4      	b.n	800ff0e <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800ff64:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800ff68:	e7d4      	b.n	800ff14 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800ff6a:	4b04      	ldr	r3, [pc, #16]	; (800ff7c <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800ff6c:	6818      	ldr	r0, [r3, #0]
 800ff6e:	b110      	cbz	r0, 800ff76 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800ff70:	6803      	ldr	r3, [r0, #0]
 800ff72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ff74:	e7a1      	b.n	800feba <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800ff76:	bd70      	pop	{r4, r5, r6, pc}
 800ff78:	2000e440 	.word	0x2000e440
 800ff7c:	2000e43c 	.word	0x2000e43c

0800ff80 <_ZN8touchgfx11ApplicationD1Ev>:
 800ff80:	4770      	bx	lr

0800ff82 <_ZN8touchgfx11ApplicationD0Ev>:
 800ff82:	b510      	push	{r4, lr}
 800ff84:	f44f 719c 	mov.w	r1, #312	; 0x138
 800ff88:	4604      	mov	r4, r0
 800ff8a:	f011 faa2 	bl	80214d2 <_ZdlPvj>
 800ff8e:	4620      	mov	r0, r4
 800ff90:	bd10      	pop	{r4, pc}
	...

0800ff94 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800ff94:	b570      	push	{r4, r5, r6, lr}
 800ff96:	4606      	mov	r6, r0
 800ff98:	460c      	mov	r4, r1
 800ff9a:	b929      	cbnz	r1, 800ffa8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800ff9c:	4b0c      	ldr	r3, [pc, #48]	; (800ffd0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800ff9e:	4a0d      	ldr	r2, [pc, #52]	; (800ffd4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800ffa0:	480d      	ldr	r0, [pc, #52]	; (800ffd8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800ffa2:	2164      	movs	r1, #100	; 0x64
 800ffa4:	f012 f8b4 	bl	8022110 <__assert_func>
 800ffa8:	4d0c      	ldr	r5, [pc, #48]	; (800ffdc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800ffaa:	2300      	movs	r3, #0
 800ffac:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800ffb0:	6828      	ldr	r0, [r5, #0]
 800ffb2:	b110      	cbz	r0, 800ffba <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800ffb4:	6803      	ldr	r3, [r0, #0]
 800ffb6:	695b      	ldr	r3, [r3, #20]
 800ffb8:	4798      	blx	r3
 800ffba:	602c      	str	r4, [r5, #0]
 800ffbc:	6823      	ldr	r3, [r4, #0]
 800ffbe:	4620      	mov	r0, r4
 800ffc0:	68db      	ldr	r3, [r3, #12]
 800ffc2:	4798      	blx	r3
 800ffc4:	6833      	ldr	r3, [r6, #0]
 800ffc6:	4630      	mov	r0, r6
 800ffc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ffca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ffce:	4718      	bx	r3
 800ffd0:	08025deb 	.word	0x08025deb
 800ffd4:	08025ee4 	.word	0x08025ee4
 800ffd8:	08025df5 	.word	0x08025df5
 800ffdc:	2000e43c 	.word	0x2000e43c

0800ffe0 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ffe0:	b510      	push	{r4, lr}
 800ffe2:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ffe6:	888a      	ldrh	r2, [r1, #4]
 800ffe8:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ffec:	4422      	add	r2, r4
 800ffee:	b212      	sxth	r2, r2
 800fff0:	4293      	cmp	r3, r2
 800fff2:	da15      	bge.n	8010020 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fff4:	8882      	ldrh	r2, [r0, #4]
 800fff6:	4413      	add	r3, r2
 800fff8:	b21b      	sxth	r3, r3
 800fffa:	429c      	cmp	r4, r3
 800fffc:	da10      	bge.n	8010020 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fffe:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010002:	88c9      	ldrh	r1, [r1, #6]
 8010004:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010008:	4419      	add	r1, r3
 801000a:	b209      	sxth	r1, r1
 801000c:	428a      	cmp	r2, r1
 801000e:	da07      	bge.n	8010020 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010010:	88c0      	ldrh	r0, [r0, #6]
 8010012:	4410      	add	r0, r2
 8010014:	b200      	sxth	r0, r0
 8010016:	4283      	cmp	r3, r0
 8010018:	bfac      	ite	ge
 801001a:	2000      	movge	r0, #0
 801001c:	2001      	movlt	r0, #1
 801001e:	bd10      	pop	{r4, pc}
 8010020:	2000      	movs	r0, #0
 8010022:	e7fc      	b.n	801001e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08010024 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8010024:	b570      	push	{r4, r5, r6, lr}
 8010026:	f9b1 4000 	ldrsh.w	r4, [r1]
 801002a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801002e:	42ac      	cmp	r4, r5
 8010030:	db18      	blt.n	8010064 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 8010032:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 8010036:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801003a:	429a      	cmp	r2, r3
 801003c:	db12      	blt.n	8010064 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 801003e:	8886      	ldrh	r6, [r0, #4]
 8010040:	4435      	add	r5, r6
 8010042:	888e      	ldrh	r6, [r1, #4]
 8010044:	4434      	add	r4, r6
 8010046:	b22d      	sxth	r5, r5
 8010048:	b224      	sxth	r4, r4
 801004a:	42a5      	cmp	r5, r4
 801004c:	db0a      	blt.n	8010064 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 801004e:	88c0      	ldrh	r0, [r0, #6]
 8010050:	4418      	add	r0, r3
 8010052:	88cb      	ldrh	r3, [r1, #6]
 8010054:	441a      	add	r2, r3
 8010056:	b200      	sxth	r0, r0
 8010058:	b212      	sxth	r2, r2
 801005a:	4290      	cmp	r0, r2
 801005c:	bfb4      	ite	lt
 801005e:	2000      	movlt	r0, #0
 8010060:	2001      	movge	r0, #1
 8010062:	bd70      	pop	{r4, r5, r6, pc}
 8010064:	2000      	movs	r0, #0
 8010066:	e7fc      	b.n	8010062 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

08010068 <_ZN8touchgfx11Application11getInstanceEv>:
 8010068:	4b01      	ldr	r3, [pc, #4]	; (8010070 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801006a:	6818      	ldr	r0, [r3, #0]
 801006c:	4770      	bx	lr
 801006e:	bf00      	nop
 8010070:	2000e44c 	.word	0x2000e44c

08010074 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 8010074:	b570      	push	{r4, r5, r6, lr}
 8010076:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 801007a:	1d04      	adds	r4, r0, #4
 801007c:	2200      	movs	r2, #0
 801007e:	b295      	uxth	r5, r2
 8010080:	42ab      	cmp	r3, r5
 8010082:	d90f      	bls.n	80100a4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 8010084:	f854 6b04 	ldr.w	r6, [r4], #4
 8010088:	428e      	cmp	r6, r1
 801008a:	4615      	mov	r5, r2
 801008c:	f102 0201 	add.w	r2, r2, #1
 8010090:	d1f5      	bne.n	801007e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 8010092:	4428      	add	r0, r5
 8010094:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8010098:	2bff      	cmp	r3, #255	; 0xff
 801009a:	d002      	beq.n	80100a2 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 801009c:	3301      	adds	r3, #1
 801009e:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 80100a2:	bd70      	pop	{r4, r5, r6, pc}
 80100a4:	2b20      	cmp	r3, #32
 80100a6:	d106      	bne.n	80100b6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 80100a8:	4b08      	ldr	r3, [pc, #32]	; (80100cc <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 80100aa:	4a09      	ldr	r2, [pc, #36]	; (80100d0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 80100ac:	4809      	ldr	r0, [pc, #36]	; (80100d4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 80100ae:	f44f 7117 	mov.w	r1, #604	; 0x25c
 80100b2:	f012 f82d 	bl	8022110 <__assert_func>
 80100b6:	18c2      	adds	r2, r0, r3
 80100b8:	2401      	movs	r4, #1
 80100ba:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 80100be:	191a      	adds	r2, r3, r4
 80100c0:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 80100c4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80100c8:	6041      	str	r1, [r0, #4]
 80100ca:	e7ea      	b.n	80100a2 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 80100cc:	08025e1f 	.word	0x08025e1f
 80100d0:	08025f28 	.word	0x08025f28
 80100d4:	08025df5 	.word	0x08025df5

080100d8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 80100d8:	b570      	push	{r4, r5, r6, lr}
 80100da:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 80100de:	1d04      	adds	r4, r0, #4
 80100e0:	2300      	movs	r3, #0
 80100e2:	b29a      	uxth	r2, r3
 80100e4:	4296      	cmp	r6, r2
 80100e6:	d90a      	bls.n	80100fe <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 80100e8:	f854 2b04 	ldr.w	r2, [r4], #4
 80100ec:	428a      	cmp	r2, r1
 80100ee:	d107      	bne.n	8010100 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 80100f0:	18c5      	adds	r5, r0, r3
 80100f2:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 80100f6:	b11a      	cbz	r2, 8010100 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 80100f8:	3a01      	subs	r2, #1
 80100fa:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 80100fe:	bd70      	pop	{r4, r5, r6, pc}
 8010100:	3301      	adds	r3, #1
 8010102:	e7ee      	b.n	80100e2 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

08010104 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8010104:	2300      	movs	r3, #0
 8010106:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801010a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 801010e:	30a8      	adds	r0, #168	; 0xa8
 8010110:	f802 3b01 	strb.w	r3, [r2], #1
 8010114:	4282      	cmp	r2, r0
 8010116:	d1fb      	bne.n	8010110 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8010118:	4770      	bx	lr

0801011a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801011a:	4603      	mov	r3, r0
 801011c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8010120:	2200      	movs	r2, #0
 8010122:	801a      	strh	r2, [r3, #0]
 8010124:	805a      	strh	r2, [r3, #2]
 8010126:	809a      	strh	r2, [r3, #4]
 8010128:	80da      	strh	r2, [r3, #6]
 801012a:	3308      	adds	r3, #8
 801012c:	428b      	cmp	r3, r1
 801012e:	d1f8      	bne.n	8010122 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8010130:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8010134:	4770      	bx	lr
	...

08010138 <_ZN8touchgfx11ApplicationC1Ev>:
 8010138:	b570      	push	{r4, r5, r6, lr}
 801013a:	4b1a      	ldr	r3, [pc, #104]	; (80101a4 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 801013c:	6003      	str	r3, [r0, #0]
 801013e:	2500      	movs	r5, #0
 8010140:	4604      	mov	r4, r0
 8010142:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 8010146:	30a8      	adds	r0, #168	; 0xa8
 8010148:	f7ff ffe7 	bl	801011a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801014c:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8010150:	f7ff ffe3 	bl	801011a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010154:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8010158:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 801015c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8010160:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8010164:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8010168:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 801016c:	490e      	ldr	r1, [pc, #56]	; (80101a8 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 801016e:	480f      	ldr	r0, [pc, #60]	; (80101ac <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8010170:	4e0f      	ldr	r6, [pc, #60]	; (80101b0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010172:	f00e fdb7 	bl	801ece4 <CRC_Lock>
 8010176:	4b0f      	ldr	r3, [pc, #60]	; (80101b4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010178:	b158      	cbz	r0, 8010192 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 801017a:	801d      	strh	r5, [r3, #0]
 801017c:	4a0e      	ldr	r2, [pc, #56]	; (80101b8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801017e:	2300      	movs	r3, #0
 8010180:	6013      	str	r3, [r2, #0]
 8010182:	4a0e      	ldr	r2, [pc, #56]	; (80101bc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8010184:	6033      	str	r3, [r6, #0]
 8010186:	4620      	mov	r0, r4
 8010188:	6013      	str	r3, [r2, #0]
 801018a:	f7ff ffbb 	bl	8010104 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 801018e:	4620      	mov	r0, r4
 8010190:	bd70      	pop	{r4, r5, r6, pc}
 8010192:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010196:	2002      	movs	r0, #2
 8010198:	801a      	strh	r2, [r3, #0]
 801019a:	6030      	str	r0, [r6, #0]
 801019c:	f001 fb50 	bl	8011840 <_ZN8touchgfx6Screen4drawEv>
 80101a0:	e7ec      	b.n	801017c <_ZN8touchgfx11ApplicationC1Ev+0x44>
 80101a2:	bf00      	nop
 80101a4:	08025ea8 	.word	0x08025ea8
 80101a8:	b5e8b5cd 	.word	0xb5e8b5cd
 80101ac:	f407a5c2 	.word	0xf407a5c2
 80101b0:	2000e43c 	.word	0x2000e43c
 80101b4:	20000060 	.word	0x20000060
 80101b8:	2000e44c 	.word	0x2000e44c
 80101bc:	2000e440 	.word	0x2000e440

080101c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80101c0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80101c4:	428b      	cmp	r3, r1
 80101c6:	b510      	push	{r4, lr}
 80101c8:	d90e      	bls.n	80101e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 80101ca:	3b01      	subs	r3, #1
 80101cc:	b29b      	uxth	r3, r3
 80101ce:	428b      	cmp	r3, r1
 80101d0:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80101d4:	d908      	bls.n	80101e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 80101d6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80101da:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80101de:	681a      	ldr	r2, [r3, #0]
 80101e0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80101e4:	685a      	ldr	r2, [r3, #4]
 80101e6:	6062      	str	r2, [r4, #4]
 80101e8:	bd10      	pop	{r4, pc}
	...

080101ec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 80101ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80101ee:	466b      	mov	r3, sp
 80101f0:	e883 0006 	stmia.w	r3, {r1, r2}
 80101f4:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 80101f8:	2a07      	cmp	r2, #7
 80101fa:	4604      	mov	r4, r0
 80101fc:	d906      	bls.n	801020c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 80101fe:	4b09      	ldr	r3, [pc, #36]	; (8010224 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 8010200:	4a09      	ldr	r2, [pc, #36]	; (8010228 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 8010202:	480a      	ldr	r0, [pc, #40]	; (801022c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8010204:	f240 118f 	movw	r1, #399	; 0x18f
 8010208:	f011 ff82 	bl	8022110 <__assert_func>
 801020c:	1c51      	adds	r1, r2, #1
 801020e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8010212:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 8010216:	cb03      	ldmia	r3!, {r0, r1}
 8010218:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 801021c:	6069      	str	r1, [r5, #4]
 801021e:	b003      	add	sp, #12
 8010220:	bd30      	pop	{r4, r5, pc}
 8010222:	bf00      	nop
 8010224:	08025e47 	.word	0x08025e47
 8010228:	08025f6d 	.word	0x08025f6d
 801022c:	08025e76 	.word	0x08025e76

08010230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010234:	b08d      	sub	sp, #52	; 0x34
 8010236:	ac08      	add	r4, sp, #32
 8010238:	4683      	mov	fp, r0
 801023a:	4620      	mov	r0, r4
 801023c:	e884 0006 	stmia.w	r4, {r1, r2}
 8010240:	f7fb fbf7 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010244:	2800      	cmp	r0, #0
 8010246:	d16a      	bne.n	801031e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8010248:	9402      	str	r4, [sp, #8]
 801024a:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801024e:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8010252:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8010256:	2400      	movs	r4, #0
 8010258:	9301      	str	r3, [sp, #4]
 801025a:	36a0      	adds	r6, #160	; 0xa0
 801025c:	42a5      	cmp	r5, r4
 801025e:	d00d      	beq.n	801027c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 8010260:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8010264:	9802      	ldr	r0, [sp, #8]
 8010266:	f7ff fedd 	bl	8010024 <_ZNK8touchgfx4Rect8includesERKS0_>
 801026a:	b128      	cbz	r0, 8010278 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 801026c:	1e69      	subs	r1, r5, #1
 801026e:	1b09      	subs	r1, r1, r4
 8010270:	b289      	uxth	r1, r1
 8010272:	9801      	ldr	r0, [sp, #4]
 8010274:	f7ff ffa4 	bl	80101c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010278:	3401      	adds	r4, #1
 801027a:	e7ef      	b.n	801025c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801027c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8010280:	9703      	str	r7, [sp, #12]
 8010282:	1e7b      	subs	r3, r7, #1
 8010284:	9300      	str	r3, [sp, #0]
 8010286:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 801028a:	2400      	movs	r4, #0
 801028c:	4655      	mov	r5, sl
 801028e:	9704      	str	r7, [sp, #16]
 8010290:	4626      	mov	r6, r4
 8010292:	9b04      	ldr	r3, [sp, #16]
 8010294:	2b00      	cmp	r3, #0
 8010296:	d078      	beq.n	801038a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 8010298:	9902      	ldr	r1, [sp, #8]
 801029a:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801029e:	f7ff fe9f 	bl	800ffe0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80102a2:	b360      	cbz	r0, 80102fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 80102a4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80102a8:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 80102ac:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 80102b0:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 80102b4:	45e6      	cmp	lr, ip
 80102b6:	db35      	blt.n	8010324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 80102b8:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 80102bc:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80102c0:	4472      	add	r2, lr
 80102c2:	4463      	add	r3, ip
 80102c4:	b212      	sxth	r2, r2
 80102c6:	b21b      	sxth	r3, r3
 80102c8:	429a      	cmp	r2, r3
 80102ca:	dc2b      	bgt.n	8010324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 80102cc:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80102d0:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80102d4:	fa1f f288 	uxth.w	r2, r8
 80102d8:	4413      	add	r3, r2
 80102da:	b29b      	uxth	r3, r3
 80102dc:	45c1      	cmp	r9, r8
 80102de:	fa0f fe83 	sxth.w	lr, r3
 80102e2:	fa1f fc89 	uxth.w	ip, r9
 80102e6:	db0f      	blt.n	8010308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 80102e8:	eba3 030c 	sub.w	r3, r3, ip
 80102ec:	1ac9      	subs	r1, r1, r3
 80102ee:	b209      	sxth	r1, r1
 80102f0:	2900      	cmp	r1, #0
 80102f2:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 80102f6:	dd12      	ble.n	801031e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 80102f8:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 80102fc:	4604      	mov	r4, r0
 80102fe:	9b04      	ldr	r3, [sp, #16]
 8010300:	3b01      	subs	r3, #1
 8010302:	9304      	str	r3, [sp, #16]
 8010304:	3d08      	subs	r5, #8
 8010306:	e7c4      	b.n	8010292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 8010308:	4461      	add	r1, ip
 801030a:	b209      	sxth	r1, r1
 801030c:	4571      	cmp	r1, lr
 801030e:	dc3a      	bgt.n	8010386 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8010310:	eba2 020c 	sub.w	r2, r2, ip
 8010314:	b212      	sxth	r2, r2
 8010316:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801031a:	2a00      	cmp	r2, #0
 801031c:	dcee      	bgt.n	80102fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 801031e:	b00d      	add	sp, #52	; 0x34
 8010320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010324:	45c1      	cmp	r9, r8
 8010326:	db2e      	blt.n	8010386 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8010328:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 801032c:	4499      	add	r9, r3
 801032e:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8010332:	4498      	add	r8, r3
 8010334:	fa0f f989 	sxth.w	r9, r9
 8010338:	fa0f f888 	sxth.w	r8, r8
 801033c:	45c1      	cmp	r9, r8
 801033e:	dc22      	bgt.n	8010386 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8010340:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8010344:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8010348:	fa1f f28c 	uxth.w	r2, ip
 801034c:	4413      	add	r3, r2
 801034e:	b29b      	uxth	r3, r3
 8010350:	45e6      	cmp	lr, ip
 8010352:	fa1f f88e 	uxth.w	r8, lr
 8010356:	fa0f f983 	sxth.w	r9, r3
 801035a:	db0a      	blt.n	8010372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 801035c:	eba3 0308 	sub.w	r3, r3, r8
 8010360:	1ac9      	subs	r1, r1, r3
 8010362:	b209      	sxth	r1, r1
 8010364:	2900      	cmp	r1, #0
 8010366:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801036a:	ddd8      	ble.n	801031e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 801036c:	f8ad 9020 	strh.w	r9, [sp, #32]
 8010370:	e7c4      	b.n	80102fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 8010372:	4441      	add	r1, r8
 8010374:	b209      	sxth	r1, r1
 8010376:	4549      	cmp	r1, r9
 8010378:	dc05      	bgt.n	8010386 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 801037a:	eba2 0208 	sub.w	r2, r2, r8
 801037e:	b212      	sxth	r2, r2
 8010380:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8010384:	e7c9      	b.n	801031a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010386:	4606      	mov	r6, r0
 8010388:	e7b9      	b.n	80102fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 801038a:	2c00      	cmp	r4, #0
 801038c:	f47f af7d 	bne.w	801028a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8010390:	2e00      	cmp	r6, #0
 8010392:	f000 81dd 	beq.w	8010750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8010396:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 801039a:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 801039e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 80103a2:	b2b9      	uxth	r1, r7
 80103a4:	9104      	str	r1, [sp, #16]
 80103a6:	9804      	ldr	r0, [sp, #16]
 80103a8:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80103ac:	4401      	add	r1, r0
 80103ae:	b2b3      	uxth	r3, r6
 80103b0:	b289      	uxth	r1, r1
 80103b2:	441a      	add	r2, r3
 80103b4:	9105      	str	r1, [sp, #20]
 80103b6:	b292      	uxth	r2, r2
 80103b8:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 80103bc:	fa0f f882 	sxth.w	r8, r2
 80103c0:	4655      	mov	r5, sl
 80103c2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80103c6:	9b03      	ldr	r3, [sp, #12]
 80103c8:	2b00      	cmp	r3, #0
 80103ca:	d054      	beq.n	8010476 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80103cc:	9902      	ldr	r1, [sp, #8]
 80103ce:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80103d2:	f7ff fe05 	bl	800ffe0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80103d6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80103da:	b1d8      	cbz	r0, 8010414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 80103dc:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 80103e0:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 80103e4:	4576      	cmp	r6, lr
 80103e6:	dc26      	bgt.n	8010436 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80103e8:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 80103ec:	44f4      	add	ip, lr
 80103ee:	fa0f fc8c 	sxth.w	ip, ip
 80103f2:	45e0      	cmp	r8, ip
 80103f4:	db1f      	blt.n	8010436 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80103f6:	428f      	cmp	r7, r1
 80103f8:	fa1f fc81 	uxth.w	ip, r1
 80103fc:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8010400:	dc0f      	bgt.n	8010422 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010402:	9805      	ldr	r0, [sp, #20]
 8010404:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8010408:	eba0 0c0c 	sub.w	ip, r0, ip
 801040c:	eba1 010c 	sub.w	r1, r1, ip
 8010410:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8010414:	4620      	mov	r0, r4
 8010416:	9903      	ldr	r1, [sp, #12]
 8010418:	3901      	subs	r1, #1
 801041a:	9103      	str	r1, [sp, #12]
 801041c:	3d08      	subs	r5, #8
 801041e:	4604      	mov	r4, r0
 8010420:	e7cf      	b.n	80103c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 8010422:	4461      	add	r1, ip
 8010424:	b209      	sxth	r1, r1
 8010426:	4549      	cmp	r1, r9
 8010428:	dcf5      	bgt.n	8010416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801042a:	9904      	ldr	r1, [sp, #16]
 801042c:	eba1 0c0c 	sub.w	ip, r1, ip
 8010430:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8010434:	e7ee      	b.n	8010414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8010436:	428f      	cmp	r7, r1
 8010438:	dced      	bgt.n	8010416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801043a:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 801043e:	4461      	add	r1, ip
 8010440:	b209      	sxth	r1, r1
 8010442:	4589      	cmp	r9, r1
 8010444:	dbe7      	blt.n	8010416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010446:	4576      	cmp	r6, lr
 8010448:	fa1f fc8e 	uxth.w	ip, lr
 801044c:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 8010450:	dc08      	bgt.n	8010464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 8010452:	eba2 0c0c 	sub.w	ip, r2, ip
 8010456:	eba1 010c 	sub.w	r1, r1, ip
 801045a:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 801045e:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8010462:	e7d7      	b.n	8010414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8010464:	4461      	add	r1, ip
 8010466:	b209      	sxth	r1, r1
 8010468:	4588      	cmp	r8, r1
 801046a:	dbd4      	blt.n	8010416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801046c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010470:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8010474:	e7ce      	b.n	8010414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8010476:	2c00      	cmp	r4, #0
 8010478:	f000 816a 	beq.w	8010750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 801047c:	9b00      	ldr	r3, [sp, #0]
 801047e:	3301      	adds	r3, #1
 8010480:	f000 8166 	beq.w	8010750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8010484:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8010488:	4621      	mov	r1, r4
 801048a:	9802      	ldr	r0, [sp, #8]
 801048c:	f7ff fdca 	bl	8010024 <_ZNK8touchgfx4Rect8includesERKS0_>
 8010490:	b120      	cbz	r0, 801049c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 8010492:	f8bd 1000 	ldrh.w	r1, [sp]
 8010496:	9801      	ldr	r0, [sp, #4]
 8010498:	f7ff fe92 	bl	80101c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801049c:	9902      	ldr	r1, [sp, #8]
 801049e:	4620      	mov	r0, r4
 80104a0:	f7ff fd9e 	bl	800ffe0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80104a4:	2800      	cmp	r0, #0
 80104a6:	f000 809b 	beq.w	80105e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 80104aa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80104ae:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 80104b2:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 80104b6:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 80104ba:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80104be:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 80104c2:	fa1f f288 	uxth.w	r2, r8
 80104c6:	19d5      	adds	r5, r2, r7
 80104c8:	fa1f f985 	uxth.w	r9, r5
 80104cc:	fa0f f589 	sxth.w	r5, r9
 80104d0:	b2a1      	uxth	r1, r4
 80104d2:	440b      	add	r3, r1
 80104d4:	9503      	str	r5, [sp, #12]
 80104d6:	45a0      	cmp	r8, r4
 80104d8:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80104dc:	9507      	str	r5, [sp, #28]
 80104de:	b29b      	uxth	r3, r3
 80104e0:	f340 809d 	ble.w	801061e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80104e4:	1a52      	subs	r2, r2, r1
 80104e6:	b292      	uxth	r2, r2
 80104e8:	4584      	cmp	ip, r0
 80104ea:	fa0f fe83 	sxth.w	lr, r3
 80104ee:	b215      	sxth	r5, r2
 80104f0:	dd2f      	ble.n	8010552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 80104f2:	9e00      	ldr	r6, [sp, #0]
 80104f4:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80104f8:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 80104fc:	9e03      	ldr	r6, [sp, #12]
 80104fe:	eba6 060e 	sub.w	r6, r6, lr
 8010502:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 8010506:	fa1f fc8c 	uxth.w	ip, ip
 801050a:	b280      	uxth	r0, r0
 801050c:	ebac 0300 	sub.w	r3, ip, r0
 8010510:	448c      	add	ip, r1
 8010512:	4470      	add	r0, lr
 8010514:	b29b      	uxth	r3, r3
 8010516:	fa0f fc8c 	sxth.w	ip, ip
 801051a:	b200      	sxth	r0, r0
 801051c:	b21c      	sxth	r4, r3
 801051e:	ebac 0000 	sub.w	r0, ip, r0
 8010522:	4366      	muls	r6, r4
 8010524:	4368      	muls	r0, r5
 8010526:	4286      	cmp	r6, r0
 8010528:	db09      	blt.n	801053e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 801052a:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 801052e:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8010532:	4417      	add	r7, r2
 8010534:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010538:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 801053c:	e685      	b.n	801024a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801053e:	440b      	add	r3, r1
 8010540:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010544:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8010548:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 801054c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010550:	e67b      	b.n	801024a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010552:	9e03      	ldr	r6, [sp, #12]
 8010554:	45b6      	cmp	lr, r6
 8010556:	da28      	bge.n	80105aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 8010558:	9b00      	ldr	r3, [sp, #0]
 801055a:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 801055e:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 8010562:	eb04 030c 	add.w	r3, r4, ip
 8010566:	fa1f f883 	uxth.w	r8, r3
 801056a:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 801056e:	4403      	add	r3, r0
 8010570:	eba3 0308 	sub.w	r3, r3, r8
 8010574:	b29b      	uxth	r3, r3
 8010576:	fa0f f988 	sxth.w	r9, r8
 801057a:	eba0 000c 	sub.w	r0, r0, ip
 801057e:	fa0f f883 	sxth.w	r8, r3
 8010582:	eba6 060e 	sub.w	r6, r6, lr
 8010586:	4368      	muls	r0, r5
 8010588:	fb08 f606 	mul.w	r6, r8, r6
 801058c:	42b0      	cmp	r0, r6
 801058e:	dc06      	bgt.n	801059e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 8010590:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8010594:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 8010598:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 801059c:	e7c9      	b.n	8010532 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 801059e:	4423      	add	r3, r4
 80105a0:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 80105a4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80105a8:	e64f      	b.n	801024a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 80105aa:	9807      	ldr	r0, [sp, #28]
 80105ac:	eba3 0309 	sub.w	r3, r3, r9
 80105b0:	b29b      	uxth	r3, r3
 80105b2:	2806      	cmp	r0, #6
 80105b4:	fa0f fc83 	sxth.w	ip, r3
 80105b8:	d818      	bhi.n	80105ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 80105ba:	4652      	mov	r2, sl
 80105bc:	ab0a      	add	r3, sp, #40	; 0x28
 80105be:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 80105c2:	6851      	ldr	r1, [r2, #4]
 80105c4:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 80105c8:	c303      	stmia	r3!, {r0, r1}
 80105ca:	9b03      	ldr	r3, [sp, #12]
 80105cc:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 80105d0:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 80105d4:	ab0a      	add	r3, sp, #40	; 0x28
 80105d6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80105da:	9801      	ldr	r0, [sp, #4]
 80105dc:	f7ff fe06 	bl	80101ec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 80105e0:	9b00      	ldr	r3, [sp, #0]
 80105e2:	3b01      	subs	r3, #1
 80105e4:	9300      	str	r3, [sp, #0]
 80105e6:	f1aa 0a08 	sub.w	sl, sl, #8
 80105ea:	e747      	b.n	801047c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80105ec:	9800      	ldr	r0, [sp, #0]
 80105ee:	45ac      	cmp	ip, r5
 80105f0:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 80105f4:	db0c      	blt.n	8010610 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 80105f6:	4417      	add	r7, r2
 80105f8:	b2bf      	uxth	r7, r7
 80105fa:	4458      	add	r0, fp
 80105fc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8010600:	440f      	add	r7, r1
 8010602:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010606:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 801060a:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 801060e:	e61c      	b.n	801024a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010610:	4458      	add	r0, fp
 8010612:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 8010616:	443b      	add	r3, r7
 8010618:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801061c:	e615      	b.n	801024a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801061e:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 8010622:	fa1f f18c 	uxth.w	r1, ip
 8010626:	eb01 0e05 	add.w	lr, r1, r5
 801062a:	b282      	uxth	r2, r0
 801062c:	fa1f fe8e 	uxth.w	lr, lr
 8010630:	9204      	str	r2, [sp, #16]
 8010632:	fa0f f28e 	sxth.w	r2, lr
 8010636:	9205      	str	r2, [sp, #20]
 8010638:	9e04      	ldr	r6, [sp, #16]
 801063a:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 801063e:	4432      	add	r2, r6
 8010640:	b292      	uxth	r2, r2
 8010642:	4584      	cmp	ip, r0
 8010644:	9206      	str	r2, [sp, #24]
 8010646:	da26      	bge.n	8010696 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 8010648:	eba3 0309 	sub.w	r3, r3, r9
 801064c:	eba2 020e 	sub.w	r2, r2, lr
 8010650:	b29b      	uxth	r3, r3
 8010652:	b292      	uxth	r2, r2
 8010654:	fa0f fa83 	sxth.w	sl, r3
 8010658:	b211      	sxth	r1, r2
 801065a:	eba0 000c 	sub.w	r0, r0, ip
 801065e:	eba4 0408 	sub.w	r4, r4, r8
 8010662:	fb0a f000 	mul.w	r0, sl, r0
 8010666:	434c      	muls	r4, r1
 8010668:	42a0      	cmp	r0, r4
 801066a:	9800      	ldr	r0, [sp, #0]
 801066c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8010670:	dc06      	bgt.n	8010680 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 8010672:	4458      	add	r0, fp
 8010674:	9a05      	ldr	r2, [sp, #20]
 8010676:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 801067a:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 801067e:	e7ca      	b.n	8010616 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8010680:	eb0b 0300 	add.w	r3, fp, r0
 8010684:	9903      	ldr	r1, [sp, #12]
 8010686:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 801068a:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 801068e:	442a      	add	r2, r5
 8010690:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8010694:	e5d9      	b.n	801024a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010696:	9e04      	ldr	r6, [sp, #16]
 8010698:	9a03      	ldr	r2, [sp, #12]
 801069a:	1b89      	subs	r1, r1, r6
 801069c:	b21e      	sxth	r6, r3
 801069e:	b289      	uxth	r1, r1
 80106a0:	4296      	cmp	r6, r2
 80106a2:	fa0f fc81 	sxth.w	ip, r1
 80106a6:	dd26      	ble.n	80106f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 80106a8:	eba3 0309 	sub.w	r3, r3, r9
 80106ac:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 80106b0:	9e05      	ldr	r6, [sp, #20]
 80106b2:	b29b      	uxth	r3, r3
 80106b4:	eba6 0902 	sub.w	r9, r6, r2
 80106b8:	b218      	sxth	r0, r3
 80106ba:	eba4 0408 	sub.w	r4, r4, r8
 80106be:	fb0c f404 	mul.w	r4, ip, r4
 80106c2:	fb00 f909 	mul.w	r9, r0, r9
 80106c6:	9a00      	ldr	r2, [sp, #0]
 80106c8:	454c      	cmp	r4, r9
 80106ca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80106ce:	db03      	blt.n	80106d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 80106d0:	445a      	add	r2, fp
 80106d2:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 80106d6:	e79e      	b.n	8010616 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 80106d8:	eb0b 0302 	add.w	r3, fp, r2
 80106dc:	9a03      	ldr	r2, [sp, #12]
 80106de:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 80106e2:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 80106e6:	4429      	add	r1, r5
 80106e8:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 80106ec:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80106f0:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 80106f4:	e5a9      	b.n	801024a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 80106f6:	9b06      	ldr	r3, [sp, #24]
 80106f8:	9c07      	ldr	r4, [sp, #28]
 80106fa:	eba3 020e 	sub.w	r2, r3, lr
 80106fe:	b292      	uxth	r2, r2
 8010700:	2c06      	cmp	r4, #6
 8010702:	b213      	sxth	r3, r2
 8010704:	d80d      	bhi.n	8010722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 8010706:	4651      	mov	r1, sl
 8010708:	aa0a      	add	r2, sp, #40	; 0x28
 801070a:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 801070e:	6849      	ldr	r1, [r1, #4]
 8010710:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 8010714:	9b05      	ldr	r3, [sp, #20]
 8010716:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 801071a:	c203      	stmia	r2!, {r0, r1}
 801071c:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 8010720:	e758      	b.n	80105d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 8010722:	9c00      	ldr	r4, [sp, #0]
 8010724:	4563      	cmp	r3, ip
 8010726:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801072a:	db0d      	blt.n	8010748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 801072c:	4429      	add	r1, r5
 801072e:	9a04      	ldr	r2, [sp, #16]
 8010730:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010734:	b289      	uxth	r1, r1
 8010736:	445c      	add	r4, fp
 8010738:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 801073c:	4411      	add	r1, r2
 801073e:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 8010742:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8010746:	e580      	b.n	801024a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8010748:	445c      	add	r4, fp
 801074a:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 801074e:	e79e      	b.n	801068e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 8010750:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8010754:	2f07      	cmp	r7, #7
 8010756:	d806      	bhi.n	8010766 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 8010758:	ab08      	add	r3, sp, #32
 801075a:	e893 0006 	ldmia.w	r3, {r1, r2}
 801075e:	9801      	ldr	r0, [sp, #4]
 8010760:	f7ff fd44 	bl	80101ec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8010764:	e5db      	b.n	801031e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8010766:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 801076a:	f107 39ff 	add.w	r9, r7, #4294967295
 801076e:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8010772:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 8010776:	f04f 35ff 	mov.w	r5, #4294967295
 801077a:	2400      	movs	r4, #0
 801077c:	9304      	str	r3, [sp, #16]
 801077e:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 8010782:	9300      	str	r3, [sp, #0]
 8010784:	f109 32ff 	add.w	r2, r9, #4294967295
 8010788:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 801078c:	9303      	str	r3, [sp, #12]
 801078e:	4690      	mov	r8, r2
 8010790:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8010794:	f1b8 3fff 	cmp.w	r8, #4294967295
 8010798:	bf14      	ite	ne
 801079a:	9904      	ldrne	r1, [sp, #16]
 801079c:	f8dd e008 	ldreq.w	lr, [sp, #8]
 80107a0:	6818      	ldr	r0, [r3, #0]
 80107a2:	9206      	str	r2, [sp, #24]
 80107a4:	bf18      	it	ne
 80107a6:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 80107aa:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 80107ae:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80107b2:	f8be 6004 	ldrh.w	r6, [lr, #4]
 80107b6:	9305      	str	r3, [sp, #20]
 80107b8:	fb16 f601 	smulbb	r6, r6, r1
 80107bc:	6859      	ldr	r1, [r3, #4]
 80107be:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80107c2:	4671      	mov	r1, lr
 80107c4:	a80a      	add	r0, sp, #40	; 0x28
 80107c6:	f7fc ff4b 	bl	800d660 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80107ca:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 80107ce:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80107d2:	9b03      	ldr	r3, [sp, #12]
 80107d4:	9a00      	ldr	r2, [sp, #0]
 80107d6:	fb11 f100 	smulbb	r1, r1, r0
 80107da:	fb02 6603 	mla	r6, r2, r3, r6
 80107de:	1b8e      	subs	r6, r1, r6
 80107e0:	2008      	movs	r0, #8
 80107e2:	fb91 f1f0 	sdiv	r1, r1, r0
 80107e6:	42b1      	cmp	r1, r6
 80107e8:	dc21      	bgt.n	801082e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 80107ea:	4556      	cmp	r6, sl
 80107ec:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 80107f0:	da03      	bge.n	80107fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80107f2:	b1e6      	cbz	r6, 801082e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 80107f4:	46b2      	mov	sl, r6
 80107f6:	4645      	mov	r5, r8
 80107f8:	464c      	mov	r4, r9
 80107fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80107fe:	f118 0f02 	cmn.w	r8, #2
 8010802:	d1c7      	bne.n	8010794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 8010804:	f1b2 3fff 	cmp.w	r2, #4294967295
 8010808:	f1a7 0708 	sub.w	r7, r7, #8
 801080c:	4691      	mov	r9, r2
 801080e:	d1b6      	bne.n	801077e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 8010810:	9b01      	ldr	r3, [sp, #4]
 8010812:	b2a6      	uxth	r6, r4
 8010814:	00e4      	lsls	r4, r4, #3
 8010816:	1918      	adds	r0, r3, r4
 8010818:	1c6b      	adds	r3, r5, #1
 801081a:	d10b      	bne.n	8010834 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 801081c:	4601      	mov	r1, r0
 801081e:	9802      	ldr	r0, [sp, #8]
 8010820:	f7fc ff1e 	bl	800d660 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010824:	4631      	mov	r1, r6
 8010826:	9801      	ldr	r0, [sp, #4]
 8010828:	f7ff fcca 	bl	80101c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801082c:	e50d      	b.n	801024a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801082e:	4645      	mov	r5, r8
 8010830:	464c      	mov	r4, r9
 8010832:	e7ed      	b.n	8010810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 8010834:	9b01      	ldr	r3, [sp, #4]
 8010836:	00ed      	lsls	r5, r5, #3
 8010838:	1959      	adds	r1, r3, r5
 801083a:	f7fc ff11 	bl	800d660 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801083e:	9b02      	ldr	r3, [sp, #8]
 8010840:	cb03      	ldmia	r3!, {r0, r1}
 8010842:	445d      	add	r5, fp
 8010844:	445c      	add	r4, fp
 8010846:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 801084a:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 801084e:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 8010852:	9b02      	ldr	r3, [sp, #8]
 8010854:	6861      	ldr	r1, [r4, #4]
 8010856:	c303      	stmia	r3!, {r0, r1}
 8010858:	e7e4      	b.n	8010824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0801085c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801085c:	b530      	push	{r4, r5, lr}
 801085e:	4b1d      	ldr	r3, [pc, #116]	; (80108d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 8010860:	b085      	sub	sp, #20
 8010862:	460c      	mov	r4, r1
 8010864:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010868:	4b1b      	ldr	r3, [pc, #108]	; (80108d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 801086a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801086e:	2100      	movs	r1, #0
 8010870:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010874:	9100      	str	r1, [sp, #0]
 8010876:	4605      	mov	r5, r0
 8010878:	6861      	ldr	r1, [r4, #4]
 801087a:	6820      	ldr	r0, [r4, #0]
 801087c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010880:	ab02      	add	r3, sp, #8
 8010882:	c303      	stmia	r3!, {r0, r1}
 8010884:	4669      	mov	r1, sp
 8010886:	a802      	add	r0, sp, #8
 8010888:	f7fb f890 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 801088c:	ab02      	add	r3, sp, #8
 801088e:	cb03      	ldmia	r3!, {r0, r1}
 8010890:	4b12      	ldr	r3, [pc, #72]	; (80108dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 8010892:	6020      	str	r0, [r4, #0]
 8010894:	6818      	ldr	r0, [r3, #0]
 8010896:	6061      	str	r1, [r4, #4]
 8010898:	b138      	cbz	r0, 80108aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 801089a:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 801089e:	b133      	cbz	r3, 80108ae <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 80108a0:	6821      	ldr	r1, [r4, #0]
 80108a2:	6862      	ldr	r2, [r4, #4]
 80108a4:	4628      	mov	r0, r5
 80108a6:	f7ff fcc3 	bl	8010230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80108aa:	b005      	add	sp, #20
 80108ac:	bd30      	pop	{r4, r5, pc}
 80108ae:	6803      	ldr	r3, [r0, #0]
 80108b0:	4621      	mov	r1, r4
 80108b2:	689b      	ldr	r3, [r3, #8]
 80108b4:	4798      	blx	r3
 80108b6:	4b0a      	ldr	r3, [pc, #40]	; (80108e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 80108b8:	6818      	ldr	r0, [r3, #0]
 80108ba:	b118      	cbz	r0, 80108c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 80108bc:	6803      	ldr	r3, [r0, #0]
 80108be:	4621      	mov	r1, r4
 80108c0:	689b      	ldr	r3, [r3, #8]
 80108c2:	4798      	blx	r3
 80108c4:	4b07      	ldr	r3, [pc, #28]	; (80108e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 80108c6:	6818      	ldr	r0, [r3, #0]
 80108c8:	6803      	ldr	r3, [r0, #0]
 80108ca:	4621      	mov	r1, r4
 80108cc:	695b      	ldr	r3, [r3, #20]
 80108ce:	4798      	blx	r3
 80108d0:	e7eb      	b.n	80108aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 80108d2:	bf00      	nop
 80108d4:	2000e3d4 	.word	0x2000e3d4
 80108d8:	2000e3d6 	.word	0x2000e3d6
 80108dc:	2000e43c 	.word	0x2000e43c
 80108e0:	2000e438 	.word	0x2000e438
 80108e4:	2000e3e0 	.word	0x2000e3e0

080108e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 80108e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108ec:	4604      	mov	r4, r0
 80108ee:	b09b      	sub	sp, #108	; 0x6c
 80108f0:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 80108f4:	b129      	cbz	r1, 8010902 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 80108f6:	2300      	movs	r3, #0
 80108f8:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 80108fc:	b01b      	add	sp, #108	; 0x6c
 80108fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010902:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8010906:	4630      	mov	r0, r6
 8010908:	f7fb f893 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 801090c:	4605      	mov	r5, r0
 801090e:	b940      	cbnz	r0, 8010922 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 8010910:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010914:	4620      	mov	r0, r4
 8010916:	f7ff fc8b 	bl	8010230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801091a:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 801091e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8010922:	4ba6      	ldr	r3, [pc, #664]	; (8010bbc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d4>)
 8010924:	681b      	ldr	r3, [r3, #0]
 8010926:	b33b      	cbz	r3, 8010978 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8010928:	4da5      	ldr	r5, [pc, #660]	; (8010bc0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 801092a:	4628      	mov	r0, r5
 801092c:	f7fb f881 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010930:	4606      	mov	r6, r0
 8010932:	bb08      	cbnz	r0, 8010978 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8010934:	4628      	mov	r0, r5
 8010936:	f7ff f9d3 	bl	800fce0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801093a:	6829      	ldr	r1, [r5, #0]
 801093c:	686a      	ldr	r2, [r5, #4]
 801093e:	4620      	mov	r0, r4
 8010940:	f7ff fc76 	bl	8010230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010944:	802e      	strh	r6, [r5, #0]
 8010946:	806e      	strh	r6, [r5, #2]
 8010948:	80ae      	strh	r6, [r5, #4]
 801094a:	80ee      	strh	r6, [r5, #6]
 801094c:	4f9d      	ldr	r7, [pc, #628]	; (8010bc4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 801094e:	a809      	add	r0, sp, #36	; 0x24
 8010950:	f7ff fbe3 	bl	801011a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010954:	883d      	ldrh	r5, [r7, #0]
 8010956:	462e      	mov	r6, r5
 8010958:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801095c:	42b3      	cmp	r3, r6
 801095e:	d910      	bls.n	8010982 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 8010960:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8010964:	a809      	add	r0, sp, #36	; 0x24
 8010966:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 801096a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 801096e:	3601      	adds	r6, #1
 8010970:	f7ff fc3c 	bl	80101ec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8010974:	b2b6      	uxth	r6, r6
 8010976:	e7ef      	b.n	8010958 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 8010978:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801097c:	2b00      	cmp	r3, #0
 801097e:	d1e5      	bne.n	801094c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 8010980:	e7bc      	b.n	80108fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8010982:	462e      	mov	r6, r5
 8010984:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8010988:	42b3      	cmp	r3, r6
 801098a:	d90b      	bls.n	80109a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 801098c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8010990:	4620      	mov	r0, r4
 8010992:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8010996:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 801099a:	3601      	adds	r6, #1
 801099c:	f7ff fc48 	bl	8010230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80109a0:	b2b6      	uxth	r6, r6
 80109a2:	e7ef      	b.n	8010984 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 80109a4:	4a88      	ldr	r2, [pc, #544]	; (8010bc8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 80109a6:	6813      	ldr	r3, [r2, #0]
 80109a8:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80109ac:	2b01      	cmp	r3, #1
 80109ae:	4690      	mov	r8, r2
 80109b0:	f040 8093 	bne.w	8010ada <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f2>
 80109b4:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80109b8:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 80109bc:	33aa      	adds	r3, #170	; 0xaa
 80109be:	f04f 0900 	mov.w	r9, #0
 80109c2:	42a8      	cmp	r0, r5
 80109c4:	f103 0308 	add.w	r3, r3, #8
 80109c8:	dd0a      	ble.n	80109e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 80109ca:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80109ce:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 80109d2:	440a      	add	r2, r1
 80109d4:	b212      	sxth	r2, r2
 80109d6:	4591      	cmp	r9, r2
 80109d8:	bfb8      	it	lt
 80109da:	4691      	movlt	r9, r2
 80109dc:	3501      	adds	r5, #1
 80109de:	e7f0      	b.n	80109c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 80109e0:	4b7a      	ldr	r3, [pc, #488]	; (8010bcc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 80109e2:	4e7b      	ldr	r6, [pc, #492]	; (8010bd0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 80109e4:	881d      	ldrh	r5, [r3, #0]
 80109e6:	2300      	movs	r3, #0
 80109e8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80109ec:	2d0f      	cmp	r5, #15
 80109ee:	bf8c      	ite	hi
 80109f0:	08ed      	lsrhi	r5, r5, #3
 80109f2:	2501      	movls	r5, #1
 80109f4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80109f8:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 80109fc:	f8d8 0000 	ldr.w	r0, [r8]
 8010a00:	440b      	add	r3, r1
 8010a02:	b21b      	sxth	r3, r3
 8010a04:	4599      	cmp	r9, r3
 8010a06:	6802      	ldr	r2, [r0, #0]
 8010a08:	dd4a      	ble.n	8010aa0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1b8>
 8010a0a:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 8010a0e:	4798      	blx	r3
 8010a10:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010a14:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8010a18:	4413      	add	r3, r2
 8010a1a:	b21b      	sxth	r3, r3
 8010a1c:	195a      	adds	r2, r3, r5
 8010a1e:	4290      	cmp	r0, r2
 8010a20:	da07      	bge.n	8010a32 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8010a22:	4581      	cmp	r9, r0
 8010a24:	dd05      	ble.n	8010a32 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8010a26:	4298      	cmp	r0, r3
 8010a28:	da33      	bge.n	8010a92 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 8010a2a:	2b00      	cmp	r3, #0
 8010a2c:	dd31      	ble.n	8010a92 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 8010a2e:	4648      	mov	r0, r9
 8010a30:	e004      	b.n	8010a3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 8010a32:	4298      	cmp	r0, r3
 8010a34:	dbfb      	blt.n	8010a2e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 8010a36:	4548      	cmp	r0, r9
 8010a38:	bfa8      	it	ge
 8010a3a:	4648      	movge	r0, r9
 8010a3c:	f9b6 2000 	ldrsh.w	r2, [r6]
 8010a40:	f8b7 a000 	ldrh.w	sl, [r7]
 8010a44:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010a48:	2100      	movs	r1, #0
 8010a4a:	1ac0      	subs	r0, r0, r3
 8010a4c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010a50:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010a54:	f8ad 001a 	strh.w	r0, [sp, #26]
 8010a58:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010a5c:	4553      	cmp	r3, sl
 8010a5e:	d9c9      	bls.n	80109f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 8010a60:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8010a64:	ab07      	add	r3, sp, #28
 8010a66:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8010a6a:	6851      	ldr	r1, [r2, #4]
 8010a6c:	c303      	stmia	r3!, {r0, r1}
 8010a6e:	a807      	add	r0, sp, #28
 8010a70:	a905      	add	r1, sp, #20
 8010a72:	f7fa ff9b 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 8010a76:	a807      	add	r0, sp, #28
 8010a78:	f7fa ffdb 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a7c:	b920      	cbnz	r0, 8010a88 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 8010a7e:	6823      	ldr	r3, [r4, #0]
 8010a80:	a907      	add	r1, sp, #28
 8010a82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010a84:	4620      	mov	r0, r4
 8010a86:	4798      	blx	r3
 8010a88:	f10a 0a01 	add.w	sl, sl, #1
 8010a8c:	fa1f fa8a 	uxth.w	sl, sl
 8010a90:	e7e2      	b.n	8010a58 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 8010a92:	f8d8 0000 	ldr.w	r0, [r8]
 8010a96:	6803      	ldr	r3, [r0, #0]
 8010a98:	2101      	movs	r1, #1
 8010a9a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010a9c:	4798      	blx	r3
 8010a9e:	e7a9      	b.n	80109f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 8010aa0:	69d3      	ldr	r3, [r2, #28]
 8010aa2:	4798      	blx	r3
 8010aa4:	4b4b      	ldr	r3, [pc, #300]	; (8010bd4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 8010aa6:	781b      	ldrb	r3, [r3, #0]
 8010aa8:	2b00      	cmp	r3, #0
 8010aaa:	f43f af27 	beq.w	80108fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8010aae:	2300      	movs	r3, #0
 8010ab0:	883d      	ldrh	r5, [r7, #0]
 8010ab2:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8010ab6:	34ea      	adds	r4, #234	; 0xea
 8010ab8:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8010abc:	42ab      	cmp	r3, r5
 8010abe:	f67f af1d 	bls.w	80108fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8010ac2:	ab1a      	add	r3, sp, #104	; 0x68
 8010ac4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010ac8:	3b44      	subs	r3, #68	; 0x44
 8010aca:	e893 0006 	ldmia.w	r3, {r1, r2}
 8010ace:	4620      	mov	r0, r4
 8010ad0:	3501      	adds	r5, #1
 8010ad2:	f7ff fb8b 	bl	80101ec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8010ad6:	b2ad      	uxth	r5, r5
 8010ad8:	e7ee      	b.n	8010ab8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d0>
 8010ada:	2b02      	cmp	r3, #2
 8010adc:	f040 813c 	bne.w	8010d58 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>
 8010ae0:	4b3d      	ldr	r3, [pc, #244]	; (8010bd8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 8010ae2:	781b      	ldrb	r3, [r3, #0]
 8010ae4:	2b01      	cmp	r3, #1
 8010ae6:	d02c      	beq.n	8010b42 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25a>
 8010ae8:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 8010aec:	883a      	ldrh	r2, [r7, #0]
 8010aee:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 8010af2:	3201      	adds	r2, #1
 8010af4:	b292      	uxth	r2, r2
 8010af6:	2900      	cmp	r1, #0
 8010af8:	d0d4      	beq.n	8010aa4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 8010afa:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8010afe:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8010b02:	441d      	add	r5, r3
 8010b04:	b22d      	sxth	r5, r5
 8010b06:	4610      	mov	r0, r2
 8010b08:	f04f 0a00 	mov.w	sl, #0
 8010b0c:	b283      	uxth	r3, r0
 8010b0e:	4299      	cmp	r1, r3
 8010b10:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 8010b14:	f240 80c4 	bls.w	8010ca0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b8>
 8010b18:	4426      	add	r6, r4
 8010b1a:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 8010b1e:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 8010b22:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 8010b26:	4573      	cmp	r3, lr
 8010b28:	4684      	mov	ip, r0
 8010b2a:	f340 80a6 	ble.w	8010c7a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x392>
 8010b2e:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 8010b32:	4475      	add	r5, lr
 8010b34:	b22d      	sxth	r5, r5
 8010b36:	429d      	cmp	r5, r3
 8010b38:	bfa8      	it	ge
 8010b3a:	461d      	movge	r5, r3
 8010b3c:	3001      	adds	r0, #1
 8010b3e:	46e2      	mov	sl, ip
 8010b40:	e7e4      	b.n	8010b0c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x224>
 8010b42:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8010b46:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8010b4a:	f1bb 0f00 	cmp.w	fp, #0
 8010b4e:	d0a9      	beq.n	8010aa4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 8010b50:	883b      	ldrh	r3, [r7, #0]
 8010b52:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8010b56:	3301      	adds	r3, #1
 8010b58:	b29b      	uxth	r3, r3
 8010b5a:	2600      	movs	r6, #0
 8010b5c:	b299      	uxth	r1, r3
 8010b5e:	458b      	cmp	fp, r1
 8010b60:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 8010b64:	d93a      	bls.n	8010bdc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 8010b66:	4425      	add	r5, r4
 8010b68:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8010b6c:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8010b70:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8010b74:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8010b78:	4408      	add	r0, r1
 8010b7a:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8010b7e:	4471      	add	r1, lr
 8010b80:	b200      	sxth	r0, r0
 8010b82:	b209      	sxth	r1, r1
 8010b84:	4288      	cmp	r0, r1
 8010b86:	469c      	mov	ip, r3
 8010b88:	da06      	bge.n	8010b98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b0>
 8010b8a:	4586      	cmp	lr, r0
 8010b8c:	4672      	mov	r2, lr
 8010b8e:	bfb8      	it	lt
 8010b90:	4602      	movlt	r2, r0
 8010b92:	3301      	adds	r3, #1
 8010b94:	4666      	mov	r6, ip
 8010b96:	e7e1      	b.n	8010b5c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x274>
 8010b98:	d10b      	bne.n	8010bb2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ca>
 8010b9a:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8010b9e:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8010ba2:	458c      	cmp	ip, r1
 8010ba4:	bfb4      	ite	lt
 8010ba6:	469c      	movlt	ip, r3
 8010ba8:	46b4      	movge	ip, r6
 8010baa:	4572      	cmp	r2, lr
 8010bac:	bfb8      	it	lt
 8010bae:	4672      	movlt	r2, lr
 8010bb0:	e7ef      	b.n	8010b92 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 8010bb2:	428a      	cmp	r2, r1
 8010bb4:	bfb8      	it	lt
 8010bb6:	460a      	movlt	r2, r1
 8010bb8:	46b4      	mov	ip, r6
 8010bba:	e7ea      	b.n	8010b92 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 8010bbc:	2000e438 	.word	0x2000e438
 8010bc0:	2000e444 	.word	0x2000e444
 8010bc4:	20000060 	.word	0x20000060
 8010bc8:	2000e3e0 	.word	0x2000e3e0
 8010bcc:	2000e3d6 	.word	0x2000e3d6
 8010bd0:	2000e3d4 	.word	0x2000e3d4
 8010bd4:	2000e3de 	.word	0x2000e3de
 8010bd8:	2000e3d8 	.word	0x2000e3d8
 8010bdc:	1961      	adds	r1, r4, r5
 8010bde:	ab07      	add	r3, sp, #28
 8010be0:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8010be4:	6849      	ldr	r1, [r1, #4]
 8010be6:	c303      	stmia	r3!, {r0, r1}
 8010be8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010bec:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010bf0:	2b13      	cmp	r3, #19
 8010bf2:	bfd8      	it	le
 8010bf4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8010bf8:	f8ad 201c 	strh.w	r2, [sp, #28]
 8010bfc:	440b      	add	r3, r1
 8010bfe:	1a9b      	subs	r3, r3, r2
 8010c00:	a807      	add	r0, sp, #28
 8010c02:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010c06:	f7ff f8e1 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010c0a:	a807      	add	r0, sp, #28
 8010c0c:	f7fa ff11 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c10:	2800      	cmp	r0, #0
 8010c12:	d198      	bne.n	8010b46 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 8010c14:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8010c18:	f8d8 0000 	ldr.w	r0, [r8]
 8010c1c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010c20:	f8d0 e000 	ldr.w	lr, [r0]
 8010c24:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8010c28:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010c2c:	f1bc 0f14 	cmp.w	ip, #20
 8010c30:	bfa8      	it	ge
 8010c32:	f04f 0c14 	movge.w	ip, #20
 8010c36:	fa1f fc8c 	uxth.w	ip, ip
 8010c3a:	f8cd c000 	str.w	ip, [sp]
 8010c3e:	f8de a074 	ldr.w	sl, [lr, #116]	; 0x74
 8010c42:	47d0      	blx	sl
 8010c44:	4682      	mov	sl, r0
 8010c46:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010c4a:	a807      	add	r0, sp, #28
 8010c4c:	f7ff f848 	bl	800fce0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010c50:	6823      	ldr	r3, [r4, #0]
 8010c52:	4425      	add	r5, r4
 8010c54:	4620      	mov	r0, r4
 8010c56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010c58:	a907      	add	r1, sp, #28
 8010c5a:	4798      	blx	r3
 8010c5c:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8010c60:	eba0 000a 	sub.w	r0, r0, sl
 8010c64:	b200      	sxth	r0, r0
 8010c66:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8010c6a:	2800      	cmp	r0, #0
 8010c6c:	f47f af6b 	bne.w	8010b46 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 8010c70:	b2b1      	uxth	r1, r6
 8010c72:	4648      	mov	r0, r9
 8010c74:	f7ff faa4 	bl	80101c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010c78:	e765      	b.n	8010b46 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 8010c7a:	d10c      	bne.n	8010c96 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ae>
 8010c7c:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 8010c80:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 8010c84:	45b4      	cmp	ip, r6
 8010c86:	bfb4      	ite	lt
 8010c88:	4684      	movlt	ip, r0
 8010c8a:	46d4      	movge	ip, sl
 8010c8c:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 8010c90:	4433      	add	r3, r6
 8010c92:	b21b      	sxth	r3, r3
 8010c94:	e74f      	b.n	8010b36 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x24e>
 8010c96:	4575      	cmp	r5, lr
 8010c98:	bfa8      	it	ge
 8010c9a:	4675      	movge	r5, lr
 8010c9c:	46d4      	mov	ip, sl
 8010c9e:	e74d      	b.n	8010b3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x254>
 8010ca0:	eb0b 0006 	add.w	r0, fp, r6
 8010ca4:	4426      	add	r6, r4
 8010ca6:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8010caa:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 8010cae:	f1b9 0f13 	cmp.w	r9, #19
 8010cb2:	bfde      	ittt	le
 8010cb4:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 8010cb8:	444d      	addle	r5, r9
 8010cba:	b22d      	sxthle	r5, r5
 8010cbc:	f7fa feb9 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010cc0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010cc4:	2800      	cmp	r0, #0
 8010cc6:	f47f af16 	bne.w	8010af6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x20e>
 8010cca:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 8010cce:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010cd2:	eba5 050c 	sub.w	r5, r5, ip
 8010cd6:	fa1f f28c 	uxth.w	r2, ip
 8010cda:	fa1f f989 	uxth.w	r9, r9
 8010cde:	eb02 0009 	add.w	r0, r2, r9
 8010ce2:	2d14      	cmp	r5, #20
 8010ce4:	bfa8      	it	ge
 8010ce6:	2514      	movge	r5, #20
 8010ce8:	b200      	sxth	r0, r0
 8010cea:	fa1f fe85 	uxth.w	lr, r5
 8010cee:	eba0 000c 	sub.w	r0, r0, ip
 8010cf2:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 8010cf6:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 8010cfa:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010cfe:	4586      	cmp	lr, r0
 8010d00:	f8d8 0000 	ldr.w	r0, [r8]
 8010d04:	f8ad c01e 	strh.w	ip, [sp, #30]
 8010d08:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010d0c:	bfb8      	it	lt
 8010d0e:	46f1      	movlt	r9, lr
 8010d10:	6805      	ldr	r5, [r0, #0]
 8010d12:	f8cd 9000 	str.w	r9, [sp]
 8010d16:	b29b      	uxth	r3, r3
 8010d18:	b289      	uxth	r1, r1
 8010d1a:	6f6d      	ldr	r5, [r5, #116]	; 0x74
 8010d1c:	47a8      	blx	r5
 8010d1e:	6823      	ldr	r3, [r4, #0]
 8010d20:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010d24:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010d26:	a907      	add	r1, sp, #28
 8010d28:	4620      	mov	r0, r4
 8010d2a:	4798      	blx	r3
 8010d2c:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8010d30:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 8010d34:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 8010d38:	1a5b      	subs	r3, r3, r1
 8010d3a:	440a      	add	r2, r1
 8010d3c:	b21b      	sxth	r3, r3
 8010d3e:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 8010d42:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 8010d46:	2b00      	cmp	r3, #0
 8010d48:	f47f aed0 	bne.w	8010aec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 8010d4c:	fa1f f18a 	uxth.w	r1, sl
 8010d50:	4658      	mov	r0, fp
 8010d52:	f7ff fa35 	bl	80101c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010d56:	e6c9      	b.n	8010aec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 8010d58:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010d5c:	42ab      	cmp	r3, r5
 8010d5e:	f67f aea1 	bls.w	8010aa4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 8010d62:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8010d66:	ab07      	add	r3, sp, #28
 8010d68:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8010d6c:	6851      	ldr	r1, [r2, #4]
 8010d6e:	c303      	stmia	r3!, {r0, r1}
 8010d70:	a807      	add	r0, sp, #28
 8010d72:	f7fa fe5e 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d76:	b920      	cbnz	r0, 8010d82 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49a>
 8010d78:	6823      	ldr	r3, [r4, #0]
 8010d7a:	a907      	add	r1, sp, #28
 8010d7c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010d7e:	4620      	mov	r0, r4
 8010d80:	4798      	blx	r3
 8010d82:	3501      	adds	r5, #1
 8010d84:	b2ad      	uxth	r5, r5
 8010d86:	e7e7      	b.n	8010d58 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>

08010d88 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8010d88:	4b03      	ldr	r3, [pc, #12]	; (8010d98 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8010d8a:	2200      	movs	r2, #0
 8010d8c:	801a      	strh	r2, [r3, #0]
 8010d8e:	805a      	strh	r2, [r3, #2]
 8010d90:	809a      	strh	r2, [r3, #4]
 8010d92:	80da      	strh	r2, [r3, #6]
 8010d94:	4770      	bx	lr
 8010d96:	bf00      	nop
 8010d98:	2000e444 	.word	0x2000e444

08010d9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8010d9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010da0:	4607      	mov	r7, r0
 8010da2:	b099      	sub	sp, #100	; 0x64
 8010da4:	a802      	add	r0, sp, #8
 8010da6:	4614      	mov	r4, r2
 8010da8:	461d      	mov	r5, r3
 8010daa:	468a      	mov	sl, r1
 8010dac:	f000 fec4 	bl	8011b38 <_ZN8touchgfx12TextProviderC1Ev>
 8010db0:	683b      	ldr	r3, [r7, #0]
 8010db2:	4638      	mov	r0, r7
 8010db4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010db6:	4798      	blx	r3
 8010db8:	462a      	mov	r2, r5
 8010dba:	4603      	mov	r3, r0
 8010dbc:	4621      	mov	r1, r4
 8010dbe:	a802      	add	r0, sp, #8
 8010dc0:	f000 feff 	bl	8011bc2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8010dc4:	2500      	movs	r5, #0
 8010dc6:	462c      	mov	r4, r5
 8010dc8:	46a9      	mov	r9, r5
 8010dca:	46a8      	mov	r8, r5
 8010dcc:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8010dd0:	2300      	movs	r3, #0
 8010dd2:	9301      	str	r3, [sp, #4]
 8010dd4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010dd8:	429c      	cmp	r4, r3
 8010dda:	d002      	beq.n	8010de2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 8010ddc:	455c      	cmp	r4, fp
 8010dde:	bf18      	it	ne
 8010de0:	4625      	movne	r5, r4
 8010de2:	ab01      	add	r3, sp, #4
 8010de4:	463a      	mov	r2, r7
 8010de6:	4651      	mov	r1, sl
 8010de8:	a802      	add	r0, sp, #8
 8010dea:	f001 f9e3 	bl	80121b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010dee:	4604      	mov	r4, r0
 8010df0:	b108      	cbz	r0, 8010df6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 8010df2:	280a      	cmp	r0, #10
 8010df4:	d10a      	bne.n	8010e0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 8010df6:	45c1      	cmp	r9, r8
 8010df8:	bf38      	it	cc
 8010dfa:	46c1      	movcc	r9, r8
 8010dfc:	f04f 0800 	mov.w	r8, #0
 8010e00:	2c00      	cmp	r4, #0
 8010e02:	d1e5      	bne.n	8010dd0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 8010e04:	4648      	mov	r0, r9
 8010e06:	b019      	add	sp, #100	; 0x64
 8010e08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e0c:	9a01      	ldr	r2, [sp, #4]
 8010e0e:	2a00      	cmp	r2, #0
 8010e10:	d0de      	beq.n	8010dd0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 8010e12:	7b56      	ldrb	r6, [r2, #13]
 8010e14:	683b      	ldr	r3, [r7, #0]
 8010e16:	8894      	ldrh	r4, [r2, #4]
 8010e18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010e1a:	0076      	lsls	r6, r6, #1
 8010e1c:	f406 7080 	and.w	r0, r6, #256	; 0x100
 8010e20:	7a96      	ldrb	r6, [r2, #10]
 8010e22:	4629      	mov	r1, r5
 8010e24:	4306      	orrs	r6, r0
 8010e26:	4638      	mov	r0, r7
 8010e28:	4798      	blx	r3
 8010e2a:	4430      	add	r0, r6
 8010e2c:	4480      	add	r8, r0
 8010e2e:	fa1f f888 	uxth.w	r8, r8
 8010e32:	e7e5      	b.n	8010e00 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

08010e34 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010e34:	b508      	push	{r3, lr}
 8010e36:	6803      	ldr	r3, [r0, #0]
 8010e38:	68db      	ldr	r3, [r3, #12]
 8010e3a:	4798      	blx	r3
 8010e3c:	b128      	cbz	r0, 8010e4a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8010e3e:	7b43      	ldrb	r3, [r0, #13]
 8010e40:	7a80      	ldrb	r0, [r0, #10]
 8010e42:	005b      	lsls	r3, r3, #1
 8010e44:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010e48:	4318      	orrs	r0, r3
 8010e4a:	bd08      	pop	{r3, pc}

08010e4c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010e4c:	b40e      	push	{r1, r2, r3}
 8010e4e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010e50:	b098      	sub	sp, #96	; 0x60
 8010e52:	ab1d      	add	r3, sp, #116	; 0x74
 8010e54:	4605      	mov	r5, r0
 8010e56:	f853 4b04 	ldr.w	r4, [r3], #4
 8010e5a:	9300      	str	r3, [sp, #0]
 8010e5c:	a802      	add	r0, sp, #8
 8010e5e:	f000 fe6b 	bl	8011b38 <_ZN8touchgfx12TextProviderC1Ev>
 8010e62:	682b      	ldr	r3, [r5, #0]
 8010e64:	4628      	mov	r0, r5
 8010e66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010e68:	4798      	blx	r3
 8010e6a:	ae18      	add	r6, sp, #96	; 0x60
 8010e6c:	4603      	mov	r3, r0
 8010e6e:	4621      	mov	r1, r4
 8010e70:	9a00      	ldr	r2, [sp, #0]
 8010e72:	2400      	movs	r4, #0
 8010e74:	a802      	add	r0, sp, #8
 8010e76:	f000 fea4 	bl	8011bc2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8010e7a:	f846 4d5c 	str.w	r4, [r6, #-92]!
 8010e7e:	462a      	mov	r2, r5
 8010e80:	4633      	mov	r3, r6
 8010e82:	4621      	mov	r1, r4
 8010e84:	a802      	add	r0, sp, #8
 8010e86:	f001 f995 	bl	80121b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010e8a:	b1f0      	cbz	r0, 8010eca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 8010e8c:	280a      	cmp	r0, #10
 8010e8e:	d018      	beq.n	8010ec2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 8010e90:	9f01      	ldr	r7, [sp, #4]
 8010e92:	b1b7      	cbz	r7, 8010ec2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 8010e94:	7b78      	ldrb	r0, [r7, #13]
 8010e96:	7a3b      	ldrb	r3, [r7, #8]
 8010e98:	88aa      	ldrh	r2, [r5, #4]
 8010e9a:	00c1      	lsls	r1, r0, #3
 8010e9c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8010ea0:	4319      	orrs	r1, r3
 8010ea2:	0643      	lsls	r3, r0, #25
 8010ea4:	bf44      	itt	mi
 8010ea6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8010eaa:	b219      	sxthmi	r1, r3
 8010eac:	0100      	lsls	r0, r0, #4
 8010eae:	79fb      	ldrb	r3, [r7, #7]
 8010eb0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010eb4:	4303      	orrs	r3, r0
 8010eb6:	4413      	add	r3, r2
 8010eb8:	1a5b      	subs	r3, r3, r1
 8010eba:	b29b      	uxth	r3, r3
 8010ebc:	42a3      	cmp	r3, r4
 8010ebe:	bfc8      	it	gt
 8010ec0:	b21c      	sxthgt	r4, r3
 8010ec2:	4633      	mov	r3, r6
 8010ec4:	462a      	mov	r2, r5
 8010ec6:	2100      	movs	r1, #0
 8010ec8:	e7dc      	b.n	8010e84 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 8010eca:	b2a0      	uxth	r0, r4
 8010ecc:	b018      	add	sp, #96	; 0x60
 8010ece:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010ed2:	b003      	add	sp, #12
 8010ed4:	4770      	bx	lr

08010ed6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8010ed6:	b40e      	push	{r1, r2, r3}
 8010ed8:	b530      	push	{r4, r5, lr}
 8010eda:	b098      	sub	sp, #96	; 0x60
 8010edc:	ab1b      	add	r3, sp, #108	; 0x6c
 8010ede:	4604      	mov	r4, r0
 8010ee0:	f853 5b04 	ldr.w	r5, [r3], #4
 8010ee4:	9301      	str	r3, [sp, #4]
 8010ee6:	a802      	add	r0, sp, #8
 8010ee8:	f000 fe26 	bl	8011b38 <_ZN8touchgfx12TextProviderC1Ev>
 8010eec:	6823      	ldr	r3, [r4, #0]
 8010eee:	4620      	mov	r0, r4
 8010ef0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010ef2:	4798      	blx	r3
 8010ef4:	9a01      	ldr	r2, [sp, #4]
 8010ef6:	4603      	mov	r3, r0
 8010ef8:	4629      	mov	r1, r5
 8010efa:	a802      	add	r0, sp, #8
 8010efc:	f000 fe61 	bl	8011bc2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8010f00:	a802      	add	r0, sp, #8
 8010f02:	f001 fa4f 	bl	80123a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010f06:	2401      	movs	r4, #1
 8010f08:	b2a3      	uxth	r3, r4
 8010f0a:	b140      	cbz	r0, 8010f1e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 8010f0c:	280a      	cmp	r0, #10
 8010f0e:	bf08      	it	eq
 8010f10:	3301      	addeq	r3, #1
 8010f12:	a802      	add	r0, sp, #8
 8010f14:	bf08      	it	eq
 8010f16:	b21c      	sxtheq	r4, r3
 8010f18:	f001 fa44 	bl	80123a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010f1c:	e7f4      	b.n	8010f08 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 8010f1e:	4618      	mov	r0, r3
 8010f20:	b018      	add	sp, #96	; 0x60
 8010f22:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010f26:	b003      	add	sp, #12
 8010f28:	4770      	bx	lr

08010f2a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8010f2a:	b40e      	push	{r1, r2, r3}
 8010f2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f2e:	b098      	sub	sp, #96	; 0x60
 8010f30:	ab1d      	add	r3, sp, #116	; 0x74
 8010f32:	4604      	mov	r4, r0
 8010f34:	f853 5b04 	ldr.w	r5, [r3], #4
 8010f38:	9300      	str	r3, [sp, #0]
 8010f3a:	a802      	add	r0, sp, #8
 8010f3c:	f000 fdfc 	bl	8011b38 <_ZN8touchgfx12TextProviderC1Ev>
 8010f40:	6823      	ldr	r3, [r4, #0]
 8010f42:	4620      	mov	r0, r4
 8010f44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010f46:	4798      	blx	r3
 8010f48:	4629      	mov	r1, r5
 8010f4a:	4603      	mov	r3, r0
 8010f4c:	9a00      	ldr	r2, [sp, #0]
 8010f4e:	a802      	add	r0, sp, #8
 8010f50:	ad18      	add	r5, sp, #96	; 0x60
 8010f52:	f000 fe36 	bl	8011bc2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8010f56:	2100      	movs	r1, #0
 8010f58:	f845 1d5c 	str.w	r1, [r5, #-92]!
 8010f5c:	4622      	mov	r2, r4
 8010f5e:	462b      	mov	r3, r5
 8010f60:	a802      	add	r0, sp, #8
 8010f62:	f001 f927 	bl	80121b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010f66:	26ff      	movs	r6, #255	; 0xff
 8010f68:	b1d8      	cbz	r0, 8010fa2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010f6a:	280a      	cmp	r0, #10
 8010f6c:	d012      	beq.n	8010f94 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 8010f6e:	9801      	ldr	r0, [sp, #4]
 8010f70:	b180      	cbz	r0, 8010f94 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 8010f72:	7b47      	ldrb	r7, [r0, #13]
 8010f74:	7922      	ldrb	r2, [r4, #4]
 8010f76:	00fb      	lsls	r3, r7, #3
 8010f78:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8010f7c:	7a03      	ldrb	r3, [r0, #8]
 8010f7e:	430b      	orrs	r3, r1
 8010f80:	0679      	lsls	r1, r7, #25
 8010f82:	bf44      	itt	mi
 8010f84:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010f88:	b21b      	sxthmi	r3, r3
 8010f8a:	1ad3      	subs	r3, r2, r3
 8010f8c:	b2db      	uxtb	r3, r3
 8010f8e:	429e      	cmp	r6, r3
 8010f90:	bf28      	it	cs
 8010f92:	461e      	movcs	r6, r3
 8010f94:	462b      	mov	r3, r5
 8010f96:	4622      	mov	r2, r4
 8010f98:	2100      	movs	r1, #0
 8010f9a:	a802      	add	r0, sp, #8
 8010f9c:	f001 f90a 	bl	80121b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010fa0:	e7e2      	b.n	8010f68 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 8010fa2:	4630      	mov	r0, r6
 8010fa4:	b018      	add	sp, #96	; 0x60
 8010fa6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010faa:	b003      	add	sp, #12
 8010fac:	4770      	bx	lr

08010fae <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010fae:	b513      	push	{r0, r1, r4, lr}
 8010fb0:	1d01      	adds	r1, r0, #4
 8010fb2:	4603      	mov	r3, r0
 8010fb4:	c903      	ldmia	r1, {r0, r1}
 8010fb6:	466a      	mov	r2, sp
 8010fb8:	e882 0003 	stmia.w	r2, {r0, r1}
 8010fbc:	2100      	movs	r1, #0
 8010fbe:	9100      	str	r1, [sp, #0]
 8010fc0:	6819      	ldr	r1, [r3, #0]
 8010fc2:	4618      	mov	r0, r3
 8010fc4:	690c      	ldr	r4, [r1, #16]
 8010fc6:	4611      	mov	r1, r2
 8010fc8:	47a0      	blx	r4
 8010fca:	b002      	add	sp, #8
 8010fcc:	bd10      	pop	{r4, pc}

08010fce <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010fce:	b538      	push	{r3, r4, r5, lr}
 8010fd0:	680b      	ldr	r3, [r1, #0]
 8010fd2:	460c      	mov	r4, r1
 8010fd4:	68db      	ldr	r3, [r3, #12]
 8010fd6:	4605      	mov	r5, r0
 8010fd8:	4798      	blx	r3
 8010fda:	6823      	ldr	r3, [r4, #0]
 8010fdc:	4620      	mov	r0, r4
 8010fde:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010fe0:	4629      	mov	r1, r5
 8010fe2:	4798      	blx	r3
 8010fe4:	4628      	mov	r0, r5
 8010fe6:	bd38      	pop	{r3, r4, r5, pc}

08010fe8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010fe8:	b410      	push	{r4}
 8010fea:	880a      	ldrh	r2, [r1, #0]
 8010fec:	8884      	ldrh	r4, [r0, #4]
 8010fee:	4422      	add	r2, r4
 8010ff0:	800a      	strh	r2, [r1, #0]
 8010ff2:	88c4      	ldrh	r4, [r0, #6]
 8010ff4:	884a      	ldrh	r2, [r1, #2]
 8010ff6:	4422      	add	r2, r4
 8010ff8:	804a      	strh	r2, [r1, #2]
 8010ffa:	6940      	ldr	r0, [r0, #20]
 8010ffc:	b120      	cbz	r0, 8011008 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8010ffe:	6803      	ldr	r3, [r0, #0]
 8011000:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011004:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011006:	4718      	bx	r3
 8011008:	f85d 4b04 	ldr.w	r4, [sp], #4
 801100c:	4770      	bx	lr

0801100e <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801100e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011010:	460b      	mov	r3, r1
 8011012:	b085      	sub	sp, #20
 8011014:	4604      	mov	r4, r0
 8011016:	b901      	cbnz	r1, 801101a <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011018:	b322      	cbz	r2, 8011064 <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 801101a:	1d27      	adds	r7, r4, #4
 801101c:	e897 0003 	ldmia.w	r7, {r0, r1}
 8011020:	466e      	mov	r6, sp
 8011022:	e886 0003 	stmia.w	r6, {r0, r1}
 8011026:	88a1      	ldrh	r1, [r4, #4]
 8011028:	88e5      	ldrh	r5, [r4, #6]
 801102a:	4419      	add	r1, r3
 801102c:	6823      	ldr	r3, [r4, #0]
 801102e:	442a      	add	r2, r5
 8011030:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011032:	b209      	sxth	r1, r1
 8011034:	4620      	mov	r0, r4
 8011036:	b215      	sxth	r5, r2
 8011038:	4798      	blx	r3
 801103a:	6823      	ldr	r3, [r4, #0]
 801103c:	4629      	mov	r1, r5
 801103e:	4620      	mov	r0, r4
 8011040:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011042:	4798      	blx	r3
 8011044:	e897 0003 	ldmia.w	r7, {r0, r1}
 8011048:	ad02      	add	r5, sp, #8
 801104a:	e885 0003 	stmia.w	r5, {r0, r1}
 801104e:	6960      	ldr	r0, [r4, #20]
 8011050:	b150      	cbz	r0, 8011068 <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 8011052:	6803      	ldr	r3, [r0, #0]
 8011054:	4631      	mov	r1, r6
 8011056:	691b      	ldr	r3, [r3, #16]
 8011058:	4798      	blx	r3
 801105a:	6960      	ldr	r0, [r4, #20]
 801105c:	6803      	ldr	r3, [r0, #0]
 801105e:	691b      	ldr	r3, [r3, #16]
 8011060:	4629      	mov	r1, r5
 8011062:	4798      	blx	r3
 8011064:	b005      	add	sp, #20
 8011066:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011068:	f7fe fffe 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 801106c:	6803      	ldr	r3, [r0, #0]
 801106e:	4631      	mov	r1, r6
 8011070:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011072:	4798      	blx	r3
 8011074:	f7fe fff8 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 8011078:	6803      	ldr	r3, [r0, #0]
 801107a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801107c:	e7f0      	b.n	8011060 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0801107e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801107e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011080:	8882      	ldrh	r2, [r0, #4]
 8011082:	880b      	ldrh	r3, [r1, #0]
 8011084:	4413      	add	r3, r2
 8011086:	800b      	strh	r3, [r1, #0]
 8011088:	88c2      	ldrh	r2, [r0, #6]
 801108a:	884b      	ldrh	r3, [r1, #2]
 801108c:	4413      	add	r3, r2
 801108e:	4602      	mov	r2, r0
 8011090:	804b      	strh	r3, [r1, #2]
 8011092:	4605      	mov	r5, r0
 8011094:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011098:	460c      	mov	r4, r1
 801109a:	6851      	ldr	r1, [r2, #4]
 801109c:	466b      	mov	r3, sp
 801109e:	c303      	stmia	r3!, {r0, r1}
 80110a0:	4621      	mov	r1, r4
 80110a2:	4668      	mov	r0, sp
 80110a4:	f7fa fc82 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 80110a8:	466b      	mov	r3, sp
 80110aa:	cb03      	ldmia	r3!, {r0, r1}
 80110ac:	6020      	str	r0, [r4, #0]
 80110ae:	6061      	str	r1, [r4, #4]
 80110b0:	6968      	ldr	r0, [r5, #20]
 80110b2:	b128      	cbz	r0, 80110c0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 80110b4:	6803      	ldr	r3, [r0, #0]
 80110b6:	691b      	ldr	r3, [r3, #16]
 80110b8:	4621      	mov	r1, r4
 80110ba:	4798      	blx	r3
 80110bc:	b003      	add	sp, #12
 80110be:	bd30      	pop	{r4, r5, pc}
 80110c0:	f7fe ffd2 	bl	8010068 <_ZN8touchgfx11Application11getInstanceEv>
 80110c4:	6803      	ldr	r3, [r0, #0]
 80110c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80110c8:	e7f6      	b.n	80110b8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

080110ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80110ca:	b570      	push	{r4, r5, r6, lr}
 80110cc:	8882      	ldrh	r2, [r0, #4]
 80110ce:	880b      	ldrh	r3, [r1, #0]
 80110d0:	4413      	add	r3, r2
 80110d2:	800b      	strh	r3, [r1, #0]
 80110d4:	88c2      	ldrh	r2, [r0, #6]
 80110d6:	884b      	ldrh	r3, [r1, #2]
 80110d8:	460c      	mov	r4, r1
 80110da:	4413      	add	r3, r2
 80110dc:	804b      	strh	r3, [r1, #2]
 80110de:	4605      	mov	r5, r0
 80110e0:	1d01      	adds	r1, r0, #4
 80110e2:	4620      	mov	r0, r4
 80110e4:	f7fa fc62 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 80110e8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80110ec:	2b00      	cmp	r3, #0
 80110ee:	dd0b      	ble.n	8011108 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80110f0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80110f4:	2b00      	cmp	r3, #0
 80110f6:	dd07      	ble.n	8011108 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80110f8:	6968      	ldr	r0, [r5, #20]
 80110fa:	b128      	cbz	r0, 8011108 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80110fc:	6803      	ldr	r3, [r0, #0]
 80110fe:	4621      	mov	r1, r4
 8011100:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011102:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011106:	4718      	bx	r3
 8011108:	bd70      	pop	{r4, r5, r6, pc}

0801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801110a:	b510      	push	{r4, lr}
 801110c:	4604      	mov	r4, r0
 801110e:	4608      	mov	r0, r1
 8011110:	2300      	movs	r3, #0
 8011112:	8023      	strh	r3, [r4, #0]
 8011114:	8063      	strh	r3, [r4, #2]
 8011116:	6803      	ldr	r3, [r0, #0]
 8011118:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801111c:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011120:	80a1      	strh	r1, [r4, #4]
 8011122:	80e2      	strh	r2, [r4, #6]
 8011124:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011126:	4621      	mov	r1, r4
 8011128:	4798      	blx	r3
 801112a:	4620      	mov	r0, r4
 801112c:	bd10      	pop	{r4, pc}
	...

08011130 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8011130:	b530      	push	{r4, r5, lr}
 8011132:	8083      	strh	r3, [r0, #4]
 8011134:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8011138:	f89d 5010 	ldrb.w	r5, [sp, #16]
 801113c:	7183      	strb	r3, [r0, #6]
 801113e:	79c3      	ldrb	r3, [r0, #7]
 8011140:	6101      	str	r1, [r0, #16]
 8011142:	f365 0306 	bfi	r3, r5, #0, #7
 8011146:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801114a:	8282      	strh	r2, [r0, #20]
 801114c:	f365 13c7 	bfi	r3, r5, #7, #1
 8011150:	71c3      	strb	r3, [r0, #7]
 8011152:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8011156:	7203      	strb	r3, [r0, #8]
 8011158:	f89d 301c 	ldrb.w	r3, [sp, #28]
 801115c:	7243      	strb	r3, [r0, #9]
 801115e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011162:	8143      	strh	r3, [r0, #10]
 8011164:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8011168:	8183      	strh	r3, [r0, #12]
 801116a:	4b01      	ldr	r3, [pc, #4]	; (8011170 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 801116c:	6003      	str	r3, [r0, #0]
 801116e:	bd30      	pop	{r4, r5, pc}
 8011170:	08026040 	.word	0x08026040

08011174 <_ZNK8touchgfx9ConstFont4findEt>:
 8011174:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011176:	6904      	ldr	r4, [r0, #16]
 8011178:	b3bc      	cbz	r4, 80111ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801117a:	88a3      	ldrh	r3, [r4, #4]
 801117c:	8a82      	ldrh	r2, [r0, #20]
 801117e:	1acb      	subs	r3, r1, r3
 8011180:	f102 32ff 	add.w	r2, r2, #4294967295
 8011184:	d431      	bmi.n	80111ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011186:	4293      	cmp	r3, r2
 8011188:	dd0c      	ble.n	80111a4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801118a:	230e      	movs	r3, #14
 801118c:	fb03 4302 	mla	r3, r3, r2, r4
 8011190:	889b      	ldrh	r3, [r3, #4]
 8011192:	1a5b      	subs	r3, r3, r1
 8011194:	1ad3      	subs	r3, r2, r3
 8011196:	429a      	cmp	r2, r3
 8011198:	db27      	blt.n	80111ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801119a:	2b00      	cmp	r3, #0
 801119c:	bfbc      	itt	lt
 801119e:	2302      	movlt	r3, #2
 80111a0:	fb92 f3f3 	sdivlt	r3, r2, r3
 80111a4:	2500      	movs	r5, #0
 80111a6:	260e      	movs	r6, #14
 80111a8:	4295      	cmp	r5, r2
 80111aa:	dc1e      	bgt.n	80111ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111ac:	fb06 4003 	mla	r0, r6, r3, r4
 80111b0:	8887      	ldrh	r7, [r0, #4]
 80111b2:	42b9      	cmp	r1, r7
 80111b4:	d01a      	beq.n	80111ec <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80111b6:	d20d      	bcs.n	80111d4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80111b8:	1e5a      	subs	r2, r3, #1
 80111ba:	4295      	cmp	r5, r2
 80111bc:	dc15      	bgt.n	80111ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111be:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80111c2:	1a5b      	subs	r3, r3, r1
 80111c4:	1ad3      	subs	r3, r2, r3
 80111c6:	429a      	cmp	r2, r3
 80111c8:	db0f      	blt.n	80111ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111ca:	429d      	cmp	r5, r3
 80111cc:	ddec      	ble.n	80111a8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80111ce:	1953      	adds	r3, r2, r5
 80111d0:	105b      	asrs	r3, r3, #1
 80111d2:	e7e9      	b.n	80111a8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80111d4:	1c5d      	adds	r5, r3, #1
 80111d6:	42aa      	cmp	r2, r5
 80111d8:	db07      	blt.n	80111ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111da:	8a43      	ldrh	r3, [r0, #18]
 80111dc:	1acb      	subs	r3, r1, r3
 80111de:	442b      	add	r3, r5
 80111e0:	429d      	cmp	r5, r3
 80111e2:	dc02      	bgt.n	80111ea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111e4:	429a      	cmp	r2, r3
 80111e6:	dadf      	bge.n	80111a8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80111e8:	e7f1      	b.n	80111ce <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80111ea:	2000      	movs	r0, #0
 80111ec:	bdf0      	pop	{r4, r5, r6, r7, pc}

080111ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80111ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80111f0:	4604      	mov	r4, r0
 80111f2:	4617      	mov	r7, r2
 80111f4:	461e      	mov	r6, r3
 80111f6:	b911      	cbnz	r1, 80111fe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80111f8:	2500      	movs	r5, #0
 80111fa:	4628      	mov	r0, r5
 80111fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80111fe:	290a      	cmp	r1, #10
 8011200:	d0fa      	beq.n	80111f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011202:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8011206:	4291      	cmp	r1, r2
 8011208:	d0f6      	beq.n	80111f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801120a:	f242 020b 	movw	r2, #8203	; 0x200b
 801120e:	4291      	cmp	r1, r2
 8011210:	d0f2      	beq.n	80111f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011212:	f7ff ffaf 	bl	8011174 <_ZNK8touchgfx9ConstFont4findEt>
 8011216:	4605      	mov	r5, r0
 8011218:	b950      	cbnz	r0, 8011230 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801121a:	6823      	ldr	r3, [r4, #0]
 801121c:	4620      	mov	r0, r4
 801121e:	691b      	ldr	r3, [r3, #16]
 8011220:	4798      	blx	r3
 8011222:	4601      	mov	r1, r0
 8011224:	4620      	mov	r0, r4
 8011226:	f7ff ffa5 	bl	8011174 <_ZNK8touchgfx9ConstFont4findEt>
 801122a:	4605      	mov	r5, r0
 801122c:	2800      	cmp	r0, #0
 801122e:	d0e3      	beq.n	80111f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011230:	6823      	ldr	r3, [r4, #0]
 8011232:	4629      	mov	r1, r5
 8011234:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011236:	4620      	mov	r0, r4
 8011238:	4798      	blx	r3
 801123a:	6038      	str	r0, [r7, #0]
 801123c:	6823      	ldr	r3, [r4, #0]
 801123e:	4620      	mov	r0, r4
 8011240:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011242:	4798      	blx	r3
 8011244:	7030      	strb	r0, [r6, #0]
 8011246:	e7d8      	b.n	80111fa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011248 <_ZN8touchgfx6memsetEPvhm>:
 8011248:	4402      	add	r2, r0
 801124a:	4290      	cmp	r0, r2
 801124c:	d002      	beq.n	8011254 <_ZN8touchgfx6memsetEPvhm+0xc>
 801124e:	f800 1b01 	strb.w	r1, [r0], #1
 8011252:	e7fa      	b.n	801124a <_ZN8touchgfx6memsetEPvhm+0x2>
 8011254:	4770      	bx	lr

08011256 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8011256:	b538      	push	{r3, r4, r5, lr}
 8011258:	4605      	mov	r5, r0
 801125a:	f002 f9eb 	bl	8013634 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801125e:	4604      	mov	r4, r0
 8011260:	4628      	mov	r0, r5
 8011262:	f002 f923 	bl	80134ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011266:	2800      	cmp	r0, #0
 8011268:	bf14      	ite	ne
 801126a:	2002      	movne	r0, #2
 801126c:	2000      	moveq	r0, #0
 801126e:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8011272:	b280      	uxth	r0, r0
 8011274:	bd38      	pop	{r3, r4, r5, pc}

08011276 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8011276:	b538      	push	{r3, r4, r5, lr}
 8011278:	4605      	mov	r5, r0
 801127a:	f002 f9db 	bl	8013634 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801127e:	4604      	mov	r4, r0
 8011280:	4628      	mov	r0, r5
 8011282:	f002 f913 	bl	80134ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011286:	2800      	cmp	r0, #0
 8011288:	bf14      	ite	ne
 801128a:	2002      	movne	r0, #2
 801128c:	2000      	moveq	r0, #0
 801128e:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8011292:	f040 0001 	orr.w	r0, r0, #1
 8011296:	b280      	uxth	r0, r0
 8011298:	bd38      	pop	{r3, r4, r5, pc}

0801129a <_ZN8touchgfx4clzuEm>:
 801129a:	4603      	mov	r3, r0
 801129c:	b1c8      	cbz	r0, 80112d2 <_ZN8touchgfx4clzuEm+0x38>
 801129e:	0c02      	lsrs	r2, r0, #16
 80112a0:	0412      	lsls	r2, r2, #16
 80112a2:	b9a2      	cbnz	r2, 80112ce <_ZN8touchgfx4clzuEm+0x34>
 80112a4:	0403      	lsls	r3, r0, #16
 80112a6:	2010      	movs	r0, #16
 80112a8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80112ac:	bf04      	itt	eq
 80112ae:	021b      	lsleq	r3, r3, #8
 80112b0:	3008      	addeq	r0, #8
 80112b2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80112b6:	bf04      	itt	eq
 80112b8:	011b      	lsleq	r3, r3, #4
 80112ba:	3004      	addeq	r0, #4
 80112bc:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80112c0:	bf04      	itt	eq
 80112c2:	009b      	lsleq	r3, r3, #2
 80112c4:	3002      	addeq	r0, #2
 80112c6:	2b00      	cmp	r3, #0
 80112c8:	db04      	blt.n	80112d4 <_ZN8touchgfx4clzuEm+0x3a>
 80112ca:	3001      	adds	r0, #1
 80112cc:	4770      	bx	lr
 80112ce:	2000      	movs	r0, #0
 80112d0:	e7ea      	b.n	80112a8 <_ZN8touchgfx4clzuEm+0xe>
 80112d2:	2020      	movs	r0, #32
 80112d4:	4770      	bx	lr

080112d6 <_ZN8touchgfx7muldivuEmmmRm>:
 80112d6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112da:	4680      	mov	r8, r0
 80112dc:	460f      	mov	r7, r1
 80112de:	4615      	mov	r5, r2
 80112e0:	461e      	mov	r6, r3
 80112e2:	f7ff ffda 	bl	801129a <_ZN8touchgfx4clzuEm>
 80112e6:	b998      	cbnz	r0, 8011310 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 80112e8:	4608      	mov	r0, r1
 80112ea:	f7ff ffd6 	bl	801129a <_ZN8touchgfx4clzuEm>
 80112ee:	2800      	cmp	r0, #0
 80112f0:	dd08      	ble.n	8011304 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 80112f2:	4633      	mov	r3, r6
 80112f4:	462a      	mov	r2, r5
 80112f6:	4641      	mov	r1, r8
 80112f8:	4638      	mov	r0, r7
 80112fa:	f7ff ffec 	bl	80112d6 <_ZN8touchgfx7muldivuEmmmRm>
 80112fe:	b003      	add	sp, #12
 8011300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011304:	f04f 33ff 	mov.w	r3, #4294967295
 8011308:	6033      	str	r3, [r6, #0]
 801130a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801130e:	e7f6      	b.n	80112fe <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8011310:	fa31 f900 	lsrs.w	r9, r1, r0
 8011314:	fb01 f308 	mul.w	r3, r1, r8
 8011318:	d105      	bne.n	8011326 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 801131a:	fbb3 f0f5 	udiv	r0, r3, r5
 801131e:	fb05 3510 	mls	r5, r5, r0, r3
 8011322:	6035      	str	r5, [r6, #0]
 8011324:	e7eb      	b.n	80112fe <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8011326:	2301      	movs	r3, #1
 8011328:	fa08 fb00 	lsl.w	fp, r8, r0
 801132c:	fa03 f000 	lsl.w	r0, r3, r0
 8011330:	3801      	subs	r0, #1
 8011332:	462a      	mov	r2, r5
 8011334:	4633      	mov	r3, r6
 8011336:	4641      	mov	r1, r8
 8011338:	4038      	ands	r0, r7
 801133a:	f7ff ffcc 	bl	80112d6 <_ZN8touchgfx7muldivuEmmmRm>
 801133e:	fbbb faf5 	udiv	sl, fp, r5
 8011342:	462a      	mov	r2, r5
 8011344:	4607      	mov	r7, r0
 8011346:	ab01      	add	r3, sp, #4
 8011348:	fb05 b11a 	mls	r1, r5, sl, fp
 801134c:	4648      	mov	r0, r9
 801134e:	f7ff ffc2 	bl	80112d6 <_ZN8touchgfx7muldivuEmmmRm>
 8011352:	9b01      	ldr	r3, [sp, #4]
 8011354:	6832      	ldr	r2, [r6, #0]
 8011356:	fb09 f40a 	mul.w	r4, r9, sl
 801135a:	441a      	add	r2, r3
 801135c:	fbb2 f3f5 	udiv	r3, r2, r5
 8011360:	441c      	add	r4, r3
 8011362:	443c      	add	r4, r7
 8011364:	4420      	add	r0, r4
 8011366:	fb05 2513 	mls	r5, r5, r3, r2
 801136a:	e7da      	b.n	8011322 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

0801136c <_ZN8touchgfx6muldivElllRl>:
 801136c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801136e:	2800      	cmp	r0, #0
 8011370:	bfba      	itte	lt
 8011372:	4240      	neglt	r0, r0
 8011374:	f04f 34ff 	movlt.w	r4, #4294967295
 8011378:	2401      	movge	r4, #1
 801137a:	2900      	cmp	r1, #0
 801137c:	bfbc      	itt	lt
 801137e:	4249      	neglt	r1, r1
 8011380:	4264      	neglt	r4, r4
 8011382:	2a00      	cmp	r2, #0
 8011384:	bfb6      	itet	lt
 8011386:	4265      	neglt	r5, r4
 8011388:	4625      	movge	r5, r4
 801138a:	4252      	neglt	r2, r2
 801138c:	4288      	cmp	r0, r1
 801138e:	461e      	mov	r6, r3
 8011390:	bfc2      	ittt	gt
 8011392:	4603      	movgt	r3, r0
 8011394:	4608      	movgt	r0, r1
 8011396:	4619      	movgt	r1, r3
 8011398:	ab01      	add	r3, sp, #4
 801139a:	f7ff ff9c 	bl	80112d6 <_ZN8touchgfx7muldivuEmmmRm>
 801139e:	9b01      	ldr	r3, [sp, #4]
 80113a0:	4368      	muls	r0, r5
 80113a2:	435c      	muls	r4, r3
 80113a4:	6034      	str	r4, [r6, #0]
 80113a6:	b002      	add	sp, #8
 80113a8:	bd70      	pop	{r4, r5, r6, pc}

080113aa <_ZN8touchgfx6muldivElll>:
 80113aa:	b513      	push	{r0, r1, r4, lr}
 80113ac:	ab01      	add	r3, sp, #4
 80113ae:	4614      	mov	r4, r2
 80113b0:	f7ff ffdc 	bl	801136c <_ZN8touchgfx6muldivElllRl>
 80113b4:	ea84 72e4 	eor.w	r2, r4, r4, asr #31
 80113b8:	2800      	cmp	r0, #0
 80113ba:	eba2 72e4 	sub.w	r2, r2, r4, asr #31
 80113be:	9b01      	ldr	r3, [sp, #4]
 80113c0:	db0a      	blt.n	80113d8 <_ZN8touchgfx6muldivElll+0x2e>
 80113c2:	2b00      	cmp	r3, #0
 80113c4:	f102 0201 	add.w	r2, r2, #1
 80113c8:	bfb8      	it	lt
 80113ca:	425b      	neglt	r3, r3
 80113cc:	ebb3 0f62 	cmp.w	r3, r2, asr #1
 80113d0:	db00      	blt.n	80113d4 <_ZN8touchgfx6muldivElll+0x2a>
 80113d2:	3001      	adds	r0, #1
 80113d4:	b002      	add	sp, #8
 80113d6:	bd10      	pop	{r4, pc}
 80113d8:	2b00      	cmp	r3, #0
 80113da:	bfb8      	it	lt
 80113dc:	425b      	neglt	r3, r3
 80113de:	ebb3 0f62 	cmp.w	r3, r2, asr #1
 80113e2:	bfc8      	it	gt
 80113e4:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80113e8:	e7f4      	b.n	80113d4 <_ZN8touchgfx6muldivElll+0x2a>

080113ea <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 80113ea:	2000      	movs	r0, #0
 80113ec:	4770      	bx	lr

080113ee <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 80113ee:	2001      	movs	r0, #1
 80113f0:	4770      	bx	lr

080113f2 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 80113f2:	2002      	movs	r0, #2
 80113f4:	4770      	bx	lr

080113f6 <_ZN8touchgfx6ScreenD1Ev>:
 80113f6:	4770      	bx	lr

080113f8 <_ZN8touchgfx12GestureEventD1Ev>:
 80113f8:	4770      	bx	lr

080113fa <_ZN8touchgfx9DragEventD1Ev>:
 80113fa:	4770      	bx	lr

080113fc <_ZN8touchgfx10ClickEventD1Ev>:
 80113fc:	4770      	bx	lr

080113fe <_ZN8touchgfx10ClickEventD0Ev>:
 80113fe:	b510      	push	{r4, lr}
 8011400:	210c      	movs	r1, #12
 8011402:	4604      	mov	r4, r0
 8011404:	f010 f865 	bl	80214d2 <_ZdlPvj>
 8011408:	4620      	mov	r0, r4
 801140a:	bd10      	pop	{r4, pc}

0801140c <_ZN8touchgfx9DragEventD0Ev>:
 801140c:	b510      	push	{r4, lr}
 801140e:	2110      	movs	r1, #16
 8011410:	4604      	mov	r4, r0
 8011412:	f010 f85e 	bl	80214d2 <_ZdlPvj>
 8011416:	4620      	mov	r0, r4
 8011418:	bd10      	pop	{r4, pc}

0801141a <_ZN8touchgfx12GestureEventD0Ev>:
 801141a:	b510      	push	{r4, lr}
 801141c:	210c      	movs	r1, #12
 801141e:	4604      	mov	r4, r0
 8011420:	f010 f857 	bl	80214d2 <_ZdlPvj>
 8011424:	4620      	mov	r0, r4
 8011426:	bd10      	pop	{r4, pc}

08011428 <_ZN8touchgfx6ScreenD0Ev>:
 8011428:	b510      	push	{r4, lr}
 801142a:	213c      	movs	r1, #60	; 0x3c
 801142c:	4604      	mov	r4, r0
 801142e:	f010 f850 	bl	80214d2 <_ZdlPvj>
 8011432:	4620      	mov	r0, r4
 8011434:	bd10      	pop	{r4, pc}
	...

08011438 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011438:	b530      	push	{r4, r5, lr}
 801143a:	460d      	mov	r5, r1
 801143c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801143e:	b087      	sub	sp, #28
 8011440:	4604      	mov	r4, r0
 8011442:	b301      	cbz	r1, 8011486 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011444:	a801      	add	r0, sp, #4
 8011446:	f7ff fe60 	bl	801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801144a:	892a      	ldrh	r2, [r5, #8]
 801144c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011450:	7928      	ldrb	r0, [r5, #4]
 8011452:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011456:	f88d 0010 	strb.w	r0, [sp, #16]
 801145a:	1ad2      	subs	r2, r2, r3
 801145c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801145e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011460:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011464:	441a      	add	r2, r3
 8011466:	896b      	ldrh	r3, [r5, #10]
 8011468:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801146c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011470:	1b5b      	subs	r3, r3, r5
 8011472:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8011474:	442b      	add	r3, r5
 8011476:	4d05      	ldr	r5, [pc, #20]	; (801148c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011478:	9503      	str	r5, [sp, #12]
 801147a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801147e:	6803      	ldr	r3, [r0, #0]
 8011480:	a903      	add	r1, sp, #12
 8011482:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011484:	4798      	blx	r3
 8011486:	b007      	add	sp, #28
 8011488:	bd30      	pop	{r4, r5, pc}
 801148a:	bf00      	nop
 801148c:	080260bc 	.word	0x080260bc

08011490 <_ZNK8touchgfx4Rect9intersectEss>:
 8011490:	b510      	push	{r4, lr}
 8011492:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011496:	428b      	cmp	r3, r1
 8011498:	dc10      	bgt.n	80114bc <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 801149a:	8884      	ldrh	r4, [r0, #4]
 801149c:	4423      	add	r3, r4
 801149e:	b21b      	sxth	r3, r3
 80114a0:	4299      	cmp	r1, r3
 80114a2:	da0b      	bge.n	80114bc <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 80114a4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80114a8:	4293      	cmp	r3, r2
 80114aa:	dc07      	bgt.n	80114bc <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 80114ac:	88c0      	ldrh	r0, [r0, #6]
 80114ae:	4418      	add	r0, r3
 80114b0:	b200      	sxth	r0, r0
 80114b2:	4282      	cmp	r2, r0
 80114b4:	bfac      	ite	ge
 80114b6:	2000      	movge	r0, #0
 80114b8:	2001      	movlt	r0, #1
 80114ba:	bd10      	pop	{r4, pc}
 80114bc:	2000      	movs	r0, #0
 80114be:	e7fc      	b.n	80114ba <_ZNK8touchgfx4Rect9intersectEss+0x2a>

080114c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80114c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114c2:	460c      	mov	r4, r1
 80114c4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80114c6:	b089      	sub	sp, #36	; 0x24
 80114c8:	4605      	mov	r5, r0
 80114ca:	2900      	cmp	r1, #0
 80114cc:	d054      	beq.n	8011578 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 80114ce:	4668      	mov	r0, sp
 80114d0:	f7ff fe1b 	bl	801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80114d4:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 80114d6:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 80114d8:	8922      	ldrh	r2, [r4, #8]
 80114da:	88e1      	ldrh	r1, [r4, #6]
 80114dc:	443a      	add	r2, r7
 80114de:	4431      	add	r1, r6
 80114e0:	b212      	sxth	r2, r2
 80114e2:	b209      	sxth	r1, r1
 80114e4:	4668      	mov	r0, sp
 80114e6:	f7ff ffd3 	bl	8011490 <_ZNK8touchgfx4Rect9intersectEss>
 80114ea:	b1d0      	cbz	r0, 8011522 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 80114ec:	89a2      	ldrh	r2, [r4, #12]
 80114ee:	8961      	ldrh	r1, [r4, #10]
 80114f0:	443a      	add	r2, r7
 80114f2:	4431      	add	r1, r6
 80114f4:	b212      	sxth	r2, r2
 80114f6:	b209      	sxth	r1, r1
 80114f8:	4668      	mov	r0, sp
 80114fa:	f7ff ffc9 	bl	8011490 <_ZNK8touchgfx4Rect9intersectEss>
 80114fe:	4603      	mov	r3, r0
 8011500:	b978      	cbnz	r0, 8011522 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 8011502:	4a1e      	ldr	r2, [pc, #120]	; (801157c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 8011504:	9204      	str	r2, [sp, #16]
 8011506:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011508:	f8ad 3016 	strh.w	r3, [sp, #22]
 801150c:	2202      	movs	r2, #2
 801150e:	f88d 2014 	strb.w	r2, [sp, #20]
 8011512:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011516:	f8ad 301a 	strh.w	r3, [sp, #26]
 801151a:	6803      	ldr	r3, [r0, #0]
 801151c:	a904      	add	r1, sp, #16
 801151e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011520:	4798      	blx	r3
 8011522:	6b29      	ldr	r1, [r5, #48]	; 0x30
 8011524:	a802      	add	r0, sp, #8
 8011526:	f7ff fdf0 	bl	801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801152a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801152e:	88e0      	ldrh	r0, [r4, #6]
 8011530:	8961      	ldrh	r1, [r4, #10]
 8011532:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8011536:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 801153a:	8923      	ldrh	r3, [r4, #8]
 801153c:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801153e:	7927      	ldrb	r7, [r4, #4]
 8011540:	f88d 7014 	strb.w	r7, [sp, #20]
 8011544:	1a80      	subs	r0, r0, r2
 8011546:	1a89      	subs	r1, r1, r2
 8011548:	89a2      	ldrh	r2, [r4, #12]
 801154a:	4c0d      	ldr	r4, [pc, #52]	; (8011580 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 801154c:	9404      	str	r4, [sp, #16]
 801154e:	4460      	add	r0, ip
 8011550:	eba3 030e 	sub.w	r3, r3, lr
 8011554:	eba2 020e 	sub.w	r2, r2, lr
 8011558:	f8ad 0016 	strh.w	r0, [sp, #22]
 801155c:	4433      	add	r3, r6
 801155e:	4461      	add	r1, ip
 8011560:	4432      	add	r2, r6
 8011562:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011564:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011568:	f8ad 3018 	strh.w	r3, [sp, #24]
 801156c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011570:	6803      	ldr	r3, [r0, #0]
 8011572:	a904      	add	r1, sp, #16
 8011574:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011576:	4798      	blx	r3
 8011578:	b009      	add	sp, #36	; 0x24
 801157a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801157c:	08026094 	.word	0x08026094
 8011580:	080260a8 	.word	0x080260a8

08011584 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011588:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 801158c:	790b      	ldrb	r3, [r1, #4]
 801158e:	b0a1      	sub	sp, #132	; 0x84
 8011590:	4604      	mov	r4, r0
 8011592:	460d      	mov	r5, r1
 8011594:	f1b9 0f00 	cmp.w	r9, #0
 8011598:	d00f      	beq.n	80115ba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 801159a:	2b00      	cmp	r3, #0
 801159c:	f040 80a0 	bne.w	80116e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 80115a0:	b021      	add	sp, #132	; 0x84
 80115a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115a6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80115aa:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 80115ae:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80115b2:	1d20      	adds	r0, r4, #4
 80115b4:	f7fa f940 	bl	800b838 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80115b8:	e092      	b.n	80116e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 80115ba:	2b00      	cmp	r3, #0
 80115bc:	d1f0      	bne.n	80115a0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 80115be:	4b5e      	ldr	r3, [pc, #376]	; (8011738 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 80115c0:	681b      	ldr	r3, [r3, #0]
 80115c2:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 80115c6:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 80115ca:	f1ba 0f03 	cmp.w	sl, #3
 80115ce:	ddea      	ble.n	80115a6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 80115d0:	f1ba 0f0c 	cmp.w	sl, #12
 80115d4:	f04f 0303 	mov.w	r3, #3
 80115d8:	bfdc      	itt	le
 80115da:	f10a 32ff 	addle.w	r2, sl, #4294967295
 80115de:	fb92 f3f3 	sdivle	r3, r2, r3
 80115e2:	9301      	str	r3, [sp, #4]
 80115e4:	4b55      	ldr	r3, [pc, #340]	; (801173c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 80115e6:	4956      	ldr	r1, [pc, #344]	; (8011740 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 80115e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80115ec:	4b55      	ldr	r3, [pc, #340]	; (8011744 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 80115ee:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80115f2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80115f6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80115fa:	ab0e      	add	r3, sp, #56	; 0x38
 80115fc:	2248      	movs	r2, #72	; 0x48
 80115fe:	2600      	movs	r6, #0
 8011600:	4618      	mov	r0, r3
 8011602:	960a      	str	r6, [sp, #40]	; 0x28
 8011604:	f010 fe02 	bl	802220c <memcpy>
 8011608:	f04f 32ff 	mov.w	r2, #4294967295
 801160c:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8011610:	f8cd a008 	str.w	sl, [sp, #8]
 8011614:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8011618:	fb93 f3f2 	sdiv	r3, r3, r2
 801161c:	b29b      	uxth	r3, r3
 801161e:	46b3      	mov	fp, r6
 8011620:	9303      	str	r3, [sp, #12]
 8011622:	2300      	movs	r3, #0
 8011624:	9309      	str	r3, [sp, #36]	; 0x24
 8011626:	9b07      	ldr	r3, [sp, #28]
 8011628:	9a03      	ldr	r2, [sp, #12]
 801162a:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 801162e:	88ef      	ldrh	r7, [r5, #6]
 8011630:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 8011634:	fb13 f302 	smulbb	r3, r3, r2
 8011638:	b29b      	uxth	r3, r3
 801163a:	9304      	str	r3, [sp, #16]
 801163c:	9b07      	ldr	r3, [sp, #28]
 801163e:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8011642:	a80a      	add	r0, sp, #40	; 0x28
 8011644:	685b      	ldr	r3, [r3, #4]
 8011646:	fb13 f302 	smulbb	r3, r3, r2
 801164a:	b29b      	uxth	r3, r3
 801164c:	9305      	str	r3, [sp, #20]
 801164e:	9b04      	ldr	r3, [sp, #16]
 8011650:	441f      	add	r7, r3
 8011652:	9b05      	ldr	r3, [sp, #20]
 8011654:	4498      	add	r8, r3
 8011656:	b23f      	sxth	r7, r7
 8011658:	fa0f f888 	sxth.w	r8, r8
 801165c:	4642      	mov	r2, r8
 801165e:	4639      	mov	r1, r7
 8011660:	f7ff ff16 	bl	8011490 <_ZNK8touchgfx4Rect9intersectEss>
 8011664:	b380      	cbz	r0, 80116c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 8011666:	4639      	mov	r1, r7
 8011668:	ab09      	add	r3, sp, #36	; 0x24
 801166a:	4642      	mov	r2, r8
 801166c:	1d20      	adds	r0, r4, #4
 801166e:	f7fa f8e3 	bl	800b838 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011672:	9909      	ldr	r1, [sp, #36]	; 0x24
 8011674:	b341      	cbz	r1, 80116c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 8011676:	4549      	cmp	r1, r9
 8011678:	d026      	beq.n	80116c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 801167a:	a80c      	add	r0, sp, #48	; 0x30
 801167c:	f7ff fd45 	bl	801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011680:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8011684:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011688:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801168c:	2002      	movs	r0, #2
 801168e:	fb92 f2f0 	sdiv	r2, r2, r0
 8011692:	440a      	add	r2, r1
 8011694:	1a99      	subs	r1, r3, r2
 8011696:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801169a:	fb93 f3f0 	sdiv	r3, r3, r0
 801169e:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 80116a2:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 80116a6:	4403      	add	r3, r0
 80116a8:	1ad3      	subs	r3, r2, r3
 80116aa:	435b      	muls	r3, r3
 80116ac:	9a06      	ldr	r2, [sp, #24]
 80116ae:	fb01 3301 	mla	r3, r1, r1, r3
 80116b2:	4293      	cmp	r3, r2
 80116b4:	d208      	bcs.n	80116c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 80116b6:	9a04      	ldr	r2, [sp, #16]
 80116b8:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 80116bc:	86a2      	strh	r2, [r4, #52]	; 0x34
 80116be:	9a05      	ldr	r2, [sp, #20]
 80116c0:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 80116c4:	86e2      	strh	r2, [r4, #54]	; 0x36
 80116c6:	9306      	str	r3, [sp, #24]
 80116c8:	f10b 0b02 	add.w	fp, fp, #2
 80116cc:	f1bb 0f08 	cmp.w	fp, #8
 80116d0:	dda7      	ble.n	8011622 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80116d2:	9b02      	ldr	r3, [sp, #8]
 80116d4:	4453      	add	r3, sl
 80116d6:	9302      	str	r3, [sp, #8]
 80116d8:	9b01      	ldr	r3, [sp, #4]
 80116da:	3601      	adds	r6, #1
 80116dc:	42b3      	cmp	r3, r6
 80116de:	d199      	bne.n	8011614 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 80116e0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80116e2:	2900      	cmp	r1, #0
 80116e4:	f43f af5c 	beq.w	80115a0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 80116e8:	a80c      	add	r0, sp, #48	; 0x30
 80116ea:	f7ff fd0e 	bl	801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80116ee:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80116f2:	88ea      	ldrh	r2, [r5, #6]
 80116f4:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 80116f8:	7929      	ldrb	r1, [r5, #4]
 80116fa:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 80116fe:	1ad2      	subs	r2, r2, r3
 8011700:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011702:	441a      	add	r2, r3
 8011704:	892b      	ldrh	r3, [r5, #8]
 8011706:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 801170a:	1a1b      	subs	r3, r3, r0
 801170c:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 801170e:	4403      	add	r3, r0
 8011710:	480d      	ldr	r0, [pc, #52]	; (8011748 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 8011712:	900e      	str	r0, [sp, #56]	; 0x38
 8011714:	2600      	movs	r6, #0
 8011716:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011718:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 801171c:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 8011720:	6803      	ldr	r3, [r0, #0]
 8011722:	a90e      	add	r1, sp, #56	; 0x38
 8011724:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011726:	4798      	blx	r3
 8011728:	792b      	ldrb	r3, [r5, #4]
 801172a:	2b00      	cmp	r3, #0
 801172c:	f43f af38 	beq.w	80115a0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8011730:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8011734:	e734      	b.n	80115a0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8011736:	bf00      	nop
 8011738:	2000e3e0 	.word	0x2000e3e0
 801173c:	2000e3d4 	.word	0x2000e3d4
 8011740:	0802321c 	.word	0x0802321c
 8011744:	2000e3d6 	.word	0x2000e3d6
 8011748:	08026094 	.word	0x08026094

0801174c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801174c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801174e:	4604      	mov	r4, r0
 8011750:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011754:	3201      	adds	r2, #1
 8011756:	d112      	bne.n	801177e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011758:	6803      	ldr	r3, [r0, #0]
 801175a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801175e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011762:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011766:	2500      	movs	r5, #0
 8011768:	9500      	str	r5, [sp, #0]
 801176a:	466d      	mov	r5, sp
 801176c:	4629      	mov	r1, r5
 801176e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011772:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011774:	4798      	blx	r3
 8011776:	e895 0003 	ldmia.w	r5, {r0, r1}
 801177a:	e884 0003 	stmia.w	r4, {r0, r1}
 801177e:	4620      	mov	r0, r4
 8011780:	b003      	add	sp, #12
 8011782:	bd30      	pop	{r4, r5, pc}

08011784 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011784:	b513      	push	{r0, r1, r4, lr}
 8011786:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801178a:	3301      	adds	r3, #1
 801178c:	4604      	mov	r4, r0
 801178e:	d109      	bne.n	80117a4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011790:	4601      	mov	r1, r0
 8011792:	4668      	mov	r0, sp
 8011794:	f7ff fcb9 	bl	801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011798:	f8bd 3000 	ldrh.w	r3, [sp]
 801179c:	8423      	strh	r3, [r4, #32]
 801179e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80117a2:	8463      	strh	r3, [r4, #34]	; 0x22
 80117a4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80117a8:	b002      	add	sp, #8
 80117aa:	bd10      	pop	{r4, pc}

080117ac <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80117ac:	b513      	push	{r0, r1, r4, lr}
 80117ae:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80117b2:	3301      	adds	r3, #1
 80117b4:	4604      	mov	r4, r0
 80117b6:	d109      	bne.n	80117cc <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80117b8:	4601      	mov	r1, r0
 80117ba:	4668      	mov	r0, sp
 80117bc:	f7ff fca5 	bl	801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80117c0:	f8bd 3000 	ldrh.w	r3, [sp]
 80117c4:	8423      	strh	r3, [r4, #32]
 80117c6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80117ca:	8463      	strh	r3, [r4, #34]	; 0x22
 80117cc:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80117d0:	b002      	add	sp, #8
 80117d2:	bd10      	pop	{r4, pc}

080117d4 <_ZN8touchgfx6ScreenC1Ev>:
 80117d4:	b570      	push	{r4, r5, r6, lr}
 80117d6:	4605      	mov	r5, r0
 80117d8:	4b15      	ldr	r3, [pc, #84]	; (8011830 <_ZN8touchgfx6ScreenC1Ev+0x5c>)
 80117da:	f845 3b04 	str.w	r3, [r5], #4
 80117de:	2300      	movs	r3, #0
 80117e0:	8103      	strh	r3, [r0, #8]
 80117e2:	8143      	strh	r3, [r0, #10]
 80117e4:	8183      	strh	r3, [r0, #12]
 80117e6:	81c3      	strh	r3, [r0, #14]
 80117e8:	8203      	strh	r3, [r0, #16]
 80117ea:	8243      	strh	r3, [r0, #18]
 80117ec:	8283      	strh	r3, [r0, #20]
 80117ee:	82c3      	strh	r3, [r0, #22]
 80117f0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80117f4:	6203      	str	r3, [r0, #32]
 80117f6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80117fa:	4a0e      	ldr	r2, [pc, #56]	; (8011834 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80117fc:	6343      	str	r3, [r0, #52]	; 0x34
 80117fe:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8011802:	4b0d      	ldr	r3, [pc, #52]	; (8011838 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011804:	6042      	str	r2, [r0, #4]
 8011806:	f9b3 6000 	ldrsh.w	r6, [r3]
 801180a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 801180c:	4a0b      	ldr	r2, [pc, #44]	; (801183c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801180e:	4604      	mov	r4, r0
 8011810:	2101      	movs	r1, #1
 8011812:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8011816:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801181a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801181e:	4628      	mov	r0, r5
 8011820:	4798      	blx	r3
 8011822:	6863      	ldr	r3, [r4, #4]
 8011824:	4628      	mov	r0, r5
 8011826:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011828:	4631      	mov	r1, r6
 801182a:	4798      	blx	r3
 801182c:	4620      	mov	r0, r4
 801182e:	bd70      	pop	{r4, r5, r6, pc}
 8011830:	080260d0 	.word	0x080260d0
 8011834:	08024dc8 	.word	0x08024dc8
 8011838:	2000e3d6 	.word	0x2000e3d6
 801183c:	2000e3d4 	.word	0x2000e3d4

08011840 <_ZN8touchgfx6Screen4drawEv>:
 8011840:	b507      	push	{r0, r1, r2, lr}
 8011842:	4b09      	ldr	r3, [pc, #36]	; (8011868 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011844:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011848:	4b08      	ldr	r3, [pc, #32]	; (801186c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801184a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801184e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011852:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011856:	6803      	ldr	r3, [r0, #0]
 8011858:	2100      	movs	r1, #0
 801185a:	9100      	str	r1, [sp, #0]
 801185c:	689b      	ldr	r3, [r3, #8]
 801185e:	4669      	mov	r1, sp
 8011860:	4798      	blx	r3
 8011862:	b003      	add	sp, #12
 8011864:	f85d fb04 	ldr.w	pc, [sp], #4
 8011868:	2000e3d4 	.word	0x2000e3d4
 801186c:	2000e3d6 	.word	0x2000e3d6

08011870 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011874:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011878:	2b00      	cmp	r3, #0
 801187a:	b089      	sub	sp, #36	; 0x24
 801187c:	4680      	mov	r8, r0
 801187e:	460c      	mov	r4, r1
 8011880:	4615      	mov	r5, r2
 8011882:	dd0e      	ble.n	80118a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011884:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011888:	2b00      	cmp	r3, #0
 801188a:	dd0a      	ble.n	80118a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801188c:	4628      	mov	r0, r5
 801188e:	f7ff ff5d 	bl	801174c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011892:	4621      	mov	r1, r4
 8011894:	f7fe fba4 	bl	800ffe0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011898:	69eb      	ldr	r3, [r5, #28]
 801189a:	b928      	cbnz	r0, 80118a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801189c:	461d      	mov	r5, r3
 801189e:	2b00      	cmp	r3, #0
 80118a0:	d1f4      	bne.n	801188c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80118a2:	b009      	add	sp, #36	; 0x24
 80118a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80118a8:	ae04      	add	r6, sp, #16
 80118aa:	2b00      	cmp	r3, #0
 80118ac:	f000 80b5 	beq.w	8011a1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80118b0:	682b      	ldr	r3, [r5, #0]
 80118b2:	4629      	mov	r1, r5
 80118b4:	68db      	ldr	r3, [r3, #12]
 80118b6:	a802      	add	r0, sp, #8
 80118b8:	4798      	blx	r3
 80118ba:	4628      	mov	r0, r5
 80118bc:	f7ff ff62 	bl	8011784 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80118c0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80118c4:	4407      	add	r7, r0
 80118c6:	4628      	mov	r0, r5
 80118c8:	f7ff ff70 	bl	80117ac <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80118cc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80118d0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80118d4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80118d8:	4418      	add	r0, r3
 80118da:	4621      	mov	r1, r4
 80118dc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80118e0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80118e4:	b23f      	sxth	r7, r7
 80118e6:	4630      	mov	r0, r6
 80118e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80118ec:	f8ad 7010 	strh.w	r7, [sp, #16]
 80118f0:	f7fa f85c 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 80118f4:	4628      	mov	r0, r5
 80118f6:	f7ff ff29 	bl	801174c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80118fa:	4602      	mov	r2, r0
 80118fc:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011900:	ab06      	add	r3, sp, #24
 8011902:	e883 0003 	stmia.w	r3, {r0, r1}
 8011906:	4611      	mov	r1, r2
 8011908:	4618      	mov	r0, r3
 801190a:	f7fa f84f 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 801190e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011912:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011916:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801191a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801191e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011922:	4299      	cmp	r1, r3
 8011924:	d10b      	bne.n	801193e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011926:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801192a:	4552      	cmp	r2, sl
 801192c:	d107      	bne.n	801193e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801192e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011932:	455a      	cmp	r2, fp
 8011934:	d103      	bne.n	801193e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011936:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801193a:	454a      	cmp	r2, r9
 801193c:	d06d      	beq.n	8011a1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801193e:	f1bb 0f00 	cmp.w	fp, #0
 8011942:	dd65      	ble.n	8011a10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011944:	f1b9 0f00 	cmp.w	r9, #0
 8011948:	dd62      	ble.n	8011a10 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801194a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801194e:	fa1f f08a 	uxth.w	r0, sl
 8011952:	4552      	cmp	r2, sl
 8011954:	9000      	str	r0, [sp, #0]
 8011956:	da12      	bge.n	801197e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011958:	9301      	str	r3, [sp, #4]
 801195a:	9b00      	ldr	r3, [sp, #0]
 801195c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011960:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011964:	1a9a      	subs	r2, r3, r2
 8011966:	f8ad 1010 	strh.w	r1, [sp, #16]
 801196a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801196e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011972:	69ea      	ldr	r2, [r5, #28]
 8011974:	4631      	mov	r1, r6
 8011976:	4640      	mov	r0, r8
 8011978:	f7ff ff7a 	bl	8011870 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801197c:	9b01      	ldr	r3, [sp, #4]
 801197e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011982:	429a      	cmp	r2, r3
 8011984:	b29f      	uxth	r7, r3
 8011986:	da0d      	bge.n	80119a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011988:	f8ad 2010 	strh.w	r2, [sp, #16]
 801198c:	1aba      	subs	r2, r7, r2
 801198e:	f8ad a012 	strh.w	sl, [sp, #18]
 8011992:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011996:	f8ad 9016 	strh.w	r9, [sp, #22]
 801199a:	69ea      	ldr	r2, [r5, #28]
 801199c:	4631      	mov	r1, r6
 801199e:	4640      	mov	r0, r8
 80119a0:	f7ff ff66 	bl	8011870 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80119a4:	8822      	ldrh	r2, [r4, #0]
 80119a6:	88a3      	ldrh	r3, [r4, #4]
 80119a8:	445f      	add	r7, fp
 80119aa:	4413      	add	r3, r2
 80119ac:	b29b      	uxth	r3, r3
 80119ae:	b2bf      	uxth	r7, r7
 80119b0:	b23a      	sxth	r2, r7
 80119b2:	b219      	sxth	r1, r3
 80119b4:	4291      	cmp	r1, r2
 80119b6:	dd0d      	ble.n	80119d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80119b8:	1bdb      	subs	r3, r3, r7
 80119ba:	f8ad 2010 	strh.w	r2, [sp, #16]
 80119be:	f8ad a012 	strh.w	sl, [sp, #18]
 80119c2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80119c6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80119ca:	69ea      	ldr	r2, [r5, #28]
 80119cc:	4631      	mov	r1, r6
 80119ce:	4640      	mov	r0, r8
 80119d0:	f7ff ff4e 	bl	8011870 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80119d4:	88e2      	ldrh	r2, [r4, #6]
 80119d6:	8863      	ldrh	r3, [r4, #2]
 80119d8:	4413      	add	r3, r2
 80119da:	9a00      	ldr	r2, [sp, #0]
 80119dc:	444a      	add	r2, r9
 80119de:	b29b      	uxth	r3, r3
 80119e0:	fa1f f982 	uxth.w	r9, r2
 80119e4:	fa0f f289 	sxth.w	r2, r9
 80119e8:	b219      	sxth	r1, r3
 80119ea:	428a      	cmp	r2, r1
 80119ec:	da15      	bge.n	8011a1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80119ee:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80119f2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80119f6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80119fa:	eba3 0309 	sub.w	r3, r3, r9
 80119fe:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011a02:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011a06:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011a0a:	69ea      	ldr	r2, [r5, #28]
 8011a0c:	4631      	mov	r1, r6
 8011a0e:	e001      	b.n	8011a14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011a10:	69ea      	ldr	r2, [r5, #28]
 8011a12:	4621      	mov	r1, r4
 8011a14:	4640      	mov	r0, r8
 8011a16:	f7ff ff2b 	bl	8011870 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011a1a:	4628      	mov	r0, r5
 8011a1c:	f7ff fe96 	bl	801174c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011a20:	6861      	ldr	r1, [r4, #4]
 8011a22:	4602      	mov	r2, r0
 8011a24:	6820      	ldr	r0, [r4, #0]
 8011a26:	4633      	mov	r3, r6
 8011a28:	c303      	stmia	r3!, {r0, r1}
 8011a2a:	4611      	mov	r1, r2
 8011a2c:	4630      	mov	r0, r6
 8011a2e:	f7f9 ffbd 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 8011a32:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011a36:	2b00      	cmp	r3, #0
 8011a38:	f77f af33 	ble.w	80118a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011a3c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011a40:	2b00      	cmp	r3, #0
 8011a42:	f77f af2e 	ble.w	80118a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011a46:	4628      	mov	r0, r5
 8011a48:	f7ff fe9c 	bl	8011784 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011a4c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011a50:	1a18      	subs	r0, r3, r0
 8011a52:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011a56:	4628      	mov	r0, r5
 8011a58:	f7ff fea8 	bl	80117ac <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011a5c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011a60:	1a18      	subs	r0, r3, r0
 8011a62:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011a66:	682b      	ldr	r3, [r5, #0]
 8011a68:	4631      	mov	r1, r6
 8011a6a:	689b      	ldr	r3, [r3, #8]
 8011a6c:	4628      	mov	r0, r5
 8011a6e:	4798      	blx	r3
 8011a70:	e717      	b.n	80118a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08011a72 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8011a72:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011a74:	aa02      	add	r2, sp, #8
 8011a76:	2300      	movs	r3, #0
 8011a78:	f842 3d04 	str.w	r3, [r2, #-4]!
 8011a7c:	4604      	mov	r4, r0
 8011a7e:	3004      	adds	r0, #4
 8011a80:	460d      	mov	r5, r1
 8011a82:	f7fa f86b 	bl	800bb5c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011a86:	9a01      	ldr	r2, [sp, #4]
 8011a88:	b11a      	cbz	r2, 8011a92 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 8011a8a:	4629      	mov	r1, r5
 8011a8c:	4620      	mov	r0, r4
 8011a8e:	f7ff feef 	bl	8011870 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011a92:	b003      	add	sp, #12
 8011a94:	bd30      	pop	{r4, r5, pc}

08011a96 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011a96:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011a98:	4602      	mov	r2, r0
 8011a9a:	4604      	mov	r4, r0
 8011a9c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011aa0:	460d      	mov	r5, r1
 8011aa2:	6851      	ldr	r1, [r2, #4]
 8011aa4:	466b      	mov	r3, sp
 8011aa6:	c303      	stmia	r3!, {r0, r1}
 8011aa8:	4629      	mov	r1, r5
 8011aaa:	4668      	mov	r0, sp
 8011aac:	f7f9 ff7e 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 8011ab0:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011ab4:	4669      	mov	r1, sp
 8011ab6:	b123      	cbz	r3, 8011ac2 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 8011ab8:	4620      	mov	r0, r4
 8011aba:	f7ff ffda 	bl	8011a72 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011abe:	b003      	add	sp, #12
 8011ac0:	bd30      	pop	{r4, r5, pc}
 8011ac2:	1d20      	adds	r0, r4, #4
 8011ac4:	f7fa f811 	bl	800baea <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8011ac8:	e7f9      	b.n	8011abe <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

08011aca <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8011aca:	680a      	ldr	r2, [r1, #0]
 8011acc:	460b      	mov	r3, r1
 8011ace:	6992      	ldr	r2, [r2, #24]
 8011ad0:	1d01      	adds	r1, r0, #4
 8011ad2:	4618      	mov	r0, r3
 8011ad4:	4710      	bx	r2

08011ad6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8011ad6:	b510      	push	{r4, lr}
 8011ad8:	4298      	cmp	r0, r3
 8011ada:	eb01 0402 	add.w	r4, r1, r2
 8011ade:	b224      	sxth	r4, r4
 8011ae0:	d226      	bcs.n	8011b30 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 8011ae2:	b32b      	cbz	r3, 8011b30 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 8011ae4:	ee07 2a90 	vmov	s15, r2
 8011ae8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011aec:	ee07 0a90 	vmov	s15, r0
 8011af0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8011af4:	ee07 3a90 	vmov	s15, r3
 8011af8:	ee67 6a26 	vmul.f32	s13, s14, s13
 8011afc:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8011b00:	ee07 1a90 	vmov	s15, r1
 8011b04:	ee86 7a86 	vdiv.f32	s14, s13, s12
 8011b08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011b0c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011b10:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8011b14:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b1c:	bfcc      	ite	gt
 8011b1e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8011b22:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8011b26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011b2a:	ee17 3a90 	vmov	r3, s15
 8011b2e:	b21c      	sxth	r4, r3
 8011b30:	4620      	mov	r0, r4
 8011b32:	bd10      	pop	{r4, pc}

08011b34 <_ZN8touchgfx15EasingEquations12linearEaseInEtsst>:
 8011b34:	f7ff bfcf 	b.w	8011ad6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

08011b38 <_ZN8touchgfx12TextProviderC1Ev>:
 8011b38:	b510      	push	{r4, lr}
 8011b3a:	2300      	movs	r3, #0
 8011b3c:	2201      	movs	r2, #1
 8011b3e:	4604      	mov	r4, r0
 8011b40:	e9c0 3300 	strd	r3, r3, [r0]
 8011b44:	60c3      	str	r3, [r0, #12]
 8011b46:	7403      	strb	r3, [r0, #16]
 8011b48:	82c3      	strh	r3, [r0, #22]
 8011b4a:	8303      	strh	r3, [r0, #24]
 8011b4c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8011b4e:	8603      	strh	r3, [r0, #48]	; 0x30
 8011b50:	86c3      	strh	r3, [r0, #54]	; 0x36
 8011b52:	8703      	strh	r3, [r0, #56]	; 0x38
 8011b54:	63c3      	str	r3, [r0, #60]	; 0x3c
 8011b56:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 8011b5a:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 8011b5e:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 8011b62:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 8011b66:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 8011b6a:	f7f2 fbc7 	bl	80042fc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8011b6e:	4620      	mov	r0, r4
 8011b70:	bd10      	pop	{r4, pc}

08011b72 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8011b72:	b530      	push	{r4, r5, lr}
 8011b74:	2500      	movs	r5, #0
 8011b76:	2401      	movs	r4, #1
 8011b78:	6843      	ldr	r3, [r0, #4]
 8011b7a:	b913      	cbnz	r3, 8011b82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011b7c:	6803      	ldr	r3, [r0, #0]
 8011b7e:	b1f3      	cbz	r3, 8011bbe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 8011b80:	6043      	str	r3, [r0, #4]
 8011b82:	7c03      	ldrb	r3, [r0, #16]
 8011b84:	b143      	cbz	r3, 8011b98 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011b86:	68c3      	ldr	r3, [r0, #12]
 8011b88:	b12b      	cbz	r3, 8011b96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011b8a:	881a      	ldrh	r2, [r3, #0]
 8011b8c:	b11a      	cbz	r2, 8011b96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011b8e:	1c9a      	adds	r2, r3, #2
 8011b90:	60c2      	str	r2, [r0, #12]
 8011b92:	8818      	ldrh	r0, [r3, #0]
 8011b94:	bd30      	pop	{r4, r5, pc}
 8011b96:	7405      	strb	r5, [r0, #16]
 8011b98:	6843      	ldr	r3, [r0, #4]
 8011b9a:	8819      	ldrh	r1, [r3, #0]
 8011b9c:	b179      	cbz	r1, 8011bbe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 8011b9e:	1c9a      	adds	r2, r3, #2
 8011ba0:	2902      	cmp	r1, #2
 8011ba2:	6042      	str	r2, [r0, #4]
 8011ba4:	d1f5      	bne.n	8011b92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011ba6:	6883      	ldr	r3, [r0, #8]
 8011ba8:	1d1a      	adds	r2, r3, #4
 8011baa:	6082      	str	r2, [r0, #8]
 8011bac:	681b      	ldr	r3, [r3, #0]
 8011bae:	60c3      	str	r3, [r0, #12]
 8011bb0:	2b00      	cmp	r3, #0
 8011bb2:	d0e1      	beq.n	8011b78 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011bb4:	881b      	ldrh	r3, [r3, #0]
 8011bb6:	2b00      	cmp	r3, #0
 8011bb8:	d0de      	beq.n	8011b78 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011bba:	7404      	strb	r4, [r0, #16]
 8011bbc:	e7dc      	b.n	8011b78 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011bbe:	2000      	movs	r0, #0
 8011bc0:	e7e8      	b.n	8011b94 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011bc2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 8011bc2:	b410      	push	{r4}
 8011bc4:	63c3      	str	r3, [r0, #60]	; 0x3c
 8011bc6:	2300      	movs	r3, #0
 8011bc8:	6082      	str	r2, [r0, #8]
 8011bca:	6001      	str	r1, [r0, #0]
 8011bcc:	6043      	str	r3, [r0, #4]
 8011bce:	60c3      	str	r3, [r0, #12]
 8011bd0:	7403      	strb	r3, [r0, #16]
 8011bd2:	8603      	strh	r3, [r0, #48]	; 0x30
 8011bd4:	8303      	strh	r3, [r0, #24]
 8011bd6:	8703      	strh	r3, [r0, #56]	; 0x38
 8011bd8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011bdc:	f7f2 bb8e 	b.w	80042fc <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011be0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011be0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011be2:	4605      	mov	r5, r0
 8011be4:	4608      	mov	r0, r1
 8011be6:	b1e9      	cbz	r1, 8011c24 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8011be8:	f105 0440 	add.w	r4, r5, #64	; 0x40
 8011bec:	460b      	mov	r3, r1
 8011bee:	f101 0708 	add.w	r7, r1, #8
 8011bf2:	4622      	mov	r2, r4
 8011bf4:	6818      	ldr	r0, [r3, #0]
 8011bf6:	6859      	ldr	r1, [r3, #4]
 8011bf8:	4626      	mov	r6, r4
 8011bfa:	c603      	stmia	r6!, {r0, r1}
 8011bfc:	3308      	adds	r3, #8
 8011bfe:	42bb      	cmp	r3, r7
 8011c00:	4634      	mov	r4, r6
 8011c02:	d1f7      	bne.n	8011bf4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011c04:	6818      	ldr	r0, [r3, #0]
 8011c06:	6030      	str	r0, [r6, #0]
 8011c08:	889b      	ldrh	r3, [r3, #4]
 8011c0a:	80b3      	strh	r3, [r6, #4]
 8011c0c:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 8011c10:	015b      	lsls	r3, r3, #5
 8011c12:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011c16:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 8011c1a:	430b      	orrs	r3, r1
 8011c1c:	425b      	negs	r3, r3
 8011c1e:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 8011c22:	4610      	mov	r0, r2
 8011c24:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011c26 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8011c26:	b538      	push	{r3, r4, r5, lr}
 8011c28:	460c      	mov	r4, r1
 8011c2a:	6811      	ldr	r1, [r2, #0]
 8011c2c:	4610      	mov	r0, r2
 8011c2e:	68cd      	ldr	r5, [r1, #12]
 8011c30:	4619      	mov	r1, r3
 8011c32:	47a8      	blx	r5
 8011c34:	2800      	cmp	r0, #0
 8011c36:	bf08      	it	eq
 8011c38:	4620      	moveq	r0, r4
 8011c3a:	bd38      	pop	{r3, r4, r5, pc}

08011c3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011c3e:	4604      	mov	r4, r0
 8011c40:	4615      	mov	r5, r2
 8011c42:	4608      	mov	r0, r1
 8011c44:	b93a      	cbnz	r2, 8011c56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8011c46:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 8011c4a:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 8011c4e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8011c52:	4628      	mov	r0, r5
 8011c54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011c56:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8011c5a:	8893      	ldrh	r3, [r2, #4]
 8011c5c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8011c60:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8011c64:	79ee      	ldrb	r6, [r5, #7]
 8011c66:	4316      	orrs	r6, r2
 8011c68:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 8011c6c:	189a      	adds	r2, r3, r2
 8011c6e:	b291      	uxth	r1, r2
 8011c70:	291d      	cmp	r1, #29
 8011c72:	b2b7      	uxth	r7, r6
 8011c74:	f200 8083 	bhi.w	8011d7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8011c78:	2201      	movs	r2, #1
 8011c7a:	408a      	lsls	r2, r1
 8011c7c:	4978      	ldr	r1, [pc, #480]	; (8011e60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 8011c7e:	420a      	tst	r2, r1
 8011c80:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8011c84:	d12d      	bne.n	8011ce2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 8011c86:	f412 7f60 	tst.w	r2, #896	; 0x380
 8011c8a:	d078      	beq.n	8011d7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8011c8c:	f104 0240 	add.w	r2, r4, #64	; 0x40
 8011c90:	462b      	mov	r3, r5
 8011c92:	f105 0e08 	add.w	lr, r5, #8
 8011c96:	4615      	mov	r5, r2
 8011c98:	6818      	ldr	r0, [r3, #0]
 8011c9a:	6859      	ldr	r1, [r3, #4]
 8011c9c:	4694      	mov	ip, r2
 8011c9e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011ca2:	3308      	adds	r3, #8
 8011ca4:	4573      	cmp	r3, lr
 8011ca6:	4662      	mov	r2, ip
 8011ca8:	d1f6      	bne.n	8011c98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 8011caa:	6818      	ldr	r0, [r3, #0]
 8011cac:	f8cc 0000 	str.w	r0, [ip]
 8011cb0:	889b      	ldrh	r3, [r3, #4]
 8011cb2:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011cb6:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 8011cba:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 8011cbe:	b2b3      	uxth	r3, r6
 8011cc0:	1aca      	subs	r2, r1, r3
 8011cc2:	b292      	uxth	r2, r2
 8011cc4:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 8011cc8:	10d2      	asrs	r2, r2, #3
 8011cca:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8011cce:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8011cd2:	4302      	orrs	r2, r0
 8011cd4:	1bcf      	subs	r7, r1, r7
 8011cd6:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 8011cda:	1afb      	subs	r3, r7, r3
 8011cdc:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 8011ce0:	e7b7      	b.n	8011c52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8011ce2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8011ce4:	b92b      	cbnz	r3, 8011cf2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 8011ce6:	4b5f      	ldr	r3, [pc, #380]	; (8011e64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 8011ce8:	4a5f      	ldr	r2, [pc, #380]	; (8011e68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 8011cea:	4860      	ldr	r0, [pc, #384]	; (8011e6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 8011cec:	21c0      	movs	r1, #192	; 0xc0
 8011cee:	f010 fa0f 	bl	8022110 <__assert_func>
 8011cf2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011cf4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011cf8:	8b59      	ldrh	r1, [r3, #26]
 8011cfa:	f640 6333 	movw	r3, #3635	; 0xe33
 8011cfe:	4299      	cmp	r1, r3
 8011d00:	d110      	bne.n	8011d24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 8011d02:	6803      	ldr	r3, [r0, #0]
 8011d04:	68db      	ldr	r3, [r3, #12]
 8011d06:	4798      	blx	r3
 8011d08:	7b41      	ldrb	r1, [r0, #13]
 8011d0a:	00cb      	lsls	r3, r1, #3
 8011d0c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011d10:	7a03      	ldrb	r3, [r0, #8]
 8011d12:	0648      	lsls	r0, r1, #25
 8011d14:	ea43 0302 	orr.w	r3, r3, r2
 8011d18:	bf44      	itt	mi
 8011d1a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011d1e:	b21b      	sxthmi	r3, r3
 8011d20:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8011d24:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 8011d28:	443b      	add	r3, r7
 8011d2a:	4433      	add	r3, r6
 8011d2c:	b29b      	uxth	r3, r3
 8011d2e:	f104 0640 	add.w	r6, r4, #64	; 0x40
 8011d32:	462a      	mov	r2, r5
 8011d34:	f105 0c08 	add.w	ip, r5, #8
 8011d38:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8011d3c:	4635      	mov	r5, r6
 8011d3e:	6810      	ldr	r0, [r2, #0]
 8011d40:	6851      	ldr	r1, [r2, #4]
 8011d42:	4637      	mov	r7, r6
 8011d44:	c703      	stmia	r7!, {r0, r1}
 8011d46:	3208      	adds	r2, #8
 8011d48:	4562      	cmp	r2, ip
 8011d4a:	463e      	mov	r6, r7
 8011d4c:	d1f7      	bne.n	8011d3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8011d4e:	6810      	ldr	r0, [r2, #0]
 8011d50:	6038      	str	r0, [r7, #0]
 8011d52:	8892      	ldrh	r2, [r2, #4]
 8011d54:	80ba      	strh	r2, [r7, #4]
 8011d56:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 8011d5a:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 8011d5e:	10db      	asrs	r3, r3, #3
 8011d60:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011d64:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011d68:	4313      	orrs	r3, r2
 8011d6a:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 8011d6e:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 8011d72:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 8011d76:	1a9b      	subs	r3, r3, r2
 8011d78:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 8011d7c:	e769      	b.n	8011c52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8011d7e:	f023 0204 	bic.w	r2, r3, #4
 8011d82:	f640 611b 	movw	r1, #3611	; 0xe1b
 8011d86:	428a      	cmp	r2, r1
 8011d88:	d003      	beq.n	8011d92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 8011d8a:	f640 621d 	movw	r2, #3613	; 0xe1d
 8011d8e:	4293      	cmp	r3, r2
 8011d90:	d120      	bne.n	8011dd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 8011d92:	3b01      	subs	r3, #1
 8011d94:	4602      	mov	r2, r0
 8011d96:	b29b      	uxth	r3, r3
 8011d98:	4629      	mov	r1, r5
 8011d9a:	4620      	mov	r0, r4
 8011d9c:	f7ff ff43 	bl	8011c26 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011da0:	7b41      	ldrb	r1, [r0, #13]
 8011da2:	00cb      	lsls	r3, r1, #3
 8011da4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011da8:	7a03      	ldrb	r3, [r0, #8]
 8011daa:	0649      	lsls	r1, r1, #25
 8011dac:	ea43 0302 	orr.w	r3, r3, r2
 8011db0:	bf44      	itt	mi
 8011db2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011db6:	b21b      	sxthmi	r3, r3
 8011db8:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8011dbc:	7b6b      	ldrb	r3, [r5, #13]
 8011dbe:	7aaa      	ldrb	r2, [r5, #10]
 8011dc0:	005b      	lsls	r3, r3, #1
 8011dc2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011dc6:	4313      	orrs	r3, r2
 8011dc8:	115a      	asrs	r2, r3, #5
 8011dca:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011dce:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8011dd2:	e036      	b.n	8011e42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 8011dd4:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8011dd8:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8011ddc:	7a2a      	ldrb	r2, [r5, #8]
 8011dde:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8011de2:	ea42 0201 	orr.w	r2, r2, r1
 8011de6:	bf1c      	itt	ne
 8011de8:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8011dec:	b212      	sxthne	r2, r2
 8011dee:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 8011df2:	f640 6109 	movw	r1, #3593	; 0xe09
 8011df6:	f023 0210 	bic.w	r2, r3, #16
 8011dfa:	428a      	cmp	r2, r1
 8011dfc:	d003      	beq.n	8011e06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 8011dfe:	f640 6213 	movw	r2, #3603	; 0xe13
 8011e02:	4293      	cmp	r3, r2
 8011e04:	d12a      	bne.n	8011e5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 8011e06:	7b6e      	ldrb	r6, [r5, #13]
 8011e08:	0076      	lsls	r6, r6, #1
 8011e0a:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8011e0e:	7aae      	ldrb	r6, [r5, #10]
 8011e10:	4316      	orrs	r6, r2
 8011e12:	f640 6213 	movw	r2, #3603	; 0xe13
 8011e16:	4293      	cmp	r3, r2
 8011e18:	bf18      	it	ne
 8011e1a:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011e1e:	4602      	mov	r2, r0
 8011e20:	bf14      	ite	ne
 8011e22:	b29b      	uxthne	r3, r3
 8011e24:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8011e28:	4629      	mov	r1, r5
 8011e2a:	4620      	mov	r0, r4
 8011e2c:	f7ff fefb 	bl	8011c26 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011e30:	7b43      	ldrb	r3, [r0, #13]
 8011e32:	7a82      	ldrb	r2, [r0, #10]
 8011e34:	005b      	lsls	r3, r3, #1
 8011e36:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011e3a:	4313      	orrs	r3, r2
 8011e3c:	1af6      	subs	r6, r6, r3
 8011e3e:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 8011e42:	7b69      	ldrb	r1, [r5, #13]
 8011e44:	00cb      	lsls	r3, r1, #3
 8011e46:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011e4a:	7a2b      	ldrb	r3, [r5, #8]
 8011e4c:	4313      	orrs	r3, r2
 8011e4e:	064a      	lsls	r2, r1, #25
 8011e50:	bf44      	itt	mi
 8011e52:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011e56:	b21b      	sxthmi	r3, r3
 8011e58:	1bdb      	subs	r3, r3, r7
 8011e5a:	e73f      	b.n	8011cdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 8011e5c:	2300      	movs	r3, #0
 8011e5e:	e7b6      	b.n	8011dce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 8011e60:	3fc00079 	.word	0x3fc00079
 8011e64:	0802413c 	.word	0x0802413c
 8011e68:	0802632b 	.word	0x0802632b
 8011e6c:	0802420e 	.word	0x0802420e

08011e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8011e70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011e74:	4604      	mov	r4, r0
 8011e76:	b942      	cbnz	r2, 8011e8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8011e78:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8011e7c:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 8011e80:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 8011e84:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8011e88:	e046      	b.n	8011f18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8011e8a:	7b51      	ldrb	r1, [r2, #13]
 8011e8c:	8893      	ldrh	r3, [r2, #4]
 8011e8e:	010f      	lsls	r7, r1, #4
 8011e90:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011e94:	79d7      	ldrb	r7, [r2, #7]
 8011e96:	4307      	orrs	r7, r0
 8011e98:	2f04      	cmp	r7, #4
 8011e9a:	b2bd      	uxth	r5, r7
 8011e9c:	bfcc      	ite	gt
 8011e9e:	08bf      	lsrgt	r7, r7, #2
 8011ea0:	2701      	movle	r7, #1
 8011ea2:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8011ea6:	f200 80ab 	bhi.w	8012000 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 8011eaa:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8011eae:	4283      	cmp	r3, r0
 8011eb0:	d216      	bcs.n	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011eb2:	f240 605b 	movw	r0, #1627	; 0x65b
 8011eb6:	4283      	cmp	r3, r0
 8011eb8:	d859      	bhi.n	8011f6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 8011eba:	f240 6057 	movw	r0, #1623	; 0x657
 8011ebe:	4283      	cmp	r3, r0
 8011ec0:	d20e      	bcs.n	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011ec2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8011ec6:	d24a      	bcs.n	8011f5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 8011ec8:	f240 604e 	movw	r0, #1614	; 0x64e
 8011ecc:	4283      	cmp	r3, r0
 8011ece:	d207      	bcs.n	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011ed0:	f240 601a 	movw	r0, #1562	; 0x61a
 8011ed4:	4283      	cmp	r3, r0
 8011ed6:	d02a      	beq.n	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8011ed8:	d821      	bhi.n	8011f1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 8011eda:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8011ede:	d35b      	bcc.n	8011f98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011ee0:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 8011ee4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011ee8:	f040 80d0 	bne.w	801208c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8011eec:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 8011ef0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011ef4:	f040 80ca 	bne.w	801208c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8011ef8:	00cb      	lsls	r3, r1, #3
 8011efa:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011efe:	7a13      	ldrb	r3, [r2, #8]
 8011f00:	0649      	lsls	r1, r1, #25
 8011f02:	ea43 0300 	orr.w	r3, r3, r0
 8011f06:	bf44      	itt	mi
 8011f08:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011f0c:	b21b      	sxthmi	r3, r3
 8011f0e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8011f12:	1b5d      	subs	r5, r3, r5
 8011f14:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 8011f18:	4610      	mov	r0, r2
 8011f1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011f1e:	f240 604b 	movw	r0, #1611	; 0x64b
 8011f22:	4283      	cmp	r3, r0
 8011f24:	d338      	bcc.n	8011f98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011f26:	f240 604c 	movw	r0, #1612	; 0x64c
 8011f2a:	4283      	cmp	r3, r0
 8011f2c:	d9d8      	bls.n	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011f2e:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 8011f32:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 8011f36:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011f3a:	f040 80f1 	bne.w	8012120 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 8011f3e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011f42:	f040 80ed 	bne.w	8012120 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 8011f46:	00cb      	lsls	r3, r1, #3
 8011f48:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011f4c:	7a13      	ldrb	r3, [r2, #8]
 8011f4e:	064e      	lsls	r6, r1, #25
 8011f50:	ea43 0300 	orr.w	r3, r3, r0
 8011f54:	bf44      	itt	mi
 8011f56:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011f5a:	b21b      	sxthmi	r3, r3
 8011f5c:	e7d9      	b.n	8011f12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 8011f5e:	f240 6054 	movw	r0, #1620	; 0x654
 8011f62:	4283      	cmp	r3, r0
 8011f64:	d8e3      	bhi.n	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8011f66:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8011f6a:	d9e0      	bls.n	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8011f6c:	e7b8      	b.n	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011f6e:	f240 6074 	movw	r0, #1652	; 0x674
 8011f72:	4283      	cmp	r3, r0
 8011f74:	d0b4      	beq.n	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011f76:	d82d      	bhi.n	8011fd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 8011f78:	f240 605e 	movw	r0, #1630	; 0x65e
 8011f7c:	4283      	cmp	r3, r0
 8011f7e:	d804      	bhi.n	8011f8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 8011f80:	f240 605d 	movw	r0, #1629	; 0x65d
 8011f84:	4283      	cmp	r3, r0
 8011f86:	d3d2      	bcc.n	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8011f88:	e7aa      	b.n	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011f8a:	f240 605f 	movw	r0, #1631	; 0x65f
 8011f8e:	4283      	cmp	r3, r0
 8011f90:	d0cd      	beq.n	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8011f92:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8011f96:	d0a3      	beq.n	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011f98:	00cb      	lsls	r3, r1, #3
 8011f9a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011f9e:	7a13      	ldrb	r3, [r2, #8]
 8011fa0:	0649      	lsls	r1, r1, #25
 8011fa2:	ea43 0300 	orr.w	r3, r3, r0
 8011fa6:	bf44      	itt	mi
 8011fa8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011fac:	b21b      	sxthmi	r3, r3
 8011fae:	1b5d      	subs	r5, r3, r5
 8011fb0:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8011fb4:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 8011fb8:	7b53      	ldrb	r3, [r2, #13]
 8011fba:	015b      	lsls	r3, r3, #5
 8011fbc:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011fc0:	7993      	ldrb	r3, [r2, #6]
 8011fc2:	430b      	orrs	r3, r1
 8011fc4:	005b      	lsls	r3, r3, #1
 8011fc6:	2105      	movs	r1, #5
 8011fc8:	fb93 f3f1 	sdiv	r3, r3, r1
 8011fcc:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011fd0:	440b      	add	r3, r1
 8011fd2:	e757      	b.n	8011e84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011fd4:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8011fd8:	4283      	cmp	r3, r0
 8011fda:	d809      	bhi.n	8011ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 8011fdc:	f240 60df 	movw	r0, #1759	; 0x6df
 8011fe0:	4283      	cmp	r3, r0
 8011fe2:	f4bf af7d 	bcs.w	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011fe6:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8011fea:	2b05      	cmp	r3, #5
 8011fec:	d8d4      	bhi.n	8011f98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011fee:	e777      	b.n	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011ff0:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8011ff4:	4283      	cmp	r3, r0
 8011ff6:	d09a      	beq.n	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8011ff8:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8011ffc:	4283      	cmp	r3, r0
 8011ffe:	e7ca      	b.n	8011f96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 8012000:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012004:	d22b      	bcs.n	801205e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 8012006:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801200a:	4283      	cmp	r3, r0
 801200c:	d28f      	bcs.n	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801200e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012012:	4283      	cmp	r3, r0
 8012014:	d816      	bhi.n	8012044 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 8012016:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801201a:	4283      	cmp	r3, r0
 801201c:	f4bf af60 	bcs.w	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012020:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012024:	4283      	cmp	r3, r0
 8012026:	d80a      	bhi.n	801203e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 8012028:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801202c:	4283      	cmp	r3, r0
 801202e:	f4bf af57 	bcs.w	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012032:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012036:	4283      	cmp	r3, r0
 8012038:	f43f af79 	beq.w	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801203c:	e7ac      	b.n	8011f98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801203e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012042:	e7f8      	b.n	8012036 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 8012044:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8012048:	4283      	cmp	r3, r0
 801204a:	d802      	bhi.n	8012052 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 801204c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8012050:	e798      	b.n	8011f84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 8012052:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8012056:	4283      	cmp	r3, r0
 8012058:	f47f af42 	bne.w	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801205c:	e767      	b.n	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801205e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8012062:	4283      	cmp	r3, r0
 8012064:	f43f af63 	beq.w	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8012068:	d802      	bhi.n	8012070 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 801206a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801206e:	e7f2      	b.n	8012056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 8012070:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012074:	4283      	cmp	r3, r0
 8012076:	d805      	bhi.n	8012084 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 8012078:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801207c:	4283      	cmp	r3, r0
 801207e:	f4ff af2f 	bcc.w	8011ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8012082:	e754      	b.n	8011f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8012084:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8012088:	4283      	cmp	r3, r0
 801208a:	e7af      	b.n	8011fec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 801208c:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8012090:	4617      	mov	r7, r2
 8012092:	f102 0808 	add.w	r8, r2, #8
 8012096:	4666      	mov	r6, ip
 8012098:	6838      	ldr	r0, [r7, #0]
 801209a:	6879      	ldr	r1, [r7, #4]
 801209c:	46e6      	mov	lr, ip
 801209e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80120a2:	3708      	adds	r7, #8
 80120a4:	4547      	cmp	r7, r8
 80120a6:	46f4      	mov	ip, lr
 80120a8:	d1f6      	bne.n	8012098 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 80120aa:	6838      	ldr	r0, [r7, #0]
 80120ac:	f8ce 0000 	str.w	r0, [lr]
 80120b0:	88b9      	ldrh	r1, [r7, #4]
 80120b2:	f8ae 1004 	strh.w	r1, [lr, #4]
 80120b6:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 80120ba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80120be:	d009      	beq.n	80120d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 80120c0:	7b51      	ldrb	r1, [r2, #13]
 80120c2:	7992      	ldrb	r2, [r2, #6]
 80120c4:	0149      	lsls	r1, r1, #5
 80120c6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80120ca:	4311      	orrs	r1, r2
 80120cc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80120d0:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 80120d4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80120d8:	d00d      	beq.n	80120f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 80120da:	442b      	add	r3, r5
 80120dc:	b29b      	uxth	r3, r3
 80120de:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 80120e2:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 80120e6:	10db      	asrs	r3, r3, #3
 80120e8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80120ec:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80120f0:	4313      	orrs	r3, r2
 80120f2:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 80120f6:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 80120fa:	00cb      	lsls	r3, r1, #3
 80120fc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012100:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8012104:	064f      	lsls	r7, r1, #25
 8012106:	ea43 0302 	orr.w	r3, r3, r2
 801210a:	bf44      	itt	mi
 801210c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012110:	b21b      	sxthmi	r3, r3
 8012112:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8012116:	1b5d      	subs	r5, r3, r5
 8012118:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 801211c:	4632      	mov	r2, r6
 801211e:	e6fb      	b.n	8011f18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8012120:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 8012124:	4694      	mov	ip, r2
 8012126:	f102 0908 	add.w	r9, r2, #8
 801212a:	4676      	mov	r6, lr
 801212c:	f8dc 0000 	ldr.w	r0, [ip]
 8012130:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8012134:	46f0      	mov	r8, lr
 8012136:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801213a:	f10c 0c08 	add.w	ip, ip, #8
 801213e:	45cc      	cmp	ip, r9
 8012140:	46c6      	mov	lr, r8
 8012142:	d1f3      	bne.n	801212c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 8012144:	f8dc 0000 	ldr.w	r0, [ip]
 8012148:	f8c8 0000 	str.w	r0, [r8]
 801214c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 8012150:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012154:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 8012158:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801215c:	d009      	beq.n	8012172 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 801215e:	7b51      	ldrb	r1, [r2, #13]
 8012160:	7992      	ldrb	r2, [r2, #6]
 8012162:	0149      	lsls	r1, r1, #5
 8012164:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012168:	4311      	orrs	r1, r2
 801216a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801216e:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 8012172:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012176:	d00d      	beq.n	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8012178:	1bdb      	subs	r3, r3, r7
 801217a:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 801217e:	b29b      	uxth	r3, r3
 8012180:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 8012184:	10db      	asrs	r3, r3, #3
 8012186:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801218a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801218e:	4313      	orrs	r3, r2
 8012190:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 8012194:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 8012198:	00cb      	lsls	r3, r1, #3
 801219a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801219e:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 80121a2:	0648      	lsls	r0, r1, #25
 80121a4:	ea43 0302 	orr.w	r3, r3, r2
 80121a8:	bf44      	itt	mi
 80121aa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80121ae:	b21b      	sxthmi	r3, r3
 80121b0:	e7b1      	b.n	8012116 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

080121b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80121b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121b8:	461e      	mov	r6, r3
 80121ba:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80121bc:	4604      	mov	r4, r0
 80121be:	4617      	mov	r7, r2
 80121c0:	b92b      	cbnz	r3, 80121ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 80121c2:	4b25      	ldr	r3, [pc, #148]	; (8012258 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 80121c4:	4a25      	ldr	r2, [pc, #148]	; (801225c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 80121c6:	4826      	ldr	r0, [pc, #152]	; (8012260 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 80121c8:	21c0      	movs	r1, #192	; 0xc0
 80121ca:	f00f ffa1 	bl	8022110 <__assert_func>
 80121ce:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80121d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80121d4:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 80121d8:	f7f2 f84e 	bl	8004278 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80121dc:	4605      	mov	r5, r0
 80121de:	b918      	cbnz	r0, 80121e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 80121e0:	6030      	str	r0, [r6, #0]
 80121e2:	4628      	mov	r0, r5
 80121e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80121e8:	683b      	ldr	r3, [r7, #0]
 80121ea:	4601      	mov	r1, r0
 80121ec:	68db      	ldr	r3, [r3, #12]
 80121ee:	4638      	mov	r0, r7
 80121f0:	4798      	blx	r3
 80121f2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80121f6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80121fa:	4602      	mov	r2, r0
 80121fc:	6030      	str	r0, [r6, #0]
 80121fe:	d213      	bcs.n	8012228 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 8012200:	4643      	mov	r3, r8
 8012202:	4639      	mov	r1, r7
 8012204:	4620      	mov	r0, r4
 8012206:	f7ff fe33 	bl	8011e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801220a:	6030      	str	r0, [r6, #0]
 801220c:	6833      	ldr	r3, [r6, #0]
 801220e:	b143      	cbz	r3, 8012222 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 8012210:	7b5a      	ldrb	r2, [r3, #13]
 8012212:	7a9b      	ldrb	r3, [r3, #10]
 8012214:	0052      	lsls	r2, r2, #1
 8012216:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801221a:	4313      	orrs	r3, r2
 801221c:	bf0c      	ite	eq
 801221e:	2301      	moveq	r3, #1
 8012220:	2300      	movne	r3, #0
 8012222:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012226:	e7dc      	b.n	80121e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 8012228:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801222c:	b29b      	uxth	r3, r3
 801222e:	2b7f      	cmp	r3, #127	; 0x7f
 8012230:	d804      	bhi.n	801223c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 8012232:	4639      	mov	r1, r7
 8012234:	4620      	mov	r0, r4
 8012236:	f7ff fd01 	bl	8011c3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801223a:	e7e6      	b.n	801220a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801223c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012240:	2b00      	cmp	r3, #0
 8012242:	d0e3      	beq.n	801220c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8012244:	f640 1302 	movw	r3, #2306	; 0x902
 8012248:	429d      	cmp	r5, r3
 801224a:	d1df      	bne.n	801220c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801224c:	4601      	mov	r1, r0
 801224e:	4620      	mov	r0, r4
 8012250:	f7ff fcc6 	bl	8011be0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012254:	e7d9      	b.n	801220a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 8012256:	bf00      	nop
 8012258:	0802413c 	.word	0x0802413c
 801225c:	0802632b 	.word	0x0802632b
 8012260:	0802420e 	.word	0x0802420e

08012264 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8012264:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012268:	461e      	mov	r6, r3
 801226a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801226c:	4604      	mov	r4, r0
 801226e:	4617      	mov	r7, r2
 8012270:	b92b      	cbnz	r3, 801227e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 8012272:	4b26      	ldr	r3, [pc, #152]	; (801230c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 8012274:	4a26      	ldr	r2, [pc, #152]	; (8012310 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 8012276:	4827      	ldr	r0, [pc, #156]	; (8012314 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 8012278:	21c0      	movs	r1, #192	; 0xc0
 801227a:	f00f ff49 	bl	8022110 <__assert_func>
 801227e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8012280:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012284:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 8012288:	f7f1 fff6 	bl	8004278 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801228c:	4605      	mov	r5, r0
 801228e:	b918      	cbnz	r0, 8012298 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 8012290:	6030      	str	r0, [r6, #0]
 8012292:	4628      	mov	r0, r5
 8012294:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012298:	683b      	ldr	r3, [r7, #0]
 801229a:	4601      	mov	r1, r0
 801229c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80122a0:	4638      	mov	r0, r7
 80122a2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80122a6:	47c8      	blx	r9
 80122a8:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80122ac:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80122b0:	4602      	mov	r2, r0
 80122b2:	6030      	str	r0, [r6, #0]
 80122b4:	d213      	bcs.n	80122de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 80122b6:	4643      	mov	r3, r8
 80122b8:	4639      	mov	r1, r7
 80122ba:	4620      	mov	r0, r4
 80122bc:	f7ff fdd8 	bl	8011e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80122c0:	6030      	str	r0, [r6, #0]
 80122c2:	6833      	ldr	r3, [r6, #0]
 80122c4:	b143      	cbz	r3, 80122d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 80122c6:	7b5a      	ldrb	r2, [r3, #13]
 80122c8:	7a9b      	ldrb	r3, [r3, #10]
 80122ca:	0052      	lsls	r2, r2, #1
 80122cc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80122d0:	4313      	orrs	r3, r2
 80122d2:	bf0c      	ite	eq
 80122d4:	2301      	moveq	r3, #1
 80122d6:	2300      	movne	r3, #0
 80122d8:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80122dc:	e7d9      	b.n	8012292 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 80122de:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80122e2:	b29b      	uxth	r3, r3
 80122e4:	2b7f      	cmp	r3, #127	; 0x7f
 80122e6:	d804      	bhi.n	80122f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 80122e8:	4639      	mov	r1, r7
 80122ea:	4620      	mov	r0, r4
 80122ec:	f7ff fca6 	bl	8011c3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80122f0:	e7e6      	b.n	80122c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 80122f2:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80122f6:	2b00      	cmp	r3, #0
 80122f8:	d0e3      	beq.n	80122c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 80122fa:	f640 1302 	movw	r3, #2306	; 0x902
 80122fe:	429d      	cmp	r5, r3
 8012300:	d1df      	bne.n	80122c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8012302:	4601      	mov	r1, r0
 8012304:	4620      	mov	r0, r4
 8012306:	f7ff fc6b 	bl	8011be0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801230a:	e7d9      	b.n	80122c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801230c:	0802413c 	.word	0x0802413c
 8012310:	0802632b 	.word	0x0802632b
 8012314:	0802420e 	.word	0x0802420e

08012318 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012318:	b510      	push	{r4, lr}
 801231a:	4604      	mov	r4, r0
 801231c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 801231e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8012320:	b9d9      	cbnz	r1, 801235a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 8012322:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8012324:	2b0a      	cmp	r3, #10
 8012326:	d036      	beq.n	8012396 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 8012328:	4620      	mov	r0, r4
 801232a:	f7ff fc22 	bl	8011b72 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801232e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8012330:	2b09      	cmp	r3, #9
 8012332:	d906      	bls.n	8012342 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 8012334:	4b18      	ldr	r3, [pc, #96]	; (8012398 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 8012336:	4a19      	ldr	r2, [pc, #100]	; (801239c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 8012338:	4819      	ldr	r0, [pc, #100]	; (80123a0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 801233a:	f44f 7182 	mov.w	r1, #260	; 0x104
 801233e:	f00f fee7 	bl	8022110 <__assert_func>
 8012342:	1c5a      	adds	r2, r3, #1
 8012344:	8622      	strh	r2, [r4, #48]	; 0x30
 8012346:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8012348:	4413      	add	r3, r2
 801234a:	b29b      	uxth	r3, r3
 801234c:	2b09      	cmp	r3, #9
 801234e:	bf88      	it	hi
 8012350:	3b0a      	subhi	r3, #10
 8012352:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012356:	8358      	strh	r0, [r3, #26]
 8012358:	e7e3      	b.n	8012322 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 801235a:	2b0a      	cmp	r3, #10
 801235c:	d01b      	beq.n	8012396 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 801235e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012360:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012364:	3901      	subs	r1, #1
 8012366:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 8012368:	8721      	strh	r1, [r4, #56]	; 0x38
 801236a:	1c51      	adds	r1, r2, #1
 801236c:	b289      	uxth	r1, r1
 801236e:	2901      	cmp	r1, #1
 8012370:	bf8a      	itet	hi
 8012372:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012376:	86e1      	strhls	r1, [r4, #54]	; 0x36
 8012378:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 801237a:	2b09      	cmp	r3, #9
 801237c:	d8da      	bhi.n	8012334 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 801237e:	1c5a      	adds	r2, r3, #1
 8012380:	8622      	strh	r2, [r4, #48]	; 0x30
 8012382:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8012384:	4413      	add	r3, r2
 8012386:	b29b      	uxth	r3, r3
 8012388:	2b09      	cmp	r3, #9
 801238a:	bf88      	it	hi
 801238c:	3b0a      	subhi	r3, #10
 801238e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012392:	8358      	strh	r0, [r3, #26]
 8012394:	e7c2      	b.n	801231c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012396:	bd10      	pop	{r4, pc}
 8012398:	080260fc 	.word	0x080260fc
 801239c:	08026481 	.word	0x08026481
 80123a0:	0802420e 	.word	0x0802420e

080123a4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80123a4:	b538      	push	{r3, r4, r5, lr}
 80123a6:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 80123a8:	4604      	mov	r4, r0
 80123aa:	b92a      	cbnz	r2, 80123b8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 80123ac:	4b13      	ldr	r3, [pc, #76]	; (80123fc <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 80123ae:	4a14      	ldr	r2, [pc, #80]	; (8012400 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 80123b0:	4814      	ldr	r0, [pc, #80]	; (8012404 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 80123b2:	21d5      	movs	r1, #213	; 0xd5
 80123b4:	f00f feac 	bl	8022110 <__assert_func>
 80123b8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80123ba:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 80123be:	3a01      	subs	r2, #1
 80123c0:	8b4d      	ldrh	r5, [r1, #26]
 80123c2:	8602      	strh	r2, [r0, #48]	; 0x30
 80123c4:	1c5a      	adds	r2, r3, #1
 80123c6:	b292      	uxth	r2, r2
 80123c8:	2a09      	cmp	r2, #9
 80123ca:	bf86      	itte	hi
 80123cc:	3b09      	subhi	r3, #9
 80123ce:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 80123d0:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 80123d2:	f7ff ffa1 	bl	8012318 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80123d6:	8b23      	ldrh	r3, [r4, #24]
 80123d8:	2b01      	cmp	r3, #1
 80123da:	bf9c      	itt	ls
 80123dc:	3301      	addls	r3, #1
 80123de:	8323      	strhls	r3, [r4, #24]
 80123e0:	8ae3      	ldrh	r3, [r4, #22]
 80123e2:	b90b      	cbnz	r3, 80123e8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 80123e4:	2302      	movs	r3, #2
 80123e6:	82e3      	strh	r3, [r4, #22]
 80123e8:	8ae3      	ldrh	r3, [r4, #22]
 80123ea:	3b01      	subs	r3, #1
 80123ec:	b29b      	uxth	r3, r3
 80123ee:	82e3      	strh	r3, [r4, #22]
 80123f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80123f4:	4628      	mov	r0, r5
 80123f6:	8265      	strh	r5, [r4, #18]
 80123f8:	bd38      	pop	{r3, r4, r5, pc}
 80123fa:	bf00      	nop
 80123fc:	0802413c 	.word	0x0802413c
 8012400:	080263d6 	.word	0x080263d6
 8012404:	0802420e 	.word	0x0802420e

08012408 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012408:	b538      	push	{r3, r4, r5, lr}
 801240a:	428a      	cmp	r2, r1
 801240c:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 801240e:	d90c      	bls.n	801242a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8012410:	b92c      	cbnz	r4, 801241e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 8012412:	4b1c      	ldr	r3, [pc, #112]	; (8012484 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8012414:	4a1c      	ldr	r2, [pc, #112]	; (8012488 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 8012416:	21e1      	movs	r1, #225	; 0xe1
 8012418:	481c      	ldr	r0, [pc, #112]	; (801248c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 801241a:	f00f fe79 	bl	8022110 <__assert_func>
 801241e:	3c01      	subs	r4, #1
 8012420:	8604      	strh	r4, [r0, #48]	; 0x30
 8012422:	4b1b      	ldr	r3, [pc, #108]	; (8012490 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8012424:	4a1b      	ldr	r2, [pc, #108]	; (8012494 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 8012426:	21c5      	movs	r1, #197	; 0xc5
 8012428:	e7f6      	b.n	8012418 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801242a:	428c      	cmp	r4, r1
 801242c:	d203      	bcs.n	8012436 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 801242e:	4b1a      	ldr	r3, [pc, #104]	; (8012498 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8012430:	4a1a      	ldr	r2, [pc, #104]	; (801249c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8012432:	21cb      	movs	r1, #203	; 0xcb
 8012434:	e7f0      	b.n	8012418 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8012436:	1a64      	subs	r4, r4, r1
 8012438:	8604      	strh	r4, [r0, #48]	; 0x30
 801243a:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 801243c:	4421      	add	r1, r4
 801243e:	b289      	uxth	r1, r1
 8012440:	2909      	cmp	r1, #9
 8012442:	bf88      	it	hi
 8012444:	390a      	subhi	r1, #10
 8012446:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012448:	250a      	movs	r5, #10
 801244a:	b1ba      	cbz	r2, 801247c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 801244c:	3a01      	subs	r2, #1
 801244e:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 8012450:	b292      	uxth	r2, r2
 8012452:	2909      	cmp	r1, #9
 8012454:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012458:	d903      	bls.n	8012462 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 801245a:	4b11      	ldr	r3, [pc, #68]	; (80124a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 801245c:	4a11      	ldr	r2, [pc, #68]	; (80124a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 801245e:	21e6      	movs	r1, #230	; 0xe6
 8012460:	e7da      	b.n	8012418 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8012462:	3101      	adds	r1, #1
 8012464:	8601      	strh	r1, [r0, #48]	; 0x30
 8012466:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 8012468:	b901      	cbnz	r1, 801246c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 801246a:	85c5      	strh	r5, [r0, #46]	; 0x2e
 801246c:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 801246e:	3901      	subs	r1, #1
 8012470:	b289      	uxth	r1, r1
 8012472:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012474:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012478:	834c      	strh	r4, [r1, #26]
 801247a:	e7e6      	b.n	801244a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 801247c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012480:	f7ff bf4a 	b.w	8012318 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012484:	0802413c 	.word	0x0802413c
 8012488:	080261af 	.word	0x080261af
 801248c:	0802420e 	.word	0x0802420e
 8012490:	0802423a 	.word	0x0802423a
 8012494:	08026259 	.word	0x08026259
 8012498:	08026108 	.word	0x08026108
 801249c:	08026530 	.word	0x08026530
 80124a0:	08026114 	.word	0x08026114
 80124a4:	08026127 	.word	0x08026127

080124a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80124a8:	3a01      	subs	r2, #1
 80124aa:	b570      	push	{r4, r5, r6, lr}
 80124ac:	b292      	uxth	r2, r2
 80124ae:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80124b2:	42b2      	cmp	r2, r6
 80124b4:	d019      	beq.n	80124ea <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 80124b6:	8b04      	ldrh	r4, [r0, #24]
 80124b8:	f831 5b02 	ldrh.w	r5, [r1], #2
 80124bc:	4294      	cmp	r4, r2
 80124be:	d805      	bhi.n	80124cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 80124c0:	4b19      	ldr	r3, [pc, #100]	; (8012528 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 80124c2:	4a1a      	ldr	r2, [pc, #104]	; (801252c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 80124c4:	481a      	ldr	r0, [pc, #104]	; (8012530 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 80124c6:	21c5      	movs	r1, #197	; 0xc5
 80124c8:	f00f fe22 	bl	8022110 <__assert_func>
 80124cc:	8ac4      	ldrh	r4, [r0, #22]
 80124ce:	4414      	add	r4, r2
 80124d0:	b2a4      	uxth	r4, r4
 80124d2:	2c01      	cmp	r4, #1
 80124d4:	bf88      	it	hi
 80124d6:	3c02      	subhi	r4, #2
 80124d8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80124dc:	3a01      	subs	r2, #1
 80124de:	8a64      	ldrh	r4, [r4, #18]
 80124e0:	42ac      	cmp	r4, r5
 80124e2:	b292      	uxth	r2, r2
 80124e4:	d0e5      	beq.n	80124b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 80124e6:	2000      	movs	r0, #0
 80124e8:	bd70      	pop	{r4, r5, r6, pc}
 80124ea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80124ee:	2400      	movs	r4, #0
 80124f0:	4413      	add	r3, r2
 80124f2:	b2a2      	uxth	r2, r4
 80124f4:	429a      	cmp	r2, r3
 80124f6:	da14      	bge.n	8012522 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 80124f8:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 80124fa:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80124fe:	4296      	cmp	r6, r2
 8012500:	d802      	bhi.n	8012508 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 8012502:	4b09      	ldr	r3, [pc, #36]	; (8012528 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8012504:	4a0b      	ldr	r2, [pc, #44]	; (8012534 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 8012506:	e7dd      	b.n	80124c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 8012508:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 801250a:	4432      	add	r2, r6
 801250c:	b292      	uxth	r2, r2
 801250e:	2a09      	cmp	r2, #9
 8012510:	bf88      	it	hi
 8012512:	3a0a      	subhi	r2, #10
 8012514:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012518:	3401      	adds	r4, #1
 801251a:	8b52      	ldrh	r2, [r2, #26]
 801251c:	42aa      	cmp	r2, r5
 801251e:	d0e8      	beq.n	80124f2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8012520:	e7e1      	b.n	80124e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8012522:	2001      	movs	r0, #1
 8012524:	e7e0      	b.n	80124e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 8012526:	bf00      	nop
 8012528:	0802423a 	.word	0x0802423a
 801252c:	080265b4 	.word	0x080265b4
 8012530:	0802420e 	.word	0x0802420e
 8012534:	08026259 	.word	0x08026259

08012538 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012538:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801253c:	4605      	mov	r5, r0
 801253e:	4616      	mov	r6, r2
 8012540:	1c8c      	adds	r4, r1, #2
 8012542:	8809      	ldrh	r1, [r1, #0]
 8012544:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012548:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801254c:	42b3      	cmp	r3, r6
 801254e:	d124      	bne.n	801259a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012550:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012554:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012558:	f001 070f 	and.w	r7, r1, #15
 801255c:	f8cd 8000 	str.w	r8, [sp]
 8012560:	464b      	mov	r3, r9
 8012562:	4652      	mov	r2, sl
 8012564:	4621      	mov	r1, r4
 8012566:	4628      	mov	r0, r5
 8012568:	f7ff ff9e 	bl	80124a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801256c:	4683      	mov	fp, r0
 801256e:	b168      	cbz	r0, 801258c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012570:	eb0a 0109 	add.w	r1, sl, r9
 8012574:	4441      	add	r1, r8
 8012576:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801257a:	463a      	mov	r2, r7
 801257c:	4649      	mov	r1, r9
 801257e:	4628      	mov	r0, r5
 8012580:	f7ff ff42 	bl	8012408 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012584:	4658      	mov	r0, fp
 8012586:	b003      	add	sp, #12
 8012588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801258c:	eb07 010a 	add.w	r1, r7, sl
 8012590:	4449      	add	r1, r9
 8012592:	4441      	add	r1, r8
 8012594:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012598:	e7d2      	b.n	8012540 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801259a:	f04f 0b00 	mov.w	fp, #0
 801259e:	e7f1      	b.n	8012584 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080125a0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80125a0:	b570      	push	{r4, r5, r6, lr}
 80125a2:	8810      	ldrh	r0, [r2, #0]
 80125a4:	4298      	cmp	r0, r3
 80125a6:	d817      	bhi.n	80125d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80125a8:	1e48      	subs	r0, r1, #1
 80125aa:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80125ae:	4298      	cmp	r0, r3
 80125b0:	d312      	bcc.n	80125d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80125b2:	2400      	movs	r4, #0
 80125b4:	428c      	cmp	r4, r1
 80125b6:	d20f      	bcs.n	80125d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80125b8:	1860      	adds	r0, r4, r1
 80125ba:	1040      	asrs	r0, r0, #1
 80125bc:	0085      	lsls	r5, r0, #2
 80125be:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80125c2:	42b3      	cmp	r3, r6
 80125c4:	d902      	bls.n	80125cc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80125c6:	3001      	adds	r0, #1
 80125c8:	b284      	uxth	r4, r0
 80125ca:	e7f3      	b.n	80125b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80125cc:	d201      	bcs.n	80125d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80125ce:	b281      	uxth	r1, r0
 80125d0:	e7f0      	b.n	80125b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80125d2:	442a      	add	r2, r5
 80125d4:	8850      	ldrh	r0, [r2, #2]
 80125d6:	bd70      	pop	{r4, r5, r6, pc}
 80125d8:	2000      	movs	r0, #0
 80125da:	e7fc      	b.n	80125d6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080125dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80125dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125e0:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 80125e2:	886f      	ldrh	r7, [r5, #2]
 80125e4:	4604      	mov	r4, r0
 80125e6:	087f      	lsrs	r7, r7, #1
 80125e8:	260b      	movs	r6, #11
 80125ea:	3e01      	subs	r6, #1
 80125ec:	d01b      	beq.n	8012626 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80125ee:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80125f0:	b92b      	cbnz	r3, 80125fe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 80125f2:	4b0e      	ldr	r3, [pc, #56]	; (801262c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 80125f4:	4a0e      	ldr	r2, [pc, #56]	; (8012630 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 80125f6:	480f      	ldr	r0, [pc, #60]	; (8012634 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 80125f8:	21c0      	movs	r1, #192	; 0xc0
 80125fa:	f00f fd89 	bl	8022110 <__assert_func>
 80125fe:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8012600:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012604:	462a      	mov	r2, r5
 8012606:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 801260a:	4639      	mov	r1, r7
 801260c:	4643      	mov	r3, r8
 801260e:	4620      	mov	r0, r4
 8012610:	f7ff ffc6 	bl	80125a0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012614:	b138      	cbz	r0, 8012626 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8012616:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801261a:	4642      	mov	r2, r8
 801261c:	4620      	mov	r0, r4
 801261e:	f7ff ff8b 	bl	8012538 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012622:	2800      	cmp	r0, #0
 8012624:	d1e1      	bne.n	80125ea <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012626:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801262a:	bf00      	nop
 801262c:	0802413c 	.word	0x0802413c
 8012630:	0802632b 	.word	0x0802632b
 8012634:	0802420e 	.word	0x0802420e

08012638 <_ZN8touchgfx8ceil28_4El>:
 8012638:	f110 030f 	adds.w	r3, r0, #15
 801263c:	d401      	bmi.n	8012642 <_ZN8touchgfx8ceil28_4El+0xa>
 801263e:	1118      	asrs	r0, r3, #4
 8012640:	4770      	bx	lr
 8012642:	f1c0 0001 	rsb	r0, r0, #1
 8012646:	f010 000f 	ands.w	r0, r0, #15
 801264a:	bf18      	it	ne
 801264c:	2001      	movne	r0, #1
 801264e:	2210      	movs	r2, #16
 8012650:	fb93 f3f2 	sdiv	r3, r3, r2
 8012654:	1a18      	subs	r0, r3, r0
 8012656:	4770      	bx	lr

08012658 <_ZN8touchgfx11floorDivModEllRlS0_>:
 8012658:	2900      	cmp	r1, #0
 801265a:	b538      	push	{r3, r4, r5, lr}
 801265c:	dc05      	bgt.n	801266a <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 801265e:	4b0f      	ldr	r3, [pc, #60]	; (801269c <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 8012660:	4a0f      	ldr	r2, [pc, #60]	; (80126a0 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 8012662:	4810      	ldr	r0, [pc, #64]	; (80126a4 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 8012664:	21fa      	movs	r1, #250	; 0xfa
 8012666:	f00f fd53 	bl	8022110 <__assert_func>
 801266a:	2800      	cmp	r0, #0
 801266c:	db06      	blt.n	801267c <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 801266e:	fb90 f4f1 	sdiv	r4, r0, r1
 8012672:	6014      	str	r4, [r2, #0]
 8012674:	fb01 0114 	mls	r1, r1, r4, r0
 8012678:	6019      	str	r1, [r3, #0]
 801267a:	bd38      	pop	{r3, r4, r5, pc}
 801267c:	4240      	negs	r0, r0
 801267e:	fb90 f4f1 	sdiv	r4, r0, r1
 8012682:	4265      	negs	r5, r4
 8012684:	fb01 0014 	mls	r0, r1, r4, r0
 8012688:	6015      	str	r5, [r2, #0]
 801268a:	6018      	str	r0, [r3, #0]
 801268c:	2800      	cmp	r0, #0
 801268e:	d0f4      	beq.n	801267a <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 8012690:	6810      	ldr	r0, [r2, #0]
 8012692:	3801      	subs	r0, #1
 8012694:	6010      	str	r0, [r2, #0]
 8012696:	6818      	ldr	r0, [r3, #0]
 8012698:	1a09      	subs	r1, r1, r0
 801269a:	e7ed      	b.n	8012678 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 801269c:	08026685 	.word	0x08026685
 80126a0:	080266c4 	.word	0x080266c4
 80126a4:	08026695 	.word	0x08026695

080126a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80126a8:	b570      	push	{r4, r5, r6, lr}
 80126aa:	694a      	ldr	r2, [r1, #20]
 80126ac:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80126ae:	684b      	ldr	r3, [r1, #4]
 80126b0:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80126b2:	1b54      	subs	r4, r2, r5
 80126b4:	f000 8106 	beq.w	80128c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80126b8:	1b9b      	subs	r3, r3, r6
 80126ba:	d003      	beq.n	80126c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80126bc:	4363      	muls	r3, r4
 80126be:	2210      	movs	r2, #16
 80126c0:	fb93 f3f2 	sdiv	r3, r3, r2
 80126c4:	680c      	ldr	r4, [r1, #0]
 80126c6:	698a      	ldr	r2, [r1, #24]
 80126c8:	1b65      	subs	r5, r4, r5
 80126ca:	f000 80fd 	beq.w	80128c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80126ce:	1b92      	subs	r2, r2, r6
 80126d0:	d003      	beq.n	80126da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80126d2:	436a      	muls	r2, r5
 80126d4:	2410      	movs	r4, #16
 80126d6:	fb92 f2f4 	sdiv	r2, r2, r4
 80126da:	1a9b      	subs	r3, r3, r2
 80126dc:	ee07 3a90 	vmov	s15, r3
 80126e0:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8012904 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80126e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80126e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80126ec:	ee67 7a84 	vmul.f32	s15, s15, s8
 80126f0:	460a      	mov	r2, r1
 80126f2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80126f6:	4603      	mov	r3, r0
 80126f8:	f100 040c 	add.w	r4, r0, #12
 80126fc:	eeb1 6a43 	vneg.f32	s12, s6
 8012700:	edd2 7a02 	vldr	s15, [r2, #8]
 8012704:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012708:	3214      	adds	r2, #20
 801270a:	ece3 6a01 	vstmia	r3!, {s13}
 801270e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012712:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012716:	429c      	cmp	r4, r3
 8012718:	edc3 7a02 	vstr	s15, [r3, #8]
 801271c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012720:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012724:	edc3 7a05 	vstr	s15, [r3, #20]
 8012728:	d1ea      	bne.n	8012700 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801272a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801272c:	698b      	ldr	r3, [r1, #24]
 801272e:	edd0 4a02 	vldr	s9, [r0, #8]
 8012732:	edd0 3a00 	vldr	s7, [r0]
 8012736:	edd0 6a01 	vldr	s13, [r0, #4]
 801273a:	ed90 5a05 	vldr	s10, [r0, #20]
 801273e:	ed90 2a03 	vldr	s4, [r0, #12]
 8012742:	edd0 5a04 	vldr	s11, [r0, #16]
 8012746:	ed90 1a07 	vldr	s2, [r0, #28]
 801274a:	edd0 2a06 	vldr	s5, [r0, #24]
 801274e:	1a9b      	subs	r3, r3, r2
 8012750:	ee07 3a90 	vmov	s15, r3
 8012754:	684b      	ldr	r3, [r1, #4]
 8012756:	1a9b      	subs	r3, r3, r2
 8012758:	ee07 3a10 	vmov	s14, r3
 801275c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012760:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012764:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012768:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801276c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012770:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012774:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012778:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801277c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012780:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012784:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012788:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801278c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801278e:	694a      	ldr	r2, [r1, #20]
 8012790:	1b13      	subs	r3, r2, r4
 8012792:	ee07 3a10 	vmov	s14, r3
 8012796:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801279a:	680b      	ldr	r3, [r1, #0]
 801279c:	ee27 7a04 	vmul.f32	s14, s14, s8
 80127a0:	1b1b      	subs	r3, r3, r4
 80127a2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80127a6:	ee07 3a10 	vmov	s14, r3
 80127aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80127ae:	ee27 7a04 	vmul.f32	s14, s14, s8
 80127b2:	eee6 4a87 	vfma.f32	s9, s13, s14
 80127b6:	ee64 4a86 	vmul.f32	s9, s9, s12
 80127ba:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80127be:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80127c0:	698b      	ldr	r3, [r1, #24]
 80127c2:	1a9b      	subs	r3, r3, r2
 80127c4:	ee06 3a90 	vmov	s13, r3
 80127c8:	684b      	ldr	r3, [r1, #4]
 80127ca:	1a9b      	subs	r3, r3, r2
 80127cc:	ee07 3a10 	vmov	s14, r3
 80127d0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80127d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80127d8:	ee66 6a84 	vmul.f32	s13, s13, s8
 80127dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80127e0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80127e4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80127e8:	ee66 6a83 	vmul.f32	s13, s13, s6
 80127ec:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80127f0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80127f2:	694a      	ldr	r2, [r1, #20]
 80127f4:	1b13      	subs	r3, r2, r4
 80127f6:	ee07 3a10 	vmov	s14, r3
 80127fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80127fe:	680b      	ldr	r3, [r1, #0]
 8012800:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012804:	1b1b      	subs	r3, r3, r4
 8012806:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801280a:	ee07 3a10 	vmov	s14, r3
 801280e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012812:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012816:	eea5 5a87 	vfma.f32	s10, s11, s14
 801281a:	edd0 5a08 	vldr	s11, [r0, #32]
 801281e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012822:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012826:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801282a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801282c:	698b      	ldr	r3, [r1, #24]
 801282e:	1a9b      	subs	r3, r3, r2
 8012830:	ee07 3a10 	vmov	s14, r3
 8012834:	684b      	ldr	r3, [r1, #4]
 8012836:	1a9b      	subs	r3, r3, r2
 8012838:	ee01 3a90 	vmov	s3, r3
 801283c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012840:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012844:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012848:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801284c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012850:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012854:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012858:	ee27 7a03 	vmul.f32	s14, s14, s6
 801285c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012860:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012862:	694a      	ldr	r2, [r1, #20]
 8012864:	1b13      	subs	r3, r2, r4
 8012866:	ee03 3a10 	vmov	s6, r3
 801286a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801286e:	680b      	ldr	r3, [r1, #0]
 8012870:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012874:	1b1b      	subs	r3, r3, r4
 8012876:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801287a:	ee03 3a10 	vmov	s6, r3
 801287e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012882:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012886:	eee1 5a04 	vfma.f32	s11, s2, s8
 801288a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801288e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012892:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8012896:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801289a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801289e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128a2:	dd13      	ble.n	80128cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80128a4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80128a8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80128ac:	63c3      	str	r3, [r0, #60]	; 0x3c
 80128ae:	eee3 7a87 	vfma.f32	s15, s7, s14
 80128b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80128b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128ba:	dd15      	ble.n	80128e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80128bc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80128c0:	6403      	str	r3, [r0, #64]	; 0x40
 80128c2:	bd70      	pop	{r4, r5, r6, pc}
 80128c4:	4623      	mov	r3, r4
 80128c6:	e6fd      	b.n	80126c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80128c8:	462a      	mov	r2, r5
 80128ca:	e706      	b.n	80126da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80128cc:	d502      	bpl.n	80128d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80128ce:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80128d2:	e7e9      	b.n	80128a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80128d4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80128d8:	eea3 2a85 	vfma.f32	s4, s7, s10
 80128dc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80128e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128e4:	dade      	bge.n	80128a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80128e6:	e7f2      	b.n	80128ce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80128e8:	d502      	bpl.n	80128f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80128ea:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80128ee:	e7e7      	b.n	80128c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80128f0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80128f4:	eee3 4a86 	vfma.f32	s9, s7, s12
 80128f8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80128fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012900:	dadc      	bge.n	80128bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012902:	e7f2      	b.n	80128ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012904:	3d800000 	.word	0x3d800000

08012908 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012908:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801290c:	f04f 0814 	mov.w	r8, #20
 8012910:	fb08 f903 	mul.w	r9, r8, r3
 8012914:	eb02 0a09 	add.w	sl, r2, r9
 8012918:	4604      	mov	r4, r0
 801291a:	f8da 0004 	ldr.w	r0, [sl, #4]
 801291e:	4617      	mov	r7, r2
 8012920:	460d      	mov	r5, r1
 8012922:	461e      	mov	r6, r3
 8012924:	f7ff fe88 	bl	8012638 <_ZN8touchgfx8ceil28_4El>
 8012928:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801292a:	6160      	str	r0, [r4, #20]
 801292c:	fb08 f803 	mul.w	r8, r8, r3
 8012930:	eb07 0b08 	add.w	fp, r7, r8
 8012934:	9001      	str	r0, [sp, #4]
 8012936:	f8db 0004 	ldr.w	r0, [fp, #4]
 801293a:	f7ff fe7d 	bl	8012638 <_ZN8touchgfx8ceil28_4El>
 801293e:	9a01      	ldr	r2, [sp, #4]
 8012940:	1a80      	subs	r0, r0, r2
 8012942:	61a0      	str	r0, [r4, #24]
 8012944:	2800      	cmp	r0, #0
 8012946:	f000 8088 	beq.w	8012a5a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 801294a:	f857 3009 	ldr.w	r3, [r7, r9]
 801294e:	f857 c008 	ldr.w	ip, [r7, r8]
 8012952:	f8da 1004 	ldr.w	r1, [sl, #4]
 8012956:	f8db 0004 	ldr.w	r0, [fp, #4]
 801295a:	ebac 0c03 	sub.w	ip, ip, r3
 801295e:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 8012962:	fb0b f202 	mul.w	r2, fp, r2
 8012966:	fb0c 2211 	mls	r2, ip, r1, r2
 801296a:	1a40      	subs	r0, r0, r1
 801296c:	ea4f 1800 	mov.w	r8, r0, lsl #4
 8012970:	fb00 2003 	mla	r0, r0, r3, r2
 8012974:	3801      	subs	r0, #1
 8012976:	f104 0310 	add.w	r3, r4, #16
 801297a:	4622      	mov	r2, r4
 801297c:	4641      	mov	r1, r8
 801297e:	4440      	add	r0, r8
 8012980:	f7ff fe6a 	bl	8012658 <_ZN8touchgfx11floorDivModEllRlS0_>
 8012984:	f104 0308 	add.w	r3, r4, #8
 8012988:	1d22      	adds	r2, r4, #4
 801298a:	4641      	mov	r1, r8
 801298c:	4658      	mov	r0, fp
 801298e:	f7ff fe63 	bl	8012658 <_ZN8touchgfx11floorDivModEllRlS0_>
 8012992:	f8c4 800c 	str.w	r8, [r4, #12]
 8012996:	f8da 3004 	ldr.w	r3, [sl, #4]
 801299a:	6962      	ldr	r2, [r4, #20]
 801299c:	eddf 6a31 	vldr	s13, [pc, #196]	; 8012a64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80129a0:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 80129a4:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 80129a8:	ee07 3a10 	vmov	s14, r3
 80129ac:	6822      	ldr	r2, [r4, #0]
 80129ae:	f857 3009 	ldr.w	r3, [r7, r9]
 80129b2:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 80129b6:	ee07 3a90 	vmov	s15, r3
 80129ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80129be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80129c2:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 80129c6:	ee27 7a26 	vmul.f32	s14, s14, s13
 80129ca:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80129ce:	edd3 6a00 	vldr	s13, [r3]
 80129d2:	eee6 6a07 	vfma.f32	s13, s12, s14
 80129d6:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80129da:	eee6 6a27 	vfma.f32	s13, s12, s15
 80129de:	edc4 6a07 	vstr	s13, [r4, #28]
 80129e2:	edd4 6a01 	vldr	s13, [r4, #4]
 80129e6:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 80129ea:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 80129ee:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80129f2:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80129f6:	ed84 6a08 	vstr	s12, [r4, #32]
 80129fa:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 80129fc:	6262      	str	r2, [r4, #36]	; 0x24
 80129fe:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 8012a02:	ed93 6a03 	vldr	s12, [r3, #12]
 8012a06:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012a0a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8012a0e:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012a12:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 8012a16:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8012a1a:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 8012a1e:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012a22:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 8012a26:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8012a28:	6322      	str	r2, [r4, #48]	; 0x30
 8012a2a:	ed93 6a06 	vldr	s12, [r3, #24]
 8012a2e:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 8012a32:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012a36:	eeb0 7a46 	vmov.f32	s14, s12
 8012a3a:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 8012a3e:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012a42:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 8012a46:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 8012a4a:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 8012a4e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012a52:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 8012a56:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8012a58:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012a5a:	4620      	mov	r0, r4
 8012a5c:	b003      	add	sp, #12
 8012a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a62:	bf00      	nop
 8012a64:	3d800000 	.word	0x3d800000

08012a68 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8012a68:	4602      	mov	r2, r0
 8012a6a:	b148      	cbz	r0, 8012a80 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8012a6c:	2300      	movs	r3, #0
 8012a6e:	b298      	uxth	r0, r3
 8012a70:	3301      	adds	r3, #1
 8012a72:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8012a76:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8012a7a:	2900      	cmp	r1, #0
 8012a7c:	d1f7      	bne.n	8012a6e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8012a7e:	4770      	bx	lr
 8012a80:	4770      	bx	lr

08012a82 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8012a82:	b530      	push	{r4, r5, lr}
 8012a84:	4604      	mov	r4, r0
 8012a86:	b159      	cbz	r1, 8012aa0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8012a88:	b148      	cbz	r0, 8012a9e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012a8a:	2300      	movs	r3, #0
 8012a8c:	b298      	uxth	r0, r3
 8012a8e:	4282      	cmp	r2, r0
 8012a90:	d905      	bls.n	8012a9e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012a92:	5ccd      	ldrb	r5, [r1, r3]
 8012a94:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8012a98:	3301      	adds	r3, #1
 8012a9a:	2d00      	cmp	r5, #0
 8012a9c:	d1f6      	bne.n	8012a8c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8012a9e:	bd30      	pop	{r4, r5, pc}
 8012aa0:	4608      	mov	r0, r1
 8012aa2:	e7fc      	b.n	8012a9e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08012aa4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8012aa4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012aa6:	b08b      	sub	sp, #44	; 0x2c
 8012aa8:	468c      	mov	ip, r1
 8012aaa:	2100      	movs	r1, #0
 8012aac:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8012ab0:	ae01      	add	r6, sp, #4
 8012ab2:	211f      	movs	r1, #31
 8012ab4:	fbb0 f7f3 	udiv	r7, r0, r3
 8012ab8:	fb03 0517 	mls	r5, r3, r7, r0
 8012abc:	b2ec      	uxtb	r4, r5
 8012abe:	2d09      	cmp	r5, #9
 8012ac0:	bfd4      	ite	le
 8012ac2:	3430      	addle	r4, #48	; 0x30
 8012ac4:	3457      	addgt	r4, #87	; 0x57
 8012ac6:	b2e4      	uxtb	r4, r4
 8012ac8:	558c      	strb	r4, [r1, r6]
 8012aca:	4638      	mov	r0, r7
 8012acc:	1e4c      	subs	r4, r1, #1
 8012ace:	b92f      	cbnz	r7, 8012adc <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8012ad0:	4431      	add	r1, r6
 8012ad2:	4660      	mov	r0, ip
 8012ad4:	f7ff ffd5 	bl	8012a82 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8012ad8:	b00b      	add	sp, #44	; 0x2c
 8012ada:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012adc:	4621      	mov	r1, r4
 8012ade:	e7e9      	b.n	8012ab4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08012ae0 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8012ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012ae2:	4607      	mov	r7, r0
 8012ae4:	b08b      	sub	sp, #44	; 0x2c
 8012ae6:	4608      	mov	r0, r1
 8012ae8:	b341      	cbz	r1, 8012b3c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8012aea:	1e99      	subs	r1, r3, #2
 8012aec:	2922      	cmp	r1, #34	; 0x22
 8012aee:	d825      	bhi.n	8012b3c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8012af0:	2100      	movs	r1, #0
 8012af2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8012af6:	463c      	mov	r4, r7
 8012af8:	261f      	movs	r6, #31
 8012afa:	f10d 0c04 	add.w	ip, sp, #4
 8012afe:	fb94 fef3 	sdiv	lr, r4, r3
 8012b02:	fb03 441e 	mls	r4, r3, lr, r4
 8012b06:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8012b0a:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8012b0e:	b2ec      	uxtb	r4, r5
 8012b10:	2d09      	cmp	r5, #9
 8012b12:	bfd4      	ite	le
 8012b14:	3430      	addle	r4, #48	; 0x30
 8012b16:	3457      	addgt	r4, #87	; 0x57
 8012b18:	b2e4      	uxtb	r4, r4
 8012b1a:	f80c 4006 	strb.w	r4, [ip, r6]
 8012b1e:	4674      	mov	r4, lr
 8012b20:	1e71      	subs	r1, r6, #1
 8012b22:	b96c      	cbnz	r4, 8012b40 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8012b24:	2f00      	cmp	r7, #0
 8012b26:	da05      	bge.n	8012b34 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8012b28:	ab0a      	add	r3, sp, #40	; 0x28
 8012b2a:	4419      	add	r1, r3
 8012b2c:	232d      	movs	r3, #45	; 0x2d
 8012b2e:	f801 3c24 	strb.w	r3, [r1, #-36]
 8012b32:	1eb1      	subs	r1, r6, #2
 8012b34:	3101      	adds	r1, #1
 8012b36:	4461      	add	r1, ip
 8012b38:	f7ff ffa3 	bl	8012a82 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8012b3c:	b00b      	add	sp, #44	; 0x2c
 8012b3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012b40:	460e      	mov	r6, r1
 8012b42:	e7dc      	b.n	8012afe <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08012b44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8012b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b48:	4691      	mov	r9, r2
 8012b4a:	b085      	sub	sp, #20
 8012b4c:	6802      	ldr	r2, [r0, #0]
 8012b4e:	9201      	str	r2, [sp, #4]
 8012b50:	4688      	mov	r8, r1
 8012b52:	4683      	mov	fp, r0
 8012b54:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8012b58:	9103      	str	r1, [sp, #12]
 8012b5a:	4610      	mov	r0, r2
 8012b5c:	461c      	mov	r4, r3
 8012b5e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8012b62:	9302      	str	r3, [sp, #8]
 8012b64:	f7ff ff80 	bl	8012a68 <_ZN8touchgfx7Unicode6strlenEPKt>
 8012b68:	f1b8 0f00 	cmp.w	r8, #0
 8012b6c:	bf0c      	ite	eq
 8012b6e:	4684      	moveq	ip, r0
 8012b70:	f100 0c01 	addne.w	ip, r0, #1
 8012b74:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8012b78:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8012b7c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012b7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012b80:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8012b84:	9903      	ldr	r1, [sp, #12]
 8012b86:	fa1f fc8c 	uxth.w	ip, ip
 8012b8a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8012b8e:	d041      	beq.n	8012c14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012b90:	d834      	bhi.n	8012bfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8012b92:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8012b96:	d059      	beq.n	8012c4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8012b98:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8012b9c:	d03a      	beq.n	8012c14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012b9e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8012ba2:	d034      	beq.n	8012c0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012ba4:	2400      	movs	r4, #0
 8012ba6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8012baa:	3a01      	subs	r2, #1
 8012bac:	b169      	cbz	r1, 8012bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012bae:	9911      	ldr	r1, [sp, #68]	; 0x44
 8012bb0:	458c      	cmp	ip, r1
 8012bb2:	da09      	bge.n	8012bc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8012bb4:	eba1 010c 	sub.w	r1, r1, ip
 8012bb8:	b289      	uxth	r1, r1
 8012bba:	b933      	cbnz	r3, 8012bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012bbc:	2e00      	cmp	r6, #0
 8012bbe:	d051      	beq.n	8012c64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012bc0:	2800      	cmp	r0, #0
 8012bc2:	d04f      	beq.n	8012c64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012bc4:	440c      	add	r4, r1
 8012bc6:	b2a4      	uxth	r4, r4
 8012bc8:	2100      	movs	r1, #0
 8012bca:	682b      	ldr	r3, [r5, #0]
 8012bcc:	4293      	cmp	r3, r2
 8012bce:	da07      	bge.n	8012be0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8012bd0:	f1b8 0f00 	cmp.w	r8, #0
 8012bd4:	d004      	beq.n	8012be0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8012bd6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8012bda:	682b      	ldr	r3, [r5, #0]
 8012bdc:	3301      	adds	r3, #1
 8012bde:	602b      	str	r3, [r5, #0]
 8012be0:	2730      	movs	r7, #48	; 0x30
 8012be2:	2c00      	cmp	r4, #0
 8012be4:	d04e      	beq.n	8012c84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012be6:	682e      	ldr	r6, [r5, #0]
 8012be8:	3c01      	subs	r4, #1
 8012bea:	42b2      	cmp	r2, r6
 8012bec:	b2a4      	uxth	r4, r4
 8012bee:	dd49      	ble.n	8012c84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012bf0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8012bf4:	682b      	ldr	r3, [r5, #0]
 8012bf6:	3301      	adds	r3, #1
 8012bf8:	602b      	str	r3, [r5, #0]
 8012bfa:	e7f2      	b.n	8012be2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8012bfc:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8012c00:	d01d      	beq.n	8012c3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8012c02:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8012c06:	d002      	beq.n	8012c0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012c08:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8012c0c:	e7c9      	b.n	8012ba2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8012c0e:	4684      	mov	ip, r0
 8012c10:	f04f 0800 	mov.w	r8, #0
 8012c14:	2c00      	cmp	r4, #0
 8012c16:	d0c6      	beq.n	8012ba6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012c18:	b947      	cbnz	r7, 8012c2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8012c1a:	2801      	cmp	r0, #1
 8012c1c:	d106      	bne.n	8012c2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8012c1e:	8814      	ldrh	r4, [r2, #0]
 8012c20:	2c30      	cmp	r4, #48	; 0x30
 8012c22:	bf02      	ittt	eq
 8012c24:	3202      	addeq	r2, #2
 8012c26:	f8cb 2000 	streq.w	r2, [fp]
 8012c2a:	4638      	moveq	r0, r7
 8012c2c:	45bc      	cmp	ip, r7
 8012c2e:	da14      	bge.n	8012c5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8012c30:	b2bf      	uxth	r7, r7
 8012c32:	eba7 040c 	sub.w	r4, r7, ip
 8012c36:	b2a4      	uxth	r4, r4
 8012c38:	46bc      	mov	ip, r7
 8012c3a:	2600      	movs	r6, #0
 8012c3c:	e7b3      	b.n	8012ba6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012c3e:	4684      	mov	ip, r0
 8012c40:	b16c      	cbz	r4, 8012c5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8012c42:	42b8      	cmp	r0, r7
 8012c44:	dd00      	ble.n	8012c48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8012c46:	b2b8      	uxth	r0, r7
 8012c48:	2400      	movs	r4, #0
 8012c4a:	e003      	b.n	8012c54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8012c4c:	f04f 0c01 	mov.w	ip, #1
 8012c50:	2400      	movs	r4, #0
 8012c52:	4660      	mov	r0, ip
 8012c54:	4626      	mov	r6, r4
 8012c56:	46a0      	mov	r8, r4
 8012c58:	e7a5      	b.n	8012ba6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012c5a:	2400      	movs	r4, #0
 8012c5c:	e7ed      	b.n	8012c3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8012c5e:	4626      	mov	r6, r4
 8012c60:	46a0      	mov	r8, r4
 8012c62:	e7a0      	b.n	8012ba6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012c64:	2900      	cmp	r1, #0
 8012c66:	d0b0      	beq.n	8012bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012c68:	2720      	movs	r7, #32
 8012c6a:	682e      	ldr	r6, [r5, #0]
 8012c6c:	2900      	cmp	r1, #0
 8012c6e:	d0ac      	beq.n	8012bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012c70:	3901      	subs	r1, #1
 8012c72:	4296      	cmp	r6, r2
 8012c74:	b289      	uxth	r1, r1
 8012c76:	daa7      	bge.n	8012bc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8012c78:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8012c7c:	682b      	ldr	r3, [r5, #0]
 8012c7e:	3301      	adds	r3, #1
 8012c80:	602b      	str	r3, [r5, #0]
 8012c82:	e7f2      	b.n	8012c6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8012c84:	b188      	cbz	r0, 8012caa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012c86:	682b      	ldr	r3, [r5, #0]
 8012c88:	3801      	subs	r0, #1
 8012c8a:	429a      	cmp	r2, r3
 8012c8c:	b280      	uxth	r0, r0
 8012c8e:	dd0c      	ble.n	8012caa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012c90:	f8db 3000 	ldr.w	r3, [fp]
 8012c94:	1c9c      	adds	r4, r3, #2
 8012c96:	f8cb 4000 	str.w	r4, [fp]
 8012c9a:	881c      	ldrh	r4, [r3, #0]
 8012c9c:	682b      	ldr	r3, [r5, #0]
 8012c9e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8012ca2:	682b      	ldr	r3, [r5, #0]
 8012ca4:	3301      	adds	r3, #1
 8012ca6:	602b      	str	r3, [r5, #0]
 8012ca8:	e7ec      	b.n	8012c84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012caa:	2620      	movs	r6, #32
 8012cac:	b151      	cbz	r1, 8012cc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012cae:	6828      	ldr	r0, [r5, #0]
 8012cb0:	3901      	subs	r1, #1
 8012cb2:	4282      	cmp	r2, r0
 8012cb4:	b289      	uxth	r1, r1
 8012cb6:	dd05      	ble.n	8012cc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012cb8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8012cbc:	682b      	ldr	r3, [r5, #0]
 8012cbe:	3301      	adds	r3, #1
 8012cc0:	602b      	str	r3, [r5, #0]
 8012cc2:	e7f3      	b.n	8012cac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8012cc4:	b005      	add	sp, #20
 8012cc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012cca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8012cca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012cce:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8012cd2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8012cd6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8012cda:	2400      	movs	r4, #0
 8012cdc:	8014      	strh	r4, [r2, #0]
 8012cde:	701c      	strb	r4, [r3, #0]
 8012ce0:	f888 4000 	strb.w	r4, [r8]
 8012ce4:	f88c 4000 	strb.w	r4, [ip]
 8012ce8:	f88e 4000 	strb.w	r4, [lr]
 8012cec:	703c      	strb	r4, [r7, #0]
 8012cee:	6804      	ldr	r4, [r0, #0]
 8012cf0:	b1a4      	cbz	r4, 8012d1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8012cf2:	8824      	ldrh	r4, [r4, #0]
 8012cf4:	f04f 0901 	mov.w	r9, #1
 8012cf8:	b314      	cbz	r4, 8012d40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012cfa:	2c2b      	cmp	r4, #43	; 0x2b
 8012cfc:	d001      	beq.n	8012d02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8012cfe:	2c20      	cmp	r4, #32
 8012d00:	d110      	bne.n	8012d24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8012d02:	8014      	strh	r4, [r2, #0]
 8012d04:	6804      	ldr	r4, [r0, #0]
 8012d06:	b10c      	cbz	r4, 8012d0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8012d08:	3402      	adds	r4, #2
 8012d0a:	6004      	str	r4, [r0, #0]
 8012d0c:	680c      	ldr	r4, [r1, #0]
 8012d0e:	b10c      	cbz	r4, 8012d14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8012d10:	3401      	adds	r4, #1
 8012d12:	600c      	str	r4, [r1, #0]
 8012d14:	6804      	ldr	r4, [r0, #0]
 8012d16:	b17c      	cbz	r4, 8012d38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8012d18:	8824      	ldrh	r4, [r4, #0]
 8012d1a:	e7ed      	b.n	8012cf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8012d1c:	680c      	ldr	r4, [r1, #0]
 8012d1e:	b17c      	cbz	r4, 8012d40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012d20:	7824      	ldrb	r4, [r4, #0]
 8012d22:	e7e7      	b.n	8012cf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8012d24:	2c2d      	cmp	r4, #45	; 0x2d
 8012d26:	d102      	bne.n	8012d2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8012d28:	f883 9000 	strb.w	r9, [r3]
 8012d2c:	e7ea      	b.n	8012d04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8012d2e:	2c23      	cmp	r4, #35	; 0x23
 8012d30:	d107      	bne.n	8012d42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8012d32:	f888 9000 	strb.w	r9, [r8]
 8012d36:	e7e5      	b.n	8012d04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8012d38:	680c      	ldr	r4, [r1, #0]
 8012d3a:	b10c      	cbz	r4, 8012d40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012d3c:	7824      	ldrb	r4, [r4, #0]
 8012d3e:	e7db      	b.n	8012cf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8012d40:	2400      	movs	r4, #0
 8012d42:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012d46:	2b09      	cmp	r3, #9
 8012d48:	d901      	bls.n	8012d4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8012d4a:	2c2a      	cmp	r4, #42	; 0x2a
 8012d4c:	d122      	bne.n	8012d94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012d4e:	2301      	movs	r3, #1
 8012d50:	2c30      	cmp	r4, #48	; 0x30
 8012d52:	f88e 3000 	strb.w	r3, [lr]
 8012d56:	d10d      	bne.n	8012d74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012d58:	f88c 3000 	strb.w	r3, [ip]
 8012d5c:	6803      	ldr	r3, [r0, #0]
 8012d5e:	b10b      	cbz	r3, 8012d64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8012d60:	3302      	adds	r3, #2
 8012d62:	6003      	str	r3, [r0, #0]
 8012d64:	680b      	ldr	r3, [r1, #0]
 8012d66:	b10b      	cbz	r3, 8012d6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8012d68:	3301      	adds	r3, #1
 8012d6a:	600b      	str	r3, [r1, #0]
 8012d6c:	6803      	ldr	r3, [r0, #0]
 8012d6e:	2b00      	cmp	r3, #0
 8012d70:	d02f      	beq.n	8012dd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8012d72:	881c      	ldrh	r4, [r3, #0]
 8012d74:	2c2a      	cmp	r4, #42	; 0x2a
 8012d76:	d135      	bne.n	8012de4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012d78:	f04f 33ff 	mov.w	r3, #4294967295
 8012d7c:	6033      	str	r3, [r6, #0]
 8012d7e:	6803      	ldr	r3, [r0, #0]
 8012d80:	b10b      	cbz	r3, 8012d86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8012d82:	3302      	adds	r3, #2
 8012d84:	6003      	str	r3, [r0, #0]
 8012d86:	680b      	ldr	r3, [r1, #0]
 8012d88:	b10b      	cbz	r3, 8012d8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8012d8a:	3301      	adds	r3, #1
 8012d8c:	600b      	str	r3, [r1, #0]
 8012d8e:	6803      	ldr	r3, [r0, #0]
 8012d90:	b31b      	cbz	r3, 8012dda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8012d92:	881c      	ldrh	r4, [r3, #0]
 8012d94:	2c2e      	cmp	r4, #46	; 0x2e
 8012d96:	d11a      	bne.n	8012dce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012d98:	2301      	movs	r3, #1
 8012d9a:	703b      	strb	r3, [r7, #0]
 8012d9c:	6803      	ldr	r3, [r0, #0]
 8012d9e:	b10b      	cbz	r3, 8012da4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8012da0:	3302      	adds	r3, #2
 8012da2:	6003      	str	r3, [r0, #0]
 8012da4:	680b      	ldr	r3, [r1, #0]
 8012da6:	b10b      	cbz	r3, 8012dac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8012da8:	3301      	adds	r3, #1
 8012daa:	600b      	str	r3, [r1, #0]
 8012dac:	6803      	ldr	r3, [r0, #0]
 8012dae:	2b00      	cmp	r3, #0
 8012db0:	d036      	beq.n	8012e20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8012db2:	881b      	ldrh	r3, [r3, #0]
 8012db4:	2b2a      	cmp	r3, #42	; 0x2a
 8012db6:	d137      	bne.n	8012e28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012db8:	f04f 33ff 	mov.w	r3, #4294967295
 8012dbc:	602b      	str	r3, [r5, #0]
 8012dbe:	6803      	ldr	r3, [r0, #0]
 8012dc0:	b10b      	cbz	r3, 8012dc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8012dc2:	3302      	adds	r3, #2
 8012dc4:	6003      	str	r3, [r0, #0]
 8012dc6:	680b      	ldr	r3, [r1, #0]
 8012dc8:	b10b      	cbz	r3, 8012dce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012dca:	3301      	adds	r3, #1
 8012dcc:	600b      	str	r3, [r1, #0]
 8012dce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012dd2:	680c      	ldr	r4, [r1, #0]
 8012dd4:	b134      	cbz	r4, 8012de4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012dd6:	7824      	ldrb	r4, [r4, #0]
 8012dd8:	e7cc      	b.n	8012d74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012dda:	680b      	ldr	r3, [r1, #0]
 8012ddc:	2b00      	cmp	r3, #0
 8012dde:	d0f6      	beq.n	8012dce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012de0:	781c      	ldrb	r4, [r3, #0]
 8012de2:	e7d7      	b.n	8012d94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012de4:	2300      	movs	r3, #0
 8012de6:	6033      	str	r3, [r6, #0]
 8012de8:	220a      	movs	r2, #10
 8012dea:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8012dee:	fa1f f38c 	uxth.w	r3, ip
 8012df2:	2b09      	cmp	r3, #9
 8012df4:	d8ce      	bhi.n	8012d94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012df6:	6833      	ldr	r3, [r6, #0]
 8012df8:	fb02 c303 	mla	r3, r2, r3, ip
 8012dfc:	6033      	str	r3, [r6, #0]
 8012dfe:	6803      	ldr	r3, [r0, #0]
 8012e00:	b10b      	cbz	r3, 8012e06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8012e02:	3302      	adds	r3, #2
 8012e04:	6003      	str	r3, [r0, #0]
 8012e06:	680b      	ldr	r3, [r1, #0]
 8012e08:	b10b      	cbz	r3, 8012e0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8012e0a:	3301      	adds	r3, #1
 8012e0c:	600b      	str	r3, [r1, #0]
 8012e0e:	6803      	ldr	r3, [r0, #0]
 8012e10:	b10b      	cbz	r3, 8012e16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8012e12:	881c      	ldrh	r4, [r3, #0]
 8012e14:	e7e9      	b.n	8012dea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012e16:	680c      	ldr	r4, [r1, #0]
 8012e18:	2c00      	cmp	r4, #0
 8012e1a:	d0e6      	beq.n	8012dea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012e1c:	7824      	ldrb	r4, [r4, #0]
 8012e1e:	e7e4      	b.n	8012dea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012e20:	680b      	ldr	r3, [r1, #0]
 8012e22:	b10b      	cbz	r3, 8012e28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012e24:	781b      	ldrb	r3, [r3, #0]
 8012e26:	e7c5      	b.n	8012db4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8012e28:	2200      	movs	r2, #0
 8012e2a:	602a      	str	r2, [r5, #0]
 8012e2c:	240a      	movs	r4, #10
 8012e2e:	3b30      	subs	r3, #48	; 0x30
 8012e30:	b29e      	uxth	r6, r3
 8012e32:	2e09      	cmp	r6, #9
 8012e34:	682a      	ldr	r2, [r5, #0]
 8012e36:	d813      	bhi.n	8012e60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8012e38:	fb04 3302 	mla	r3, r4, r2, r3
 8012e3c:	602b      	str	r3, [r5, #0]
 8012e3e:	6803      	ldr	r3, [r0, #0]
 8012e40:	b10b      	cbz	r3, 8012e46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8012e42:	3302      	adds	r3, #2
 8012e44:	6003      	str	r3, [r0, #0]
 8012e46:	680b      	ldr	r3, [r1, #0]
 8012e48:	b10b      	cbz	r3, 8012e4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8012e4a:	3301      	adds	r3, #1
 8012e4c:	600b      	str	r3, [r1, #0]
 8012e4e:	6803      	ldr	r3, [r0, #0]
 8012e50:	b10b      	cbz	r3, 8012e56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8012e52:	881b      	ldrh	r3, [r3, #0]
 8012e54:	e7eb      	b.n	8012e2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012e56:	680b      	ldr	r3, [r1, #0]
 8012e58:	2b00      	cmp	r3, #0
 8012e5a:	d0e8      	beq.n	8012e2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012e5c:	781b      	ldrb	r3, [r3, #0]
 8012e5e:	e7e6      	b.n	8012e2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012e60:	2a06      	cmp	r2, #6
 8012e62:	bfa8      	it	ge
 8012e64:	2206      	movge	r2, #6
 8012e66:	602a      	str	r2, [r5, #0]
 8012e68:	e7b1      	b.n	8012dce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08012e6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8012e6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e6e:	b0a3      	sub	sp, #140	; 0x8c
 8012e70:	2600      	movs	r6, #0
 8012e72:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8012e76:	4607      	mov	r7, r0
 8012e78:	4688      	mov	r8, r1
 8012e7a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8012e7e:	4631      	mov	r1, r6
 8012e80:	2242      	movs	r2, #66	; 0x42
 8012e82:	4648      	mov	r0, r9
 8012e84:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8012e86:	960d      	str	r6, [sp, #52]	; 0x34
 8012e88:	f7fe f9de 	bl	8011248 <_ZN8touchgfx6memsetEPvhm>
 8012e8c:	b15f      	cbz	r7, 8012ea6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8012e8e:	f108 3aff 	add.w	sl, r8, #4294967295
 8012e92:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012e94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012e96:	b152      	cbz	r2, 8012eae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8012e98:	8812      	ldrh	r2, [r2, #0]
 8012e9a:	b10a      	cbz	r2, 8012ea0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012e9c:	459a      	cmp	sl, r3
 8012e9e:	dc2e      	bgt.n	8012efe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8012ea0:	2200      	movs	r2, #0
 8012ea2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012ea6:	4638      	mov	r0, r7
 8012ea8:	b023      	add	sp, #140	; 0x8c
 8012eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012eae:	9a08      	ldr	r2, [sp, #32]
 8012eb0:	2a00      	cmp	r2, #0
 8012eb2:	d0f5      	beq.n	8012ea0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012eb4:	7812      	ldrb	r2, [r2, #0]
 8012eb6:	e7f0      	b.n	8012e9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8012eb8:	2d00      	cmp	r5, #0
 8012eba:	d0ea      	beq.n	8012e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012ebc:	782a      	ldrb	r2, [r5, #0]
 8012ebe:	b142      	cbz	r2, 8012ed2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8012ec0:	2a25      	cmp	r2, #37	; 0x25
 8012ec2:	d001      	beq.n	8012ec8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8012ec4:	459a      	cmp	sl, r3
 8012ec6:	dc08      	bgt.n	8012eda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8012ec8:	f1bb 0f00 	cmp.w	fp, #0
 8012ecc:	d121      	bne.n	8012f12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8012ece:	2d00      	cmp	r5, #0
 8012ed0:	d0df      	beq.n	8012e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012ed2:	782a      	ldrb	r2, [r5, #0]
 8012ed4:	f04f 0b00 	mov.w	fp, #0
 8012ed8:	e01d      	b.n	8012f16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8012eda:	f1bb 0f00 	cmp.w	fp, #0
 8012ede:	d078      	beq.n	8012fd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8012ee0:	f8bb 2000 	ldrh.w	r2, [fp]
 8012ee4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012ee8:	f1bb 0f00 	cmp.w	fp, #0
 8012eec:	d002      	beq.n	8012ef4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8012eee:	f10b 0202 	add.w	r2, fp, #2
 8012ef2:	9209      	str	r2, [sp, #36]	; 0x24
 8012ef4:	b10d      	cbz	r5, 8012efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8012ef6:	3501      	adds	r5, #1
 8012ef8:	9508      	str	r5, [sp, #32]
 8012efa:	3301      	adds	r3, #1
 8012efc:	930d      	str	r3, [sp, #52]	; 0x34
 8012efe:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8012f02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012f04:	f1bb 0f00 	cmp.w	fp, #0
 8012f08:	d0d6      	beq.n	8012eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8012f0a:	f8bb 2000 	ldrh.w	r2, [fp]
 8012f0e:	2a00      	cmp	r2, #0
 8012f10:	d1d6      	bne.n	8012ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8012f12:	f8bb 2000 	ldrh.w	r2, [fp]
 8012f16:	2a00      	cmp	r2, #0
 8012f18:	d0bb      	beq.n	8012e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012f1a:	459a      	cmp	sl, r3
 8012f1c:	ddb9      	ble.n	8012e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012f1e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8012f22:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8012f26:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8012f2a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8012f2e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8012f32:	960e      	str	r6, [sp, #56]	; 0x38
 8012f34:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8012f38:	960f      	str	r6, [sp, #60]	; 0x3c
 8012f3a:	f1bb 0f00 	cmp.w	fp, #0
 8012f3e:	d002      	beq.n	8012f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8012f40:	f10b 0302 	add.w	r3, fp, #2
 8012f44:	9309      	str	r3, [sp, #36]	; 0x24
 8012f46:	b10d      	cbz	r5, 8012f4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8012f48:	1c6b      	adds	r3, r5, #1
 8012f4a:	9308      	str	r3, [sp, #32]
 8012f4c:	ab0f      	add	r3, sp, #60	; 0x3c
 8012f4e:	9305      	str	r3, [sp, #20]
 8012f50:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8012f54:	9304      	str	r3, [sp, #16]
 8012f56:	ab0e      	add	r3, sp, #56	; 0x38
 8012f58:	9303      	str	r3, [sp, #12]
 8012f5a:	ab0c      	add	r3, sp, #48	; 0x30
 8012f5c:	9302      	str	r3, [sp, #8]
 8012f5e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8012f62:	9301      	str	r3, [sp, #4]
 8012f64:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8012f68:	9300      	str	r3, [sp, #0]
 8012f6a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8012f6e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8012f72:	a908      	add	r1, sp, #32
 8012f74:	a809      	add	r0, sp, #36	; 0x24
 8012f76:	f7ff fea8 	bl	8012cca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8012f7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012f7c:	2b00      	cmp	r3, #0
 8012f7e:	bfbe      	ittt	lt
 8012f80:	6823      	ldrlt	r3, [r4, #0]
 8012f82:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012f86:	930e      	strlt	r3, [sp, #56]	; 0x38
 8012f88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012f8a:	bfb8      	it	lt
 8012f8c:	3404      	addlt	r4, #4
 8012f8e:	2b00      	cmp	r3, #0
 8012f90:	bfb8      	it	lt
 8012f92:	6823      	ldrlt	r3, [r4, #0]
 8012f94:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8012f98:	bfbe      	ittt	lt
 8012f9a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012f9e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8012fa0:	3404      	addlt	r4, #4
 8012fa2:	b1d9      	cbz	r1, 8012fdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8012fa4:	880b      	ldrh	r3, [r1, #0]
 8012fa6:	2b69      	cmp	r3, #105	; 0x69
 8012fa8:	d01f      	beq.n	8012fea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012faa:	d82f      	bhi.n	801300c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8012fac:	2b58      	cmp	r3, #88	; 0x58
 8012fae:	d01c      	beq.n	8012fea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012fb0:	d818      	bhi.n	8012fe4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8012fb2:	2b25      	cmp	r3, #37	; 0x25
 8012fb4:	d034      	beq.n	8013020 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8012fb6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8012fba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012fbc:	f1bb 0f00 	cmp.w	fp, #0
 8012fc0:	f000 80b8 	beq.w	8013134 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8012fc4:	f8bb 5000 	ldrh.w	r5, [fp]
 8012fc8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8012fcc:	3301      	adds	r3, #1
 8012fce:	930d      	str	r3, [sp, #52]	; 0x34
 8012fd0:	e029      	b.n	8013026 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8012fd2:	b10d      	cbz	r5, 8012fd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8012fd4:	782a      	ldrb	r2, [r5, #0]
 8012fd6:	e785      	b.n	8012ee4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012fd8:	462a      	mov	r2, r5
 8012fda:	e783      	b.n	8012ee4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012fdc:	2a00      	cmp	r2, #0
 8012fde:	d0ea      	beq.n	8012fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8012fe0:	7813      	ldrb	r3, [r2, #0]
 8012fe2:	e7e0      	b.n	8012fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8012fe4:	3b63      	subs	r3, #99	; 0x63
 8012fe6:	2b01      	cmp	r3, #1
 8012fe8:	d8e5      	bhi.n	8012fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8012fea:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8012fee:	b329      	cbz	r1, 801303c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8012ff0:	880b      	ldrh	r3, [r1, #0]
 8012ff2:	2b69      	cmp	r3, #105	; 0x69
 8012ff4:	d063      	beq.n	80130be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8012ff6:	d825      	bhi.n	8013044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8012ff8:	2b63      	cmp	r3, #99	; 0x63
 8012ffa:	d038      	beq.n	801306e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8012ffc:	2b64      	cmp	r3, #100	; 0x64
 8012ffe:	d05e      	beq.n	80130be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013000:	2b58      	cmp	r3, #88	; 0x58
 8013002:	d07b      	beq.n	80130fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013004:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013008:	4625      	mov	r5, r4
 801300a:	e036      	b.n	801307a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801300c:	2b73      	cmp	r3, #115	; 0x73
 801300e:	d0ec      	beq.n	8012fea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013010:	d802      	bhi.n	8013018 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013012:	2b6f      	cmp	r3, #111	; 0x6f
 8013014:	d1cf      	bne.n	8012fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013016:	e7e8      	b.n	8012fea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013018:	2b75      	cmp	r3, #117	; 0x75
 801301a:	d0e6      	beq.n	8012fea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801301c:	2b78      	cmp	r3, #120	; 0x78
 801301e:	e7f9      	b.n	8013014 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013020:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013022:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013026:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013028:	b10b      	cbz	r3, 801302e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801302a:	3302      	adds	r3, #2
 801302c:	9309      	str	r3, [sp, #36]	; 0x24
 801302e:	9b08      	ldr	r3, [sp, #32]
 8013030:	2b00      	cmp	r3, #0
 8013032:	f43f af2e 	beq.w	8012e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013036:	3301      	adds	r3, #1
 8013038:	9308      	str	r3, [sp, #32]
 801303a:	e72a      	b.n	8012e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801303c:	2a00      	cmp	r2, #0
 801303e:	d0e1      	beq.n	8013004 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013040:	7813      	ldrb	r3, [r2, #0]
 8013042:	e7d6      	b.n	8012ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013044:	2b73      	cmp	r3, #115	; 0x73
 8013046:	d036      	beq.n	80130b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013048:	d807      	bhi.n	801305a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801304a:	2b6f      	cmp	r3, #111	; 0x6f
 801304c:	d1da      	bne.n	8013004 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801304e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013050:	1d25      	adds	r5, r4, #4
 8013052:	eba8 0202 	sub.w	r2, r8, r2
 8013056:	2308      	movs	r3, #8
 8013058:	e04a      	b.n	80130f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801305a:	2b75      	cmp	r3, #117	; 0x75
 801305c:	d043      	beq.n	80130e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801305e:	2b78      	cmp	r3, #120	; 0x78
 8013060:	d1d0      	bne.n	8013004 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013062:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013064:	1d25      	adds	r5, r4, #4
 8013066:	eba8 0202 	sub.w	r2, r8, r2
 801306a:	2310      	movs	r3, #16
 801306c:	e040      	b.n	80130f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801306e:	7823      	ldrb	r3, [r4, #0]
 8013070:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8013074:	1d25      	adds	r5, r4, #4
 8013076:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801307a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801307c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8013080:	2b00      	cmp	r3, #0
 8013082:	d052      	beq.n	801312a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8013084:	881a      	ldrh	r2, [r3, #0]
 8013086:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801308a:	a80d      	add	r0, sp, #52	; 0x34
 801308c:	9005      	str	r0, [sp, #20]
 801308e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8013092:	9004      	str	r0, [sp, #16]
 8013094:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013096:	9003      	str	r0, [sp, #12]
 8013098:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801309c:	9002      	str	r0, [sp, #8]
 801309e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80130a0:	9001      	str	r0, [sp, #4]
 80130a2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80130a6:	9000      	str	r0, [sp, #0]
 80130a8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80130ac:	a810      	add	r0, sp, #64	; 0x40
 80130ae:	f7ff fd49 	bl	8012b44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80130b2:	462c      	mov	r4, r5
 80130b4:	e7b7      	b.n	8013026 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80130b6:	6823      	ldr	r3, [r4, #0]
 80130b8:	1d25      	adds	r5, r4, #4
 80130ba:	9310      	str	r3, [sp, #64]	; 0x40
 80130bc:	e7dd      	b.n	801307a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80130be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80130c0:	6820      	ldr	r0, [r4, #0]
 80130c2:	eba8 0202 	sub.w	r2, r8, r2
 80130c6:	230a      	movs	r3, #10
 80130c8:	b292      	uxth	r2, r2
 80130ca:	4649      	mov	r1, r9
 80130cc:	f7ff fd08 	bl	8012ae0 <_ZN8touchgfx7Unicode4itoaElPtti>
 80130d0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80130d4:	2b2d      	cmp	r3, #45	; 0x2d
 80130d6:	f104 0504 	add.w	r5, r4, #4
 80130da:	d1ce      	bne.n	801307a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80130dc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80130e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80130e2:	3302      	adds	r3, #2
 80130e4:	e7e9      	b.n	80130ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80130e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80130e8:	1d25      	adds	r5, r4, #4
 80130ea:	eba8 0202 	sub.w	r2, r8, r2
 80130ee:	230a      	movs	r3, #10
 80130f0:	b292      	uxth	r2, r2
 80130f2:	4649      	mov	r1, r9
 80130f4:	6820      	ldr	r0, [r4, #0]
 80130f6:	f7ff fcd5 	bl	8012aa4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80130fa:	e7be      	b.n	801307a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80130fc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80130fe:	6820      	ldr	r0, [r4, #0]
 8013100:	eba8 0202 	sub.w	r2, r8, r2
 8013104:	b292      	uxth	r2, r2
 8013106:	2310      	movs	r3, #16
 8013108:	4649      	mov	r1, r9
 801310a:	f7ff fccb 	bl	8012aa4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801310e:	1d25      	adds	r5, r4, #4
 8013110:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013114:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013118:	2b00      	cmp	r3, #0
 801311a:	d0ae      	beq.n	801307a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801311c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8013120:	2919      	cmp	r1, #25
 8013122:	d8f7      	bhi.n	8013114 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013124:	3b20      	subs	r3, #32
 8013126:	8013      	strh	r3, [r2, #0]
 8013128:	e7f4      	b.n	8013114 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801312a:	9a08      	ldr	r2, [sp, #32]
 801312c:	2a00      	cmp	r2, #0
 801312e:	d0aa      	beq.n	8013086 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013130:	7812      	ldrb	r2, [r2, #0]
 8013132:	e7a8      	b.n	8013086 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013134:	2d00      	cmp	r5, #0
 8013136:	f43f af47 	beq.w	8012fc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801313a:	782d      	ldrb	r5, [r5, #0]
 801313c:	e744      	b.n	8012fc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801313e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801313e:	b507      	push	{r0, r1, r2, lr}
 8013140:	9300      	str	r3, [sp, #0]
 8013142:	4613      	mov	r3, r2
 8013144:	2200      	movs	r2, #0
 8013146:	f7ff fe90 	bl	8012e6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801314a:	b003      	add	sp, #12
 801314c:	f85d fb04 	ldr.w	pc, [sp], #4

08013150 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8013150:	b40c      	push	{r2, r3}
 8013152:	b507      	push	{r0, r1, r2, lr}
 8013154:	ab04      	add	r3, sp, #16
 8013156:	f853 2b04 	ldr.w	r2, [r3], #4
 801315a:	9301      	str	r3, [sp, #4]
 801315c:	f7ff ffef 	bl	801313e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8013160:	b003      	add	sp, #12
 8013162:	f85d eb04 	ldr.w	lr, [sp], #4
 8013166:	b002      	add	sp, #8
 8013168:	4770      	bx	lr
	...

0801316c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801316c:	4b01      	ldr	r3, [pc, #4]	; (8013174 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801316e:	6018      	str	r0, [r3, #0]
 8013170:	4770      	bx	lr
 8013172:	bf00      	nop
 8013174:	2000e460 	.word	0x2000e460

08013178 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8013178:	4b06      	ldr	r3, [pc, #24]	; (8013194 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801317a:	881a      	ldrh	r2, [r3, #0]
 801317c:	4282      	cmp	r2, r0
 801317e:	d807      	bhi.n	8013190 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8013180:	4b05      	ldr	r3, [pc, #20]	; (8013198 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8013182:	881b      	ldrh	r3, [r3, #0]
 8013184:	4413      	add	r3, r2
 8013186:	4298      	cmp	r0, r3
 8013188:	bfac      	ite	ge
 801318a:	2000      	movge	r0, #0
 801318c:	2001      	movlt	r0, #1
 801318e:	4770      	bx	lr
 8013190:	2000      	movs	r0, #0
 8013192:	4770      	bx	lr
 8013194:	2000e480 	.word	0x2000e480
 8013198:	2000e484 	.word	0x2000e484

0801319c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801319c:	b508      	push	{r3, lr}
 801319e:	4601      	mov	r1, r0
 80131a0:	f7ff ffea 	bl	8013178 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80131a4:	b118      	cbz	r0, 80131ae <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80131a6:	4b02      	ldr	r3, [pc, #8]	; (80131b0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80131a8:	681b      	ldr	r3, [r3, #0]
 80131aa:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80131ae:	bd08      	pop	{r3, pc}
 80131b0:	2000e464 	.word	0x2000e464

080131b4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80131b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80131b8:	4d28      	ldr	r5, [pc, #160]	; (801325c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80131ba:	682b      	ldr	r3, [r5, #0]
 80131bc:	2b00      	cmp	r3, #0
 80131be:	d04a      	beq.n	8013256 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 80131c0:	4a27      	ldr	r2, [pc, #156]	; (8013260 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80131c2:	4e28      	ldr	r6, [pc, #160]	; (8013264 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80131c4:	8810      	ldrh	r0, [r2, #0]
 80131c6:	f8b6 8000 	ldrh.w	r8, [r6]
 80131ca:	4c27      	ldr	r4, [pc, #156]	; (8013268 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80131cc:	4f27      	ldr	r7, [pc, #156]	; (801326c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80131ce:	4440      	add	r0, r8
 80131d0:	1c41      	adds	r1, r0, #1
 80131d2:	f021 0101 	bic.w	r1, r1, #1
 80131d6:	0409      	lsls	r1, r1, #16
 80131d8:	0c09      	lsrs	r1, r1, #16
 80131da:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 80131de:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80131e2:	eb03 020e 	add.w	r2, r3, lr
 80131e6:	eb0e 010c 	add.w	r1, lr, ip
 80131ea:	6022      	str	r2, [r4, #0]
 80131ec:	185a      	adds	r2, r3, r1
 80131ee:	603a      	str	r2, [r7, #0]
 80131f0:	220e      	movs	r2, #14
 80131f2:	fb02 f208 	mul.w	r2, r2, r8
 80131f6:	3203      	adds	r2, #3
 80131f8:	f022 0203 	bic.w	r2, r2, #3
 80131fc:	4411      	add	r1, r2
 80131fe:	440b      	add	r3, r1
 8013200:	491b      	ldr	r1, [pc, #108]	; (8013270 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 8013202:	600b      	str	r3, [r1, #0]
 8013204:	491b      	ldr	r1, [pc, #108]	; (8013274 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 8013206:	2300      	movs	r3, #0
 8013208:	800b      	strh	r3, [r1, #0]
 801320a:	491b      	ldr	r1, [pc, #108]	; (8013278 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 801320c:	6809      	ldr	r1, [r1, #0]
 801320e:	eba1 010e 	sub.w	r1, r1, lr
 8013212:	eba1 010c 	sub.w	r1, r1, ip
 8013216:	1a8a      	subs	r2, r1, r2
 8013218:	4918      	ldr	r1, [pc, #96]	; (801327c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 801321a:	600a      	str	r2, [r1, #0]
 801321c:	4a18      	ldr	r2, [pc, #96]	; (8013280 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 801321e:	469c      	mov	ip, r3
 8013220:	8013      	strh	r3, [r2, #0]
 8013222:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013226:	4283      	cmp	r3, r0
 8013228:	d10d      	bne.n	8013246 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 801322a:	8835      	ldrh	r5, [r6, #0]
 801322c:	6838      	ldr	r0, [r7, #0]
 801322e:	2300      	movs	r3, #0
 8013230:	240e      	movs	r4, #14
 8013232:	429d      	cmp	r5, r3
 8013234:	d90f      	bls.n	8013256 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8013236:	fb04 0203 	mla	r2, r4, r3, r0
 801323a:	3301      	adds	r3, #1
 801323c:	7b11      	ldrb	r1, [r2, #12]
 801323e:	f36f 1145 	bfc	r1, #5, #1
 8013242:	7311      	strb	r1, [r2, #12]
 8013244:	e7f5      	b.n	8013232 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 8013246:	682a      	ldr	r2, [r5, #0]
 8013248:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801324c:	6822      	ldr	r2, [r4, #0]
 801324e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8013252:	3301      	adds	r3, #1
 8013254:	e7e7      	b.n	8013226 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 8013256:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801325a:	bf00      	nop
 801325c:	2000e464 	.word	0x2000e464
 8013260:	2000e480 	.word	0x2000e480
 8013264:	2000e484 	.word	0x2000e484
 8013268:	2000e478 	.word	0x2000e478
 801326c:	2000e468 	.word	0x2000e468
 8013270:	2000e470 	.word	0x2000e470
 8013274:	2000e482 	.word	0x2000e482
 8013278:	2000e46c 	.word	0x2000e46c
 801327c:	2000e47c 	.word	0x2000e47c
 8013280:	2000e474 	.word	0x2000e474

08013284 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8013284:	b510      	push	{r4, lr}
 8013286:	4b10      	ldr	r3, [pc, #64]	; (80132c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8013288:	681b      	ldr	r3, [r3, #0]
 801328a:	b9db      	cbnz	r3, 80132c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801328c:	b1d1      	cbz	r1, 80132c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801328e:	4b0f      	ldr	r3, [pc, #60]	; (80132cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8013290:	801a      	strh	r2, [r3, #0]
 8013292:	4b0f      	ldr	r3, [pc, #60]	; (80132d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8013294:	881b      	ldrh	r3, [r3, #0]
 8013296:	b292      	uxth	r2, r2
 8013298:	240e      	movs	r4, #14
 801329a:	4413      	add	r3, r2
 801329c:	4362      	muls	r2, r4
 801329e:	2406      	movs	r4, #6
 80132a0:	fb04 2203 	mla	r2, r4, r3, r2
 80132a4:	428a      	cmp	r2, r1
 80132a6:	d305      	bcc.n	80132b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 80132a8:	4b0a      	ldr	r3, [pc, #40]	; (80132d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 80132aa:	4a0b      	ldr	r2, [pc, #44]	; (80132d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 80132ac:	480b      	ldr	r0, [pc, #44]	; (80132dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 80132ae:	2137      	movs	r1, #55	; 0x37
 80132b0:	f00e ff2e 	bl	8022110 <__assert_func>
 80132b4:	4b0a      	ldr	r3, [pc, #40]	; (80132e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 80132b6:	6019      	str	r1, [r3, #0]
 80132b8:	4b0a      	ldr	r3, [pc, #40]	; (80132e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 80132ba:	6018      	str	r0, [r3, #0]
 80132bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80132c0:	f7ff bf78 	b.w	80131b4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80132c4:	bd10      	pop	{r4, pc}
 80132c6:	bf00      	nop
 80132c8:	2000e470 	.word	0x2000e470
 80132cc:	2000e484 	.word	0x2000e484
 80132d0:	2000e480 	.word	0x2000e480
 80132d4:	08026762 	.word	0x08026762
 80132d8:	080267f7 	.word	0x080267f7
 80132dc:	0802673d 	.word	0x0802673d
 80132e0:	2000e46c 	.word	0x2000e46c
 80132e4:	2000e464 	.word	0x2000e464

080132e8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80132e8:	b470      	push	{r4, r5, r6}
 80132ea:	4c07      	ldr	r4, [pc, #28]	; (8013308 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80132ec:	6826      	ldr	r6, [r4, #0]
 80132ee:	4605      	mov	r5, r0
 80132f0:	4610      	mov	r0, r2
 80132f2:	9a03      	ldr	r2, [sp, #12]
 80132f4:	b936      	cbnz	r6, 8013304 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80132f6:	6025      	str	r5, [r4, #0]
 80132f8:	4c04      	ldr	r4, [pc, #16]	; (801330c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80132fa:	8021      	strh	r1, [r4, #0]
 80132fc:	bc70      	pop	{r4, r5, r6}
 80132fe:	4619      	mov	r1, r3
 8013300:	f7ff bfc0 	b.w	8013284 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013304:	bc70      	pop	{r4, r5, r6}
 8013306:	4770      	bx	lr
 8013308:	2000e488 	.word	0x2000e488
 801330c:	2000e480 	.word	0x2000e480

08013310 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8013310:	b508      	push	{r3, lr}
 8013312:	4b14      	ldr	r3, [pc, #80]	; (8013364 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013314:	6819      	ldr	r1, [r3, #0]
 8013316:	b931      	cbnz	r1, 8013326 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8013318:	4b13      	ldr	r3, [pc, #76]	; (8013368 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801331a:	4a14      	ldr	r2, [pc, #80]	; (801336c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801331c:	4814      	ldr	r0, [pc, #80]	; (8013370 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801331e:	f240 3187 	movw	r1, #903	; 0x387
 8013322:	f00e fef5 	bl	8022110 <__assert_func>
 8013326:	4a13      	ldr	r2, [pc, #76]	; (8013374 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8013328:	8803      	ldrh	r3, [r0, #0]
 801332a:	8812      	ldrh	r2, [r2, #0]
 801332c:	4293      	cmp	r3, r2
 801332e:	d204      	bcs.n	801333a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8013330:	2214      	movs	r2, #20
 8013332:	fb02 1303 	mla	r3, r2, r3, r1
 8013336:	8918      	ldrh	r0, [r3, #8]
 8013338:	bd08      	pop	{r3, pc}
 801333a:	490f      	ldr	r1, [pc, #60]	; (8013378 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 801333c:	8809      	ldrh	r1, [r1, #0]
 801333e:	4411      	add	r1, r2
 8013340:	428b      	cmp	r3, r1
 8013342:	da06      	bge.n	8013352 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8013344:	1a9b      	subs	r3, r3, r2
 8013346:	4a0d      	ldr	r2, [pc, #52]	; (801337c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8013348:	6812      	ldr	r2, [r2, #0]
 801334a:	210e      	movs	r1, #14
 801334c:	fb01 2303 	mla	r3, r1, r3, r2
 8013350:	e7f1      	b.n	8013336 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 8013352:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013356:	4293      	cmp	r3, r2
 8013358:	bf0a      	itet	eq
 801335a:	4b09      	ldreq	r3, [pc, #36]	; (8013380 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 801335c:	2000      	movne	r0, #0
 801335e:	8818      	ldrheq	r0, [r3, #0]
 8013360:	e7ea      	b.n	8013338 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8013362:	bf00      	nop
 8013364:	2000e488 	.word	0x2000e488
 8013368:	080267bb 	.word	0x080267bb
 801336c:	080268a4 	.word	0x080268a4
 8013370:	0802673d 	.word	0x0802673d
 8013374:	2000e480 	.word	0x2000e480
 8013378:	2000e484 	.word	0x2000e484
 801337c:	2000e468 	.word	0x2000e468
 8013380:	2000e3d4 	.word	0x2000e3d4

08013384 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8013384:	b508      	push	{r3, lr}
 8013386:	4b14      	ldr	r3, [pc, #80]	; (80133d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8013388:	6819      	ldr	r1, [r3, #0]
 801338a:	b931      	cbnz	r1, 801339a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 801338c:	4b13      	ldr	r3, [pc, #76]	; (80133dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801338e:	4a14      	ldr	r2, [pc, #80]	; (80133e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8013390:	4814      	ldr	r0, [pc, #80]	; (80133e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013392:	f240 319b 	movw	r1, #923	; 0x39b
 8013396:	f00e febb 	bl	8022110 <__assert_func>
 801339a:	4a13      	ldr	r2, [pc, #76]	; (80133e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801339c:	8803      	ldrh	r3, [r0, #0]
 801339e:	8812      	ldrh	r2, [r2, #0]
 80133a0:	4293      	cmp	r3, r2
 80133a2:	d204      	bcs.n	80133ae <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 80133a4:	2214      	movs	r2, #20
 80133a6:	fb02 1303 	mla	r3, r2, r3, r1
 80133aa:	8958      	ldrh	r0, [r3, #10]
 80133ac:	bd08      	pop	{r3, pc}
 80133ae:	490f      	ldr	r1, [pc, #60]	; (80133ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 80133b0:	8809      	ldrh	r1, [r1, #0]
 80133b2:	4411      	add	r1, r2
 80133b4:	428b      	cmp	r3, r1
 80133b6:	da06      	bge.n	80133c6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 80133b8:	1a9b      	subs	r3, r3, r2
 80133ba:	4a0d      	ldr	r2, [pc, #52]	; (80133f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 80133bc:	6812      	ldr	r2, [r2, #0]
 80133be:	210e      	movs	r1, #14
 80133c0:	fb01 2303 	mla	r3, r1, r3, r2
 80133c4:	e7f1      	b.n	80133aa <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 80133c6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80133ca:	4293      	cmp	r3, r2
 80133cc:	bf0a      	itet	eq
 80133ce:	4b09      	ldreq	r3, [pc, #36]	; (80133f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 80133d0:	2000      	movne	r0, #0
 80133d2:	8818      	ldrheq	r0, [r3, #0]
 80133d4:	e7ea      	b.n	80133ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 80133d6:	bf00      	nop
 80133d8:	2000e488 	.word	0x2000e488
 80133dc:	080267bb 	.word	0x080267bb
 80133e0:	080268d0 	.word	0x080268d0
 80133e4:	0802673d 	.word	0x0802673d
 80133e8:	2000e480 	.word	0x2000e480
 80133ec:	2000e484 	.word	0x2000e484
 80133f0:	2000e468 	.word	0x2000e468
 80133f4:	2000e3d6 	.word	0x2000e3d6

080133f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80133f8:	b510      	push	{r4, lr}
 80133fa:	4b23      	ldr	r3, [pc, #140]	; (8013488 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80133fc:	681c      	ldr	r4, [r3, #0]
 80133fe:	b934      	cbnz	r4, 801340e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8013400:	4b22      	ldr	r3, [pc, #136]	; (801348c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013402:	4a23      	ldr	r2, [pc, #140]	; (8013490 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8013404:	4823      	ldr	r0, [pc, #140]	; (8013494 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8013406:	f240 31af 	movw	r1, #943	; 0x3af
 801340a:	f00e fe81 	bl	8022110 <__assert_func>
 801340e:	4a22      	ldr	r2, [pc, #136]	; (8013498 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8013410:	880b      	ldrh	r3, [r1, #0]
 8013412:	8812      	ldrh	r2, [r2, #0]
 8013414:	4293      	cmp	r3, r2
 8013416:	d211      	bcs.n	801343c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8013418:	2214      	movs	r2, #20
 801341a:	fb02 4303 	mla	r3, r2, r3, r4
 801341e:	8a1a      	ldrh	r2, [r3, #16]
 8013420:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013424:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013428:	8a5b      	ldrh	r3, [r3, #18]
 801342a:	8004      	strh	r4, [r0, #0]
 801342c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013430:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013434:	8041      	strh	r1, [r0, #2]
 8013436:	8082      	strh	r2, [r0, #4]
 8013438:	80c3      	strh	r3, [r0, #6]
 801343a:	e00e      	b.n	801345a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801343c:	4917      	ldr	r1, [pc, #92]	; (801349c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 801343e:	8809      	ldrh	r1, [r1, #0]
 8013440:	4411      	add	r1, r2
 8013442:	428b      	cmp	r3, r1
 8013444:	da0a      	bge.n	801345c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8013446:	1a9b      	subs	r3, r3, r2
 8013448:	4a15      	ldr	r2, [pc, #84]	; (80134a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 801344a:	6812      	ldr	r2, [r2, #0]
 801344c:	210e      	movs	r1, #14
 801344e:	fb01 2303 	mla	r3, r1, r3, r2
 8013452:	681a      	ldr	r2, [r3, #0]
 8013454:	6002      	str	r2, [r0, #0]
 8013456:	685a      	ldr	r2, [r3, #4]
 8013458:	6042      	str	r2, [r0, #4]
 801345a:	bd10      	pop	{r4, pc}
 801345c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013460:	4293      	cmp	r3, r2
 8013462:	d10b      	bne.n	801347c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8013464:	4b0f      	ldr	r3, [pc, #60]	; (80134a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8013466:	f9b3 1000 	ldrsh.w	r1, [r3]
 801346a:	4b0f      	ldr	r3, [pc, #60]	; (80134a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 801346c:	8081      	strh	r1, [r0, #4]
 801346e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013472:	80c2      	strh	r2, [r0, #6]
 8013474:	2300      	movs	r3, #0
 8013476:	8003      	strh	r3, [r0, #0]
 8013478:	8043      	strh	r3, [r0, #2]
 801347a:	e7ee      	b.n	801345a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801347c:	2300      	movs	r3, #0
 801347e:	8003      	strh	r3, [r0, #0]
 8013480:	8043      	strh	r3, [r0, #2]
 8013482:	8083      	strh	r3, [r0, #4]
 8013484:	e7d8      	b.n	8013438 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8013486:	bf00      	nop
 8013488:	2000e488 	.word	0x2000e488
 801348c:	080267bb 	.word	0x080267bb
 8013490:	0802683d 	.word	0x0802683d
 8013494:	0802673d 	.word	0x0802673d
 8013498:	2000e480 	.word	0x2000e480
 801349c:	2000e484 	.word	0x2000e484
 80134a0:	2000e468 	.word	0x2000e468
 80134a4:	2000e3d4 	.word	0x2000e3d4
 80134a8:	2000e3d6 	.word	0x2000e3d6

080134ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80134ac:	4b18      	ldr	r3, [pc, #96]	; (8013510 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80134ae:	681b      	ldr	r3, [r3, #0]
 80134b0:	b34b      	cbz	r3, 8013506 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 80134b2:	4a18      	ldr	r2, [pc, #96]	; (8013514 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80134b4:	8800      	ldrh	r0, [r0, #0]
 80134b6:	8812      	ldrh	r2, [r2, #0]
 80134b8:	4290      	cmp	r0, r2
 80134ba:	d211      	bcs.n	80134e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 80134bc:	2214      	movs	r2, #20
 80134be:	fb02 3300 	mla	r3, r2, r0, r3
 80134c2:	8a1a      	ldrh	r2, [r3, #16]
 80134c4:	8919      	ldrh	r1, [r3, #8]
 80134c6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80134ca:	428a      	cmp	r2, r1
 80134cc:	db1d      	blt.n	801350a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 80134ce:	8a58      	ldrh	r0, [r3, #18]
 80134d0:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80134d4:	895b      	ldrh	r3, [r3, #10]
 80134d6:	4298      	cmp	r0, r3
 80134d8:	bfac      	ite	ge
 80134da:	2000      	movge	r0, #0
 80134dc:	2001      	movlt	r0, #1
 80134de:	4770      	bx	lr
 80134e0:	4b0d      	ldr	r3, [pc, #52]	; (8013518 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80134e2:	881b      	ldrh	r3, [r3, #0]
 80134e4:	4413      	add	r3, r2
 80134e6:	4298      	cmp	r0, r3
 80134e8:	da0d      	bge.n	8013506 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 80134ea:	4b0c      	ldr	r3, [pc, #48]	; (801351c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 80134ec:	681b      	ldr	r3, [r3, #0]
 80134ee:	1a80      	subs	r0, r0, r2
 80134f0:	220e      	movs	r2, #14
 80134f2:	fb02 3300 	mla	r3, r2, r0, r3
 80134f6:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80134fa:	891a      	ldrh	r2, [r3, #8]
 80134fc:	4291      	cmp	r1, r2
 80134fe:	db04      	blt.n	801350a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8013500:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8013504:	e7e6      	b.n	80134d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8013506:	2000      	movs	r0, #0
 8013508:	4770      	bx	lr
 801350a:	2001      	movs	r0, #1
 801350c:	4770      	bx	lr
 801350e:	bf00      	nop
 8013510:	2000e488 	.word	0x2000e488
 8013514:	2000e480 	.word	0x2000e480
 8013518:	2000e484 	.word	0x2000e484
 801351c:	2000e468 	.word	0x2000e468

08013520 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013520:	b508      	push	{r3, lr}
 8013522:	4b12      	ldr	r3, [pc, #72]	; (801356c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013524:	6819      	ldr	r1, [r3, #0]
 8013526:	b931      	cbnz	r1, 8013536 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013528:	4b11      	ldr	r3, [pc, #68]	; (8013570 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801352a:	4a12      	ldr	r2, [pc, #72]	; (8013574 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801352c:	4812      	ldr	r0, [pc, #72]	; (8013578 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801352e:	f240 31d3 	movw	r1, #979	; 0x3d3
 8013532:	f00e fded 	bl	8022110 <__assert_func>
 8013536:	8803      	ldrh	r3, [r0, #0]
 8013538:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801353c:	4293      	cmp	r3, r2
 801353e:	d012      	beq.n	8013566 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8013540:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013544:	4293      	cmp	r3, r2
 8013546:	d103      	bne.n	8013550 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8013548:	4b0c      	ldr	r3, [pc, #48]	; (801357c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801354a:	681b      	ldr	r3, [r3, #0]
 801354c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801354e:	bd08      	pop	{r3, pc}
 8013550:	4a0b      	ldr	r2, [pc, #44]	; (8013580 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8013552:	6812      	ldr	r2, [r2, #0]
 8013554:	b11a      	cbz	r2, 801355e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8013556:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801355a:	2800      	cmp	r0, #0
 801355c:	d1f7      	bne.n	801354e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801355e:	2214      	movs	r2, #20
 8013560:	4353      	muls	r3, r2
 8013562:	58c8      	ldr	r0, [r1, r3]
 8013564:	e7f3      	b.n	801354e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8013566:	2000      	movs	r0, #0
 8013568:	e7f1      	b.n	801354e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801356a:	bf00      	nop
 801356c:	2000e488 	.word	0x2000e488
 8013570:	080267bb 	.word	0x080267bb
 8013574:	08026873 	.word	0x08026873
 8013578:	0802673d 	.word	0x0802673d
 801357c:	2000e3e0 	.word	0x2000e3e0
 8013580:	2000e464 	.word	0x2000e464

08013584 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8013584:	8802      	ldrh	r2, [r0, #0]
 8013586:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 801358a:	429a      	cmp	r2, r3
 801358c:	d845      	bhi.n	801361a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801358e:	4b24      	ldr	r3, [pc, #144]	; (8013620 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013590:	8818      	ldrh	r0, [r3, #0]
 8013592:	4282      	cmp	r2, r0
 8013594:	d221      	bcs.n	80135da <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8013596:	4b23      	ldr	r3, [pc, #140]	; (8013624 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013598:	6819      	ldr	r1, [r3, #0]
 801359a:	2314      	movs	r3, #20
 801359c:	fb03 1302 	mla	r3, r3, r2, r1
 80135a0:	6858      	ldr	r0, [r3, #4]
 80135a2:	2800      	cmp	r0, #0
 80135a4:	d03a      	beq.n	801361c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 80135a6:	4920      	ldr	r1, [pc, #128]	; (8013628 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80135a8:	6809      	ldr	r1, [r1, #0]
 80135aa:	2900      	cmp	r1, #0
 80135ac:	d036      	beq.n	801361c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 80135ae:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80135b2:	2900      	cmp	r1, #0
 80135b4:	d032      	beq.n	801361c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 80135b6:	891a      	ldrh	r2, [r3, #8]
 80135b8:	8958      	ldrh	r0, [r3, #10]
 80135ba:	4350      	muls	r0, r2
 80135bc:	7c5a      	ldrb	r2, [r3, #17]
 80135be:	7cdb      	ldrb	r3, [r3, #19]
 80135c0:	0952      	lsrs	r2, r2, #5
 80135c2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80135c6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80135ca:	2b0b      	cmp	r3, #11
 80135cc:	bf18      	it	ne
 80135ce:	0040      	lslne	r0, r0, #1
 80135d0:	3003      	adds	r0, #3
 80135d2:	f020 0003 	bic.w	r0, r0, #3
 80135d6:	4408      	add	r0, r1
 80135d8:	4770      	bx	lr
 80135da:	4b14      	ldr	r3, [pc, #80]	; (801362c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 80135dc:	881b      	ldrh	r3, [r3, #0]
 80135de:	4403      	add	r3, r0
 80135e0:	429a      	cmp	r2, r3
 80135e2:	da1a      	bge.n	801361a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 80135e4:	4b12      	ldr	r3, [pc, #72]	; (8013630 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 80135e6:	681b      	ldr	r3, [r3, #0]
 80135e8:	1a10      	subs	r0, r2, r0
 80135ea:	210e      	movs	r1, #14
 80135ec:	fb01 3000 	mla	r0, r1, r0, r3
 80135f0:	7b03      	ldrb	r3, [r0, #12]
 80135f2:	f003 031f 	and.w	r3, r3, #31
 80135f6:	2b0b      	cmp	r3, #11
 80135f8:	d10b      	bne.n	8013612 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80135fa:	8903      	ldrh	r3, [r0, #8]
 80135fc:	8940      	ldrh	r0, [r0, #10]
 80135fe:	4358      	muls	r0, r3
 8013600:	4b09      	ldr	r3, [pc, #36]	; (8013628 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8013602:	6819      	ldr	r1, [r3, #0]
 8013604:	3003      	adds	r0, #3
 8013606:	f020 0303 	bic.w	r3, r0, #3
 801360a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801360e:	4418      	add	r0, r3
 8013610:	4770      	bx	lr
 8013612:	2b0d      	cmp	r3, #13
 8013614:	d101      	bne.n	801361a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8013616:	300d      	adds	r0, #13
 8013618:	4770      	bx	lr
 801361a:	2000      	movs	r0, #0
 801361c:	4770      	bx	lr
 801361e:	bf00      	nop
 8013620:	2000e480 	.word	0x2000e480
 8013624:	2000e488 	.word	0x2000e488
 8013628:	2000e464 	.word	0x2000e464
 801362c:	2000e484 	.word	0x2000e484
 8013630:	2000e468 	.word	0x2000e468

08013634 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013634:	4b19      	ldr	r3, [pc, #100]	; (801369c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8013636:	6819      	ldr	r1, [r3, #0]
 8013638:	8803      	ldrh	r3, [r0, #0]
 801363a:	b1e9      	cbz	r1, 8013678 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801363c:	4a18      	ldr	r2, [pc, #96]	; (80136a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801363e:	8812      	ldrh	r2, [r2, #0]
 8013640:	429a      	cmp	r2, r3
 8013642:	d90a      	bls.n	801365a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8013644:	2214      	movs	r2, #20
 8013646:	fb02 1303 	mla	r3, r2, r3, r1
 801364a:	7c58      	ldrb	r0, [r3, #17]
 801364c:	0942      	lsrs	r2, r0, #5
 801364e:	7cd8      	ldrb	r0, [r3, #19]
 8013650:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8013654:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8013658:	4770      	bx	lr
 801365a:	4912      	ldr	r1, [pc, #72]	; (80136a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 801365c:	8809      	ldrh	r1, [r1, #0]
 801365e:	4411      	add	r1, r2
 8013660:	428b      	cmp	r3, r1
 8013662:	da09      	bge.n	8013678 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8013664:	1a9b      	subs	r3, r3, r2
 8013666:	4a10      	ldr	r2, [pc, #64]	; (80136a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 8013668:	6812      	ldr	r2, [r2, #0]
 801366a:	210e      	movs	r1, #14
 801366c:	fb01 2303 	mla	r3, r1, r3, r2
 8013670:	7b18      	ldrb	r0, [r3, #12]
 8013672:	f000 001f 	and.w	r0, r0, #31
 8013676:	4770      	bx	lr
 8013678:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801367c:	4293      	cmp	r3, r2
 801367e:	d10a      	bne.n	8013696 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 8013680:	4b0a      	ldr	r3, [pc, #40]	; (80136ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 8013682:	681b      	ldr	r3, [r3, #0]
 8013684:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8013688:	b10a      	cbz	r2, 801368e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801368a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801368c:	b900      	cbnz	r0, 8013690 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 801368e:	6898      	ldr	r0, [r3, #8]
 8013690:	6803      	ldr	r3, [r0, #0]
 8013692:	6a1b      	ldr	r3, [r3, #32]
 8013694:	4718      	bx	r3
 8013696:	2000      	movs	r0, #0
 8013698:	4770      	bx	lr
 801369a:	bf00      	nop
 801369c:	2000e488 	.word	0x2000e488
 80136a0:	2000e480 	.word	0x2000e480
 80136a4:	2000e484 	.word	0x2000e484
 80136a8:	2000e468 	.word	0x2000e468
 80136ac:	2000e3e0 	.word	0x2000e3e0

080136b0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80136b0:	2010      	movs	r0, #16
 80136b2:	4770      	bx	lr

080136b4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80136b4:	2000      	movs	r0, #0
 80136b6:	4770      	bx	lr

080136b8 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 80136b8:	00d2      	lsls	r2, r2, #3
 80136ba:	0209      	lsls	r1, r1, #8
 80136bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80136c0:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 80136c4:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80136c8:	4310      	orrs	r0, r2
 80136ca:	4770      	bx	lr

080136cc <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 80136cc:	0a09      	lsrs	r1, r1, #8
 80136ce:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 80136d2:	4770      	bx	lr

080136d4 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 80136d4:	08c9      	lsrs	r1, r1, #3
 80136d6:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 80136da:	4770      	bx	lr

080136dc <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 80136dc:	00c9      	lsls	r1, r1, #3
 80136de:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 80136e2:	4770      	bx	lr

080136e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80136e4:	2bff      	cmp	r3, #255	; 0xff
 80136e6:	d050      	beq.n	801378a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80136e8:	2a0b      	cmp	r2, #11
 80136ea:	d04a      	beq.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80136ec:	d80e      	bhi.n	801370c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80136ee:	2a03      	cmp	r2, #3
 80136f0:	d03f      	beq.n	8013772 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80136f2:	d804      	bhi.n	80136fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80136f4:	2a01      	cmp	r2, #1
 80136f6:	d03e      	beq.n	8013776 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80136f8:	d93f      	bls.n	801377a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80136fa:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80136fc:	4770      	bx	lr
 80136fe:	2a09      	cmp	r2, #9
 8013700:	d03f      	beq.n	8013782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013702:	d83c      	bhi.n	801377e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013704:	2a08      	cmp	r2, #8
 8013706:	d03a      	beq.n	801377e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013708:	2000      	movs	r0, #0
 801370a:	4770      	bx	lr
 801370c:	2a2f      	cmp	r2, #47	; 0x2f
 801370e:	d024      	beq.n	801375a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8013710:	d80d      	bhi.n	801372e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8013712:	2a2d      	cmp	r2, #45	; 0x2d
 8013714:	d014      	beq.n	8013740 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8013716:	d826      	bhi.n	8013766 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8013718:	2a2c      	cmp	r2, #44	; 0x2c
 801371a:	d1f5      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801371c:	684b      	ldr	r3, [r1, #4]
 801371e:	781b      	ldrb	r3, [r3, #0]
 8013720:	2b01      	cmp	r3, #1
 8013722:	d018      	beq.n	8013756 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8013724:	d323      	bcc.n	801376e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8013726:	2b02      	cmp	r3, #2
 8013728:	d1ee      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801372a:	6880      	ldr	r0, [r0, #8]
 801372c:	4770      	bx	lr
 801372e:	2a31      	cmp	r2, #49	; 0x31
 8013730:	d004      	beq.n	801373c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8013732:	d328      	bcc.n	8013786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013734:	2a32      	cmp	r2, #50	; 0x32
 8013736:	d026      	beq.n	8013786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013738:	2a33      	cmp	r2, #51	; 0x33
 801373a:	d1e5      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801373c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801373e:	4770      	bx	lr
 8013740:	684b      	ldr	r3, [r1, #4]
 8013742:	781b      	ldrb	r3, [r3, #0]
 8013744:	2b01      	cmp	r3, #1
 8013746:	d004      	beq.n	8013752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8013748:	d30b      	bcc.n	8013762 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801374a:	2b02      	cmp	r3, #2
 801374c:	d1dc      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801374e:	6900      	ldr	r0, [r0, #16]
 8013750:	4770      	bx	lr
 8013752:	6a00      	ldr	r0, [r0, #32]
 8013754:	4770      	bx	lr
 8013756:	6980      	ldr	r0, [r0, #24]
 8013758:	4770      	bx	lr
 801375a:	684b      	ldr	r3, [r1, #4]
 801375c:	781b      	ldrb	r3, [r3, #0]
 801375e:	2b00      	cmp	r3, #0
 8013760:	d1d2      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013762:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8013764:	4770      	bx	lr
 8013766:	684b      	ldr	r3, [r1, #4]
 8013768:	781b      	ldrb	r3, [r3, #0]
 801376a:	2b00      	cmp	r3, #0
 801376c:	d1cc      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801376e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013770:	4770      	bx	lr
 8013772:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8013774:	4770      	bx	lr
 8013776:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8013778:	4770      	bx	lr
 801377a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801377c:	4770      	bx	lr
 801377e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8013780:	4770      	bx	lr
 8013782:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8013784:	4770      	bx	lr
 8013786:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8013788:	4770      	bx	lr
 801378a:	2a0b      	cmp	r2, #11
 801378c:	d049      	beq.n	8013822 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801378e:	d80e      	bhi.n	80137ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8013790:	2a03      	cmp	r2, #3
 8013792:	d040      	beq.n	8013816 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8013794:	d804      	bhi.n	80137a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8013796:	2a01      	cmp	r2, #1
 8013798:	d03f      	beq.n	801381a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801379a:	d940      	bls.n	801381e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801379c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801379e:	4770      	bx	lr
 80137a0:	2a09      	cmp	r2, #9
 80137a2:	d03e      	beq.n	8013822 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80137a4:	d801      	bhi.n	80137aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80137a6:	2a08      	cmp	r2, #8
 80137a8:	d1ae      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137aa:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80137ac:	4770      	bx	lr
 80137ae:	2a2f      	cmp	r2, #47	; 0x2f
 80137b0:	d024      	beq.n	80137fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80137b2:	d80d      	bhi.n	80137d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80137b4:	2a2d      	cmp	r2, #45	; 0x2d
 80137b6:	d014      	beq.n	80137e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80137b8:	d826      	bhi.n	8013808 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80137ba:	2a2c      	cmp	r2, #44	; 0x2c
 80137bc:	d1a4      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137be:	684b      	ldr	r3, [r1, #4]
 80137c0:	781b      	ldrb	r3, [r3, #0]
 80137c2:	2b01      	cmp	r3, #1
 80137c4:	d018      	beq.n	80137f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80137c6:	d324      	bcc.n	8013812 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80137c8:	2b02      	cmp	r3, #2
 80137ca:	d19d      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137cc:	68c0      	ldr	r0, [r0, #12]
 80137ce:	4770      	bx	lr
 80137d0:	2a31      	cmp	r2, #49	; 0x31
 80137d2:	d004      	beq.n	80137de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80137d4:	d327      	bcc.n	8013826 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80137d6:	2a32      	cmp	r2, #50	; 0x32
 80137d8:	d025      	beq.n	8013826 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80137da:	2a33      	cmp	r2, #51	; 0x33
 80137dc:	d194      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137de:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80137e0:	4770      	bx	lr
 80137e2:	684b      	ldr	r3, [r1, #4]
 80137e4:	781b      	ldrb	r3, [r3, #0]
 80137e6:	2b01      	cmp	r3, #1
 80137e8:	d004      	beq.n	80137f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80137ea:	d30b      	bcc.n	8013804 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80137ec:	2b02      	cmp	r3, #2
 80137ee:	d18b      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80137f0:	6940      	ldr	r0, [r0, #20]
 80137f2:	4770      	bx	lr
 80137f4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80137f6:	4770      	bx	lr
 80137f8:	69c0      	ldr	r0, [r0, #28]
 80137fa:	4770      	bx	lr
 80137fc:	684b      	ldr	r3, [r1, #4]
 80137fe:	781b      	ldrb	r3, [r3, #0]
 8013800:	2b00      	cmp	r3, #0
 8013802:	d181      	bne.n	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013804:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8013806:	4770      	bx	lr
 8013808:	684b      	ldr	r3, [r1, #4]
 801380a:	781b      	ldrb	r3, [r3, #0]
 801380c:	2b00      	cmp	r3, #0
 801380e:	f47f af7b 	bne.w	8013708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013812:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8013814:	4770      	bx	lr
 8013816:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8013818:	4770      	bx	lr
 801381a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801381c:	4770      	bx	lr
 801381e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8013820:	4770      	bx	lr
 8013822:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8013824:	4770      	bx	lr
 8013826:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8013828:	4770      	bx	lr

0801382a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801382a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801382e:	b087      	sub	sp, #28
 8013830:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013832:	9205      	str	r2, [sp, #20]
 8013834:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013838:	9202      	str	r2, [sp, #8]
 801383a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801383e:	9101      	str	r1, [sp, #4]
 8013840:	6841      	ldr	r1, [r0, #4]
 8013842:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8013846:	fb01 2404 	mla	r4, r1, r4, r2
 801384a:	6802      	ldr	r2, [r0, #0]
 801384c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013850:	f8de 2000 	ldr.w	r2, [lr]
 8013854:	9203      	str	r2, [sp, #12]
 8013856:	f8de 2004 	ldr.w	r2, [lr, #4]
 801385a:	3204      	adds	r2, #4
 801385c:	9204      	str	r2, [sp, #16]
 801385e:	9a02      	ldr	r2, [sp, #8]
 8013860:	43d6      	mvns	r6, r2
 8013862:	b2f6      	uxtb	r6, r6
 8013864:	9a01      	ldr	r2, [sp, #4]
 8013866:	2a00      	cmp	r2, #0
 8013868:	dc03      	bgt.n	8013872 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801386a:	9a05      	ldr	r2, [sp, #20]
 801386c:	2a00      	cmp	r2, #0
 801386e:	f340 8129 	ble.w	8013ac4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013872:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013874:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013878:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801387c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013880:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013882:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013886:	2b00      	cmp	r3, #0
 8013888:	dd0e      	ble.n	80138a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801388a:	1408      	asrs	r0, r1, #16
 801388c:	d405      	bmi.n	801389a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801388e:	4560      	cmp	r0, ip
 8013890:	da03      	bge.n	801389a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013892:	1410      	asrs	r0, r2, #16
 8013894:	d401      	bmi.n	801389a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013896:	42b8      	cmp	r0, r7
 8013898:	db07      	blt.n	80138aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801389a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801389c:	4401      	add	r1, r0
 801389e:	9814      	ldr	r0, [sp, #80]	; 0x50
 80138a0:	3b01      	subs	r3, #1
 80138a2:	4402      	add	r2, r0
 80138a4:	3402      	adds	r4, #2
 80138a6:	e7ee      	b.n	8013886 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80138a8:	d071      	beq.n	801398e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80138aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80138ac:	1e58      	subs	r0, r3, #1
 80138ae:	fb05 1500 	mla	r5, r5, r0, r1
 80138b2:	142d      	asrs	r5, r5, #16
 80138b4:	d45f      	bmi.n	8013976 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80138b6:	4565      	cmp	r5, ip
 80138b8:	da5d      	bge.n	8013976 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80138ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80138bc:	fb05 2000 	mla	r0, r5, r0, r2
 80138c0:	1400      	asrs	r0, r0, #16
 80138c2:	d458      	bmi.n	8013976 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80138c4:	42b8      	cmp	r0, r7
 80138c6:	da56      	bge.n	8013976 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80138c8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80138cc:	4699      	mov	r9, r3
 80138ce:	46a2      	mov	sl, r4
 80138d0:	f1b9 0f00 	cmp.w	r9, #0
 80138d4:	dd57      	ble.n	8013986 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80138d6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80138da:	9803      	ldr	r0, [sp, #12]
 80138dc:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80138e0:	140d      	asrs	r5, r1, #16
 80138e2:	fb07 000c 	mla	r0, r7, ip, r0
 80138e6:	f109 39ff 	add.w	r9, r9, #4294967295
 80138ea:	5d40      	ldrb	r0, [r0, r5]
 80138ec:	9d04      	ldr	r5, [sp, #16]
 80138ee:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80138f2:	f8ba 5000 	ldrh.w	r5, [sl]
 80138f6:	122f      	asrs	r7, r5, #8
 80138f8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80138fc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013900:	fb17 f706 	smulbb	r7, r7, r6
 8013904:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013908:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801390c:	00ed      	lsls	r5, r5, #3
 801390e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013912:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8013916:	10c7      	asrs	r7, r0, #3
 8013918:	b2ed      	uxtb	r5, r5
 801391a:	00c0      	lsls	r0, r0, #3
 801391c:	fb18 f806 	smulbb	r8, r8, r6
 8013920:	fb15 f506 	smulbb	r5, r5, r6
 8013924:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013928:	b2c0      	uxtb	r0, r0
 801392a:	fa1f fc8c 	uxth.w	ip, ip
 801392e:	fb07 870b 	mla	r7, r7, fp, r8
 8013932:	fb00 500b 	mla	r0, r0, fp, r5
 8013936:	b280      	uxth	r0, r0
 8013938:	b2bf      	uxth	r7, r7
 801393a:	f10c 0501 	add.w	r5, ip, #1
 801393e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013942:	f107 0801 	add.w	r8, r7, #1
 8013946:	1c45      	adds	r5, r0, #1
 8013948:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801394c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013950:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013952:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013956:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801395a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801395e:	ea4c 0c05 	orr.w	ip, ip, r5
 8013962:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013966:	4401      	add	r1, r0
 8013968:	9814      	ldr	r0, [sp, #80]	; 0x50
 801396a:	ea4c 0c08 	orr.w	ip, ip, r8
 801396e:	f82a cb02 	strh.w	ip, [sl], #2
 8013972:	4402      	add	r2, r0
 8013974:	e7ac      	b.n	80138d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013976:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801397a:	f04f 0800 	mov.w	r8, #0
 801397e:	eb03 0008 	add.w	r0, r3, r8
 8013982:	2800      	cmp	r0, #0
 8013984:	dc41      	bgt.n	8013a0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013986:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801398a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801398e:	9b01      	ldr	r3, [sp, #4]
 8013990:	2b00      	cmp	r3, #0
 8013992:	f340 8097 	ble.w	8013ac4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013996:	ee30 0a04 	vadd.f32	s0, s0, s8
 801399a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801399e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80139a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80139a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80139ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80139b0:	eef0 6a62 	vmov.f32	s13, s5
 80139b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80139b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80139bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80139c0:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80139c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80139c8:	eef0 6a43 	vmov.f32	s13, s6
 80139cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80139d0:	ee12 2a90 	vmov	r2, s5
 80139d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80139d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80139dc:	ee13 2a10 	vmov	r2, s6
 80139e0:	9313      	str	r3, [sp, #76]	; 0x4c
 80139e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80139e8:	9314      	str	r3, [sp, #80]	; 0x50
 80139ea:	9b01      	ldr	r3, [sp, #4]
 80139ec:	9a05      	ldr	r2, [sp, #20]
 80139ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80139f2:	3b01      	subs	r3, #1
 80139f4:	9301      	str	r3, [sp, #4]
 80139f6:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80139fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139fc:	eeb0 3a67 	vmov.f32	s6, s15
 8013a00:	bf08      	it	eq
 8013a02:	4613      	moveq	r3, r2
 8013a04:	eef0 2a47 	vmov.f32	s5, s14
 8013a08:	e72c      	b.n	8013864 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013a0a:	140f      	asrs	r7, r1, #16
 8013a0c:	d453      	bmi.n	8013ab6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a0e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013a12:	42bd      	cmp	r5, r7
 8013a14:	dd4f      	ble.n	8013ab6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a16:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013a1a:	d44c      	bmi.n	8013ab6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a1c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013a20:	4560      	cmp	r0, ip
 8013a22:	dd48      	ble.n	8013ab6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013a24:	9803      	ldr	r0, [sp, #12]
 8013a26:	b22d      	sxth	r5, r5
 8013a28:	fb0c 0505 	mla	r5, ip, r5, r0
 8013a2c:	5de8      	ldrb	r0, [r5, r7]
 8013a2e:	9d04      	ldr	r5, [sp, #16]
 8013a30:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013a34:	f06f 0501 	mvn.w	r5, #1
 8013a38:	fb05 fb08 	mul.w	fp, r5, r8
 8013a3c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013a40:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013a44:	122f      	asrs	r7, r5, #8
 8013a46:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013a4a:	fb17 f706 	smulbb	r7, r7, r6
 8013a4e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013a52:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013a56:	00ed      	lsls	r5, r5, #3
 8013a58:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013a5c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013a60:	10c7      	asrs	r7, r0, #3
 8013a62:	b2ed      	uxtb	r5, r5
 8013a64:	00c0      	lsls	r0, r0, #3
 8013a66:	fb19 f906 	smulbb	r9, r9, r6
 8013a6a:	fb15 f506 	smulbb	r5, r5, r6
 8013a6e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013a72:	b2c0      	uxtb	r0, r0
 8013a74:	fa1f fc8c 	uxth.w	ip, ip
 8013a78:	fb07 970a 	mla	r7, r7, sl, r9
 8013a7c:	fb00 500a 	mla	r0, r0, sl, r5
 8013a80:	b2bf      	uxth	r7, r7
 8013a82:	b280      	uxth	r0, r0
 8013a84:	f10c 0501 	add.w	r5, ip, #1
 8013a88:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013a8c:	f107 0901 	add.w	r9, r7, #1
 8013a90:	1c45      	adds	r5, r0, #1
 8013a92:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013a96:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013a9a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013a9e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013aa2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013aa6:	ea4c 0c05 	orr.w	ip, ip, r5
 8013aaa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013aae:	ea4c 0c09 	orr.w	ip, ip, r9
 8013ab2:	f824 c00b 	strh.w	ip, [r4, fp]
 8013ab6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013ab8:	4401      	add	r1, r0
 8013aba:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013abc:	f108 38ff 	add.w	r8, r8, #4294967295
 8013ac0:	4402      	add	r2, r0
 8013ac2:	e75c      	b.n	801397e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013ac4:	b007      	add	sp, #28
 8013ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013aca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013aca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ace:	b085      	sub	sp, #20
 8013ad0:	4693      	mov	fp, r2
 8013ad2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013ad4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013ad6:	6870      	ldr	r0, [r6, #4]
 8013ad8:	9100      	str	r1, [sp, #0]
 8013ada:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013ade:	fb00 2404 	mla	r4, r0, r4, r2
 8013ae2:	6832      	ldr	r2, [r6, #0]
 8013ae4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013ae8:	682a      	ldr	r2, [r5, #0]
 8013aea:	9201      	str	r2, [sp, #4]
 8013aec:	686a      	ldr	r2, [r5, #4]
 8013aee:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8013af2:	3204      	adds	r2, #4
 8013af4:	9202      	str	r2, [sp, #8]
 8013af6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013afa:	9a00      	ldr	r2, [sp, #0]
 8013afc:	2a00      	cmp	r2, #0
 8013afe:	dc03      	bgt.n	8013b08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013b00:	f1bb 0f00 	cmp.w	fp, #0
 8013b04:	f340 80a0 	ble.w	8013c48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013b08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013b0a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013b0e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013b12:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013b16:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013b18:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013b1c:	2b00      	cmp	r3, #0
 8013b1e:	dd0c      	ble.n	8013b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013b20:	1406      	asrs	r6, r0, #16
 8013b22:	d405      	bmi.n	8013b30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013b24:	454e      	cmp	r6, r9
 8013b26:	da03      	bge.n	8013b30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013b28:	1416      	asrs	r6, r2, #16
 8013b2a:	d401      	bmi.n	8013b30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013b2c:	4546      	cmp	r6, r8
 8013b2e:	db05      	blt.n	8013b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013b30:	4470      	add	r0, lr
 8013b32:	4462      	add	r2, ip
 8013b34:	3b01      	subs	r3, #1
 8013b36:	3402      	adds	r4, #2
 8013b38:	e7f0      	b.n	8013b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013b3a:	d00f      	beq.n	8013b5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013b3c:	1e5e      	subs	r6, r3, #1
 8013b3e:	fb0e 0706 	mla	r7, lr, r6, r0
 8013b42:	143f      	asrs	r7, r7, #16
 8013b44:	d541      	bpl.n	8013bca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013b46:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013b4a:	4698      	mov	r8, r3
 8013b4c:	9603      	str	r6, [sp, #12]
 8013b4e:	f1b8 0f00 	cmp.w	r8, #0
 8013b52:	dc59      	bgt.n	8013c08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013b54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013b58:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013b5c:	9b00      	ldr	r3, [sp, #0]
 8013b5e:	2b00      	cmp	r3, #0
 8013b60:	dd72      	ble.n	8013c48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013b62:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013b66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013b6a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013b6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013b70:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013b74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013b78:	eeb0 6a62 	vmov.f32	s12, s5
 8013b7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013b80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b84:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013b88:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013b8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013b90:	eeb0 6a43 	vmov.f32	s12, s6
 8013b94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013b98:	ee12 2a90 	vmov	r2, s5
 8013b9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ba0:	fb92 fef3 	sdiv	lr, r2, r3
 8013ba4:	ee13 2a10 	vmov	r2, s6
 8013ba8:	fb92 fcf3 	sdiv	ip, r2, r3
 8013bac:	9b00      	ldr	r3, [sp, #0]
 8013bae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013bb2:	3b01      	subs	r3, #1
 8013bb4:	9300      	str	r3, [sp, #0]
 8013bb6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013bba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013bbc:	eeb0 3a67 	vmov.f32	s6, s15
 8013bc0:	bf08      	it	eq
 8013bc2:	465b      	moveq	r3, fp
 8013bc4:	eef0 2a47 	vmov.f32	s5, s14
 8013bc8:	e797      	b.n	8013afa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8013bca:	454f      	cmp	r7, r9
 8013bcc:	dabb      	bge.n	8013b46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013bce:	fb0c 2606 	mla	r6, ip, r6, r2
 8013bd2:	1436      	asrs	r6, r6, #16
 8013bd4:	d4b7      	bmi.n	8013b46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013bd6:	4546      	cmp	r6, r8
 8013bd8:	dab5      	bge.n	8013b46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013bda:	461e      	mov	r6, r3
 8013bdc:	46a0      	mov	r8, r4
 8013bde:	2e00      	cmp	r6, #0
 8013be0:	ddb8      	ble.n	8013b54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013be2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013be6:	9901      	ldr	r1, [sp, #4]
 8013be8:	1417      	asrs	r7, r2, #16
 8013bea:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013bee:	fb0a 1707 	mla	r7, sl, r7, r1
 8013bf2:	9902      	ldr	r1, [sp, #8]
 8013bf4:	f817 7009 	ldrb.w	r7, [r7, r9]
 8013bf8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013bfc:	f828 7b02 	strh.w	r7, [r8], #2
 8013c00:	4470      	add	r0, lr
 8013c02:	4462      	add	r2, ip
 8013c04:	3e01      	subs	r6, #1
 8013c06:	e7ea      	b.n	8013bde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013c08:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013c0c:	d417      	bmi.n	8013c3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c0e:	68ae      	ldr	r6, [r5, #8]
 8013c10:	454e      	cmp	r6, r9
 8013c12:	dd14      	ble.n	8013c3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c14:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013c18:	d411      	bmi.n	8013c3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c1a:	68ef      	ldr	r7, [r5, #12]
 8013c1c:	4557      	cmp	r7, sl
 8013c1e:	dd0e      	ble.n	8013c3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013c20:	9f01      	ldr	r7, [sp, #4]
 8013c22:	b236      	sxth	r6, r6
 8013c24:	fb0a 7606 	mla	r6, sl, r6, r7
 8013c28:	9f02      	ldr	r7, [sp, #8]
 8013c2a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8013c2e:	f06f 0101 	mvn.w	r1, #1
 8013c32:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013c36:	fb01 f608 	mul.w	r6, r1, r8
 8013c3a:	9903      	ldr	r1, [sp, #12]
 8013c3c:	538f      	strh	r7, [r1, r6]
 8013c3e:	4470      	add	r0, lr
 8013c40:	4462      	add	r2, ip
 8013c42:	f108 38ff 	add.w	r8, r8, #4294967295
 8013c46:	e782      	b.n	8013b4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013c48:	b005      	add	sp, #20
 8013c4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013c4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c52:	b087      	sub	sp, #28
 8013c54:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8013c56:	9205      	str	r2, [sp, #20]
 8013c58:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013c5c:	9203      	str	r2, [sp, #12]
 8013c5e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8013c62:	9102      	str	r1, [sp, #8]
 8013c64:	6861      	ldr	r1, [r4, #4]
 8013c66:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8013c6a:	fb01 2000 	mla	r0, r1, r0, r2
 8013c6e:	6822      	ldr	r2, [r4, #0]
 8013c70:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013c74:	9200      	str	r2, [sp, #0]
 8013c76:	f8dc 2000 	ldr.w	r2, [ip]
 8013c7a:	9204      	str	r2, [sp, #16]
 8013c7c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013c80:	3204      	adds	r2, #4
 8013c82:	9201      	str	r2, [sp, #4]
 8013c84:	9a03      	ldr	r2, [sp, #12]
 8013c86:	43d5      	mvns	r5, r2
 8013c88:	b2ed      	uxtb	r5, r5
 8013c8a:	9a02      	ldr	r2, [sp, #8]
 8013c8c:	2a00      	cmp	r2, #0
 8013c8e:	dc03      	bgt.n	8013c98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013c90:	9a05      	ldr	r2, [sp, #20]
 8013c92:	2a00      	cmp	r2, #0
 8013c94:	f340 812c 	ble.w	8013ef0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013c98:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013c9a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8013c9e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013ca2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013ca6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013ca8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013cac:	2b00      	cmp	r3, #0
 8013cae:	dd10      	ble.n	8013cd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013cb0:	140c      	asrs	r4, r1, #16
 8013cb2:	d405      	bmi.n	8013cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013cb4:	4574      	cmp	r4, lr
 8013cb6:	da03      	bge.n	8013cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013cb8:	1414      	asrs	r4, r2, #16
 8013cba:	d401      	bmi.n	8013cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013cbc:	42bc      	cmp	r4, r7
 8013cbe:	db09      	blt.n	8013cd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013cc0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013cc2:	9800      	ldr	r0, [sp, #0]
 8013cc4:	4421      	add	r1, r4
 8013cc6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8013cc8:	3002      	adds	r0, #2
 8013cca:	4422      	add	r2, r4
 8013ccc:	3b01      	subs	r3, #1
 8013cce:	9000      	str	r0, [sp, #0]
 8013cd0:	e7ec      	b.n	8013cac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013cd2:	d071      	beq.n	8013db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013cd4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013cd6:	1e5c      	subs	r4, r3, #1
 8013cd8:	fb06 1604 	mla	r6, r6, r4, r1
 8013cdc:	1436      	asrs	r6, r6, #16
 8013cde:	d45d      	bmi.n	8013d9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013ce0:	4576      	cmp	r6, lr
 8013ce2:	da5b      	bge.n	8013d9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013ce4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8013ce6:	fb06 2404 	mla	r4, r6, r4, r2
 8013cea:	1424      	asrs	r4, r4, #16
 8013cec:	d456      	bmi.n	8013d9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013cee:	42bc      	cmp	r4, r7
 8013cf0:	da54      	bge.n	8013d9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013cf2:	f8dd 9000 	ldr.w	r9, [sp]
 8013cf6:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8013cfa:	4698      	mov	r8, r3
 8013cfc:	f1b8 0f00 	cmp.w	r8, #0
 8013d00:	dd54      	ble.n	8013dac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013d02:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013d06:	9804      	ldr	r0, [sp, #16]
 8013d08:	1414      	asrs	r4, r2, #16
 8013d0a:	fb07 0404 	mla	r4, r7, r4, r0
 8013d0e:	140e      	asrs	r6, r1, #16
 8013d10:	9801      	ldr	r0, [sp, #4]
 8013d12:	f814 e006 	ldrb.w	lr, [r4, r6]
 8013d16:	f8b9 4000 	ldrh.w	r4, [r9]
 8013d1a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013d1e:	eb00 0b0e 	add.w	fp, r0, lr
 8013d22:	1227      	asrs	r7, r4, #8
 8013d24:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013d28:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013d2c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013d30:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013d32:	fb16 f60a 	smulbb	r6, r6, sl
 8013d36:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013d3a:	fb07 6705 	mla	r7, r7, r5, r6
 8013d3e:	10e6      	asrs	r6, r4, #3
 8013d40:	00e4      	lsls	r4, r4, #3
 8013d42:	b2e4      	uxtb	r4, r4
 8013d44:	fb1b fb0a 	smulbb	fp, fp, sl
 8013d48:	fb14 f405 	smulbb	r4, r4, r5
 8013d4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013d50:	b2bf      	uxth	r7, r7
 8013d52:	fb06 b605 	mla	r6, r6, r5, fp
 8013d56:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013d5a:	b2b6      	uxth	r6, r6
 8013d5c:	fa1f fe8e 	uxth.w	lr, lr
 8013d60:	1c7c      	adds	r4, r7, #1
 8013d62:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013d66:	f106 0b01 	add.w	fp, r6, #1
 8013d6a:	f10e 0401 	add.w	r4, lr, #1
 8013d6e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8013d72:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013d76:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013d7a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013d7e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013d82:	4327      	orrs	r7, r4
 8013d84:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013d88:	4401      	add	r1, r0
 8013d8a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013d8c:	ea47 070b 	orr.w	r7, r7, fp
 8013d90:	f829 7b02 	strh.w	r7, [r9], #2
 8013d94:	4402      	add	r2, r0
 8013d96:	f108 38ff 	add.w	r8, r8, #4294967295
 8013d9a:	e7af      	b.n	8013cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013d9c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8013da0:	f04f 0e00 	mov.w	lr, #0
 8013da4:	eb03 040e 	add.w	r4, r3, lr
 8013da8:	2c00      	cmp	r4, #0
 8013daa:	dc43      	bgt.n	8013e34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8013dac:	9a00      	ldr	r2, [sp, #0]
 8013dae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013db2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013db6:	9300      	str	r3, [sp, #0]
 8013db8:	9b02      	ldr	r3, [sp, #8]
 8013dba:	2b00      	cmp	r3, #0
 8013dbc:	f340 8098 	ble.w	8013ef0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013dc0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013dc4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013dc8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013dcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013dce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013dd2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013dd6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013dda:	eef0 6a62 	vmov.f32	s13, s5
 8013dde:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013de2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013de6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013dea:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8013dee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013df2:	eef0 6a43 	vmov.f32	s13, s6
 8013df6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013dfa:	ee12 2a90 	vmov	r2, s5
 8013dfe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013e02:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e06:	ee13 2a10 	vmov	r2, s6
 8013e0a:	9313      	str	r3, [sp, #76]	; 0x4c
 8013e0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e12:	9314      	str	r3, [sp, #80]	; 0x50
 8013e14:	9b02      	ldr	r3, [sp, #8]
 8013e16:	9a05      	ldr	r2, [sp, #20]
 8013e18:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013e1c:	3b01      	subs	r3, #1
 8013e1e:	9302      	str	r3, [sp, #8]
 8013e20:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8013e24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e26:	eeb0 3a67 	vmov.f32	s6, s15
 8013e2a:	bf08      	it	eq
 8013e2c:	4613      	moveq	r3, r2
 8013e2e:	eef0 2a47 	vmov.f32	s5, s14
 8013e32:	e72a      	b.n	8013c8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013e34:	140f      	asrs	r7, r1, #16
 8013e36:	d454      	bmi.n	8013ee2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013e38:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013e3c:	42be      	cmp	r6, r7
 8013e3e:	dd50      	ble.n	8013ee2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013e40:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013e44:	d44d      	bmi.n	8013ee2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013e46:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013e4a:	4544      	cmp	r4, r8
 8013e4c:	dd49      	ble.n	8013ee2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013e4e:	9c04      	ldr	r4, [sp, #16]
 8013e50:	b236      	sxth	r6, r6
 8013e52:	fb08 4606 	mla	r6, r8, r6, r4
 8013e56:	f06f 0001 	mvn.w	r0, #1
 8013e5a:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013e5e:	9c01      	ldr	r4, [sp, #4]
 8013e60:	fb00 fa0e 	mul.w	sl, r0, lr
 8013e64:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013e68:	9800      	ldr	r0, [sp, #0]
 8013e6a:	eb04 0b08 	add.w	fp, r4, r8
 8013e6e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8013e72:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013e76:	9801      	ldr	r0, [sp, #4]
 8013e78:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013e7c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8013e80:	9800      	ldr	r0, [sp, #0]
 8013e82:	1227      	asrs	r7, r4, #8
 8013e84:	fb16 f609 	smulbb	r6, r6, r9
 8013e88:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013e8c:	fb07 6705 	mla	r7, r7, r5, r6
 8013e90:	10e6      	asrs	r6, r4, #3
 8013e92:	00e4      	lsls	r4, r4, #3
 8013e94:	b2e4      	uxtb	r4, r4
 8013e96:	fb1b fb09 	smulbb	fp, fp, r9
 8013e9a:	fb14 f405 	smulbb	r4, r4, r5
 8013e9e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013ea2:	b2bf      	uxth	r7, r7
 8013ea4:	fb06 b605 	mla	r6, r6, r5, fp
 8013ea8:	fb08 4809 	mla	r8, r8, r9, r4
 8013eac:	b2b6      	uxth	r6, r6
 8013eae:	fa1f f888 	uxth.w	r8, r8
 8013eb2:	1c7c      	adds	r4, r7, #1
 8013eb4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013eb8:	f106 0b01 	add.w	fp, r6, #1
 8013ebc:	f108 0401 	add.w	r4, r8, #1
 8013ec0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8013ec4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013ec8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013ecc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013ed0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013ed4:	4327      	orrs	r7, r4
 8013ed6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013eda:	ea47 070b 	orr.w	r7, r7, fp
 8013ede:	f820 700a 	strh.w	r7, [r0, sl]
 8013ee2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013ee4:	4401      	add	r1, r0
 8013ee6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013ee8:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013eec:	4402      	add	r2, r0
 8013eee:	e759      	b.n	8013da4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013ef0:	b007      	add	sp, #28
 8013ef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013ef8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013efc:	b085      	sub	sp, #20
 8013efe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013f02:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013f04:	9203      	str	r2, [sp, #12]
 8013f06:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013f0a:	6870      	ldr	r0, [r6, #4]
 8013f0c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013f0e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8013f12:	686f      	ldr	r7, [r5, #4]
 8013f14:	9101      	str	r1, [sp, #4]
 8013f16:	fb00 2404 	mla	r4, r0, r4, r2
 8013f1a:	6832      	ldr	r2, [r6, #0]
 8013f1c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013f20:	682a      	ldr	r2, [r5, #0]
 8013f22:	9202      	str	r2, [sp, #8]
 8013f24:	3704      	adds	r7, #4
 8013f26:	9a01      	ldr	r2, [sp, #4]
 8013f28:	2a00      	cmp	r2, #0
 8013f2a:	dc03      	bgt.n	8013f34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013f2c:	9a03      	ldr	r2, [sp, #12]
 8013f2e:	2a00      	cmp	r2, #0
 8013f30:	f340 80cc 	ble.w	80140cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013f34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013f36:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013f3a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013f3e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013f42:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013f44:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013f48:	2b00      	cmp	r3, #0
 8013f4a:	dd0d      	ble.n	8013f68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013f4c:	1406      	asrs	r6, r0, #16
 8013f4e:	d405      	bmi.n	8013f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013f50:	454e      	cmp	r6, r9
 8013f52:	da03      	bge.n	8013f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013f54:	1416      	asrs	r6, r2, #16
 8013f56:	d401      	bmi.n	8013f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013f58:	4546      	cmp	r6, r8
 8013f5a:	db06      	blt.n	8013f6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013f5c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8013f5e:	4460      	add	r0, ip
 8013f60:	4432      	add	r2, r6
 8013f62:	3b01      	subs	r3, #1
 8013f64:	3402      	adds	r4, #2
 8013f66:	e7ef      	b.n	8013f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013f68:	d00f      	beq.n	8013f8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013f6a:	1e5e      	subs	r6, r3, #1
 8013f6c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013f70:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013f74:	d543      	bpl.n	8013ffe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8013f76:	4698      	mov	r8, r3
 8013f78:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013f7c:	f1b8 0f00 	cmp.w	r8, #0
 8013f80:	dc71      	bgt.n	8014066 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8013f82:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013f86:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013f8a:	9b01      	ldr	r3, [sp, #4]
 8013f8c:	2b00      	cmp	r3, #0
 8013f8e:	f340 809d 	ble.w	80140cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013f92:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013f96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013f9a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013f9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013fa0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013fa4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013fa8:	eeb0 6a62 	vmov.f32	s12, s5
 8013fac:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013fb0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013fb4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013fb8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013fbc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013fc0:	eeb0 6a43 	vmov.f32	s12, s6
 8013fc4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013fc8:	ee12 2a90 	vmov	r2, s5
 8013fcc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013fd0:	fb92 fcf3 	sdiv	ip, r2, r3
 8013fd4:	ee13 2a10 	vmov	r2, s6
 8013fd8:	fb92 f3f3 	sdiv	r3, r2, r3
 8013fdc:	9312      	str	r3, [sp, #72]	; 0x48
 8013fde:	9b01      	ldr	r3, [sp, #4]
 8013fe0:	9a03      	ldr	r2, [sp, #12]
 8013fe2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013fe6:	3b01      	subs	r3, #1
 8013fe8:	9301      	str	r3, [sp, #4]
 8013fea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013fee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ff0:	eeb0 3a67 	vmov.f32	s6, s15
 8013ff4:	bf08      	it	eq
 8013ff6:	4613      	moveq	r3, r2
 8013ff8:	eef0 2a47 	vmov.f32	s5, s14
 8013ffc:	e793      	b.n	8013f26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013ffe:	45ce      	cmp	lr, r9
 8014000:	dab9      	bge.n	8013f76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014002:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014004:	fb01 2606 	mla	r6, r1, r6, r2
 8014008:	1436      	asrs	r6, r6, #16
 801400a:	d4b4      	bmi.n	8013f76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801400c:	4546      	cmp	r6, r8
 801400e:	dab2      	bge.n	8013f76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014010:	4698      	mov	r8, r3
 8014012:	46a2      	mov	sl, r4
 8014014:	f1b8 0f00 	cmp.w	r8, #0
 8014018:	ddb3      	ble.n	8013f82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801401a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801401e:	9902      	ldr	r1, [sp, #8]
 8014020:	1416      	asrs	r6, r2, #16
 8014022:	fb09 1606 	mla	r6, r9, r6, r1
 8014026:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801402a:	492a      	ldr	r1, [pc, #168]	; (80140d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801402c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8014030:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014034:	eb07 0b0e 	add.w	fp, r7, lr
 8014038:	4460      	add	r0, ip
 801403a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801403e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8014042:	00f6      	lsls	r6, r6, #3
 8014044:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014048:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801404c:	ea49 0606 	orr.w	r6, r9, r6
 8014050:	f817 900e 	ldrb.w	r9, [r7, lr]
 8014054:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014056:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801405a:	f82a 6b02 	strh.w	r6, [sl], #2
 801405e:	440a      	add	r2, r1
 8014060:	f108 38ff 	add.w	r8, r8, #4294967295
 8014064:	e7d6      	b.n	8014014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014066:	ea5f 4920 	movs.w	r9, r0, asr #16
 801406a:	d429      	bmi.n	80140c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801406c:	68ae      	ldr	r6, [r5, #8]
 801406e:	454e      	cmp	r6, r9
 8014070:	dd26      	ble.n	80140c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014072:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8014076:	d423      	bmi.n	80140c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014078:	68e9      	ldr	r1, [r5, #12]
 801407a:	4559      	cmp	r1, fp
 801407c:	dd20      	ble.n	80140c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801407e:	9902      	ldr	r1, [sp, #8]
 8014080:	fa0f fe86 	sxth.w	lr, r6
 8014084:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8014088:	f06f 0101 	mvn.w	r1, #1
 801408c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8014090:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014094:	eb07 060e 	add.w	r6, r7, lr
 8014098:	fb01 f908 	mul.w	r9, r1, r8
 801409c:	f896 b002 	ldrb.w	fp, [r6, #2]
 80140a0:	7876      	ldrb	r6, [r6, #1]
 80140a2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80140a6:	00f6      	lsls	r6, r6, #3
 80140a8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80140ac:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80140b0:	ea4b 0606 	orr.w	r6, fp, r6
 80140b4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80140b8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80140bc:	f82a 6009 	strh.w	r6, [sl, r9]
 80140c0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80140c2:	4460      	add	r0, ip
 80140c4:	440a      	add	r2, r1
 80140c6:	f108 38ff 	add.w	r8, r8, #4294967295
 80140ca:	e757      	b.n	8013f7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80140cc:	b005      	add	sp, #20
 80140ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140d2:	bf00      	nop
 80140d4:	fffff800 	.word	0xfffff800

080140d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80140d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140dc:	b087      	sub	sp, #28
 80140de:	468b      	mov	fp, r1
 80140e0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80140e2:	9204      	str	r2, [sp, #16]
 80140e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80140e8:	9205      	str	r2, [sp, #20]
 80140ea:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80140ee:	6841      	ldr	r1, [r0, #4]
 80140f0:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80140f4:	fb01 2404 	mla	r4, r1, r4, r2
 80140f8:	6802      	ldr	r2, [r0, #0]
 80140fa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80140fe:	f8dc 2000 	ldr.w	r2, [ip]
 8014102:	9201      	str	r2, [sp, #4]
 8014104:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014108:	3204      	adds	r2, #4
 801410a:	9202      	str	r2, [sp, #8]
 801410c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014110:	f1bb 0f00 	cmp.w	fp, #0
 8014114:	dc03      	bgt.n	801411e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014116:	9a04      	ldr	r2, [sp, #16]
 8014118:	2a00      	cmp	r2, #0
 801411a:	f340 8138 	ble.w	801438e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801411e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014120:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014124:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8014128:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801412c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801412e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014132:	2b00      	cmp	r3, #0
 8014134:	dd0e      	ble.n	8014154 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014136:	1402      	asrs	r2, r0, #16
 8014138:	d405      	bmi.n	8014146 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801413a:	42ba      	cmp	r2, r7
 801413c:	da03      	bge.n	8014146 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801413e:	140a      	asrs	r2, r1, #16
 8014140:	d401      	bmi.n	8014146 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014142:	42b2      	cmp	r2, r6
 8014144:	db07      	blt.n	8014156 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014146:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014148:	4410      	add	r0, r2
 801414a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801414c:	3b01      	subs	r3, #1
 801414e:	4411      	add	r1, r2
 8014150:	3402      	adds	r4, #2
 8014152:	e7ee      	b.n	8014132 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8014154:	d019      	beq.n	801418a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014156:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014158:	1e5a      	subs	r2, r3, #1
 801415a:	fb05 0502 	mla	r5, r5, r2, r0
 801415e:	142d      	asrs	r5, r5, #16
 8014160:	d409      	bmi.n	8014176 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014162:	42bd      	cmp	r5, r7
 8014164:	da07      	bge.n	8014176 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014166:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014168:	fb05 1202 	mla	r2, r5, r2, r1
 801416c:	1412      	asrs	r2, r2, #16
 801416e:	d402      	bmi.n	8014176 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014170:	42b2      	cmp	r2, r6
 8014172:	f2c0 80ac 	blt.w	80142ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8014176:	f04f 0e00 	mov.w	lr, #0
 801417a:	eb03 020e 	add.w	r2, r3, lr
 801417e:	2a00      	cmp	r2, #0
 8014180:	dc3e      	bgt.n	8014200 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014182:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014186:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801418a:	f1bb 0f00 	cmp.w	fp, #0
 801418e:	f340 80fe 	ble.w	801438e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014192:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014196:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801419a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801419e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80141a0:	f1bb 0b01 	subs.w	fp, fp, #1
 80141a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80141a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80141ac:	eeb0 6a62 	vmov.f32	s12, s5
 80141b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80141b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80141b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80141bc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80141c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80141c4:	eeb0 6a43 	vmov.f32	s12, s6
 80141c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80141cc:	ee12 2a90 	vmov	r2, s5
 80141d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80141d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80141d8:	ee13 2a10 	vmov	r2, s6
 80141dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80141e0:	9313      	str	r3, [sp, #76]	; 0x4c
 80141e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80141e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80141e8:	9a04      	ldr	r2, [sp, #16]
 80141ea:	9314      	str	r3, [sp, #80]	; 0x50
 80141ec:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80141f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80141f2:	eeb0 3a67 	vmov.f32	s6, s15
 80141f6:	bf08      	it	eq
 80141f8:	4613      	moveq	r3, r2
 80141fa:	eef0 2a47 	vmov.f32	s5, s14
 80141fe:	e787      	b.n	8014110 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014200:	1406      	asrs	r6, r0, #16
 8014202:	d45d      	bmi.n	80142c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014204:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014208:	42b5      	cmp	r5, r6
 801420a:	dd59      	ble.n	80142c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801420c:	140f      	asrs	r7, r1, #16
 801420e:	d457      	bmi.n	80142c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014210:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014214:	42ba      	cmp	r2, r7
 8014216:	dd53      	ble.n	80142c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014218:	9a01      	ldr	r2, [sp, #4]
 801421a:	b22d      	sxth	r5, r5
 801421c:	fb07 2505 	mla	r5, r7, r5, r2
 8014220:	5daa      	ldrb	r2, [r5, r6]
 8014222:	9d02      	ldr	r5, [sp, #8]
 8014224:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014228:	0e2e      	lsrs	r6, r5, #24
 801422a:	d049      	beq.n	80142c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801422c:	f06f 0201 	mvn.w	r2, #1
 8014230:	fb02 f20e 	mul.w	r2, r2, lr
 8014234:	9203      	str	r2, [sp, #12]
 8014236:	f834 8002 	ldrh.w	r8, [r4, r2]
 801423a:	9a05      	ldr	r2, [sp, #20]
 801423c:	4356      	muls	r6, r2
 801423e:	1c72      	adds	r2, r6, #1
 8014240:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014244:	1212      	asrs	r2, r2, #8
 8014246:	fa1f f982 	uxth.w	r9, r2
 801424a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801424e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014252:	43d2      	mvns	r2, r2
 8014254:	b2d2      	uxtb	r2, r2
 8014256:	fb16 f609 	smulbb	r6, r6, r9
 801425a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801425e:	fb07 6702 	mla	r7, r7, r2, r6
 8014262:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014266:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801426a:	b2ed      	uxtb	r5, r5
 801426c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014270:	fa5f f888 	uxtb.w	r8, r8
 8014274:	fb15 f509 	smulbb	r5, r5, r9
 8014278:	fb08 5502 	mla	r5, r8, r2, r5
 801427c:	b2bf      	uxth	r7, r7
 801427e:	fb1a fa09 	smulbb	sl, sl, r9
 8014282:	b2ad      	uxth	r5, r5
 8014284:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014288:	fb06 a602 	mla	r6, r6, r2, sl
 801428c:	1c7a      	adds	r2, r7, #1
 801428e:	f105 0a01 	add.w	sl, r5, #1
 8014292:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014296:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801429a:	b2b6      	uxth	r6, r6
 801429c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80142a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80142a4:	ea47 070a 	orr.w	r7, r7, sl
 80142a8:	f106 0a01 	add.w	sl, r6, #1
 80142ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80142b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80142b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80142b8:	9a03      	ldr	r2, [sp, #12]
 80142ba:	ea47 070a 	orr.w	r7, r7, sl
 80142be:	52a7      	strh	r7, [r4, r2]
 80142c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80142c2:	4410      	add	r0, r2
 80142c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80142c6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80142ca:	4411      	add	r1, r2
 80142cc:	e755      	b.n	801417a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80142ce:	f04f 0800 	mov.w	r8, #0
 80142d2:	eba3 0208 	sub.w	r2, r3, r8
 80142d6:	2a00      	cmp	r2, #0
 80142d8:	f77f af53 	ble.w	8014182 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80142dc:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80142e0:	9f01      	ldr	r7, [sp, #4]
 80142e2:	140a      	asrs	r2, r1, #16
 80142e4:	1405      	asrs	r5, r0, #16
 80142e6:	fb06 7202 	mla	r2, r6, r2, r7
 80142ea:	5d52      	ldrb	r2, [r2, r5]
 80142ec:	9d02      	ldr	r5, [sp, #8]
 80142ee:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80142f2:	0e2e      	lsrs	r6, r5, #24
 80142f4:	d044      	beq.n	8014380 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80142f6:	9a05      	ldr	r2, [sp, #20]
 80142f8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80142fc:	4356      	muls	r6, r2
 80142fe:	1c72      	adds	r2, r6, #1
 8014300:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014304:	1212      	asrs	r2, r2, #8
 8014306:	fa1f f982 	uxth.w	r9, r2
 801430a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801430e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014312:	43d2      	mvns	r2, r2
 8014314:	b2d2      	uxtb	r2, r2
 8014316:	fb16 f609 	smulbb	r6, r6, r9
 801431a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801431e:	fb07 6702 	mla	r7, r7, r2, r6
 8014322:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014326:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801432a:	b2ed      	uxtb	r5, r5
 801432c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014330:	fa5f fe8e 	uxtb.w	lr, lr
 8014334:	fb15 f509 	smulbb	r5, r5, r9
 8014338:	fb0e 5502 	mla	r5, lr, r2, r5
 801433c:	b2bf      	uxth	r7, r7
 801433e:	fb1a fa09 	smulbb	sl, sl, r9
 8014342:	b2ad      	uxth	r5, r5
 8014344:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014348:	fb06 a602 	mla	r6, r6, r2, sl
 801434c:	1c7a      	adds	r2, r7, #1
 801434e:	f105 0a01 	add.w	sl, r5, #1
 8014352:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014356:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801435a:	b2b6      	uxth	r6, r6
 801435c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014360:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014364:	ea47 070a 	orr.w	r7, r7, sl
 8014368:	f106 0a01 	add.w	sl, r6, #1
 801436c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014370:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014374:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014378:	ea47 070a 	orr.w	r7, r7, sl
 801437c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014380:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014382:	4410      	add	r0, r2
 8014384:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014386:	f108 0801 	add.w	r8, r8, #1
 801438a:	4411      	add	r1, r2
 801438c:	e7a1      	b.n	80142d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801438e:	b007      	add	sp, #28
 8014390:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014394 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014398:	b085      	sub	sp, #20
 801439a:	468b      	mov	fp, r1
 801439c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801439e:	9203      	str	r2, [sp, #12]
 80143a0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80143a4:	6841      	ldr	r1, [r0, #4]
 80143a6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80143aa:	fb01 2404 	mla	r4, r1, r4, r2
 80143ae:	6802      	ldr	r2, [r0, #0]
 80143b0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80143b4:	f8de 2000 	ldr.w	r2, [lr]
 80143b8:	9200      	str	r2, [sp, #0]
 80143ba:	f8de 2004 	ldr.w	r2, [lr, #4]
 80143be:	3204      	adds	r2, #4
 80143c0:	9201      	str	r2, [sp, #4]
 80143c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80143c6:	f1bb 0f00 	cmp.w	fp, #0
 80143ca:	dc03      	bgt.n	80143d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80143cc:	9a03      	ldr	r2, [sp, #12]
 80143ce:	2a00      	cmp	r2, #0
 80143d0:	f340 8153 	ble.w	801467a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80143d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80143d6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80143da:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80143de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80143e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80143e4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80143e8:	2b00      	cmp	r3, #0
 80143ea:	dd0e      	ble.n	801440a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80143ec:	1408      	asrs	r0, r1, #16
 80143ee:	d405      	bmi.n	80143fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80143f0:	42b8      	cmp	r0, r7
 80143f2:	da03      	bge.n	80143fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80143f4:	1410      	asrs	r0, r2, #16
 80143f6:	d401      	bmi.n	80143fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80143f8:	42b0      	cmp	r0, r6
 80143fa:	db07      	blt.n	801440c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80143fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80143fe:	4401      	add	r1, r0
 8014400:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014402:	3b01      	subs	r3, #1
 8014404:	4402      	add	r2, r0
 8014406:	3402      	adds	r4, #2
 8014408:	e7ee      	b.n	80143e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801440a:	d017      	beq.n	801443c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801440c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801440e:	1e58      	subs	r0, r3, #1
 8014410:	fb05 1500 	mla	r5, r5, r0, r1
 8014414:	142d      	asrs	r5, r5, #16
 8014416:	d409      	bmi.n	801442c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014418:	42bd      	cmp	r5, r7
 801441a:	da07      	bge.n	801442c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801441c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801441e:	fb05 2000 	mla	r0, r5, r0, r2
 8014422:	1400      	asrs	r0, r0, #16
 8014424:	d402      	bmi.n	801442c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014426:	42b0      	cmp	r0, r6
 8014428:	f2c0 80bc 	blt.w	80145a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801442c:	2600      	movs	r6, #0
 801442e:	1998      	adds	r0, r3, r6
 8014430:	2800      	cmp	r0, #0
 8014432:	dc3e      	bgt.n	80144b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8014434:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014438:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801443c:	f1bb 0f00 	cmp.w	fp, #0
 8014440:	f340 811b 	ble.w	801467a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014444:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014448:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801444c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014450:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014452:	f1bb 0b01 	subs.w	fp, fp, #1
 8014456:	ee31 1a05 	vadd.f32	s2, s2, s10
 801445a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801445e:	eeb0 6a62 	vmov.f32	s12, s5
 8014462:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014466:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801446a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801446e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014472:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014476:	eeb0 6a43 	vmov.f32	s12, s6
 801447a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801447e:	ee12 2a90 	vmov	r2, s5
 8014482:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014486:	fb92 f3f3 	sdiv	r3, r2, r3
 801448a:	ee13 2a10 	vmov	r2, s6
 801448e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014492:	9311      	str	r3, [sp, #68]	; 0x44
 8014494:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014496:	fb92 f3f3 	sdiv	r3, r2, r3
 801449a:	9a03      	ldr	r2, [sp, #12]
 801449c:	9312      	str	r3, [sp, #72]	; 0x48
 801449e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80144a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80144a4:	eeb0 3a67 	vmov.f32	s6, s15
 80144a8:	bf08      	it	eq
 80144aa:	4613      	moveq	r3, r2
 80144ac:	eef0 2a47 	vmov.f32	s5, s14
 80144b0:	e789      	b.n	80143c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80144b2:	140f      	asrs	r7, r1, #16
 80144b4:	d45e      	bmi.n	8014574 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80144b6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80144ba:	42bd      	cmp	r5, r7
 80144bc:	dd5a      	ble.n	8014574 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80144be:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80144c2:	d457      	bmi.n	8014574 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80144c4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80144c8:	4560      	cmp	r0, ip
 80144ca:	dd53      	ble.n	8014574 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80144cc:	9800      	ldr	r0, [sp, #0]
 80144ce:	b22d      	sxth	r5, r5
 80144d0:	fb0c 0505 	mla	r5, ip, r5, r0
 80144d4:	5de8      	ldrb	r0, [r5, r7]
 80144d6:	9d01      	ldr	r5, [sp, #4]
 80144d8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80144dc:	0e07      	lsrs	r7, r0, #24
 80144de:	2fff      	cmp	r7, #255	; 0xff
 80144e0:	d04e      	beq.n	8014580 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80144e2:	b2fd      	uxtb	r5, r7
 80144e4:	2f00      	cmp	r7, #0
 80144e6:	d045      	beq.n	8014574 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80144e8:	f06f 0701 	mvn.w	r7, #1
 80144ec:	4377      	muls	r7, r6
 80144ee:	fa1f f985 	uxth.w	r9, r5
 80144f2:	f834 8007 	ldrh.w	r8, [r4, r7]
 80144f6:	9702      	str	r7, [sp, #8]
 80144f8:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80144fc:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014500:	43ed      	mvns	r5, r5
 8014502:	b2ed      	uxtb	r5, r5
 8014504:	fb17 f709 	smulbb	r7, r7, r9
 8014508:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801450c:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014510:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014514:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014518:	b2c0      	uxtb	r0, r0
 801451a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801451e:	fa5f f888 	uxtb.w	r8, r8
 8014522:	fb10 f009 	smulbb	r0, r0, r9
 8014526:	fb08 0005 	mla	r0, r8, r5, r0
 801452a:	b280      	uxth	r0, r0
 801452c:	fa1f fc8c 	uxth.w	ip, ip
 8014530:	fb1a fa09 	smulbb	sl, sl, r9
 8014534:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014538:	fb07 a705 	mla	r7, r7, r5, sl
 801453c:	f100 0a01 	add.w	sl, r0, #1
 8014540:	f10c 0501 	add.w	r5, ip, #1
 8014544:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014548:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801454c:	b2bf      	uxth	r7, r7
 801454e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014552:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014556:	ea4c 0c0a 	orr.w	ip, ip, sl
 801455a:	f107 0a01 	add.w	sl, r7, #1
 801455e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014562:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014566:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801456a:	9802      	ldr	r0, [sp, #8]
 801456c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014570:	f824 c000 	strh.w	ip, [r4, r0]
 8014574:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014576:	4401      	add	r1, r0
 8014578:	9812      	ldr	r0, [sp, #72]	; 0x48
 801457a:	3e01      	subs	r6, #1
 801457c:	4402      	add	r2, r0
 801457e:	e756      	b.n	801442e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014580:	f06f 0501 	mvn.w	r5, #1
 8014584:	fb05 f706 	mul.w	r7, r5, r6
 8014588:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801458c:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014590:	0945      	lsrs	r5, r0, #5
 8014592:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014596:	ea4c 0505 	orr.w	r5, ip, r5
 801459a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801459e:	4305      	orrs	r5, r0
 80145a0:	53e5      	strh	r5, [r4, r7]
 80145a2:	e7e7      	b.n	8014574 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80145a4:	f04f 0800 	mov.w	r8, #0
 80145a8:	eba3 0008 	sub.w	r0, r3, r8
 80145ac:	2800      	cmp	r0, #0
 80145ae:	f77f af41 	ble.w	8014434 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80145b2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80145b6:	9f00      	ldr	r7, [sp, #0]
 80145b8:	1410      	asrs	r0, r2, #16
 80145ba:	140d      	asrs	r5, r1, #16
 80145bc:	fb06 7000 	mla	r0, r6, r0, r7
 80145c0:	5d40      	ldrb	r0, [r0, r5]
 80145c2:	9d01      	ldr	r5, [sp, #4]
 80145c4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80145c8:	0e06      	lsrs	r6, r0, #24
 80145ca:	2eff      	cmp	r6, #255	; 0xff
 80145cc:	d048      	beq.n	8014660 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80145ce:	b2f5      	uxtb	r5, r6
 80145d0:	2e00      	cmp	r6, #0
 80145d2:	d03e      	beq.n	8014652 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80145d4:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80145d8:	fa1f f985 	uxth.w	r9, r5
 80145dc:	ea4f 272c 	mov.w	r7, ip, asr #8
 80145e0:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80145e4:	43ed      	mvns	r5, r5
 80145e6:	b2ed      	uxtb	r5, r5
 80145e8:	fb16 f609 	smulbb	r6, r6, r9
 80145ec:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80145f0:	fb07 6705 	mla	r7, r7, r5, r6
 80145f4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80145f8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80145fc:	b2c0      	uxtb	r0, r0
 80145fe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014602:	fa5f fc8c 	uxtb.w	ip, ip
 8014606:	fb10 f009 	smulbb	r0, r0, r9
 801460a:	fb0c 0005 	mla	r0, ip, r5, r0
 801460e:	b2bf      	uxth	r7, r7
 8014610:	fb1a fa09 	smulbb	sl, sl, r9
 8014614:	b280      	uxth	r0, r0
 8014616:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801461a:	fb06 a605 	mla	r6, r6, r5, sl
 801461e:	1c7d      	adds	r5, r7, #1
 8014620:	f100 0a01 	add.w	sl, r0, #1
 8014624:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8014628:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801462c:	b2b6      	uxth	r6, r6
 801462e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014632:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014636:	ea47 070a 	orr.w	r7, r7, sl
 801463a:	f106 0a01 	add.w	sl, r6, #1
 801463e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014642:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014646:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801464a:	ea47 070a 	orr.w	r7, r7, sl
 801464e:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014652:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014654:	4401      	add	r1, r0
 8014656:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014658:	f108 0801 	add.w	r8, r8, #1
 801465c:	4402      	add	r2, r0
 801465e:	e7a3      	b.n	80145a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014660:	4d07      	ldr	r5, [pc, #28]	; (8014680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014662:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8014666:	0945      	lsrs	r5, r0, #5
 8014668:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801466c:	4335      	orrs	r5, r6
 801466e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014672:	4305      	orrs	r5, r0
 8014674:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8014678:	e7eb      	b.n	8014652 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 801467a:	b005      	add	sp, #20
 801467c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014680:	fffff800 	.word	0xfffff800

08014684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014688:	b087      	sub	sp, #28
 801468a:	468b      	mov	fp, r1
 801468c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801468e:	9204      	str	r2, [sp, #16]
 8014690:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014694:	9205      	str	r2, [sp, #20]
 8014696:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801469a:	6861      	ldr	r1, [r4, #4]
 801469c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80146a0:	fb01 2000 	mla	r0, r1, r0, r2
 80146a4:	6822      	ldr	r2, [r4, #0]
 80146a6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80146aa:	f8de 2000 	ldr.w	r2, [lr]
 80146ae:	9201      	str	r2, [sp, #4]
 80146b0:	f8de 2004 	ldr.w	r2, [lr, #4]
 80146b4:	9202      	str	r2, [sp, #8]
 80146b6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80146ba:	f1bb 0f00 	cmp.w	fp, #0
 80146be:	dc03      	bgt.n	80146c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80146c0:	9a04      	ldr	r2, [sp, #16]
 80146c2:	2a00      	cmp	r2, #0
 80146c4:	f340 8142 	ble.w	801494c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80146c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80146ca:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80146ce:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80146d2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80146d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80146d8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80146dc:	2b00      	cmp	r3, #0
 80146de:	dd0e      	ble.n	80146fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80146e0:	140c      	asrs	r4, r1, #16
 80146e2:	d405      	bmi.n	80146f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80146e4:	42bc      	cmp	r4, r7
 80146e6:	da03      	bge.n	80146f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80146e8:	1414      	asrs	r4, r2, #16
 80146ea:	d401      	bmi.n	80146f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80146ec:	42b4      	cmp	r4, r6
 80146ee:	db07      	blt.n	8014700 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80146f0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80146f2:	4421      	add	r1, r4
 80146f4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80146f6:	3b01      	subs	r3, #1
 80146f8:	4422      	add	r2, r4
 80146fa:	3002      	adds	r0, #2
 80146fc:	e7ee      	b.n	80146dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80146fe:	d019      	beq.n	8014734 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014700:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014702:	1e5c      	subs	r4, r3, #1
 8014704:	fb05 1504 	mla	r5, r5, r4, r1
 8014708:	142d      	asrs	r5, r5, #16
 801470a:	d409      	bmi.n	8014720 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801470c:	42bd      	cmp	r5, r7
 801470e:	da07      	bge.n	8014720 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014710:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014712:	fb05 2404 	mla	r4, r5, r4, r2
 8014716:	1424      	asrs	r4, r4, #16
 8014718:	d402      	bmi.n	8014720 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801471a:	42b4      	cmp	r4, r6
 801471c:	f2c0 80b1 	blt.w	8014882 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8014720:	f04f 0800 	mov.w	r8, #0
 8014724:	eb03 0408 	add.w	r4, r3, r8
 8014728:	2c00      	cmp	r4, #0
 801472a:	dc3e      	bgt.n	80147aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801472c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014730:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014734:	f1bb 0f00 	cmp.w	fp, #0
 8014738:	f340 8108 	ble.w	801494c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801473c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014740:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014744:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014748:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801474a:	f1bb 0b01 	subs.w	fp, fp, #1
 801474e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014752:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014756:	eeb0 6a62 	vmov.f32	s12, s5
 801475a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801475e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014762:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014766:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801476a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801476e:	eeb0 6a43 	vmov.f32	s12, s6
 8014772:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014776:	ee12 2a90 	vmov	r2, s5
 801477a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801477e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014782:	ee13 2a10 	vmov	r2, s6
 8014786:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801478a:	9313      	str	r3, [sp, #76]	; 0x4c
 801478c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801478e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014792:	9a04      	ldr	r2, [sp, #16]
 8014794:	9314      	str	r3, [sp, #80]	; 0x50
 8014796:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801479a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801479c:	eeb0 3a67 	vmov.f32	s6, s15
 80147a0:	bf08      	it	eq
 80147a2:	4613      	moveq	r3, r2
 80147a4:	eef0 2a47 	vmov.f32	s5, s14
 80147a8:	e787      	b.n	80146ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80147aa:	140e      	asrs	r6, r1, #16
 80147ac:	d462      	bmi.n	8014874 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80147ae:	f8de 5008 	ldr.w	r5, [lr, #8]
 80147b2:	42b5      	cmp	r5, r6
 80147b4:	dd5e      	ble.n	8014874 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80147b6:	1417      	asrs	r7, r2, #16
 80147b8:	d45c      	bmi.n	8014874 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80147ba:	f8de 400c 	ldr.w	r4, [lr, #12]
 80147be:	42bc      	cmp	r4, r7
 80147c0:	dd58      	ble.n	8014874 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80147c2:	b22d      	sxth	r5, r5
 80147c4:	fb07 6505 	mla	r5, r7, r5, r6
 80147c8:	9c02      	ldr	r4, [sp, #8]
 80147ca:	5d66      	ldrb	r6, [r4, r5]
 80147cc:	2e00      	cmp	r6, #0
 80147ce:	d051      	beq.n	8014874 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80147d0:	9c01      	ldr	r4, [sp, #4]
 80147d2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80147d6:	f06f 0401 	mvn.w	r4, #1
 80147da:	fb04 f408 	mul.w	r4, r4, r8
 80147de:	9403      	str	r4, [sp, #12]
 80147e0:	5b05      	ldrh	r5, [r0, r4]
 80147e2:	9c05      	ldr	r4, [sp, #20]
 80147e4:	4366      	muls	r6, r4
 80147e6:	1c74      	adds	r4, r6, #1
 80147e8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80147ec:	1224      	asrs	r4, r4, #8
 80147ee:	b2a7      	uxth	r7, r4
 80147f0:	122e      	asrs	r6, r5, #8
 80147f2:	43e4      	mvns	r4, r4
 80147f4:	b2e4      	uxtb	r4, r4
 80147f6:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80147fa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80147fe:	fb16 f604 	smulbb	r6, r6, r4
 8014802:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014806:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801480a:	00ed      	lsls	r5, r5, #3
 801480c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014810:	b2ed      	uxtb	r5, r5
 8014812:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8014816:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801481a:	fb15 f504 	smulbb	r5, r5, r4
 801481e:	fa5f f989 	uxtb.w	r9, r9
 8014822:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014826:	fb09 5507 	mla	r5, r9, r7, r5
 801482a:	fb1a fa04 	smulbb	sl, sl, r4
 801482e:	fa1f fc8c 	uxth.w	ip, ip
 8014832:	b2ad      	uxth	r5, r5
 8014834:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014838:	fb06 a607 	mla	r6, r6, r7, sl
 801483c:	f10c 0401 	add.w	r4, ip, #1
 8014840:	f105 0a01 	add.w	sl, r5, #1
 8014844:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014848:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801484c:	b2b6      	uxth	r6, r6
 801484e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014852:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014856:	ea4c 0c0a 	orr.w	ip, ip, sl
 801485a:	f106 0a01 	add.w	sl, r6, #1
 801485e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014862:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014866:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801486a:	9c03      	ldr	r4, [sp, #12]
 801486c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014870:	f820 c004 	strh.w	ip, [r0, r4]
 8014874:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014876:	4421      	add	r1, r4
 8014878:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801487a:	f108 38ff 	add.w	r8, r8, #4294967295
 801487e:	4422      	add	r2, r4
 8014880:	e750      	b.n	8014724 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014882:	f04f 0900 	mov.w	r9, #0
 8014886:	eba3 0409 	sub.w	r4, r3, r9
 801488a:	2c00      	cmp	r4, #0
 801488c:	f77f af4e 	ble.w	801472c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014890:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014894:	140d      	asrs	r5, r1, #16
 8014896:	1414      	asrs	r4, r2, #16
 8014898:	fb06 5404 	mla	r4, r6, r4, r5
 801489c:	9d02      	ldr	r5, [sp, #8]
 801489e:	5d2e      	ldrb	r6, [r5, r4]
 80148a0:	2e00      	cmp	r6, #0
 80148a2:	d04c      	beq.n	801493e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80148a4:	9d01      	ldr	r5, [sp, #4]
 80148a6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80148aa:	9c05      	ldr	r4, [sp, #20]
 80148ac:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80148b0:	4366      	muls	r6, r4
 80148b2:	1c74      	adds	r4, r6, #1
 80148b4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80148b8:	1224      	asrs	r4, r4, #8
 80148ba:	b2a7      	uxth	r7, r4
 80148bc:	122e      	asrs	r6, r5, #8
 80148be:	43e4      	mvns	r4, r4
 80148c0:	b2e4      	uxtb	r4, r4
 80148c2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80148c6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80148ca:	fb16 f604 	smulbb	r6, r6, r4
 80148ce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80148d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80148d6:	00ed      	lsls	r5, r5, #3
 80148d8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80148dc:	b2ed      	uxtb	r5, r5
 80148de:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80148e2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80148e6:	fb15 f504 	smulbb	r5, r5, r4
 80148ea:	fa5f f888 	uxtb.w	r8, r8
 80148ee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80148f2:	fb08 5507 	mla	r5, r8, r7, r5
 80148f6:	fb1a fa04 	smulbb	sl, sl, r4
 80148fa:	fa1f fc8c 	uxth.w	ip, ip
 80148fe:	b2ad      	uxth	r5, r5
 8014900:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014904:	fb06 a607 	mla	r6, r6, r7, sl
 8014908:	f10c 0401 	add.w	r4, ip, #1
 801490c:	f105 0a01 	add.w	sl, r5, #1
 8014910:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014914:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014918:	b2b6      	uxth	r6, r6
 801491a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801491e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014922:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014926:	f106 0a01 	add.w	sl, r6, #1
 801492a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801492e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014932:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014936:	ea4c 0c0a 	orr.w	ip, ip, sl
 801493a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801493e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014940:	4421      	add	r1, r4
 8014942:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014944:	f109 0901 	add.w	r9, r9, #1
 8014948:	4422      	add	r2, r4
 801494a:	e79c      	b.n	8014886 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801494c:	b007      	add	sp, #28
 801494e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014952 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014952:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014956:	b085      	sub	sp, #20
 8014958:	468b      	mov	fp, r1
 801495a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801495c:	9203      	str	r2, [sp, #12]
 801495e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8014962:	6861      	ldr	r1, [r4, #4]
 8014964:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8014968:	fb01 2000 	mla	r0, r1, r0, r2
 801496c:	6822      	ldr	r2, [r4, #0]
 801496e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014972:	f8d8 2000 	ldr.w	r2, [r8]
 8014976:	9200      	str	r2, [sp, #0]
 8014978:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801497c:	9201      	str	r2, [sp, #4]
 801497e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014982:	f1bb 0f00 	cmp.w	fp, #0
 8014986:	dc03      	bgt.n	8014990 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014988:	9a03      	ldr	r2, [sp, #12]
 801498a:	2a00      	cmp	r2, #0
 801498c:	f340 8146 	ble.w	8014c1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014990:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014992:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014996:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801499a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801499e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80149a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80149a4:	2b00      	cmp	r3, #0
 80149a6:	dd0e      	ble.n	80149c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80149a8:	140c      	asrs	r4, r1, #16
 80149aa:	d405      	bmi.n	80149b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80149ac:	42bc      	cmp	r4, r7
 80149ae:	da03      	bge.n	80149b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80149b0:	1414      	asrs	r4, r2, #16
 80149b2:	d401      	bmi.n	80149b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80149b4:	42b4      	cmp	r4, r6
 80149b6:	db07      	blt.n	80149c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80149b8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80149ba:	4421      	add	r1, r4
 80149bc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80149be:	3b01      	subs	r3, #1
 80149c0:	4422      	add	r2, r4
 80149c2:	3002      	adds	r0, #2
 80149c4:	e7ee      	b.n	80149a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80149c6:	d017      	beq.n	80149f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80149c8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80149ca:	1e5c      	subs	r4, r3, #1
 80149cc:	fb05 1504 	mla	r5, r5, r4, r1
 80149d0:	142d      	asrs	r5, r5, #16
 80149d2:	d409      	bmi.n	80149e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149d4:	42bd      	cmp	r5, r7
 80149d6:	da07      	bge.n	80149e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149d8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80149da:	fb05 2404 	mla	r4, r5, r4, r2
 80149de:	1424      	asrs	r4, r4, #16
 80149e0:	d402      	bmi.n	80149e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80149e2:	42b4      	cmp	r4, r6
 80149e4:	f2c0 80b3 	blt.w	8014b4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80149e8:	2600      	movs	r6, #0
 80149ea:	199c      	adds	r4, r3, r6
 80149ec:	2c00      	cmp	r4, #0
 80149ee:	dc3e      	bgt.n	8014a6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80149f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80149f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80149f8:	f1bb 0f00 	cmp.w	fp, #0
 80149fc:	f340 810e 	ble.w	8014c1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014a00:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a04:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a08:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014a0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a0e:	f1bb 0b01 	subs.w	fp, fp, #1
 8014a12:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a1a:	eeb0 6a62 	vmov.f32	s12, s5
 8014a1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a2a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014a2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a32:	eeb0 6a43 	vmov.f32	s12, s6
 8014a36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a3a:	ee12 2a90 	vmov	r2, s5
 8014a3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a42:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a46:	ee13 2a10 	vmov	r2, s6
 8014a4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a4e:	9311      	str	r3, [sp, #68]	; 0x44
 8014a50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a52:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a56:	9a03      	ldr	r2, [sp, #12]
 8014a58:	9312      	str	r3, [sp, #72]	; 0x48
 8014a5a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014a5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a60:	eeb0 3a67 	vmov.f32	s6, s15
 8014a64:	bf08      	it	eq
 8014a66:	4613      	moveq	r3, r2
 8014a68:	eef0 2a47 	vmov.f32	s5, s14
 8014a6c:	e789      	b.n	8014982 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014a6e:	140f      	asrs	r7, r1, #16
 8014a70:	d45f      	bmi.n	8014b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a72:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014a76:	42bd      	cmp	r5, r7
 8014a78:	dd5b      	ble.n	8014b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a7a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014a7e:	d458      	bmi.n	8014b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a80:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014a84:	4564      	cmp	r4, ip
 8014a86:	dd54      	ble.n	8014b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a88:	b22d      	sxth	r5, r5
 8014a8a:	fb0c 7505 	mla	r5, ip, r5, r7
 8014a8e:	9c01      	ldr	r4, [sp, #4]
 8014a90:	5d64      	ldrb	r4, [r4, r5]
 8014a92:	2cff      	cmp	r4, #255	; 0xff
 8014a94:	d053      	beq.n	8014b3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8014a96:	2c00      	cmp	r4, #0
 8014a98:	d04b      	beq.n	8014b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014a9a:	9f00      	ldr	r7, [sp, #0]
 8014a9c:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8014aa0:	f06f 0501 	mvn.w	r5, #1
 8014aa4:	4375      	muls	r5, r6
 8014aa6:	9502      	str	r5, [sp, #8]
 8014aa8:	5b45      	ldrh	r5, [r0, r5]
 8014aaa:	fa1f fc84 	uxth.w	ip, r4
 8014aae:	122f      	asrs	r7, r5, #8
 8014ab0:	43e4      	mvns	r4, r4
 8014ab2:	b2e4      	uxtb	r4, r4
 8014ab4:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8014ab8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014abc:	fb17 f704 	smulbb	r7, r7, r4
 8014ac0:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014ac4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8014ac8:	00ed      	lsls	r5, r5, #3
 8014aca:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8014ace:	b2ed      	uxtb	r5, r5
 8014ad0:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014ad4:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014ad8:	fb15 f504 	smulbb	r5, r5, r4
 8014adc:	fa5f f989 	uxtb.w	r9, r9
 8014ae0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014ae4:	fb09 550c 	mla	r5, r9, ip, r5
 8014ae8:	fb1a fa04 	smulbb	sl, sl, r4
 8014aec:	fa1f fe8e 	uxth.w	lr, lr
 8014af0:	b2ad      	uxth	r5, r5
 8014af2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014af6:	fb07 a70c 	mla	r7, r7, ip, sl
 8014afa:	f10e 0401 	add.w	r4, lr, #1
 8014afe:	f105 0a01 	add.w	sl, r5, #1
 8014b02:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8014b06:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014b0a:	b2bf      	uxth	r7, r7
 8014b0c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014b10:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8014b14:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014b18:	f107 0a01 	add.w	sl, r7, #1
 8014b1c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014b20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014b24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014b28:	9c02      	ldr	r4, [sp, #8]
 8014b2a:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014b2e:	f820 e004 	strh.w	lr, [r0, r4]
 8014b32:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014b34:	4421      	add	r1, r4
 8014b36:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014b38:	3e01      	subs	r6, #1
 8014b3a:	4422      	add	r2, r4
 8014b3c:	e755      	b.n	80149ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014b3e:	9c00      	ldr	r4, [sp, #0]
 8014b40:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8014b44:	f06f 0401 	mvn.w	r4, #1
 8014b48:	4374      	muls	r4, r6
 8014b4a:	5305      	strh	r5, [r0, r4]
 8014b4c:	e7f1      	b.n	8014b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014b4e:	f04f 0900 	mov.w	r9, #0
 8014b52:	eba3 0409 	sub.w	r4, r3, r9
 8014b56:	2c00      	cmp	r4, #0
 8014b58:	f77f af4a 	ble.w	80149f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014b5c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014b60:	1414      	asrs	r4, r2, #16
 8014b62:	140d      	asrs	r5, r1, #16
 8014b64:	fb06 5504 	mla	r5, r6, r4, r5
 8014b68:	9c01      	ldr	r4, [sp, #4]
 8014b6a:	5d64      	ldrb	r4, [r4, r5]
 8014b6c:	2cff      	cmp	r4, #255	; 0xff
 8014b6e:	d04f      	beq.n	8014c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8014b70:	2c00      	cmp	r4, #0
 8014b72:	d046      	beq.n	8014c02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8014b74:	9e00      	ldr	r6, [sp, #0]
 8014b76:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8014b7a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014b7e:	b2a7      	uxth	r7, r4
 8014b80:	122e      	asrs	r6, r5, #8
 8014b82:	43e4      	mvns	r4, r4
 8014b84:	b2e4      	uxtb	r4, r4
 8014b86:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014b8a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014b8e:	fb16 f604 	smulbb	r6, r6, r4
 8014b92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014b96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014b9a:	00ed      	lsls	r5, r5, #3
 8014b9c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014ba0:	b2ed      	uxtb	r5, r5
 8014ba2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014ba6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014baa:	fb15 f504 	smulbb	r5, r5, r4
 8014bae:	fa5f fe8e 	uxtb.w	lr, lr
 8014bb2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014bb6:	fb0e 5507 	mla	r5, lr, r7, r5
 8014bba:	fb1a fa04 	smulbb	sl, sl, r4
 8014bbe:	fa1f fc8c 	uxth.w	ip, ip
 8014bc2:	b2ad      	uxth	r5, r5
 8014bc4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014bc8:	fb06 a607 	mla	r6, r6, r7, sl
 8014bcc:	f10c 0401 	add.w	r4, ip, #1
 8014bd0:	f105 0a01 	add.w	sl, r5, #1
 8014bd4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014bd8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014bdc:	b2b6      	uxth	r6, r6
 8014bde:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014be2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014be6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014bea:	f106 0a01 	add.w	sl, r6, #1
 8014bee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014bf2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014bf6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014bfa:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014bfe:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014c02:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014c04:	4421      	add	r1, r4
 8014c06:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014c08:	f109 0901 	add.w	r9, r9, #1
 8014c0c:	4422      	add	r2, r4
 8014c0e:	e7a0      	b.n	8014b52 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8014c10:	9c00      	ldr	r4, [sp, #0]
 8014c12:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8014c16:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8014c1a:	e7f2      	b.n	8014c02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8014c1c:	b005      	add	sp, #20
 8014c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c26:	b085      	sub	sp, #20
 8014c28:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014c2a:	9203      	str	r2, [sp, #12]
 8014c2c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8014c30:	9201      	str	r2, [sp, #4]
 8014c32:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014c36:	9100      	str	r1, [sp, #0]
 8014c38:	6841      	ldr	r1, [r0, #4]
 8014c3a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8014c3e:	fb01 2404 	mla	r4, r1, r4, r2
 8014c42:	6802      	ldr	r2, [r0, #0]
 8014c44:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c48:	f8de 2000 	ldr.w	r2, [lr]
 8014c4c:	9202      	str	r2, [sp, #8]
 8014c4e:	9a01      	ldr	r2, [sp, #4]
 8014c50:	43d6      	mvns	r6, r2
 8014c52:	b2f6      	uxtb	r6, r6
 8014c54:	9a00      	ldr	r2, [sp, #0]
 8014c56:	2a00      	cmp	r2, #0
 8014c58:	dc03      	bgt.n	8014c62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014c5a:	9a03      	ldr	r2, [sp, #12]
 8014c5c:	2a00      	cmp	r2, #0
 8014c5e:	f340 8124 	ble.w	8014eaa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014c62:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014c64:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014c68:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014c6c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014c70:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014c72:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014c76:	2b00      	cmp	r3, #0
 8014c78:	dd0e      	ble.n	8014c98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014c7a:	1408      	asrs	r0, r1, #16
 8014c7c:	d405      	bmi.n	8014c8a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014c7e:	4560      	cmp	r0, ip
 8014c80:	da03      	bge.n	8014c8a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014c82:	1410      	asrs	r0, r2, #16
 8014c84:	d401      	bmi.n	8014c8a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014c86:	42b8      	cmp	r0, r7
 8014c88:	db07      	blt.n	8014c9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014c8a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014c8c:	4401      	add	r1, r0
 8014c8e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014c90:	3b01      	subs	r3, #1
 8014c92:	4402      	add	r2, r0
 8014c94:	3402      	adds	r4, #2
 8014c96:	e7ee      	b.n	8014c76 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014c98:	d06e      	beq.n	8014d78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014c9a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014c9c:	1e58      	subs	r0, r3, #1
 8014c9e:	fb05 1500 	mla	r5, r5, r0, r1
 8014ca2:	142d      	asrs	r5, r5, #16
 8014ca4:	d45c      	bmi.n	8014d60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014ca6:	4565      	cmp	r5, ip
 8014ca8:	da5a      	bge.n	8014d60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014caa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014cac:	fb05 2000 	mla	r0, r5, r0, r2
 8014cb0:	1400      	asrs	r0, r0, #16
 8014cb2:	d455      	bmi.n	8014d60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014cb4:	42b8      	cmp	r0, r7
 8014cb6:	da53      	bge.n	8014d60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014cb8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8014cbc:	4699      	mov	r9, r3
 8014cbe:	46a2      	mov	sl, r4
 8014cc0:	f1b9 0f00 	cmp.w	r9, #0
 8014cc4:	dd54      	ble.n	8014d70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014cc6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014cca:	140d      	asrs	r5, r1, #16
 8014ccc:	1410      	asrs	r0, r2, #16
 8014cce:	fb07 5000 	mla	r0, r7, r0, r5
 8014cd2:	9d02      	ldr	r5, [sp, #8]
 8014cd4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014cd8:	f8ba 5000 	ldrh.w	r5, [sl]
 8014cdc:	122f      	asrs	r7, r5, #8
 8014cde:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014ce2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014ce6:	fb17 f706 	smulbb	r7, r7, r6
 8014cea:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014cee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014cf2:	00ed      	lsls	r5, r5, #3
 8014cf4:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014cf8:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014cfc:	10c7      	asrs	r7, r0, #3
 8014cfe:	b2ed      	uxtb	r5, r5
 8014d00:	00c0      	lsls	r0, r0, #3
 8014d02:	fb18 f806 	smulbb	r8, r8, r6
 8014d06:	fb15 f506 	smulbb	r5, r5, r6
 8014d0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014d0e:	b2c0      	uxtb	r0, r0
 8014d10:	fa1f fc8c 	uxth.w	ip, ip
 8014d14:	fb07 870b 	mla	r7, r7, fp, r8
 8014d18:	fb00 500b 	mla	r0, r0, fp, r5
 8014d1c:	b280      	uxth	r0, r0
 8014d1e:	b2bf      	uxth	r7, r7
 8014d20:	f10c 0501 	add.w	r5, ip, #1
 8014d24:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014d28:	f107 0801 	add.w	r8, r7, #1
 8014d2c:	1c45      	adds	r5, r0, #1
 8014d2e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014d32:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014d36:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014d38:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014d3c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014d40:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014d44:	ea4c 0c05 	orr.w	ip, ip, r5
 8014d48:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014d4c:	4401      	add	r1, r0
 8014d4e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014d50:	ea4c 0c08 	orr.w	ip, ip, r8
 8014d54:	f82a cb02 	strh.w	ip, [sl], #2
 8014d58:	4402      	add	r2, r0
 8014d5a:	f109 39ff 	add.w	r9, r9, #4294967295
 8014d5e:	e7af      	b.n	8014cc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014d60:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014d64:	f04f 0800 	mov.w	r8, #0
 8014d68:	eb03 0008 	add.w	r0, r3, r8
 8014d6c:	2800      	cmp	r0, #0
 8014d6e:	dc41      	bgt.n	8014df4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014d70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014d74:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014d78:	9b00      	ldr	r3, [sp, #0]
 8014d7a:	2b00      	cmp	r3, #0
 8014d7c:	f340 8095 	ble.w	8014eaa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014d80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014d84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014d88:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014d8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014d92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014d96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014d9a:	eef0 6a62 	vmov.f32	s13, s5
 8014d9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014da2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014da6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014daa:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8014dae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014db2:	eef0 6a43 	vmov.f32	s13, s6
 8014db6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014dba:	ee12 2a90 	vmov	r2, s5
 8014dbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014dc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8014dc6:	ee13 2a10 	vmov	r2, s6
 8014dca:	9311      	str	r3, [sp, #68]	; 0x44
 8014dcc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014dce:	fb92 f3f3 	sdiv	r3, r2, r3
 8014dd2:	9312      	str	r3, [sp, #72]	; 0x48
 8014dd4:	9b00      	ldr	r3, [sp, #0]
 8014dd6:	9a03      	ldr	r2, [sp, #12]
 8014dd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014ddc:	3b01      	subs	r3, #1
 8014dde:	9300      	str	r3, [sp, #0]
 8014de0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8014de4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014de6:	eeb0 3a67 	vmov.f32	s6, s15
 8014dea:	bf08      	it	eq
 8014dec:	4613      	moveq	r3, r2
 8014dee:	eef0 2a47 	vmov.f32	s5, s14
 8014df2:	e72f      	b.n	8014c54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014df4:	140f      	asrs	r7, r1, #16
 8014df6:	d451      	bmi.n	8014e9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014df8:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014dfc:	42bd      	cmp	r5, r7
 8014dfe:	dd4d      	ble.n	8014e9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e00:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014e04:	d44a      	bmi.n	8014e9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e06:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014e0a:	4560      	cmp	r0, ip
 8014e0c:	dd46      	ble.n	8014e9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014e0e:	b22d      	sxth	r5, r5
 8014e10:	fb0c 7505 	mla	r5, ip, r5, r7
 8014e14:	9802      	ldr	r0, [sp, #8]
 8014e16:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014e1a:	f06f 0501 	mvn.w	r5, #1
 8014e1e:	fb05 fb08 	mul.w	fp, r5, r8
 8014e22:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014e26:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014e2a:	122f      	asrs	r7, r5, #8
 8014e2c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014e30:	fb17 f706 	smulbb	r7, r7, r6
 8014e34:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014e38:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014e3c:	00ed      	lsls	r5, r5, #3
 8014e3e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014e42:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014e46:	10c7      	asrs	r7, r0, #3
 8014e48:	b2ed      	uxtb	r5, r5
 8014e4a:	00c0      	lsls	r0, r0, #3
 8014e4c:	fb19 f906 	smulbb	r9, r9, r6
 8014e50:	fb15 f506 	smulbb	r5, r5, r6
 8014e54:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014e58:	b2c0      	uxtb	r0, r0
 8014e5a:	fa1f fc8c 	uxth.w	ip, ip
 8014e5e:	fb07 970a 	mla	r7, r7, sl, r9
 8014e62:	fb00 500a 	mla	r0, r0, sl, r5
 8014e66:	b2bf      	uxth	r7, r7
 8014e68:	b280      	uxth	r0, r0
 8014e6a:	f10c 0501 	add.w	r5, ip, #1
 8014e6e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014e72:	f107 0901 	add.w	r9, r7, #1
 8014e76:	1c45      	adds	r5, r0, #1
 8014e78:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014e7c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014e80:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014e84:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014e88:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014e8c:	ea4c 0c05 	orr.w	ip, ip, r5
 8014e90:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014e94:	ea4c 0c09 	orr.w	ip, ip, r9
 8014e98:	f824 c00b 	strh.w	ip, [r4, fp]
 8014e9c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014e9e:	4401      	add	r1, r0
 8014ea0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014ea2:	f108 38ff 	add.w	r8, r8, #4294967295
 8014ea6:	4402      	add	r2, r0
 8014ea8:	e75e      	b.n	8014d68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8014eaa:	b005      	add	sp, #20
 8014eac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014eb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014eb4:	b085      	sub	sp, #20
 8014eb6:	4693      	mov	fp, r2
 8014eb8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014eba:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014ebc:	6870      	ldr	r0, [r6, #4]
 8014ebe:	9101      	str	r1, [sp, #4]
 8014ec0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014ec4:	fb00 2404 	mla	r4, r0, r4, r2
 8014ec8:	6832      	ldr	r2, [r6, #0]
 8014eca:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014ece:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014ed2:	682a      	ldr	r2, [r5, #0]
 8014ed4:	9202      	str	r2, [sp, #8]
 8014ed6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014eda:	9a01      	ldr	r2, [sp, #4]
 8014edc:	2a00      	cmp	r2, #0
 8014ede:	dc03      	bgt.n	8014ee8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014ee0:	f1bb 0f00 	cmp.w	fp, #0
 8014ee4:	f340 809a 	ble.w	801501c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014ee8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014eea:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014eee:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014ef2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014ef6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014ef8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014efc:	2b00      	cmp	r3, #0
 8014efe:	dd0c      	ble.n	8014f1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014f00:	1406      	asrs	r6, r0, #16
 8014f02:	d405      	bmi.n	8014f10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f04:	454e      	cmp	r6, r9
 8014f06:	da03      	bge.n	8014f10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f08:	1416      	asrs	r6, r2, #16
 8014f0a:	d401      	bmi.n	8014f10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014f0c:	4546      	cmp	r6, r8
 8014f0e:	db05      	blt.n	8014f1c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014f10:	4470      	add	r0, lr
 8014f12:	4462      	add	r2, ip
 8014f14:	3b01      	subs	r3, #1
 8014f16:	3402      	adds	r4, #2
 8014f18:	e7f0      	b.n	8014efc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014f1a:	d00f      	beq.n	8014f3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014f1c:	1e5e      	subs	r6, r3, #1
 8014f1e:	fb0e 0706 	mla	r7, lr, r6, r0
 8014f22:	143f      	asrs	r7, r7, #16
 8014f24:	d541      	bpl.n	8014faa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014f26:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014f2a:	4698      	mov	r8, r3
 8014f2c:	9603      	str	r6, [sp, #12]
 8014f2e:	f1b8 0f00 	cmp.w	r8, #0
 8014f32:	dc56      	bgt.n	8014fe2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014f34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f38:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014f3c:	9b01      	ldr	r3, [sp, #4]
 8014f3e:	2b00      	cmp	r3, #0
 8014f40:	dd6c      	ble.n	801501c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014f42:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014f46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014f4a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014f4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f50:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014f58:	eeb0 6a62 	vmov.f32	s12, s5
 8014f5c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f60:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f64:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f68:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014f6c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f70:	eeb0 6a43 	vmov.f32	s12, s6
 8014f74:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f78:	ee12 2a90 	vmov	r2, s5
 8014f7c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f80:	fb92 fef3 	sdiv	lr, r2, r3
 8014f84:	ee13 2a10 	vmov	r2, s6
 8014f88:	fb92 fcf3 	sdiv	ip, r2, r3
 8014f8c:	9b01      	ldr	r3, [sp, #4]
 8014f8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f92:	3b01      	subs	r3, #1
 8014f94:	9301      	str	r3, [sp, #4]
 8014f96:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014f9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f9c:	eeb0 3a67 	vmov.f32	s6, s15
 8014fa0:	bf08      	it	eq
 8014fa2:	465b      	moveq	r3, fp
 8014fa4:	eef0 2a47 	vmov.f32	s5, s14
 8014fa8:	e797      	b.n	8014eda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014faa:	454f      	cmp	r7, r9
 8014fac:	dabb      	bge.n	8014f26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014fae:	fb0c 2606 	mla	r6, ip, r6, r2
 8014fb2:	1436      	asrs	r6, r6, #16
 8014fb4:	d4b7      	bmi.n	8014f26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014fb6:	4546      	cmp	r6, r8
 8014fb8:	dab5      	bge.n	8014f26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014fba:	461e      	mov	r6, r3
 8014fbc:	46a0      	mov	r8, r4
 8014fbe:	2e00      	cmp	r6, #0
 8014fc0:	ddb8      	ble.n	8014f34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014fc2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014fc6:	9902      	ldr	r1, [sp, #8]
 8014fc8:	1417      	asrs	r7, r2, #16
 8014fca:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014fce:	fb0a 9707 	mla	r7, sl, r7, r9
 8014fd2:	4470      	add	r0, lr
 8014fd4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014fd8:	f828 7b02 	strh.w	r7, [r8], #2
 8014fdc:	4462      	add	r2, ip
 8014fde:	3e01      	subs	r6, #1
 8014fe0:	e7ed      	b.n	8014fbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8014fe2:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014fe6:	d414      	bmi.n	8015012 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014fe8:	68ae      	ldr	r6, [r5, #8]
 8014fea:	454e      	cmp	r6, r9
 8014fec:	dd11      	ble.n	8015012 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014fee:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014ff2:	d40e      	bmi.n	8015012 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014ff4:	68ef      	ldr	r7, [r5, #12]
 8014ff6:	4557      	cmp	r7, sl
 8014ff8:	dd0b      	ble.n	8015012 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014ffa:	b236      	sxth	r6, r6
 8014ffc:	fb0a 9606 	mla	r6, sl, r6, r9
 8015000:	9f02      	ldr	r7, [sp, #8]
 8015002:	f06f 0101 	mvn.w	r1, #1
 8015006:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801500a:	fb01 f608 	mul.w	r6, r1, r8
 801500e:	9903      	ldr	r1, [sp, #12]
 8015010:	538f      	strh	r7, [r1, r6]
 8015012:	4470      	add	r0, lr
 8015014:	4462      	add	r2, ip
 8015016:	f108 38ff 	add.w	r8, r8, #4294967295
 801501a:	e788      	b.n	8014f2e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801501c:	b005      	add	sp, #20
 801501e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015022 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015022:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015026:	b085      	sub	sp, #20
 8015028:	468b      	mov	fp, r1
 801502a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801502c:	9202      	str	r2, [sp, #8]
 801502e:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015032:	9203      	str	r2, [sp, #12]
 8015034:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015038:	6841      	ldr	r1, [r0, #4]
 801503a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801503e:	fb01 2404 	mla	r4, r1, r4, r2
 8015042:	6802      	ldr	r2, [r0, #0]
 8015044:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015048:	f8d8 2000 	ldr.w	r2, [r8]
 801504c:	9200      	str	r2, [sp, #0]
 801504e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015052:	f1bb 0f00 	cmp.w	fp, #0
 8015056:	dc03      	bgt.n	8015060 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015058:	9a02      	ldr	r2, [sp, #8]
 801505a:	2a00      	cmp	r2, #0
 801505c:	f340 8134 	ble.w	80152c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8015060:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015062:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015066:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801506a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801506e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015070:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015074:	2b00      	cmp	r3, #0
 8015076:	dd0e      	ble.n	8015096 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015078:	1402      	asrs	r2, r0, #16
 801507a:	d405      	bmi.n	8015088 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801507c:	42ba      	cmp	r2, r7
 801507e:	da03      	bge.n	8015088 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015080:	140a      	asrs	r2, r1, #16
 8015082:	d401      	bmi.n	8015088 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015084:	42b2      	cmp	r2, r6
 8015086:	db07      	blt.n	8015098 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015088:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801508a:	4410      	add	r0, r2
 801508c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801508e:	3b01      	subs	r3, #1
 8015090:	4411      	add	r1, r2
 8015092:	3402      	adds	r4, #2
 8015094:	e7ee      	b.n	8015074 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015096:	d019      	beq.n	80150cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015098:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801509a:	1e5a      	subs	r2, r3, #1
 801509c:	fb05 0502 	mla	r5, r5, r2, r0
 80150a0:	142d      	asrs	r5, r5, #16
 80150a2:	d409      	bmi.n	80150b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80150a4:	42bd      	cmp	r5, r7
 80150a6:	da07      	bge.n	80150b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80150a8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80150aa:	fb05 1202 	mla	r2, r5, r2, r1
 80150ae:	1412      	asrs	r2, r2, #16
 80150b0:	d402      	bmi.n	80150b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80150b2:	42b2      	cmp	r2, r6
 80150b4:	f2c0 80aa 	blt.w	801520c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80150b8:	f04f 0c00 	mov.w	ip, #0
 80150bc:	eb03 020c 	add.w	r2, r3, ip
 80150c0:	2a00      	cmp	r2, #0
 80150c2:	dc3e      	bgt.n	8015142 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 80150c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80150cc:	f1bb 0f00 	cmp.w	fp, #0
 80150d0:	f340 80fa 	ble.w	80152c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80150d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80150d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80150dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80150e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80150e2:	f1bb 0b01 	subs.w	fp, fp, #1
 80150e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80150ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80150ee:	eeb0 6a62 	vmov.f32	s12, s5
 80150f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80150f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80150fe:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015102:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015106:	eeb0 6a43 	vmov.f32	s12, s6
 801510a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801510e:	ee12 2a90 	vmov	r2, s5
 8015112:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015116:	fb92 f3f3 	sdiv	r3, r2, r3
 801511a:	ee13 2a10 	vmov	r2, s6
 801511e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015122:	9311      	str	r3, [sp, #68]	; 0x44
 8015124:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015126:	fb92 f3f3 	sdiv	r3, r2, r3
 801512a:	9a02      	ldr	r2, [sp, #8]
 801512c:	9312      	str	r3, [sp, #72]	; 0x48
 801512e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015132:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015134:	eeb0 3a67 	vmov.f32	s6, s15
 8015138:	bf08      	it	eq
 801513a:	4613      	moveq	r3, r2
 801513c:	eef0 2a47 	vmov.f32	s5, s14
 8015140:	e787      	b.n	8015052 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015142:	1406      	asrs	r6, r0, #16
 8015144:	d45b      	bmi.n	80151fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8015146:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801514a:	42b5      	cmp	r5, r6
 801514c:	dd57      	ble.n	80151fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801514e:	140f      	asrs	r7, r1, #16
 8015150:	d455      	bmi.n	80151fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8015152:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8015156:	42ba      	cmp	r2, r7
 8015158:	dd51      	ble.n	80151fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801515a:	b22d      	sxth	r5, r5
 801515c:	fb07 6505 	mla	r5, r7, r5, r6
 8015160:	9a00      	ldr	r2, [sp, #0]
 8015162:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 8015166:	0e2e      	lsrs	r6, r5, #24
 8015168:	d049      	beq.n	80151fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801516a:	f06f 0201 	mvn.w	r2, #1
 801516e:	fb02 f20c 	mul.w	r2, r2, ip
 8015172:	9201      	str	r2, [sp, #4]
 8015174:	f834 e002 	ldrh.w	lr, [r4, r2]
 8015178:	9a03      	ldr	r2, [sp, #12]
 801517a:	4356      	muls	r6, r2
 801517c:	1c72      	adds	r2, r6, #1
 801517e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015182:	1212      	asrs	r2, r2, #8
 8015184:	fa1f f982 	uxth.w	r9, r2
 8015188:	ea4f 272e 	mov.w	r7, lr, asr #8
 801518c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015190:	43d2      	mvns	r2, r2
 8015192:	b2d2      	uxtb	r2, r2
 8015194:	fb16 f609 	smulbb	r6, r6, r9
 8015198:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801519c:	fb07 6702 	mla	r7, r7, r2, r6
 80151a0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80151a4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80151a8:	b2ed      	uxtb	r5, r5
 80151aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80151ae:	fa5f fe8e 	uxtb.w	lr, lr
 80151b2:	fb15 f509 	smulbb	r5, r5, r9
 80151b6:	fb0e 5502 	mla	r5, lr, r2, r5
 80151ba:	b2bf      	uxth	r7, r7
 80151bc:	fb1a fa09 	smulbb	sl, sl, r9
 80151c0:	b2ad      	uxth	r5, r5
 80151c2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80151c6:	fb06 a602 	mla	r6, r6, r2, sl
 80151ca:	1c7a      	adds	r2, r7, #1
 80151cc:	f105 0a01 	add.w	sl, r5, #1
 80151d0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80151d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80151d8:	b2b6      	uxth	r6, r6
 80151da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80151de:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80151e2:	ea47 070a 	orr.w	r7, r7, sl
 80151e6:	f106 0a01 	add.w	sl, r6, #1
 80151ea:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80151ee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80151f2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80151f6:	9a01      	ldr	r2, [sp, #4]
 80151f8:	ea47 070a 	orr.w	r7, r7, sl
 80151fc:	52a7      	strh	r7, [r4, r2]
 80151fe:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015200:	4410      	add	r0, r2
 8015202:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015204:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015208:	4411      	add	r1, r2
 801520a:	e757      	b.n	80150bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801520c:	f04f 0e00 	mov.w	lr, #0
 8015210:	eba3 020e 	sub.w	r2, r3, lr
 8015214:	2a00      	cmp	r2, #0
 8015216:	f77f af55 	ble.w	80150c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801521a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801521e:	1405      	asrs	r5, r0, #16
 8015220:	140a      	asrs	r2, r1, #16
 8015222:	fb06 5202 	mla	r2, r6, r2, r5
 8015226:	9d00      	ldr	r5, [sp, #0]
 8015228:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801522c:	0e2e      	lsrs	r6, r5, #24
 801522e:	d044      	beq.n	80152ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8015230:	9a03      	ldr	r2, [sp, #12]
 8015232:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015236:	4356      	muls	r6, r2
 8015238:	1c72      	adds	r2, r6, #1
 801523a:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801523e:	1212      	asrs	r2, r2, #8
 8015240:	fa1f f982 	uxth.w	r9, r2
 8015244:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015248:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801524c:	43d2      	mvns	r2, r2
 801524e:	b2d2      	uxtb	r2, r2
 8015250:	fb16 f609 	smulbb	r6, r6, r9
 8015254:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015258:	fb07 6702 	mla	r7, r7, r2, r6
 801525c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015260:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015264:	b2ed      	uxtb	r5, r5
 8015266:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801526a:	fa5f fc8c 	uxtb.w	ip, ip
 801526e:	fb15 f509 	smulbb	r5, r5, r9
 8015272:	fb0c 5502 	mla	r5, ip, r2, r5
 8015276:	b2bf      	uxth	r7, r7
 8015278:	fb1a fa09 	smulbb	sl, sl, r9
 801527c:	b2ad      	uxth	r5, r5
 801527e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015282:	fb06 a602 	mla	r6, r6, r2, sl
 8015286:	1c7a      	adds	r2, r7, #1
 8015288:	f105 0a01 	add.w	sl, r5, #1
 801528c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015290:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015294:	b2b6      	uxth	r6, r6
 8015296:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801529a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801529e:	ea47 070a 	orr.w	r7, r7, sl
 80152a2:	f106 0a01 	add.w	sl, r6, #1
 80152a6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80152aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80152ae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80152b2:	ea47 070a 	orr.w	r7, r7, sl
 80152b6:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80152ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80152bc:	4410      	add	r0, r2
 80152be:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80152c0:	f10e 0e01 	add.w	lr, lr, #1
 80152c4:	4411      	add	r1, r2
 80152c6:	e7a3      	b.n	8015210 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80152c8:	b005      	add	sp, #20
 80152ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080152d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80152d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152d4:	b085      	sub	sp, #20
 80152d6:	468b      	mov	fp, r1
 80152d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80152da:	9203      	str	r2, [sp, #12]
 80152dc:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80152e0:	6861      	ldr	r1, [r4, #4]
 80152e2:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 80152e6:	fb01 2000 	mla	r0, r1, r0, r2
 80152ea:	6822      	ldr	r2, [r4, #0]
 80152ec:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80152f0:	f8d9 2000 	ldr.w	r2, [r9]
 80152f4:	9200      	str	r2, [sp, #0]
 80152f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80152fa:	f1bb 0f00 	cmp.w	fp, #0
 80152fe:	dc03      	bgt.n	8015308 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015300:	9a03      	ldr	r2, [sp, #12]
 8015302:	2a00      	cmp	r2, #0
 8015304:	f340 8154 	ble.w	80155b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8015308:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801530a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801530e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015312:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015316:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015318:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801531c:	2b00      	cmp	r3, #0
 801531e:	dd0e      	ble.n	801533e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015320:	140c      	asrs	r4, r1, #16
 8015322:	d405      	bmi.n	8015330 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015324:	42bc      	cmp	r4, r7
 8015326:	da03      	bge.n	8015330 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015328:	1414      	asrs	r4, r2, #16
 801532a:	d401      	bmi.n	8015330 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801532c:	42b4      	cmp	r4, r6
 801532e:	db07      	blt.n	8015340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015330:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015332:	4421      	add	r1, r4
 8015334:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015336:	3b01      	subs	r3, #1
 8015338:	4422      	add	r2, r4
 801533a:	3002      	adds	r0, #2
 801533c:	e7ee      	b.n	801531c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801533e:	d017      	beq.n	8015370 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015340:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015342:	1e5c      	subs	r4, r3, #1
 8015344:	fb05 1504 	mla	r5, r5, r4, r1
 8015348:	142d      	asrs	r5, r5, #16
 801534a:	d409      	bmi.n	8015360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801534c:	42bd      	cmp	r5, r7
 801534e:	da07      	bge.n	8015360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015350:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015352:	fb05 2404 	mla	r4, r5, r4, r2
 8015356:	1424      	asrs	r4, r4, #16
 8015358:	d402      	bmi.n	8015360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801535a:	42b4      	cmp	r4, r6
 801535c:	f2c0 80c0 	blt.w	80154e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8015360:	2700      	movs	r7, #0
 8015362:	19dc      	adds	r4, r3, r7
 8015364:	2c00      	cmp	r4, #0
 8015366:	dc3e      	bgt.n	80153e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015368:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801536c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015370:	f1bb 0f00 	cmp.w	fp, #0
 8015374:	f340 811c 	ble.w	80155b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8015378:	ee30 0a04 	vadd.f32	s0, s0, s8
 801537c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015380:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015384:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015386:	f1bb 0b01 	subs.w	fp, fp, #1
 801538a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801538e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015392:	eeb0 6a62 	vmov.f32	s12, s5
 8015396:	ee61 7a27 	vmul.f32	s15, s2, s15
 801539a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801539e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80153a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80153a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80153aa:	eeb0 6a43 	vmov.f32	s12, s6
 80153ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80153b2:	ee12 2a90 	vmov	r2, s5
 80153b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80153ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80153be:	ee13 2a10 	vmov	r2, s6
 80153c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80153c6:	9311      	str	r3, [sp, #68]	; 0x44
 80153c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80153ce:	9a03      	ldr	r2, [sp, #12]
 80153d0:	9312      	str	r3, [sp, #72]	; 0x48
 80153d2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80153d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153d8:	eeb0 3a67 	vmov.f32	s6, s15
 80153dc:	bf08      	it	eq
 80153de:	4613      	moveq	r3, r2
 80153e0:	eef0 2a47 	vmov.f32	s5, s14
 80153e4:	e789      	b.n	80152fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80153e6:	140e      	asrs	r6, r1, #16
 80153e8:	d461      	bmi.n	80154ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80153ea:	f8d9 5008 	ldr.w	r5, [r9, #8]
 80153ee:	42b5      	cmp	r5, r6
 80153f0:	dd5d      	ble.n	80154ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80153f2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80153f6:	d45a      	bmi.n	80154ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80153f8:	f8d9 400c 	ldr.w	r4, [r9, #12]
 80153fc:	4564      	cmp	r4, ip
 80153fe:	dd56      	ble.n	80154ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8015400:	b22d      	sxth	r5, r5
 8015402:	fb0c 6505 	mla	r5, ip, r5, r6
 8015406:	9c00      	ldr	r4, [sp, #0]
 8015408:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 801540c:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8015410:	d04d      	beq.n	80154ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8015412:	0a26      	lsrs	r6, r4, #8
 8015414:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015418:	fa5f f58e 	uxtb.w	r5, lr
 801541c:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8015420:	9601      	str	r6, [sp, #4]
 8015422:	d04a      	beq.n	80154ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8015424:	f06f 0601 	mvn.w	r6, #1
 8015428:	437e      	muls	r6, r7
 801542a:	fa1f fa85 	uxth.w	sl, r5
 801542e:	f830 8006 	ldrh.w	r8, [r0, r6]
 8015432:	9602      	str	r6, [sp, #8]
 8015434:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015438:	43ed      	mvns	r5, r5
 801543a:	fa5f fc8c 	uxtb.w	ip, ip
 801543e:	b2ed      	uxtb	r5, r5
 8015440:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015444:	fb1c fc0a 	smulbb	ip, ip, sl
 8015448:	fb0e cc05 	mla	ip, lr, r5, ip
 801544c:	b2e4      	uxtb	r4, r4
 801544e:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8015452:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015456:	f89d 6004 	ldrb.w	r6, [sp, #4]
 801545a:	fa5f f888 	uxtb.w	r8, r8
 801545e:	fb14 f40a 	smulbb	r4, r4, sl
 8015462:	fb08 4405 	mla	r4, r8, r5, r4
 8015466:	b2a4      	uxth	r4, r4
 8015468:	fa1f fc8c 	uxth.w	ip, ip
 801546c:	fb16 f60a 	smulbb	r6, r6, sl
 8015470:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8015474:	fb0e 6e05 	mla	lr, lr, r5, r6
 8015478:	1c66      	adds	r6, r4, #1
 801547a:	f10c 0501 	add.w	r5, ip, #1
 801547e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015482:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015486:	fa1f fe8e 	uxth.w	lr, lr
 801548a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801548e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015492:	ea4c 0c06 	orr.w	ip, ip, r6
 8015496:	f10e 0601 	add.w	r6, lr, #1
 801549a:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 801549e:	0976      	lsrs	r6, r6, #5
 80154a0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80154a4:	9c02      	ldr	r4, [sp, #8]
 80154a6:	ea4c 0c06 	orr.w	ip, ip, r6
 80154aa:	f820 c004 	strh.w	ip, [r0, r4]
 80154ae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80154b0:	4421      	add	r1, r4
 80154b2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80154b4:	3f01      	subs	r7, #1
 80154b6:	4422      	add	r2, r4
 80154b8:	e753      	b.n	8015362 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80154ba:	4e3f      	ldr	r6, [pc, #252]	; (80155b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 80154bc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80154c0:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 80154c4:	ea4c 0c04 	orr.w	ip, ip, r4
 80154c8:	9c01      	ldr	r4, [sp, #4]
 80154ca:	f06f 0501 	mvn.w	r5, #1
 80154ce:	00e6      	lsls	r6, r4, #3
 80154d0:	437d      	muls	r5, r7
 80154d2:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 80154d6:	ea4c 0c04 	orr.w	ip, ip, r4
 80154da:	f820 c005 	strh.w	ip, [r0, r5]
 80154de:	e7e6      	b.n	80154ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80154e0:	f04f 0800 	mov.w	r8, #0
 80154e4:	eba3 0408 	sub.w	r4, r3, r8
 80154e8:	2c00      	cmp	r4, #0
 80154ea:	f77f af3d 	ble.w	8015368 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80154ee:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80154f2:	140d      	asrs	r5, r1, #16
 80154f4:	1414      	asrs	r4, r2, #16
 80154f6:	fb06 5404 	mla	r4, r6, r4, r5
 80154fa:	9d00      	ldr	r5, [sp, #0]
 80154fc:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8015500:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8015504:	d042      	beq.n	801558c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015506:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801550a:	fa5f f58c 	uxtb.w	r5, ip
 801550e:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8015512:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8015516:	d040      	beq.n	801559a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015518:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 801551c:	fa1f fa85 	uxth.w	sl, r5
 8015520:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015524:	43ed      	mvns	r5, r5
 8015526:	b2ff      	uxtb	r7, r7
 8015528:	b2ed      	uxtb	r5, r5
 801552a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801552e:	fb17 f70a 	smulbb	r7, r7, sl
 8015532:	fb0c 7705 	mla	r7, ip, r5, r7
 8015536:	b2e4      	uxtb	r4, r4
 8015538:	ea4f 0cee 	mov.w	ip, lr, asr #3
 801553c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015540:	fa5f fe8e 	uxtb.w	lr, lr
 8015544:	fb14 f40a 	smulbb	r4, r4, sl
 8015548:	fb0e 4405 	mla	r4, lr, r5, r4
 801554c:	b2f6      	uxtb	r6, r6
 801554e:	b2bf      	uxth	r7, r7
 8015550:	fb16 f60a 	smulbb	r6, r6, sl
 8015554:	b2a4      	uxth	r4, r4
 8015556:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801555a:	fb0c 6c05 	mla	ip, ip, r5, r6
 801555e:	1c7d      	adds	r5, r7, #1
 8015560:	1c66      	adds	r6, r4, #1
 8015562:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8015566:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801556a:	fa1f fc8c 	uxth.w	ip, ip
 801556e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015572:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015576:	4337      	orrs	r7, r6
 8015578:	f10c 0601 	add.w	r6, ip, #1
 801557c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015580:	0976      	lsrs	r6, r6, #5
 8015582:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015586:	4337      	orrs	r7, r6
 8015588:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 801558c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801558e:	4421      	add	r1, r4
 8015590:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015592:	f108 0801 	add.w	r8, r8, #1
 8015596:	4422      	add	r2, r4
 8015598:	e7a4      	b.n	80154e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801559a:	4d07      	ldr	r5, [pc, #28]	; (80155b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 801559c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80155a0:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 80155a4:	00f6      	lsls	r6, r6, #3
 80155a6:	4327      	orrs	r7, r4
 80155a8:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 80155ac:	4327      	orrs	r7, r4
 80155ae:	e7eb      	b.n	8015588 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 80155b0:	b005      	add	sp, #20
 80155b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155b6:	bf00      	nop
 80155b8:	fffff800 	.word	0xfffff800

080155bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80155bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155c0:	b087      	sub	sp, #28
 80155c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80155c6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80155c8:	9204      	str	r2, [sp, #16]
 80155ca:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80155ce:	9205      	str	r2, [sp, #20]
 80155d0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80155d4:	9101      	str	r1, [sp, #4]
 80155d6:	6841      	ldr	r1, [r0, #4]
 80155d8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80155dc:	fb01 2404 	mla	r4, r1, r4, r2
 80155e0:	6802      	ldr	r2, [r0, #0]
 80155e2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80155e6:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80155ea:	3201      	adds	r2, #1
 80155ec:	f022 0201 	bic.w	r2, r2, #1
 80155f0:	9202      	str	r2, [sp, #8]
 80155f2:	f8d8 2000 	ldr.w	r2, [r8]
 80155f6:	9203      	str	r2, [sp, #12]
 80155f8:	9a01      	ldr	r2, [sp, #4]
 80155fa:	2a00      	cmp	r2, #0
 80155fc:	dc03      	bgt.n	8015606 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80155fe:	9a04      	ldr	r2, [sp, #16]
 8015600:	2a00      	cmp	r2, #0
 8015602:	f340 814d 	ble.w	80158a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8015606:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015608:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801560c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015610:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015614:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015616:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801561a:	2b00      	cmp	r3, #0
 801561c:	dd0e      	ble.n	801563c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801561e:	1402      	asrs	r2, r0, #16
 8015620:	d405      	bmi.n	801562e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015622:	42ba      	cmp	r2, r7
 8015624:	da03      	bge.n	801562e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015626:	140a      	asrs	r2, r1, #16
 8015628:	d401      	bmi.n	801562e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801562a:	42b2      	cmp	r2, r6
 801562c:	db07      	blt.n	801563e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801562e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015630:	4410      	add	r0, r2
 8015632:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015634:	3b01      	subs	r3, #1
 8015636:	4411      	add	r1, r2
 8015638:	3402      	adds	r4, #2
 801563a:	e7ee      	b.n	801561a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801563c:	d019      	beq.n	8015672 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801563e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015640:	1e5a      	subs	r2, r3, #1
 8015642:	fb05 0502 	mla	r5, r5, r2, r0
 8015646:	142d      	asrs	r5, r5, #16
 8015648:	d409      	bmi.n	801565e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801564a:	42bd      	cmp	r5, r7
 801564c:	da07      	bge.n	801565e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801564e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015650:	fb05 1202 	mla	r2, r5, r2, r1
 8015654:	1412      	asrs	r2, r2, #16
 8015656:	d402      	bmi.n	801565e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015658:	42b2      	cmp	r2, r6
 801565a:	f2c0 80b7 	blt.w	80157cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801565e:	f04f 0c00 	mov.w	ip, #0
 8015662:	eb03 020c 	add.w	r2, r3, ip
 8015666:	2a00      	cmp	r2, #0
 8015668:	dc3f      	bgt.n	80156ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 801566a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801566e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015672:	9b01      	ldr	r3, [sp, #4]
 8015674:	2b00      	cmp	r3, #0
 8015676:	f340 8113 	ble.w	80158a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801567a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801567e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015682:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015686:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015688:	ee31 1a05 	vadd.f32	s2, s2, s10
 801568c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015690:	eeb0 6a62 	vmov.f32	s12, s5
 8015694:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015698:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801569c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80156a0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80156a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80156a8:	eeb0 6a43 	vmov.f32	s12, s6
 80156ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80156b0:	ee12 2a90 	vmov	r2, s5
 80156b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80156b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80156bc:	ee13 2a10 	vmov	r2, s6
 80156c0:	9313      	str	r3, [sp, #76]	; 0x4c
 80156c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80156c8:	9314      	str	r3, [sp, #80]	; 0x50
 80156ca:	9b01      	ldr	r3, [sp, #4]
 80156cc:	9a04      	ldr	r2, [sp, #16]
 80156ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156d2:	3b01      	subs	r3, #1
 80156d4:	9301      	str	r3, [sp, #4]
 80156d6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80156da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156dc:	eeb0 3a67 	vmov.f32	s6, s15
 80156e0:	bf08      	it	eq
 80156e2:	4613      	moveq	r3, r2
 80156e4:	eef0 2a47 	vmov.f32	s5, s14
 80156e8:	e786      	b.n	80155f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80156ea:	1405      	asrs	r5, r0, #16
 80156ec:	d467      	bmi.n	80157be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80156ee:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80156f2:	42aa      	cmp	r2, r5
 80156f4:	dd63      	ble.n	80157be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80156f6:	140e      	asrs	r6, r1, #16
 80156f8:	d461      	bmi.n	80157be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80156fa:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80156fe:	42b2      	cmp	r2, r6
 8015700:	dd5d      	ble.n	80157be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015702:	9a02      	ldr	r2, [sp, #8]
 8015704:	fb06 5502 	mla	r5, r6, r2, r5
 8015708:	086a      	lsrs	r2, r5, #1
 801570a:	9e03      	ldr	r6, [sp, #12]
 801570c:	5cb2      	ldrb	r2, [r6, r2]
 801570e:	07ee      	lsls	r6, r5, #31
 8015710:	bf54      	ite	pl
 8015712:	f002 020f 	andpl.w	r2, r2, #15
 8015716:	1112      	asrmi	r2, r2, #4
 8015718:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801571c:	b2d2      	uxtb	r2, r2
 801571e:	2a00      	cmp	r2, #0
 8015720:	d04d      	beq.n	80157be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015722:	f06f 0601 	mvn.w	r6, #1
 8015726:	fb06 fb0c 	mul.w	fp, r6, ip
 801572a:	9e05      	ldr	r6, [sp, #20]
 801572c:	4d5e      	ldr	r5, [pc, #376]	; (80158a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801572e:	f834 e00b 	ldrh.w	lr, [r4, fp]
 8015732:	682d      	ldr	r5, [r5, #0]
 8015734:	4372      	muls	r2, r6
 8015736:	1c56      	adds	r6, r2, #1
 8015738:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801573c:	1212      	asrs	r2, r2, #8
 801573e:	0a2f      	lsrs	r7, r5, #8
 8015740:	fa1f fa82 	uxth.w	sl, r2
 8015744:	ea4f 262e 	mov.w	r6, lr, asr #8
 8015748:	43d2      	mvns	r2, r2
 801574a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801574e:	b2d2      	uxtb	r2, r2
 8015750:	fb17 f70a 	smulbb	r7, r7, sl
 8015754:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8015758:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801575c:	fb06 7602 	mla	r6, r6, r2, r7
 8015760:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015764:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015768:	fb19 f90a 	smulbb	r9, r9, sl
 801576c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015770:	00ed      	lsls	r5, r5, #3
 8015772:	fb07 9702 	mla	r7, r7, r2, r9
 8015776:	b2ed      	uxtb	r5, r5
 8015778:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801577c:	b2bf      	uxth	r7, r7
 801577e:	fa5f fe8e 	uxtb.w	lr, lr
 8015782:	fb15 f50a 	smulbb	r5, r5, sl
 8015786:	b2b6      	uxth	r6, r6
 8015788:	fb0e 5502 	mla	r5, lr, r2, r5
 801578c:	f107 0901 	add.w	r9, r7, #1
 8015790:	b2ad      	uxth	r5, r5
 8015792:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8015796:	f106 0901 	add.w	r9, r6, #1
 801579a:	097f      	lsrs	r7, r7, #5
 801579c:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80157a0:	f105 0e01 	add.w	lr, r5, #1
 80157a4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80157a8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80157ac:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 80157b0:	4337      	orrs	r7, r6
 80157b2:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80157b6:	ea47 070e 	orr.w	r7, r7, lr
 80157ba:	f824 700b 	strh.w	r7, [r4, fp]
 80157be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80157c0:	4410      	add	r0, r2
 80157c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80157c4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80157c8:	4411      	add	r1, r2
 80157ca:	e74a      	b.n	8015662 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80157cc:	f04f 0e00 	mov.w	lr, #0
 80157d0:	eba3 020e 	sub.w	r2, r3, lr
 80157d4:	2a00      	cmp	r2, #0
 80157d6:	f77f af48 	ble.w	801566a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80157da:	9e02      	ldr	r6, [sp, #8]
 80157dc:	1402      	asrs	r2, r0, #16
 80157de:	140d      	asrs	r5, r1, #16
 80157e0:	fb06 2505 	mla	r5, r6, r5, r2
 80157e4:	086a      	lsrs	r2, r5, #1
 80157e6:	9e03      	ldr	r6, [sp, #12]
 80157e8:	5cb2      	ldrb	r2, [r6, r2]
 80157ea:	07ed      	lsls	r5, r5, #31
 80157ec:	bf54      	ite	pl
 80157ee:	f002 020f 	andpl.w	r2, r2, #15
 80157f2:	1112      	asrmi	r2, r2, #4
 80157f4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80157f8:	b2d2      	uxtb	r2, r2
 80157fa:	2a00      	cmp	r2, #0
 80157fc:	d049      	beq.n	8015892 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80157fe:	9e05      	ldr	r6, [sp, #20]
 8015800:	4d29      	ldr	r5, [pc, #164]	; (80158a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015802:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015806:	682d      	ldr	r5, [r5, #0]
 8015808:	4372      	muls	r2, r6
 801580a:	1c56      	adds	r6, r2, #1
 801580c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015810:	1212      	asrs	r2, r2, #8
 8015812:	0a2f      	lsrs	r7, r5, #8
 8015814:	fa1f fa82 	uxth.w	sl, r2
 8015818:	ea4f 262c 	mov.w	r6, ip, asr #8
 801581c:	43d2      	mvns	r2, r2
 801581e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015822:	b2d2      	uxtb	r2, r2
 8015824:	fb17 f70a 	smulbb	r7, r7, sl
 8015828:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 801582c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015830:	fb06 7602 	mla	r6, r6, r2, r7
 8015834:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015838:	ea4f 07ec 	mov.w	r7, ip, asr #3
 801583c:	fb19 f90a 	smulbb	r9, r9, sl
 8015840:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015844:	00ed      	lsls	r5, r5, #3
 8015846:	fb07 9702 	mla	r7, r7, r2, r9
 801584a:	b2ed      	uxtb	r5, r5
 801584c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015850:	b2bf      	uxth	r7, r7
 8015852:	fa5f fc8c 	uxtb.w	ip, ip
 8015856:	fb15 f50a 	smulbb	r5, r5, sl
 801585a:	b2b6      	uxth	r6, r6
 801585c:	fb0c 5502 	mla	r5, ip, r2, r5
 8015860:	f107 0901 	add.w	r9, r7, #1
 8015864:	b2ad      	uxth	r5, r5
 8015866:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801586a:	f106 0b01 	add.w	fp, r6, #1
 801586e:	097f      	lsrs	r7, r7, #5
 8015870:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8015874:	f105 0c01 	add.w	ip, r5, #1
 8015878:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801587c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015880:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8015884:	4337      	orrs	r7, r6
 8015886:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801588a:	ea47 070c 	orr.w	r7, r7, ip
 801588e:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8015892:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015894:	4410      	add	r0, r2
 8015896:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015898:	f10e 0e01 	add.w	lr, lr, #1
 801589c:	4411      	add	r1, r2
 801589e:	e797      	b.n	80157d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80158a0:	b007      	add	sp, #28
 80158a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158a6:	bf00      	nop
 80158a8:	2000e408 	.word	0x2000e408

080158ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80158ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158b0:	b087      	sub	sp, #28
 80158b2:	468b      	mov	fp, r1
 80158b4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80158b6:	9205      	str	r2, [sp, #20]
 80158b8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80158bc:	6841      	ldr	r1, [r0, #4]
 80158be:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80158c2:	fb01 2404 	mla	r4, r1, r4, r2
 80158c6:	6802      	ldr	r2, [r0, #0]
 80158c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80158cc:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80158d0:	3201      	adds	r2, #1
 80158d2:	f022 0201 	bic.w	r2, r2, #1
 80158d6:	9201      	str	r2, [sp, #4]
 80158d8:	f8d8 2000 	ldr.w	r2, [r8]
 80158dc:	9202      	str	r2, [sp, #8]
 80158de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80158e2:	f1bb 0f00 	cmp.w	fp, #0
 80158e6:	dc03      	bgt.n	80158f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80158e8:	9a05      	ldr	r2, [sp, #20]
 80158ea:	2a00      	cmp	r2, #0
 80158ec:	f340 8156 	ble.w	8015b9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80158f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80158f2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80158f6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80158fa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80158fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015900:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015904:	2b00      	cmp	r3, #0
 8015906:	dd0e      	ble.n	8015926 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015908:	1402      	asrs	r2, r0, #16
 801590a:	d405      	bmi.n	8015918 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801590c:	42ba      	cmp	r2, r7
 801590e:	da03      	bge.n	8015918 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015910:	140a      	asrs	r2, r1, #16
 8015912:	d401      	bmi.n	8015918 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015914:	42b2      	cmp	r2, r6
 8015916:	db07      	blt.n	8015928 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015918:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801591a:	4410      	add	r0, r2
 801591c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801591e:	3b01      	subs	r3, #1
 8015920:	4411      	add	r1, r2
 8015922:	3402      	adds	r4, #2
 8015924:	e7ee      	b.n	8015904 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015926:	d017      	beq.n	8015958 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8015928:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801592a:	1e5a      	subs	r2, r3, #1
 801592c:	fb05 0502 	mla	r5, r5, r2, r0
 8015930:	142d      	asrs	r5, r5, #16
 8015932:	d409      	bmi.n	8015948 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015934:	42bd      	cmp	r5, r7
 8015936:	da07      	bge.n	8015948 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015938:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801593a:	fb05 1202 	mla	r2, r5, r2, r1
 801593e:	1412      	asrs	r2, r2, #16
 8015940:	d402      	bmi.n	8015948 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015942:	42b2      	cmp	r2, r6
 8015944:	f2c0 80be 	blt.w	8015ac4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8015948:	2600      	movs	r6, #0
 801594a:	199a      	adds	r2, r3, r6
 801594c:	2a00      	cmp	r2, #0
 801594e:	dc3e      	bgt.n	80159ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8015950:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015954:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015958:	f1bb 0f00 	cmp.w	fp, #0
 801595c:	f340 811e 	ble.w	8015b9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015960:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015964:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015968:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801596c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801596e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015972:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015976:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801597a:	eeb0 6a62 	vmov.f32	s12, s5
 801597e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015982:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015986:	ee77 2a62 	vsub.f32	s5, s14, s5
 801598a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801598e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015992:	eeb0 6a43 	vmov.f32	s12, s6
 8015996:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801599a:	ee12 2a90 	vmov	r2, s5
 801599e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80159a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80159a6:	ee13 2a10 	vmov	r2, s6
 80159aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159ae:	9313      	str	r3, [sp, #76]	; 0x4c
 80159b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80159b6:	9a05      	ldr	r2, [sp, #20]
 80159b8:	9314      	str	r3, [sp, #80]	; 0x50
 80159ba:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80159be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159c0:	eeb0 3a67 	vmov.f32	s6, s15
 80159c4:	bf08      	it	eq
 80159c6:	4613      	moveq	r3, r2
 80159c8:	eef0 2a47 	vmov.f32	s5, s14
 80159cc:	e789      	b.n	80158e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80159ce:	1405      	asrs	r5, r0, #16
 80159d0:	d465      	bmi.n	8015a9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80159d2:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80159d6:	42aa      	cmp	r2, r5
 80159d8:	dd61      	ble.n	8015a9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80159da:	140f      	asrs	r7, r1, #16
 80159dc:	d45f      	bmi.n	8015a9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80159de:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80159e2:	42ba      	cmp	r2, r7
 80159e4:	dd5b      	ble.n	8015a9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80159e6:	9a01      	ldr	r2, [sp, #4]
 80159e8:	fb07 5502 	mla	r5, r7, r2, r5
 80159ec:	086a      	lsrs	r2, r5, #1
 80159ee:	9f02      	ldr	r7, [sp, #8]
 80159f0:	5cba      	ldrb	r2, [r7, r2]
 80159f2:	07ef      	lsls	r7, r5, #31
 80159f4:	bf54      	ite	pl
 80159f6:	f002 020f 	andpl.w	r2, r2, #15
 80159fa:	1112      	asrmi	r2, r2, #4
 80159fc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015a00:	b2d2      	uxtb	r2, r2
 8015a02:	2a00      	cmp	r2, #0
 8015a04:	d04b      	beq.n	8015a9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8015a06:	4d67      	ldr	r5, [pc, #412]	; (8015ba4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 8015a08:	682f      	ldr	r7, [r5, #0]
 8015a0a:	08fd      	lsrs	r5, r7, #3
 8015a0c:	ea4f 2917 	mov.w	r9, r7, lsr #8
 8015a10:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015a14:	00ff      	lsls	r7, r7, #3
 8015a16:	2aff      	cmp	r2, #255	; 0xff
 8015a18:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8015a1c:	9503      	str	r5, [sp, #12]
 8015a1e:	b2ff      	uxtb	r7, r7
 8015a20:	d043      	beq.n	8015aaa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015a22:	f06f 0501 	mvn.w	r5, #1
 8015a26:	4375      	muls	r5, r6
 8015a28:	fa1f fa82 	uxth.w	sl, r2
 8015a2c:	f834 e005 	ldrh.w	lr, [r4, r5]
 8015a30:	9504      	str	r5, [sp, #16]
 8015a32:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015a36:	43d2      	mvns	r2, r2
 8015a38:	b2d2      	uxtb	r2, r2
 8015a3a:	fb19 f90a 	smulbb	r9, r9, sl
 8015a3e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a42:	9d03      	ldr	r5, [sp, #12]
 8015a44:	fb0c 9c02 	mla	ip, ip, r2, r9
 8015a48:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8015a4c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015a50:	fb15 f50a 	smulbb	r5, r5, sl
 8015a54:	fb09 5502 	mla	r5, r9, r2, r5
 8015a58:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015a5c:	b2ad      	uxth	r5, r5
 8015a5e:	fa5f fe8e 	uxtb.w	lr, lr
 8015a62:	fb17 f70a 	smulbb	r7, r7, sl
 8015a66:	fa1f fc8c 	uxth.w	ip, ip
 8015a6a:	fb0e 7702 	mla	r7, lr, r2, r7
 8015a6e:	f105 0901 	add.w	r9, r5, #1
 8015a72:	b2bf      	uxth	r7, r7
 8015a74:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8015a78:	f10c 0901 	add.w	r9, ip, #1
 8015a7c:	1c7a      	adds	r2, r7, #1
 8015a7e:	096d      	lsrs	r5, r5, #5
 8015a80:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8015a84:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015a88:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015a8c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015a90:	ea45 050c 	orr.w	r5, r5, ip
 8015a94:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015a98:	9a04      	ldr	r2, [sp, #16]
 8015a9a:	433d      	orrs	r5, r7
 8015a9c:	52a5      	strh	r5, [r4, r2]
 8015a9e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015aa0:	4410      	add	r0, r2
 8015aa2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015aa4:	3e01      	subs	r6, #1
 8015aa6:	4411      	add	r1, r2
 8015aa8:	e74f      	b.n	801594a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015aaa:	f06f 0201 	mvn.w	r2, #1
 8015aae:	fb02 fe06 	mul.w	lr, r2, r6
 8015ab2:	9a03      	ldr	r2, [sp, #12]
 8015ab4:	00d5      	lsls	r5, r2, #3
 8015ab6:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8015aba:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 8015abe:	f824 500e 	strh.w	r5, [r4, lr]
 8015ac2:	e7ec      	b.n	8015a9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8015ac4:	f04f 0e00 	mov.w	lr, #0
 8015ac8:	eba3 020e 	sub.w	r2, r3, lr
 8015acc:	2a00      	cmp	r2, #0
 8015ace:	f77f af3f 	ble.w	8015950 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8015ad2:	9e01      	ldr	r6, [sp, #4]
 8015ad4:	1402      	asrs	r2, r0, #16
 8015ad6:	140d      	asrs	r5, r1, #16
 8015ad8:	fb06 2505 	mla	r5, r6, r5, r2
 8015adc:	086a      	lsrs	r2, r5, #1
 8015ade:	9e02      	ldr	r6, [sp, #8]
 8015ae0:	5cb2      	ldrb	r2, [r6, r2]
 8015ae2:	07ed      	lsls	r5, r5, #31
 8015ae4:	bf54      	ite	pl
 8015ae6:	f002 020f 	andpl.w	r2, r2, #15
 8015aea:	1112      	asrmi	r2, r2, #4
 8015aec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015af0:	b2d2      	uxtb	r2, r2
 8015af2:	2a00      	cmp	r2, #0
 8015af4:	d045      	beq.n	8015b82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015af6:	4d2b      	ldr	r5, [pc, #172]	; (8015ba4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 8015af8:	682e      	ldr	r6, [r5, #0]
 8015afa:	2aff      	cmp	r2, #255	; 0xff
 8015afc:	ea4f 2916 	mov.w	r9, r6, lsr #8
 8015b00:	ea4f 05d6 	mov.w	r5, r6, lsr #3
 8015b04:	ea4f 06c6 	mov.w	r6, r6, lsl #3
 8015b08:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8015b0c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015b10:	b2f6      	uxtb	r6, r6
 8015b12:	d03d      	beq.n	8015b90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8015b14:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015b18:	fa1f fa82 	uxth.w	sl, r2
 8015b1c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015b20:	43d2      	mvns	r2, r2
 8015b22:	b2d2      	uxtb	r2, r2
 8015b24:	fb19 f90a 	smulbb	r9, r9, sl
 8015b28:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015b2c:	fb07 9702 	mla	r7, r7, r2, r9
 8015b30:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8015b34:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015b38:	fb15 f50a 	smulbb	r5, r5, sl
 8015b3c:	fb09 5502 	mla	r5, r9, r2, r5
 8015b40:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015b44:	b2ad      	uxth	r5, r5
 8015b46:	fa5f fc8c 	uxtb.w	ip, ip
 8015b4a:	fb16 f60a 	smulbb	r6, r6, sl
 8015b4e:	b2bf      	uxth	r7, r7
 8015b50:	fb0c 6602 	mla	r6, ip, r2, r6
 8015b54:	f105 0901 	add.w	r9, r5, #1
 8015b58:	b2b6      	uxth	r6, r6
 8015b5a:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8015b5e:	f107 0901 	add.w	r9, r7, #1
 8015b62:	096d      	lsrs	r5, r5, #5
 8015b64:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8015b68:	1c72      	adds	r2, r6, #1
 8015b6a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015b6e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015b72:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015b76:	433d      	orrs	r5, r7
 8015b78:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015b7c:	4335      	orrs	r5, r6
 8015b7e:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8015b82:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015b84:	4410      	add	r0, r2
 8015b86:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015b88:	f10e 0e01 	add.w	lr, lr, #1
 8015b8c:	4411      	add	r1, r2
 8015b8e:	e79b      	b.n	8015ac8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
 8015b90:	00ed      	lsls	r5, r5, #3
 8015b92:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8015b96:	ea45 05d6 	orr.w	r5, r5, r6, lsr #3
 8015b9a:	e7f0      	b.n	8015b7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8015b9c:	b007      	add	sp, #28
 8015b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ba2:	bf00      	nop
 8015ba4:	2000e408 	.word	0x2000e408

08015ba8 <_ZN8touchgfx8LCD16bppD1Ev>:
 8015ba8:	4770      	bx	lr

08015baa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8015baa:	4770      	bx	lr

08015bac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8015bac:	4770      	bx	lr

08015bae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015bae:	4770      	bx	lr

08015bb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015bb0:	4770      	bx	lr

08015bb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015bb2:	4770      	bx	lr

08015bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015bb4:	4770      	bx	lr

08015bb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015bb6:	4770      	bx	lr

08015bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015bb8:	4770      	bx	lr

08015bba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015bba:	4770      	bx	lr

08015bbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015bbc:	4770      	bx	lr

08015bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015bbe:	4770      	bx	lr

08015bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015bc0:	4770      	bx	lr

08015bc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015bc2:	4770      	bx	lr

08015bc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015bc4:	4770      	bx	lr

08015bc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015bc6:	4770      	bx	lr

08015bc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015bc8:	4770      	bx	lr

08015bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015bca:	4770      	bx	lr

08015bcc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015bcc:	4770      	bx	lr

08015bce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015bce:	4770      	bx	lr

08015bd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015bd0:	4770      	bx	lr

08015bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015bd2:	4770      	bx	lr

08015bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015bd4:	4770      	bx	lr

08015bd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015bd6:	4770      	bx	lr

08015bd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8015bd8:	4770      	bx	lr

08015bda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015bda:	4770      	bx	lr

08015bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015bdc:	4770      	bx	lr

08015bde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015bde:	4770      	bx	lr

08015be0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015be0:	4770      	bx	lr
	...

08015be4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8015be4:	b508      	push	{r3, lr}
 8015be6:	4b06      	ldr	r3, [pc, #24]	; (8015c00 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8015be8:	8818      	ldrh	r0, [r3, #0]
 8015bea:	b928      	cbnz	r0, 8015bf8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8015bec:	4b05      	ldr	r3, [pc, #20]	; (8015c04 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8015bee:	4a06      	ldr	r2, [pc, #24]	; (8015c08 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8015bf0:	4806      	ldr	r0, [pc, #24]	; (8015c0c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8015bf2:	2154      	movs	r1, #84	; 0x54
 8015bf4:	f00c fa8c 	bl	8022110 <__assert_func>
 8015bf8:	0040      	lsls	r0, r0, #1
 8015bfa:	b280      	uxth	r0, r0
 8015bfc:	bd08      	pop	{r3, pc}
 8015bfe:	bf00      	nop
 8015c00:	2000e3da 	.word	0x2000e3da
 8015c04:	08026cca 	.word	0x08026cca
 8015c08:	08027253 	.word	0x08027253
 8015c0c:	08026d0c 	.word	0x08026d0c

08015c10 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8015c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c14:	b08b      	sub	sp, #44	; 0x2c
 8015c16:	460f      	mov	r7, r1
 8015c18:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8015c1c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8015c20:	4616      	mov	r6, r2
 8015c22:	f1bb 0f00 	cmp.w	fp, #0
 8015c26:	d046      	beq.n	8015cb6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8015c28:	6810      	ldr	r0, [r2, #0]
 8015c2a:	6851      	ldr	r1, [r2, #4]
 8015c2c:	ad06      	add	r5, sp, #24
 8015c2e:	c503      	stmia	r5!, {r0, r1}
 8015c30:	6818      	ldr	r0, [r3, #0]
 8015c32:	6859      	ldr	r1, [r3, #4]
 8015c34:	ad08      	add	r5, sp, #32
 8015c36:	c503      	stmia	r5!, {r0, r1}
 8015c38:	a806      	add	r0, sp, #24
 8015c3a:	f7fa f8c7 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015c3e:	4631      	mov	r1, r6
 8015c40:	a808      	add	r0, sp, #32
 8015c42:	f7fa f8ab 	bl	800fd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015c46:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015c4a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015c4e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8015c52:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8015c56:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8015c5a:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015c5e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8015c62:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8015c66:	4f5d      	ldr	r7, [pc, #372]	; (8015ddc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 8015c68:	440a      	add	r2, r1
 8015c6a:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015c6e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015c72:	6838      	ldr	r0, [r7, #0]
 8015c74:	4413      	add	r3, r2
 8015c76:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015c7a:	6803      	ldr	r3, [r0, #0]
 8015c7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015c7e:	4798      	blx	r3
 8015c80:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015c84:	46b9      	mov	r9, r7
 8015c86:	d019      	beq.n	8015cbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8015c88:	f010 0f04 	tst.w	r0, #4
 8015c8c:	d01a      	beq.n	8015cc4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015c8e:	f8d9 0000 	ldr.w	r0, [r9]
 8015c92:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8015c96:	6801      	ldr	r1, [r0, #0]
 8015c98:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015c9c:	e9cd b403 	strd	fp, r4, [sp, #12]
 8015ca0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015ca4:	9402      	str	r4, [sp, #8]
 8015ca6:	b2ad      	uxth	r5, r5
 8015ca8:	fa1f f488 	uxth.w	r4, r8
 8015cac:	9501      	str	r5, [sp, #4]
 8015cae:	9400      	str	r4, [sp, #0]
 8015cb0:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 8015cb2:	4631      	mov	r1, r6
 8015cb4:	47a0      	blx	r4
 8015cb6:	b00b      	add	sp, #44	; 0x2c
 8015cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cbc:	b914      	cbnz	r4, 8015cc4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015cbe:	f010 0f01 	tst.w	r0, #1
 8015cc2:	e7e3      	b.n	8015c8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8015cc4:	f8d9 0000 	ldr.w	r0, [r9]
 8015cc8:	6803      	ldr	r3, [r0, #0]
 8015cca:	6a1b      	ldr	r3, [r3, #32]
 8015ccc:	4798      	blx	r3
 8015cce:	4b44      	ldr	r3, [pc, #272]	; (8015de0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8015cd0:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8015cd4:	881a      	ldrh	r2, [r3, #0]
 8015cd6:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8015cda:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015cde:	fb02 1404 	mla	r4, r2, r4, r1
 8015ce2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015ce6:	469a      	mov	sl, r3
 8015ce8:	fb05 f502 	mul.w	r5, r5, r2
 8015cec:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8015cf0:	d058      	beq.n	8015da4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x194>
 8015cf2:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8015cf6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015cfa:	fa1f f28b 	uxth.w	r2, fp
 8015cfe:	fa1f f989 	uxth.w	r9, r9
 8015d02:	469e      	mov	lr, r3
 8015d04:	42ac      	cmp	r4, r5
 8015d06:	d263      	bcs.n	8015dd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8015d08:	eb04 0a07 	add.w	sl, r4, r7
 8015d0c:	4554      	cmp	r4, sl
 8015d0e:	d23c      	bcs.n	8015d8a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
 8015d10:	8821      	ldrh	r1, [r4, #0]
 8015d12:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015d16:	1208      	asrs	r0, r1, #8
 8015d18:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015d1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015d20:	fb10 f009 	smulbb	r0, r0, r9
 8015d24:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015d28:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015d2c:	00c9      	lsls	r1, r1, #3
 8015d2e:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015d32:	b2c9      	uxtb	r1, r1
 8015d34:	10d8      	asrs	r0, r3, #3
 8015d36:	00db      	lsls	r3, r3, #3
 8015d38:	fb11 f109 	smulbb	r1, r1, r9
 8015d3c:	b2db      	uxtb	r3, r3
 8015d3e:	fa1f fc8c 	uxth.w	ip, ip
 8015d42:	fb03 1302 	mla	r3, r3, r2, r1
 8015d46:	b29b      	uxth	r3, r3
 8015d48:	f10c 0101 	add.w	r1, ip, #1
 8015d4c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015d50:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8015d54:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015d58:	fb1b fb09 	smulbb	fp, fp, r9
 8015d5c:	1c59      	adds	r1, r3, #1
 8015d5e:	fb00 b002 	mla	r0, r0, r2, fp
 8015d62:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8015d66:	b280      	uxth	r0, r0
 8015d68:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015d6c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015d70:	ea4c 0c03 	orr.w	ip, ip, r3
 8015d74:	1c43      	adds	r3, r0, #1
 8015d76:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015d7a:	0940      	lsrs	r0, r0, #5
 8015d7c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015d80:	ea4c 0c00 	orr.w	ip, ip, r0
 8015d84:	f824 cb02 	strh.w	ip, [r4], #2
 8015d88:	e7c0      	b.n	8015d0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8015d8a:	f8be 3000 	ldrh.w	r3, [lr]
 8015d8e:	eba3 0308 	sub.w	r3, r3, r8
 8015d92:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015d96:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015d9a:	eba3 0308 	sub.w	r3, r3, r8
 8015d9e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015da2:	e7af      	b.n	8015d04 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 8015da4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015da8:	f8d9 0000 	ldr.w	r0, [r9]
 8015dac:	42ac      	cmp	r4, r5
 8015dae:	6803      	ldr	r3, [r0, #0]
 8015db0:	d20e      	bcs.n	8015dd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8015db2:	f8d3 802c 	ldr.w	r8, [r3, #44]	; 0x2c
 8015db6:	4632      	mov	r2, r6
 8015db8:	463b      	mov	r3, r7
 8015dba:	4621      	mov	r1, r4
 8015dbc:	47c0      	blx	r8
 8015dbe:	f8ba 3000 	ldrh.w	r3, [sl]
 8015dc2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015dc6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015dca:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015dce:	e7eb      	b.n	8015da8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x198>
 8015dd0:	4b02      	ldr	r3, [pc, #8]	; (8015ddc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 8015dd2:	6818      	ldr	r0, [r3, #0]
 8015dd4:	6803      	ldr	r3, [r0, #0]
 8015dd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015dd8:	4798      	blx	r3
 8015dda:	e76c      	b.n	8015cb6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8015ddc:	2000e3e0 	.word	0x2000e3e0
 8015de0:	2000e3da 	.word	0x2000e3da

08015de4 <_ZN8touchgfx8LCD16bppD0Ev>:
 8015de4:	b510      	push	{r4, lr}
 8015de6:	2178      	movs	r1, #120	; 0x78
 8015de8:	4604      	mov	r4, r0
 8015dea:	f00b fb72 	bl	80214d2 <_ZdlPvj>
 8015dee:	4620      	mov	r0, r4
 8015df0:	bd10      	pop	{r4, pc}

08015df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015df2:	b510      	push	{r4, lr}
 8015df4:	2104      	movs	r1, #4
 8015df6:	4604      	mov	r4, r0
 8015df8:	f00b fb6b 	bl	80214d2 <_ZdlPvj>
 8015dfc:	4620      	mov	r0, r4
 8015dfe:	bd10      	pop	{r4, pc}

08015e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015e00:	b510      	push	{r4, lr}
 8015e02:	2104      	movs	r1, #4
 8015e04:	4604      	mov	r4, r0
 8015e06:	f00b fb64 	bl	80214d2 <_ZdlPvj>
 8015e0a:	4620      	mov	r0, r4
 8015e0c:	bd10      	pop	{r4, pc}

08015e0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015e0e:	b510      	push	{r4, lr}
 8015e10:	2104      	movs	r1, #4
 8015e12:	4604      	mov	r4, r0
 8015e14:	f00b fb5d 	bl	80214d2 <_ZdlPvj>
 8015e18:	4620      	mov	r0, r4
 8015e1a:	bd10      	pop	{r4, pc}

08015e1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015e1c:	b510      	push	{r4, lr}
 8015e1e:	2104      	movs	r1, #4
 8015e20:	4604      	mov	r4, r0
 8015e22:	f00b fb56 	bl	80214d2 <_ZdlPvj>
 8015e26:	4620      	mov	r0, r4
 8015e28:	bd10      	pop	{r4, pc}

08015e2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015e2a:	b510      	push	{r4, lr}
 8015e2c:	2104      	movs	r1, #4
 8015e2e:	4604      	mov	r4, r0
 8015e30:	f00b fb4f 	bl	80214d2 <_ZdlPvj>
 8015e34:	4620      	mov	r0, r4
 8015e36:	bd10      	pop	{r4, pc}

08015e38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015e38:	b510      	push	{r4, lr}
 8015e3a:	2104      	movs	r1, #4
 8015e3c:	4604      	mov	r4, r0
 8015e3e:	f00b fb48 	bl	80214d2 <_ZdlPvj>
 8015e42:	4620      	mov	r0, r4
 8015e44:	bd10      	pop	{r4, pc}

08015e46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015e46:	b510      	push	{r4, lr}
 8015e48:	2104      	movs	r1, #4
 8015e4a:	4604      	mov	r4, r0
 8015e4c:	f00b fb41 	bl	80214d2 <_ZdlPvj>
 8015e50:	4620      	mov	r0, r4
 8015e52:	bd10      	pop	{r4, pc}

08015e54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015e54:	b510      	push	{r4, lr}
 8015e56:	2104      	movs	r1, #4
 8015e58:	4604      	mov	r4, r0
 8015e5a:	f00b fb3a 	bl	80214d2 <_ZdlPvj>
 8015e5e:	4620      	mov	r0, r4
 8015e60:	bd10      	pop	{r4, pc}

08015e62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015e62:	b510      	push	{r4, lr}
 8015e64:	2104      	movs	r1, #4
 8015e66:	4604      	mov	r4, r0
 8015e68:	f00b fb33 	bl	80214d2 <_ZdlPvj>
 8015e6c:	4620      	mov	r0, r4
 8015e6e:	bd10      	pop	{r4, pc}

08015e70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015e70:	b510      	push	{r4, lr}
 8015e72:	2104      	movs	r1, #4
 8015e74:	4604      	mov	r4, r0
 8015e76:	f00b fb2c 	bl	80214d2 <_ZdlPvj>
 8015e7a:	4620      	mov	r0, r4
 8015e7c:	bd10      	pop	{r4, pc}

08015e7e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015e7e:	b510      	push	{r4, lr}
 8015e80:	2104      	movs	r1, #4
 8015e82:	4604      	mov	r4, r0
 8015e84:	f00b fb25 	bl	80214d2 <_ZdlPvj>
 8015e88:	4620      	mov	r0, r4
 8015e8a:	bd10      	pop	{r4, pc}

08015e8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015e8c:	b510      	push	{r4, lr}
 8015e8e:	2104      	movs	r1, #4
 8015e90:	4604      	mov	r4, r0
 8015e92:	f00b fb1e 	bl	80214d2 <_ZdlPvj>
 8015e96:	4620      	mov	r0, r4
 8015e98:	bd10      	pop	{r4, pc}

08015e9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015e9a:	b510      	push	{r4, lr}
 8015e9c:	2104      	movs	r1, #4
 8015e9e:	4604      	mov	r4, r0
 8015ea0:	f00b fb17 	bl	80214d2 <_ZdlPvj>
 8015ea4:	4620      	mov	r0, r4
 8015ea6:	bd10      	pop	{r4, pc}

08015ea8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015ea8:	b510      	push	{r4, lr}
 8015eaa:	2104      	movs	r1, #4
 8015eac:	4604      	mov	r4, r0
 8015eae:	f00b fb10 	bl	80214d2 <_ZdlPvj>
 8015eb2:	4620      	mov	r0, r4
 8015eb4:	bd10      	pop	{r4, pc}

08015eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015eb6:	b510      	push	{r4, lr}
 8015eb8:	2104      	movs	r1, #4
 8015eba:	4604      	mov	r4, r0
 8015ebc:	f00b fb09 	bl	80214d2 <_ZdlPvj>
 8015ec0:	4620      	mov	r0, r4
 8015ec2:	bd10      	pop	{r4, pc}

08015ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015ec4:	b510      	push	{r4, lr}
 8015ec6:	2104      	movs	r1, #4
 8015ec8:	4604      	mov	r4, r0
 8015eca:	f00b fb02 	bl	80214d2 <_ZdlPvj>
 8015ece:	4620      	mov	r0, r4
 8015ed0:	bd10      	pop	{r4, pc}

08015ed2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015ed2:	b510      	push	{r4, lr}
 8015ed4:	2104      	movs	r1, #4
 8015ed6:	4604      	mov	r4, r0
 8015ed8:	f00b fafb 	bl	80214d2 <_ZdlPvj>
 8015edc:	4620      	mov	r0, r4
 8015ede:	bd10      	pop	{r4, pc}

08015ee0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015ee0:	b510      	push	{r4, lr}
 8015ee2:	2104      	movs	r1, #4
 8015ee4:	4604      	mov	r4, r0
 8015ee6:	f00b faf4 	bl	80214d2 <_ZdlPvj>
 8015eea:	4620      	mov	r0, r4
 8015eec:	bd10      	pop	{r4, pc}

08015eee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015eee:	b510      	push	{r4, lr}
 8015ef0:	2104      	movs	r1, #4
 8015ef2:	4604      	mov	r4, r0
 8015ef4:	f00b faed 	bl	80214d2 <_ZdlPvj>
 8015ef8:	4620      	mov	r0, r4
 8015efa:	bd10      	pop	{r4, pc}

08015efc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015efc:	b510      	push	{r4, lr}
 8015efe:	2104      	movs	r1, #4
 8015f00:	4604      	mov	r4, r0
 8015f02:	f00b fae6 	bl	80214d2 <_ZdlPvj>
 8015f06:	4620      	mov	r0, r4
 8015f08:	bd10      	pop	{r4, pc}

08015f0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015f0a:	b510      	push	{r4, lr}
 8015f0c:	2104      	movs	r1, #4
 8015f0e:	4604      	mov	r4, r0
 8015f10:	f00b fadf 	bl	80214d2 <_ZdlPvj>
 8015f14:	4620      	mov	r0, r4
 8015f16:	bd10      	pop	{r4, pc}

08015f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015f18:	b510      	push	{r4, lr}
 8015f1a:	2104      	movs	r1, #4
 8015f1c:	4604      	mov	r4, r0
 8015f1e:	f00b fad8 	bl	80214d2 <_ZdlPvj>
 8015f22:	4620      	mov	r0, r4
 8015f24:	bd10      	pop	{r4, pc}

08015f26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015f26:	b510      	push	{r4, lr}
 8015f28:	2104      	movs	r1, #4
 8015f2a:	4604      	mov	r4, r0
 8015f2c:	f00b fad1 	bl	80214d2 <_ZdlPvj>
 8015f30:	4620      	mov	r0, r4
 8015f32:	bd10      	pop	{r4, pc}

08015f34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015f34:	b510      	push	{r4, lr}
 8015f36:	2104      	movs	r1, #4
 8015f38:	4604      	mov	r4, r0
 8015f3a:	f00b faca 	bl	80214d2 <_ZdlPvj>
 8015f3e:	4620      	mov	r0, r4
 8015f40:	bd10      	pop	{r4, pc}

08015f42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8015f42:	b510      	push	{r4, lr}
 8015f44:	2104      	movs	r1, #4
 8015f46:	4604      	mov	r4, r0
 8015f48:	f00b fac3 	bl	80214d2 <_ZdlPvj>
 8015f4c:	4620      	mov	r0, r4
 8015f4e:	bd10      	pop	{r4, pc}

08015f50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8015f50:	b510      	push	{r4, lr}
 8015f52:	2104      	movs	r1, #4
 8015f54:	4604      	mov	r4, r0
 8015f56:	f00b fabc 	bl	80214d2 <_ZdlPvj>
 8015f5a:	4620      	mov	r0, r4
 8015f5c:	bd10      	pop	{r4, pc}

08015f5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8015f5e:	b510      	push	{r4, lr}
 8015f60:	2104      	movs	r1, #4
 8015f62:	4604      	mov	r4, r0
 8015f64:	f00b fab5 	bl	80214d2 <_ZdlPvj>
 8015f68:	4620      	mov	r0, r4
 8015f6a:	bd10      	pop	{r4, pc}

08015f6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8015f6c:	b510      	push	{r4, lr}
 8015f6e:	2104      	movs	r1, #4
 8015f70:	4604      	mov	r4, r0
 8015f72:	f00b faae 	bl	80214d2 <_ZdlPvj>
 8015f76:	4620      	mov	r0, r4
 8015f78:	bd10      	pop	{r4, pc}
	...

08015f7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8015f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f80:	460d      	mov	r5, r1
 8015f82:	b087      	sub	sp, #28
 8015f84:	4614      	mov	r4, r2
 8015f86:	4698      	mov	r8, r3
 8015f88:	b333      	cbz	r3, 8015fd8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8015f8a:	4608      	mov	r0, r1
 8015f8c:	f7f5 fd51 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015f90:	bb10      	cbnz	r0, 8015fd8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8015f92:	6828      	ldr	r0, [r5, #0]
 8015f94:	6869      	ldr	r1, [r5, #4]
 8015f96:	4e73      	ldr	r6, [pc, #460]	; (8016164 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1e8>)
 8015f98:	ab04      	add	r3, sp, #16
 8015f9a:	c303      	stmia	r3!, {r0, r1}
 8015f9c:	a804      	add	r0, sp, #16
 8015f9e:	f7f9 ff15 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015fa2:	6830      	ldr	r0, [r6, #0]
 8015fa4:	6803      	ldr	r3, [r0, #0]
 8015fa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015fa8:	4798      	blx	r3
 8015faa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015fae:	d016      	beq.n	8015fde <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8015fb0:	f010 0f08 	tst.w	r0, #8
 8015fb4:	d016      	beq.n	8015fe4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x68>
 8015fb6:	6830      	ldr	r0, [r6, #0]
 8015fb8:	f8bd 5016 	ldrh.w	r5, [sp, #22]
 8015fbc:	6801      	ldr	r1, [r0, #0]
 8015fbe:	9501      	str	r5, [sp, #4]
 8015fc0:	f8bd 5014 	ldrh.w	r5, [sp, #20]
 8015fc4:	f8cd 8008 	str.w	r8, [sp, #8]
 8015fc8:	9500      	str	r5, [sp, #0]
 8015fca:	6c8d      	ldr	r5, [r1, #72]	; 0x48
 8015fcc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8015fd0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015fd4:	4621      	mov	r1, r4
 8015fd6:	47a8      	blx	r5
 8015fd8:	b007      	add	sp, #28
 8015fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015fde:	f010 0f02 	tst.w	r0, #2
 8015fe2:	e7e7      	b.n	8015fb4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x38>
 8015fe4:	6830      	ldr	r0, [r6, #0]
 8015fe6:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8015fea:	6803      	ldr	r3, [r0, #0]
 8015fec:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8015ff0:	6a1b      	ldr	r3, [r3, #32]
 8015ff2:	4798      	blx	r3
 8015ff4:	495c      	ldr	r1, [pc, #368]	; (8016168 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ec>)
 8015ff6:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8015ffa:	880b      	ldrh	r3, [r1, #0]
 8015ffc:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8016000:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016004:	fb03 c202 	mla	r2, r3, r2, ip
 8016008:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801600c:	468e      	mov	lr, r1
 801600e:	fb07 f203 	mul.w	r2, r7, r3
 8016012:	d053      	beq.n	80160bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8016014:	fa1f f388 	uxth.w	r3, r8
 8016018:	f1c8 07ff 	rsb	r7, r8, #255	; 0xff
 801601c:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 8016020:	ea4f 2814 	mov.w	r8, r4, lsr #8
 8016024:	00e4      	lsls	r4, r4, #3
 8016026:	b2e4      	uxtb	r4, r4
 8016028:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801602c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8016030:	fb08 f803 	mul.w	r8, r8, r3
 8016034:	fb09 f903 	mul.w	r9, r9, r3
 8016038:	eb00 0142 	add.w	r1, r0, r2, lsl #1
 801603c:	4363      	muls	r3, r4
 801603e:	006d      	lsls	r5, r5, #1
 8016040:	b2bc      	uxth	r4, r7
 8016042:	4288      	cmp	r0, r1
 8016044:	f080 8088 	bcs.w	8016158 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8016048:	eb00 0a05 	add.w	sl, r0, r5
 801604c:	4550      	cmp	r0, sl
 801604e:	d22f      	bcs.n	80160b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x134>
 8016050:	8802      	ldrh	r2, [r0, #0]
 8016052:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8016056:	10d7      	asrs	r7, r2, #3
 8016058:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801605c:	00d2      	lsls	r2, r2, #3
 801605e:	fb1c fc04 	smulbb	ip, ip, r4
 8016062:	b2d2      	uxtb	r2, r2
 8016064:	44c4      	add	ip, r8
 8016066:	fb12 f204 	smulbb	r2, r2, r4
 801606a:	fa1f fc8c 	uxth.w	ip, ip
 801606e:	441a      	add	r2, r3
 8016070:	b292      	uxth	r2, r2
 8016072:	f10c 0b01 	add.w	fp, ip, #1
 8016076:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801607a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801607e:	fb17 f704 	smulbb	r7, r7, r4
 8016082:	f102 0b01 	add.w	fp, r2, #1
 8016086:	444f      	add	r7, r9
 8016088:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801608c:	b2bf      	uxth	r7, r7
 801608e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016092:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016096:	ea4c 0202 	orr.w	r2, ip, r2
 801609a:	f107 0c01 	add.w	ip, r7, #1
 801609e:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 80160a2:	097f      	lsrs	r7, r7, #5
 80160a4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80160a8:	433a      	orrs	r2, r7
 80160aa:	f820 2b02 	strh.w	r2, [r0], #2
 80160ae:	e7cd      	b.n	801604c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd0>
 80160b0:	f8be 2000 	ldrh.w	r2, [lr]
 80160b4:	ebc5 0242 	rsb	r2, r5, r2, lsl #1
 80160b8:	4410      	add	r0, r2
 80160ba:	e7c2      	b.n	8016042 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xc6>
 80160bc:	07db      	lsls	r3, r3, #31
 80160be:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80160c2:	d50e      	bpl.n	80160e2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x166>
 80160c4:	006d      	lsls	r5, r5, #1
 80160c6:	4290      	cmp	r0, r2
 80160c8:	d246      	bcs.n	8016158 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 80160ca:	1943      	adds	r3, r0, r5
 80160cc:	4298      	cmp	r0, r3
 80160ce:	d202      	bcs.n	80160d6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x15a>
 80160d0:	f820 4b02 	strh.w	r4, [r0], #2
 80160d4:	e7fa      	b.n	80160cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x150>
 80160d6:	f8be 3000 	ldrh.w	r3, [lr]
 80160da:	ebc5 0343 	rsb	r3, r5, r3, lsl #1
 80160de:	4418      	add	r0, r3
 80160e0:	e7f1      	b.n	80160c6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x14a>
 80160e2:	0787      	lsls	r7, r0, #30
 80160e4:	462b      	mov	r3, r5
 80160e6:	d00a      	beq.n	80160fe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x182>
 80160e8:	4603      	mov	r3, r0
 80160ea:	4293      	cmp	r3, r2
 80160ec:	d205      	bcs.n	80160fa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x17e>
 80160ee:	801c      	strh	r4, [r3, #0]
 80160f0:	f8be 1000 	ldrh.w	r1, [lr]
 80160f4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80160f8:	e7f7      	b.n	80160ea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x16e>
 80160fa:	3002      	adds	r0, #2
 80160fc:	1e6b      	subs	r3, r5, #1
 80160fe:	07dd      	lsls	r5, r3, #31
 8016100:	d50d      	bpl.n	801611e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a2>
 8016102:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8016106:	3901      	subs	r1, #1
 8016108:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801610c:	4291      	cmp	r1, r2
 801610e:	d205      	bcs.n	801611c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a0>
 8016110:	800c      	strh	r4, [r1, #0]
 8016112:	f8be 5000 	ldrh.w	r5, [lr]
 8016116:	eb01 0145 	add.w	r1, r1, r5, lsl #1
 801611a:	e7f7      	b.n	801610c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x190>
 801611c:	3b01      	subs	r3, #1
 801611e:	b1db      	cbz	r3, 8016158 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8016120:	b2a1      	uxth	r1, r4
 8016122:	105b      	asrs	r3, r3, #1
 8016124:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
 8016128:	009b      	lsls	r3, r3, #2
 801612a:	4290      	cmp	r0, r2
 801612c:	d214      	bcs.n	8016158 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 801612e:	0781      	lsls	r1, r0, #30
 8016130:	d006      	beq.n	8016140 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c4>
 8016132:	4b0e      	ldr	r3, [pc, #56]	; (801616c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f0>)
 8016134:	4a0e      	ldr	r2, [pc, #56]	; (8016170 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f4>)
 8016136:	480f      	ldr	r0, [pc, #60]	; (8016174 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f8>)
 8016138:	f44f 7162 	mov.w	r1, #904	; 0x388
 801613c:	f00b ffe8 	bl	8022110 <__assert_func>
 8016140:	18c5      	adds	r5, r0, r3
 8016142:	4601      	mov	r1, r0
 8016144:	42a9      	cmp	r1, r5
 8016146:	d202      	bcs.n	801614e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1d2>
 8016148:	f841 4b04 	str.w	r4, [r1], #4
 801614c:	e7fa      	b.n	8016144 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c8>
 801614e:	f8be 1000 	ldrh.w	r1, [lr]
 8016152:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016156:	e7e8      	b.n	801612a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ae>
 8016158:	6830      	ldr	r0, [r6, #0]
 801615a:	6803      	ldr	r3, [r0, #0]
 801615c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801615e:	4798      	blx	r3
 8016160:	e73a      	b.n	8015fd8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016162:	bf00      	nop
 8016164:	2000e3e0 	.word	0x2000e3e0
 8016168:	2000e3da 	.word	0x2000e3da
 801616c:	08026c69 	.word	0x08026c69
 8016170:	08027420 	.word	0x08027420
 8016174:	08026c98 	.word	0x08026c98

08016178 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801617c:	4f97      	ldr	r7, [pc, #604]	; (80163dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 801617e:	4616      	mov	r6, r2
 8016180:	683a      	ldr	r2, [r7, #0]
 8016182:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8016186:	2a02      	cmp	r2, #2
 8016188:	b08f      	sub	sp, #60	; 0x3c
 801618a:	4604      	mov	r4, r0
 801618c:	4689      	mov	r9, r1
 801618e:	d106      	bne.n	801619e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8016190:	4b93      	ldr	r3, [pc, #588]	; (80163e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8016192:	4a94      	ldr	r2, [pc, #592]	; (80163e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8016194:	f44f 7132 	mov.w	r1, #712	; 0x2c8
 8016198:	4893      	ldr	r0, [pc, #588]	; (80163e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801619a:	f00b ffb9 	bl	8022110 <__assert_func>
 801619e:	ad0e      	add	r5, sp, #56	; 0x38
 80161a0:	f825 3d24 	strh.w	r3, [r5, #-36]!
 80161a4:	4628      	mov	r0, r5
 80161a6:	f7fd fa45 	bl	8013634 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80161aa:	6823      	ldr	r3, [r4, #0]
 80161ac:	4680      	mov	r8, r0
 80161ae:	6a1b      	ldr	r3, [r3, #32]
 80161b0:	4620      	mov	r0, r4
 80161b2:	4798      	blx	r3
 80161b4:	4580      	cmp	r8, r0
 80161b6:	d004      	beq.n	80161c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 80161b8:	4b8c      	ldr	r3, [pc, #560]	; (80163ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 80161ba:	4a8a      	ldr	r2, [pc, #552]	; (80163e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80161bc:	f240 21ca 	movw	r1, #714	; 0x2ca
 80161c0:	e7ea      	b.n	8016198 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80161c2:	4628      	mov	r0, r5
 80161c4:	f7fd f9ac 	bl	8013520 <_ZNK8touchgfx6Bitmap7getDataEv>
 80161c8:	4680      	mov	r8, r0
 80161ca:	b920      	cbnz	r0, 80161d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 80161cc:	4b88      	ldr	r3, [pc, #544]	; (80163f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 80161ce:	4a85      	ldr	r2, [pc, #532]	; (80163e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80161d0:	f44f 7133 	mov.w	r1, #716	; 0x2cc
 80161d4:	e7e0      	b.n	8016198 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80161d6:	6830      	ldr	r0, [r6, #0]
 80161d8:	6871      	ldr	r1, [r6, #4]
 80161da:	f9b6 a000 	ldrsh.w	sl, [r6]
 80161de:	ab06      	add	r3, sp, #24
 80161e0:	c303      	stmia	r3!, {r0, r1}
 80161e2:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80161e6:	f8d9 0000 	ldr.w	r0, [r9]
 80161ea:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80161ee:	ab08      	add	r3, sp, #32
 80161f0:	c303      	stmia	r3!, {r0, r1}
 80161f2:	4628      	mov	r0, r5
 80161f4:	f7fd f88c 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80161f8:	4606      	mov	r6, r0
 80161fa:	4628      	mov	r0, r5
 80161fc:	f7fd f8c2 	bl	8013384 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016200:	f10d 0b20 	add.w	fp, sp, #32
 8016204:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8016208:	a806      	add	r0, sp, #24
 801620a:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 801620e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8016212:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8016216:	f7f9 fdd9 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801621a:	4658      	mov	r0, fp
 801621c:	f7f9 fdd6 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016220:	a80a      	add	r0, sp, #40	; 0x28
 8016222:	f7f9 fdd3 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016226:	4d73      	ldr	r5, [pc, #460]	; (80163f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8016228:	4b73      	ldr	r3, [pc, #460]	; (80163f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801622a:	f9b5 2000 	ldrsh.w	r2, [r5]
 801622e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016232:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8016236:	2100      	movs	r1, #0
 8016238:	910c      	str	r1, [sp, #48]	; 0x30
 801623a:	4658      	mov	r0, fp
 801623c:	a90c      	add	r1, sp, #48	; 0x30
 801623e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016242:	f7f5 fbb3 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 8016246:	4658      	mov	r0, fp
 8016248:	f7f5 fbf3 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 801624c:	2800      	cmp	r0, #0
 801624e:	f040 8099 	bne.w	8016384 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8016252:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8016256:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801625a:	4288      	cmp	r0, r1
 801625c:	db37      	blt.n	80162ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801625e:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8016262:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8016266:	429a      	cmp	r2, r3
 8016268:	db31      	blt.n	80162ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801626a:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801626e:	4430      	add	r0, r6
 8016270:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016274:	4431      	add	r1, r6
 8016276:	b200      	sxth	r0, r0
 8016278:	b209      	sxth	r1, r1
 801627a:	4288      	cmp	r0, r1
 801627c:	dc27      	bgt.n	80162ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801627e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8016282:	440a      	add	r2, r1
 8016284:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8016288:	440b      	add	r3, r1
 801628a:	b212      	sxth	r2, r2
 801628c:	b21b      	sxth	r3, r3
 801628e:	429a      	cmp	r2, r3
 8016290:	dc1d      	bgt.n	80162ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8016292:	6823      	ldr	r3, [r4, #0]
 8016294:	4620      	mov	r0, r4
 8016296:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016298:	4798      	blx	r3
 801629a:	4682      	mov	sl, r0
 801629c:	6838      	ldr	r0, [r7, #0]
 801629e:	6803      	ldr	r3, [r0, #0]
 80162a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80162a2:	4798      	blx	r3
 80162a4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80162a8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80162ac:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80162b0:	1a5b      	subs	r3, r3, r1
 80162b2:	b29b      	uxth	r3, r3
 80162b4:	b21c      	sxth	r4, r3
 80162b6:	2c00      	cmp	r4, #0
 80162b8:	dc0e      	bgt.n	80162d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 80162ba:	bf1f      	itttt	ne
 80162bc:	f8ad 1020 	strhne.w	r1, [sp, #32]
 80162c0:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 80162c4:	185b      	addne	r3, r3, r1
 80162c6:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 80162ca:	4644      	mov	r4, r8
 80162cc:	e009      	b.n	80162e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 80162ce:	4b4b      	ldr	r3, [pc, #300]	; (80163fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 80162d0:	4a44      	ldr	r2, [pc, #272]	; (80163e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80162d2:	f240 21da 	movw	r1, #730	; 0x2da
 80162d6:	e75f      	b.n	8016198 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80162d8:	1ad3      	subs	r3, r2, r3
 80162da:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80162de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80162e2:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 80162e6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80162ea:	1b9b      	subs	r3, r3, r6
 80162ec:	b29b      	uxth	r3, r3
 80162ee:	b219      	sxth	r1, r3
 80162f0:	2900      	cmp	r1, #0
 80162f2:	dd4b      	ble.n	801638c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 80162f4:	4351      	muls	r1, r2
 80162f6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80162fa:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80162fe:	1acb      	subs	r3, r1, r3
 8016300:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016304:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8016308:	2e00      	cmp	r6, #0
 801630a:	dd3b      	ble.n	8016384 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801630c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016310:	2b00      	cmp	r3, #0
 8016312:	dd37      	ble.n	8016384 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8016314:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8016318:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801631c:	fb0a f90c 	mul.w	r9, sl, ip
 8016320:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 8016324:	4481      	add	r9, r0
 8016326:	8828      	ldrh	r0, [r5, #0]
 8016328:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 801632c:	42ae      	cmp	r6, r5
 801632e:	bfa8      	it	ge
 8016330:	462e      	movge	r6, r5
 8016332:	1a41      	subs	r1, r0, r1
 8016334:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016338:	428e      	cmp	r6, r1
 801633a:	bfa8      	it	ge
 801633c:	460e      	movge	r6, r1
 801633e:	429d      	cmp	r5, r3
 8016340:	bfa8      	it	ge
 8016342:	461d      	movge	r5, r3
 8016344:	4b2c      	ldr	r3, [pc, #176]	; (80163f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8016346:	881b      	ldrh	r3, [r3, #0]
 8016348:	eba3 030c 	sub.w	r3, r3, ip
 801634c:	429d      	cmp	r5, r3
 801634e:	bfa8      	it	ge
 8016350:	461d      	movge	r5, r3
 8016352:	42b0      	cmp	r0, r6
 8016354:	d12c      	bne.n	80163b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8016356:	4290      	cmp	r0, r2
 8016358:	d12a      	bne.n	80163b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801635a:	6838      	ldr	r0, [r7, #0]
 801635c:	9203      	str	r2, [sp, #12]
 801635e:	6803      	ldr	r3, [r0, #0]
 8016360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016362:	4798      	blx	r3
 8016364:	07c3      	lsls	r3, r0, #31
 8016366:	d51a      	bpl.n	801639e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 8016368:	9a03      	ldr	r2, [sp, #12]
 801636a:	6838      	ldr	r0, [r7, #0]
 801636c:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 8016370:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8016374:	6803      	ldr	r3, [r0, #0]
 8016376:	9200      	str	r2, [sp, #0]
 8016378:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 801637a:	e89b 0006 	ldmia.w	fp, {r1, r2}
 801637e:	4623      	mov	r3, r4
 8016380:	47a8      	blx	r5
 8016382:	4680      	mov	r8, r0
 8016384:	4640      	mov	r0, r8
 8016386:	b00f      	add	sp, #60	; 0x3c
 8016388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801638c:	bf1f      	itttt	ne
 801638e:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8016392:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8016396:	185b      	addne	r3, r3, r1
 8016398:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801639c:	e7b2      	b.n	8016304 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 801639e:	6838      	ldr	r0, [r7, #0]
 80163a0:	6803      	ldr	r3, [r0, #0]
 80163a2:	464a      	mov	r2, r9
 80163a4:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 80163a6:	4621      	mov	r1, r4
 80163a8:	fb05 f30a 	mul.w	r3, r5, sl
 80163ac:	47b0      	blx	r6
 80163ae:	e7e9      	b.n	8016384 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80163b0:	4355      	muls	r5, r2
 80163b2:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 80163b6:	9303      	str	r3, [sp, #12]
 80163b8:	0076      	lsls	r6, r6, #1
 80163ba:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 80163be:	9b03      	ldr	r3, [sp, #12]
 80163c0:	429c      	cmp	r4, r3
 80163c2:	d2df      	bcs.n	8016384 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80163c4:	6838      	ldr	r0, [r7, #0]
 80163c6:	6803      	ldr	r3, [r0, #0]
 80163c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80163ca:	464a      	mov	r2, r9
 80163cc:	461d      	mov	r5, r3
 80163ce:	4621      	mov	r1, r4
 80163d0:	4633      	mov	r3, r6
 80163d2:	47a8      	blx	r5
 80163d4:	44d1      	add	r9, sl
 80163d6:	445c      	add	r4, fp
 80163d8:	e7f1      	b.n	80163be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 80163da:	bf00      	nop
 80163dc:	2000e3e0 	.word	0x2000e3e0
 80163e0:	08026a8f 	.word	0x08026a8f
 80163e4:	08027303 	.word	0x08027303
 80163e8:	08026c98 	.word	0x08026c98
 80163ec:	08026b41 	.word	0x08026b41
 80163f0:	08026b96 	.word	0x08026b96
 80163f4:	2000e3da 	.word	0x2000e3da
 80163f8:	2000e3dc 	.word	0x2000e3dc
 80163fc:	08026bd4 	.word	0x08026bd4

08016400 <_ZN8touchgfx8LCD16bppC1Ev>:
 8016400:	2200      	movs	r2, #0
 8016402:	4910      	ldr	r1, [pc, #64]	; (8016444 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8016404:	6042      	str	r2, [r0, #4]
 8016406:	6001      	str	r1, [r0, #0]
 8016408:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801640c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8016410:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8016414:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8016418:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801641c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8016420:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8016424:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8016428:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801642c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8016430:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8016434:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8016438:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801643c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8016440:	4770      	bx	lr
 8016442:	bf00      	nop
 8016444:	08026f78 	.word	0x08026f78

08016448 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8016448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801644c:	460d      	mov	r5, r1
 801644e:	b08b      	sub	sp, #44	; 0x2c
 8016450:	4604      	mov	r4, r0
 8016452:	6808      	ldr	r0, [r1, #0]
 8016454:	6849      	ldr	r1, [r1, #4]
 8016456:	4699      	mov	r9, r3
 8016458:	ab06      	add	r3, sp, #24
 801645a:	c303      	stmia	r3!, {r0, r1}
 801645c:	6810      	ldr	r0, [r2, #0]
 801645e:	6851      	ldr	r1, [r2, #4]
 8016460:	ab08      	add	r3, sp, #32
 8016462:	c303      	stmia	r3!, {r0, r1}
 8016464:	a806      	add	r0, sp, #24
 8016466:	f7f9 fcb1 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801646a:	4629      	mov	r1, r5
 801646c:	a808      	add	r0, sp, #32
 801646e:	f7f9 fc95 	bl	800fd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016472:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016476:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801647a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801647e:	4d5f      	ldr	r5, [pc, #380]	; (80165fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 8016480:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016484:	6828      	ldr	r0, [r5, #0]
 8016486:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 801648a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801648e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8016492:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016496:	440a      	add	r2, r1
 8016498:	f8ad 2020 	strh.w	r2, [sp, #32]
 801649c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80164a0:	4413      	add	r3, r2
 80164a2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80164a6:	6803      	ldr	r3, [r0, #0]
 80164a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80164aa:	4798      	blx	r3
 80164ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80164b0:	d118      	bne.n	80164e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 80164b2:	f010 0f20 	tst.w	r0, #32
 80164b6:	6828      	ldr	r0, [r5, #0]
 80164b8:	d017      	beq.n	80164ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 80164ba:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 80164be:	6801      	ldr	r1, [r0, #0]
 80164c0:	9502      	str	r5, [sp, #8]
 80164c2:	b2b6      	uxth	r6, r6
 80164c4:	fa1f f588 	uxth.w	r5, r8
 80164c8:	f8cd 900c 	str.w	r9, [sp, #12]
 80164cc:	9601      	str	r6, [sp, #4]
 80164ce:	9500      	str	r5, [sp, #0]
 80164d0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80164d2:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80164d6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80164da:	4621      	mov	r1, r4
 80164dc:	47a8      	blx	r5
 80164de:	b00b      	add	sp, #44	; 0x2c
 80164e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164e4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80164e8:	e7e5      	b.n	80164b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80164ea:	6803      	ldr	r3, [r0, #0]
 80164ec:	6a1b      	ldr	r3, [r3, #32]
 80164ee:	4798      	blx	r3
 80164f0:	4a43      	ldr	r2, [pc, #268]	; (8016600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 80164f2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80164f6:	f8b2 e000 	ldrh.w	lr, [r2]
 80164fa:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80164fe:	fb0e 1303 	mla	r3, lr, r3, r1
 8016502:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016506:	fb0e fe06 	mul.w	lr, lr, r6
 801650a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801650e:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 8016512:	9305      	str	r3, [sp, #20]
 8016514:	4692      	mov	sl, r2
 8016516:	4570      	cmp	r0, lr
 8016518:	d26a      	bcs.n	80165f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1a8>
 801651a:	9b05      	ldr	r3, [sp, #20]
 801651c:	4621      	mov	r1, r4
 801651e:	eb00 0b03 	add.w	fp, r0, r3
 8016522:	4558      	cmp	r0, fp
 8016524:	d257      	bcs.n	80165d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18e>
 8016526:	f851 4b04 	ldr.w	r4, [r1], #4
 801652a:	0e22      	lsrs	r2, r4, #24
 801652c:	d012      	beq.n	8016554 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 801652e:	2aff      	cmp	r2, #255	; 0xff
 8016530:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8016534:	d110      	bne.n	8016558 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8016536:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801653a:	d10d      	bne.n	8016558 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 801653c:	0963      	lsrs	r3, r4, #5
 801653e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8016542:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016546:	f027 0707 	bic.w	r7, r7, #7
 801654a:	431f      	orrs	r7, r3
 801654c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016550:	433c      	orrs	r4, r7
 8016552:	8004      	strh	r4, [r0, #0]
 8016554:	3002      	adds	r0, #2
 8016556:	e7e4      	b.n	8016522 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 8016558:	fb09 f302 	mul.w	r3, r9, r2
 801655c:	1c5a      	adds	r2, r3, #1
 801655e:	f8b0 c000 	ldrh.w	ip, [r0]
 8016562:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8016566:	1212      	asrs	r2, r2, #8
 8016568:	b293      	uxth	r3, r2
 801656a:	ea4f 262c 	mov.w	r6, ip, asr #8
 801656e:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8016572:	43d2      	mvns	r2, r2
 8016574:	b2d2      	uxtb	r2, r2
 8016576:	fb15 f503 	smulbb	r5, r5, r3
 801657a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801657e:	fb06 5602 	mla	r6, r6, r2, r5
 8016582:	b2ff      	uxtb	r7, r7
 8016584:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016588:	b2e4      	uxtb	r4, r4
 801658a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801658e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016592:	fb17 f703 	smulbb	r7, r7, r3
 8016596:	fa5f fc8c 	uxtb.w	ip, ip
 801659a:	fb14 f403 	smulbb	r4, r4, r3
 801659e:	fb05 7702 	mla	r7, r5, r2, r7
 80165a2:	fb0c 4202 	mla	r2, ip, r2, r4
 80165a6:	b2b6      	uxth	r6, r6
 80165a8:	b2bf      	uxth	r7, r7
 80165aa:	b292      	uxth	r2, r2
 80165ac:	1c73      	adds	r3, r6, #1
 80165ae:	f102 0c01 	add.w	ip, r2, #1
 80165b2:	1c7d      	adds	r5, r7, #1
 80165b4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80165b8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80165bc:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80165c0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80165c4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80165c8:	097f      	lsrs	r7, r7, #5
 80165ca:	4316      	orrs	r6, r2
 80165cc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80165d0:	433e      	orrs	r6, r7
 80165d2:	8006      	strh	r6, [r0, #0]
 80165d4:	e7be      	b.n	8016554 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 80165d6:	f8ba 3000 	ldrh.w	r3, [sl]
 80165da:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 80165de:	eba3 0308 	sub.w	r3, r3, r8
 80165e2:	eba4 0408 	sub.w	r4, r4, r8
 80165e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80165ea:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80165ee:	e792      	b.n	8016516 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80165f0:	4b02      	ldr	r3, [pc, #8]	; (80165fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 80165f2:	6818      	ldr	r0, [r3, #0]
 80165f4:	6803      	ldr	r3, [r0, #0]
 80165f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80165f8:	4798      	blx	r3
 80165fa:	e770      	b.n	80164de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 80165fc:	2000e3e0 	.word	0x2000e3e0
 8016600:	2000e3da 	.word	0x2000e3da

08016604 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8016604:	b570      	push	{r4, r5, r6, lr}
 8016606:	9d04      	ldr	r5, [sp, #16]
 8016608:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801660c:	460c      	mov	r4, r1
 801660e:	4619      	mov	r1, r3
 8016610:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016614:	2a0d      	cmp	r2, #13
 8016616:	d820      	bhi.n	801665a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8016618:	e8df f002 	tbb	[pc, r2]
 801661c:	18121807 	.word	0x18121807
 8016620:	18181818 	.word	0x18181818
 8016624:	18181818 	.word	0x18181818
 8016628:	1818      	.short	0x1818
 801662a:	6802      	ldr	r2, [r0, #0]
 801662c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8016630:	68d6      	ldr	r6, [r2, #12]
 8016632:	462b      	mov	r3, r5
 8016634:	460a      	mov	r2, r1
 8016636:	46b4      	mov	ip, r6
 8016638:	4621      	mov	r1, r4
 801663a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801663e:	4760      	bx	ip
 8016640:	462a      	mov	r2, r5
 8016642:	4620      	mov	r0, r4
 8016644:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016648:	f7ff befe 	b.w	8016448 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801664c:	4b03      	ldr	r3, [pc, #12]	; (801665c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 801664e:	4a04      	ldr	r2, [pc, #16]	; (8016660 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8016650:	4804      	ldr	r0, [pc, #16]	; (8016664 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8016652:	f240 21c1 	movw	r1, #705	; 0x2c1
 8016656:	f00b fd5b 	bl	8022110 <__assert_func>
 801665a:	bd70      	pop	{r4, r5, r6, pc}
 801665c:	08026c34 	.word	0x08026c34
 8016660:	08027389 	.word	0x08027389
 8016664:	08026c98 	.word	0x08026c98

08016668 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8016668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801666c:	b093      	sub	sp, #76	; 0x4c
 801666e:	880f      	ldrh	r7, [r1, #0]
 8016670:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8016674:	4604      	mov	r4, r0
 8016676:	4688      	mov	r8, r1
 8016678:	4616      	mov	r6, r2
 801667a:	b12f      	cbz	r7, 8016688 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 801667c:	4b6f      	ldr	r3, [pc, #444]	; (801683c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 801667e:	4a70      	ldr	r2, [pc, #448]	; (8016840 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8016680:	4870      	ldr	r0, [pc, #448]	; (8016844 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8016682:	21e2      	movs	r1, #226	; 0xe2
 8016684:	f00b fd44 	bl	8022110 <__assert_func>
 8016688:	6810      	ldr	r0, [r2, #0]
 801668a:	6851      	ldr	r1, [r2, #4]
 801668c:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 801684c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>
 8016690:	ad0e      	add	r5, sp, #56	; 0x38
 8016692:	c503      	stmia	r5!, {r0, r1}
 8016694:	6818      	ldr	r0, [r3, #0]
 8016696:	6859      	ldr	r1, [r3, #4]
 8016698:	ad10      	add	r5, sp, #64	; 0x40
 801669a:	c503      	stmia	r5!, {r0, r1}
 801669c:	a80e      	add	r0, sp, #56	; 0x38
 801669e:	f7f9 fb95 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80166a2:	4631      	mov	r1, r6
 80166a4:	a810      	add	r0, sp, #64	; 0x40
 80166a6:	f7f9 fb79 	bl	800fd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80166aa:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80166ae:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80166b2:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80166b6:	f8db 0000 	ldr.w	r0, [fp]
 80166ba:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
 80166be:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80166c2:	4e61      	ldr	r6, [pc, #388]	; (8016848 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 80166c4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80166c8:	440c      	add	r4, r1
 80166ca:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80166ce:	440a      	add	r2, r1
 80166d0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80166d4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80166d8:	4413      	add	r3, r2
 80166da:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80166de:	6803      	ldr	r3, [r0, #0]
 80166e0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80166e4:	4798      	blx	r3
 80166e6:	2801      	cmp	r0, #1
 80166e8:	d11d      	bne.n	8016726 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 80166ea:	220b      	movs	r2, #11
 80166ec:	9708      	str	r7, [sp, #32]
 80166ee:	9207      	str	r2, [sp, #28]
 80166f0:	8832      	ldrh	r2, [r6, #0]
 80166f2:	f8cd a010 	str.w	sl, [sp, #16]
 80166f6:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80166fa:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80166fe:	9203      	str	r2, [sp, #12]
 8016700:	fa1f f289 	uxth.w	r2, r9
 8016704:	9201      	str	r2, [sp, #4]
 8016706:	b2ad      	uxth	r5, r5
 8016708:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801670c:	9200      	str	r2, [sp, #0]
 801670e:	9502      	str	r5, [sp, #8]
 8016710:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8016714:	f8db 0000 	ldr.w	r0, [fp]
 8016718:	4642      	mov	r2, r8
 801671a:	4621      	mov	r1, r4
 801671c:	f7f5 fd9a 	bl	800c254 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8016720:	b013      	add	sp, #76	; 0x4c
 8016722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016726:	f8db 0000 	ldr.w	r0, [fp]
 801672a:	6803      	ldr	r3, [r0, #0]
 801672c:	6a1b      	ldr	r3, [r3, #32]
 801672e:	4798      	blx	r3
 8016730:	8832      	ldrh	r2, [r6, #0]
 8016732:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8016736:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801673a:	960d      	str	r6, [sp, #52]	; 0x34
 801673c:	fb02 1303 	mla	r3, r2, r3, r1
 8016740:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016744:	4355      	muls	r5, r2
 8016746:	eb00 0345 	add.w	r3, r0, r5, lsl #1
 801674a:	930c      	str	r3, [sp, #48]	; 0x30
 801674c:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8016750:	930b      	str	r3, [sp, #44]	; 0x2c
 8016752:	f04f 0e04 	mov.w	lr, #4
 8016756:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016758:	4298      	cmp	r0, r3
 801675a:	d269      	bcs.n	8016830 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801675c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801675e:	4621      	mov	r1, r4
 8016760:	eb00 0b03 	add.w	fp, r0, r3
 8016764:	4558      	cmp	r0, fp
 8016766:	460b      	mov	r3, r1
 8016768:	d256      	bcs.n	8016818 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b0>
 801676a:	781b      	ldrb	r3, [r3, #0]
 801676c:	fb1e e303 	smlabb	r3, lr, r3, lr
 8016770:	3101      	adds	r1, #1
 8016772:	f858 2003 	ldr.w	r2, [r8, r3]
 8016776:	0e14      	lsrs	r4, r2, #24
 8016778:	d012      	beq.n	80167a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 801677a:	2cff      	cmp	r4, #255	; 0xff
 801677c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016780:	d110      	bne.n	80167a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8016782:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016786:	d10d      	bne.n	80167a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8016788:	0953      	lsrs	r3, r2, #5
 801678a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801678e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016792:	f026 0607 	bic.w	r6, r6, #7
 8016796:	431e      	orrs	r6, r3
 8016798:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801679c:	4332      	orrs	r2, r6
 801679e:	8002      	strh	r2, [r0, #0]
 80167a0:	3002      	adds	r0, #2
 80167a2:	e7df      	b.n	8016764 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfc>
 80167a4:	fb0a f404 	mul.w	r4, sl, r4
 80167a8:	1c63      	adds	r3, r4, #1
 80167aa:	8807      	ldrh	r7, [r0, #0]
 80167ac:	eb03 2324 	add.w	r3, r3, r4, asr #8
 80167b0:	121b      	asrs	r3, r3, #8
 80167b2:	fa1f fc83 	uxth.w	ip, r3
 80167b6:	123d      	asrs	r5, r7, #8
 80167b8:	f3c2 4407 	ubfx	r4, r2, #16, #8
 80167bc:	43db      	mvns	r3, r3
 80167be:	b2db      	uxtb	r3, r3
 80167c0:	fb14 f40c 	smulbb	r4, r4, ip
 80167c4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80167c8:	fb05 4503 	mla	r5, r5, r3, r4
 80167cc:	b2d2      	uxtb	r2, r2
 80167ce:	10fc      	asrs	r4, r7, #3
 80167d0:	00ff      	lsls	r7, r7, #3
 80167d2:	b2ff      	uxtb	r7, r7
 80167d4:	fb12 f20c 	smulbb	r2, r2, ip
 80167d8:	fb07 2203 	mla	r2, r7, r3, r2
 80167dc:	b2f6      	uxtb	r6, r6
 80167de:	b2ad      	uxth	r5, r5
 80167e0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80167e4:	b292      	uxth	r2, r2
 80167e6:	fb16 f60c 	smulbb	r6, r6, ip
 80167ea:	fb04 6603 	mla	r6, r4, r3, r6
 80167ee:	1c6b      	adds	r3, r5, #1
 80167f0:	1c54      	adds	r4, r2, #1
 80167f2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80167f6:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 80167fa:	b2b6      	uxth	r6, r6
 80167fc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8016800:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016804:	4325      	orrs	r5, r4
 8016806:	1c74      	adds	r4, r6, #1
 8016808:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801680c:	0976      	lsrs	r6, r6, #5
 801680e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016812:	4335      	orrs	r5, r6
 8016814:	8005      	strh	r5, [r0, #0]
 8016816:	e7c3      	b.n	80167a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8016818:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801681a:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 801681e:	881b      	ldrh	r3, [r3, #0]
 8016820:	eba4 0409 	sub.w	r4, r4, r9
 8016824:	eba3 0309 	sub.w	r3, r3, r9
 8016828:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801682c:	440c      	add	r4, r1
 801682e:	e792      	b.n	8016756 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8016830:	4b06      	ldr	r3, [pc, #24]	; (801684c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8016832:	6818      	ldr	r0, [r3, #0]
 8016834:	6803      	ldr	r3, [r0, #0]
 8016836:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016838:	4798      	blx	r3
 801683a:	e771      	b.n	8016720 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 801683c:	08026a3f 	.word	0x08026a3f
 8016840:	0802715a 	.word	0x0802715a
 8016844:	08026c98 	.word	0x08026c98
 8016848:	2000e3da 	.word	0x2000e3da
 801684c:	2000e3e0 	.word	0x2000e3e0

08016850 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8016850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016854:	4614      	mov	r4, r2
 8016856:	880a      	ldrh	r2, [r1, #0]
 8016858:	b091      	sub	sp, #68	; 0x44
 801685a:	2a02      	cmp	r2, #2
 801685c:	4607      	mov	r7, r0
 801685e:	4689      	mov	r9, r1
 8016860:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8016864:	d006      	beq.n	8016874 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8016866:	4b77      	ldr	r3, [pc, #476]	; (8016a44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f4>)
 8016868:	4a77      	ldr	r2, [pc, #476]	; (8016a48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f8>)
 801686a:	4878      	ldr	r0, [pc, #480]	; (8016a4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1fc>)
 801686c:	f240 113b 	movw	r1, #315	; 0x13b
 8016870:	f00b fc4e 	bl	8022110 <__assert_func>
 8016874:	2e00      	cmp	r6, #0
 8016876:	d04b      	beq.n	8016910 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8016878:	6820      	ldr	r0, [r4, #0]
 801687a:	6861      	ldr	r1, [r4, #4]
 801687c:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 8016a54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>
 8016880:	ad0c      	add	r5, sp, #48	; 0x30
 8016882:	c503      	stmia	r5!, {r0, r1}
 8016884:	6818      	ldr	r0, [r3, #0]
 8016886:	6859      	ldr	r1, [r3, #4]
 8016888:	ad0e      	add	r5, sp, #56	; 0x38
 801688a:	c503      	stmia	r5!, {r0, r1}
 801688c:	a80c      	add	r0, sp, #48	; 0x30
 801688e:	f7f9 fa9d 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016892:	4621      	mov	r1, r4
 8016894:	a80e      	add	r0, sp, #56	; 0x38
 8016896:	f7f9 fa81 	bl	800fd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801689a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801689e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80168a2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80168a6:	f8da 0000 	ldr.w	r0, [sl]
 80168aa:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80168ae:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 80168b2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80168b6:	187c      	adds	r4, r7, r1
 80168b8:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80168bc:	4f64      	ldr	r7, [pc, #400]	; (8016a50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 80168be:	440a      	add	r2, r1
 80168c0:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80168c4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80168c8:	4413      	add	r3, r2
 80168ca:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80168ce:	6803      	ldr	r3, [r0, #0]
 80168d0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80168d4:	4798      	blx	r3
 80168d6:	2801      	cmp	r0, #1
 80168d8:	d11d      	bne.n	8016916 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 80168da:	2200      	movs	r2, #0
 80168dc:	210b      	movs	r1, #11
 80168de:	e9cd 1207 	strd	r1, r2, [sp, #28]
 80168e2:	8839      	ldrh	r1, [r7, #0]
 80168e4:	9604      	str	r6, [sp, #16]
 80168e6:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80168ea:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80168ee:	9203      	str	r2, [sp, #12]
 80168f0:	fa1f f288 	uxth.w	r2, r8
 80168f4:	9201      	str	r2, [sp, #4]
 80168f6:	b2ad      	uxth	r5, r5
 80168f8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80168fc:	9200      	str	r2, [sp, #0]
 80168fe:	9502      	str	r5, [sp, #8]
 8016900:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016904:	f8da 0000 	ldr.w	r0, [sl]
 8016908:	464a      	mov	r2, r9
 801690a:	4621      	mov	r1, r4
 801690c:	f7f5 fca2 	bl	800c254 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8016910:	b011      	add	sp, #68	; 0x44
 8016912:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016916:	f8da 0000 	ldr.w	r0, [sl]
 801691a:	6803      	ldr	r3, [r0, #0]
 801691c:	6a1b      	ldr	r3, [r3, #32]
 801691e:	4798      	blx	r3
 8016920:	8839      	ldrh	r1, [r7, #0]
 8016922:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8016926:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801692a:	2eff      	cmp	r6, #255	; 0xff
 801692c:	fb01 2303 	mla	r3, r1, r3, r2
 8016930:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016934:	f109 0204 	add.w	r2, r9, #4
 8016938:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 801693c:	fb05 f501 	mul.w	r5, r5, r1
 8016940:	d05f      	beq.n	8016a02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b2>
 8016942:	f1c6 09ff 	rsb	r9, r6, #255	; 0xff
 8016946:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801694a:	b2b6      	uxth	r6, r6
 801694c:	fa1f f989 	uxth.w	r9, r9
 8016950:	970b      	str	r7, [sp, #44]	; 0x2c
 8016952:	42a8      	cmp	r0, r5
 8016954:	d26f      	bcs.n	8016a36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8016956:	eb00 010b 	add.w	r1, r0, fp
 801695a:	4288      	cmp	r0, r1
 801695c:	4623      	mov	r3, r4
 801695e:	d244      	bcs.n	80169ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19a>
 8016960:	781b      	ldrb	r3, [r3, #0]
 8016962:	8807      	ldrh	r7, [r0, #0]
 8016964:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8016968:	ea4f 2c27 	mov.w	ip, r7, asr #8
 801696c:	ea4f 2e23 	mov.w	lr, r3, asr #8
 8016970:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016974:	fb1c fc09 	smulbb	ip, ip, r9
 8016978:	ea4f 0ae7 	mov.w	sl, r7, asr #3
 801697c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016980:	00ff      	lsls	r7, r7, #3
 8016982:	fb0e ce06 	mla	lr, lr, r6, ip
 8016986:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801698a:	ea4f 0ce3 	mov.w	ip, r3, asr #3
 801698e:	b2ff      	uxtb	r7, r7
 8016990:	00db      	lsls	r3, r3, #3
 8016992:	fa1f fe8e 	uxth.w	lr, lr
 8016996:	fb1a fa09 	smulbb	sl, sl, r9
 801699a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801699e:	b2db      	uxtb	r3, r3
 80169a0:	fb17 f709 	smulbb	r7, r7, r9
 80169a4:	fb0c ac06 	mla	ip, ip, r6, sl
 80169a8:	fb03 7306 	mla	r3, r3, r6, r7
 80169ac:	f10e 0a01 	add.w	sl, lr, #1
 80169b0:	b29b      	uxth	r3, r3
 80169b2:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 80169b6:	f40e 4a78 	and.w	sl, lr, #63488	; 0xf800
 80169ba:	f103 0e01 	add.w	lr, r3, #1
 80169be:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 80169c2:	fa1f fc8c 	uxth.w	ip, ip
 80169c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80169ca:	ea4a 0e03 	orr.w	lr, sl, r3
 80169ce:	f10c 0a01 	add.w	sl, ip, #1
 80169d2:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 80169d6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80169da:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80169de:	ea4e 0e0c 	orr.w	lr, lr, ip
 80169e2:	3401      	adds	r4, #1
 80169e4:	f820 eb02 	strh.w	lr, [r0], #2
 80169e8:	e7b7      	b.n	801695a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x10a>
 80169ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80169ec:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 80169f0:	881b      	ldrh	r3, [r3, #0]
 80169f2:	eba1 0108 	sub.w	r1, r1, r8
 80169f6:	eba3 0308 	sub.w	r3, r3, r8
 80169fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80169fe:	440c      	add	r4, r1
 8016a00:	e7a7      	b.n	8016952 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x102>
 8016a02:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8016a06:	42a8      	cmp	r0, r5
 8016a08:	d215      	bcs.n	8016a36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8016a0a:	eb00 010b 	add.w	r1, r0, fp
 8016a0e:	4288      	cmp	r0, r1
 8016a10:	d206      	bcs.n	8016a20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1d0>
 8016a12:	f814 3b01 	ldrb.w	r3, [r4], #1
 8016a16:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8016a1a:	f820 3b02 	strh.w	r3, [r0], #2
 8016a1e:	e7f6      	b.n	8016a0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1be>
 8016a20:	883b      	ldrh	r3, [r7, #0]
 8016a22:	eba3 0308 	sub.w	r3, r3, r8
 8016a26:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016a2a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8016a2e:	eba3 0308 	sub.w	r3, r3, r8
 8016a32:	441c      	add	r4, r3
 8016a34:	e7e7      	b.n	8016a06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b6>
 8016a36:	4b07      	ldr	r3, [pc, #28]	; (8016a54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8016a38:	6818      	ldr	r0, [r3, #0]
 8016a3a:	6803      	ldr	r3, [r0, #0]
 8016a3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016a3e:	4798      	blx	r3
 8016a40:	e766      	b.n	8016910 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8016a42:	bf00      	nop
 8016a44:	080268fd 	.word	0x080268fd
 8016a48:	08026fc4 	.word	0x08026fc4
 8016a4c:	08026c98 	.word	0x08026c98
 8016a50:	2000e3da 	.word	0x2000e3da
 8016a54:	2000e3e0 	.word	0x2000e3e0

08016a58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8016a58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a5c:	4614      	mov	r4, r2
 8016a5e:	880a      	ldrh	r2, [r1, #0]
 8016a60:	b091      	sub	sp, #68	; 0x44
 8016a62:	2a01      	cmp	r2, #1
 8016a64:	4606      	mov	r6, r0
 8016a66:	4688      	mov	r8, r1
 8016a68:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8016a6c:	d006      	beq.n	8016a7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8016a6e:	4b7c      	ldr	r3, [pc, #496]	; (8016c60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x208>)
 8016a70:	4a7c      	ldr	r2, [pc, #496]	; (8016c64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20c>)
 8016a72:	487d      	ldr	r0, [pc, #500]	; (8016c68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x210>)
 8016a74:	f240 1197 	movw	r1, #407	; 0x197
 8016a78:	f00b fb4a 	bl	8022110 <__assert_func>
 8016a7c:	2f00      	cmp	r7, #0
 8016a7e:	d04b      	beq.n	8016b18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8016a80:	6820      	ldr	r0, [r4, #0]
 8016a82:	6861      	ldr	r1, [r4, #4]
 8016a84:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 8016c74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8016a88:	ad0c      	add	r5, sp, #48	; 0x30
 8016a8a:	c503      	stmia	r5!, {r0, r1}
 8016a8c:	6818      	ldr	r0, [r3, #0]
 8016a8e:	6859      	ldr	r1, [r3, #4]
 8016a90:	ad0e      	add	r5, sp, #56	; 0x38
 8016a92:	c503      	stmia	r5!, {r0, r1}
 8016a94:	a80c      	add	r0, sp, #48	; 0x30
 8016a96:	f7f9 f999 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a9a:	4621      	mov	r1, r4
 8016a9c:	a80e      	add	r0, sp, #56	; 0x38
 8016a9e:	f7f9 f97d 	bl	800fd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016aa2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8016aa6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8016aaa:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8016aae:	f8da 0000 	ldr.w	r0, [sl]
 8016ab2:	f9bd 503c 	ldrsh.w	r5, [sp, #60]	; 0x3c
 8016ab6:	f9bd 903e 	ldrsh.w	r9, [sp, #62]	; 0x3e
 8016aba:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016abe:	1874      	adds	r4, r6, r1
 8016ac0:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8016ac4:	4e69      	ldr	r6, [pc, #420]	; (8016c6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x214>)
 8016ac6:	440a      	add	r2, r1
 8016ac8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8016acc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8016ad0:	4413      	add	r3, r2
 8016ad2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8016ad6:	6803      	ldr	r3, [r0, #0]
 8016ad8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8016adc:	4798      	blx	r3
 8016ade:	2801      	cmp	r0, #1
 8016ae0:	d11d      	bne.n	8016b1e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8016ae2:	220b      	movs	r2, #11
 8016ae4:	2100      	movs	r1, #0
 8016ae6:	e9cd 2107 	strd	r2, r1, [sp, #28]
 8016aea:	8832      	ldrh	r2, [r6, #0]
 8016aec:	9704      	str	r7, [sp, #16]
 8016aee:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8016af2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8016af6:	9203      	str	r2, [sp, #12]
 8016af8:	fa1f f289 	uxth.w	r2, r9
 8016afc:	9202      	str	r2, [sp, #8]
 8016afe:	b2ad      	uxth	r5, r5
 8016b00:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8016b04:	9200      	str	r2, [sp, #0]
 8016b06:	9501      	str	r5, [sp, #4]
 8016b08:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016b0c:	f8da 0000 	ldr.w	r0, [sl]
 8016b10:	4642      	mov	r2, r8
 8016b12:	4621      	mov	r1, r4
 8016b14:	f7f5 fb9e 	bl	800c254 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8016b18:	b011      	add	sp, #68	; 0x44
 8016b1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b1e:	f8da 0000 	ldr.w	r0, [sl]
 8016b22:	6803      	ldr	r3, [r0, #0]
 8016b24:	6a1b      	ldr	r3, [r3, #32]
 8016b26:	4798      	blx	r3
 8016b28:	8832      	ldrh	r2, [r6, #0]
 8016b2a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8016b2e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8016b32:	2fff      	cmp	r7, #255	; 0xff
 8016b34:	fb02 1303 	mla	r3, r2, r3, r1
 8016b38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016b3c:	ea4f 0e45 	mov.w	lr, r5, lsl #1
 8016b40:	fb09 f902 	mul.w	r9, r9, r2
 8016b44:	d056      	beq.n	8016bf4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8016b46:	ea6f 0c07 	mvn.w	ip, r7
 8016b4a:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8016b4e:	b2bb      	uxth	r3, r7
 8016b50:	fa5f fc8c 	uxtb.w	ip, ip
 8016b54:	960b      	str	r6, [sp, #44]	; 0x2c
 8016b56:	4548      	cmp	r0, r9
 8016b58:	d27b      	bcs.n	8016c52 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 8016b5a:	eb00 0a0e 	add.w	sl, r0, lr
 8016b5e:	4550      	cmp	r0, sl
 8016b60:	4622      	mov	r2, r4
 8016b62:	d23d      	bcs.n	8016be0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x188>
 8016b64:	7811      	ldrb	r1, [r2, #0]
 8016b66:	2604      	movs	r6, #4
 8016b68:	2203      	movs	r2, #3
 8016b6a:	fb12 6101 	smlabb	r1, r2, r1, r6
 8016b6e:	eb08 0b01 	add.w	fp, r8, r1
 8016b72:	8802      	ldrh	r2, [r0, #0]
 8016b74:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8016b78:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016b7c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016b80:	1217      	asrs	r7, r2, #8
 8016b82:	fb16 f603 	smulbb	r6, r6, r3
 8016b86:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016b8a:	fb07 670c 	mla	r7, r7, ip, r6
 8016b8e:	10d6      	asrs	r6, r2, #3
 8016b90:	00d2      	lsls	r2, r2, #3
 8016b92:	b2d2      	uxtb	r2, r2
 8016b94:	fb1b fb03 	smulbb	fp, fp, r3
 8016b98:	fb12 f20c 	smulbb	r2, r2, ip
 8016b9c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016ba0:	b2bf      	uxth	r7, r7
 8016ba2:	fb06 b60c 	mla	r6, r6, ip, fp
 8016ba6:	fb01 2103 	mla	r1, r1, r3, r2
 8016baa:	b2b6      	uxth	r6, r6
 8016bac:	b289      	uxth	r1, r1
 8016bae:	1c7a      	adds	r2, r7, #1
 8016bb0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016bb4:	f106 0b01 	add.w	fp, r6, #1
 8016bb8:	1c4a      	adds	r2, r1, #1
 8016bba:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8016bbe:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8016bc2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016bc6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016bca:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016bce:	4317      	orrs	r7, r2
 8016bd0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016bd4:	ea47 070b 	orr.w	r7, r7, fp
 8016bd8:	3401      	adds	r4, #1
 8016bda:	f820 7b02 	strh.w	r7, [r0], #2
 8016bde:	e7be      	b.n	8016b5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x106>
 8016be0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016be2:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8016be6:	8812      	ldrh	r2, [r2, #0]
 8016be8:	1b49      	subs	r1, r1, r5
 8016bea:	1b52      	subs	r2, r2, r5
 8016bec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016bf0:	440c      	add	r4, r1
 8016bf2:	e7b0      	b.n	8016b56 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xfe>
 8016bf4:	491e      	ldr	r1, [pc, #120]	; (8016c70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8016bf6:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8016bfa:	2203      	movs	r2, #3
 8016bfc:	2704      	movs	r7, #4
 8016bfe:	4548      	cmp	r0, r9
 8016c00:	d227      	bcs.n	8016c52 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 8016c02:	eb00 0c0e 	add.w	ip, r0, lr
 8016c06:	4560      	cmp	r0, ip
 8016c08:	4623      	mov	r3, r4
 8016c0a:	d219      	bcs.n	8016c40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8016c0c:	f893 a000 	ldrb.w	sl, [r3]
 8016c10:	fb12 7a0a 	smlabb	sl, r2, sl, r7
 8016c14:	eb08 0b0a 	add.w	fp, r8, sl
 8016c18:	f818 a00a 	ldrb.w	sl, [r8, sl]
 8016c1c:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8016c20:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016c24:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8016c28:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8016c2c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016c30:	ea43 030b 	orr.w	r3, r3, fp
 8016c34:	ea43 03da 	orr.w	r3, r3, sl, lsr #3
 8016c38:	3401      	adds	r4, #1
 8016c3a:	f820 3b02 	strh.w	r3, [r0], #2
 8016c3e:	e7e2      	b.n	8016c06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1ae>
 8016c40:	8833      	ldrh	r3, [r6, #0]
 8016c42:	1b5b      	subs	r3, r3, r5
 8016c44:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016c48:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8016c4c:	1b5b      	subs	r3, r3, r5
 8016c4e:	441c      	add	r4, r3
 8016c50:	e7d5      	b.n	8016bfe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a6>
 8016c52:	4b08      	ldr	r3, [pc, #32]	; (8016c74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8016c54:	6818      	ldr	r0, [r3, #0]
 8016c56:	6803      	ldr	r3, [r0, #0]
 8016c58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016c5a:	4798      	blx	r3
 8016c5c:	e75c      	b.n	8016b18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8016c5e:	bf00      	nop
 8016c60:	0802694b 	.word	0x0802694b
 8016c64:	0802704d 	.word	0x0802704d
 8016c68:	08026c98 	.word	0x08026c98
 8016c6c:	2000e3da 	.word	0x2000e3da
 8016c70:	fffff800 	.word	0xfffff800
 8016c74:	2000e3e0 	.word	0x2000e3e0

08016c78 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8016c78:	b430      	push	{r4, r5}
 8016c7a:	780d      	ldrb	r5, [r1, #0]
 8016c7c:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8016c80:	2d01      	cmp	r5, #1
 8016c82:	d00a      	beq.n	8016c9a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8016c84:	d305      	bcc.n	8016c92 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8016c86:	2d02      	cmp	r5, #2
 8016c88:	d10b      	bne.n	8016ca2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8016c8a:	9402      	str	r4, [sp, #8]
 8016c8c:	bc30      	pop	{r4, r5}
 8016c8e:	f7ff bddf 	b.w	8016850 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8016c92:	9402      	str	r4, [sp, #8]
 8016c94:	bc30      	pop	{r4, r5}
 8016c96:	f7ff bce7 	b.w	8016668 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8016c9a:	9402      	str	r4, [sp, #8]
 8016c9c:	bc30      	pop	{r4, r5}
 8016c9e:	f7ff bedb 	b.w	8016a58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8016ca2:	bc30      	pop	{r4, r5}
 8016ca4:	4770      	bx	lr
	...

08016ca8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8016ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cac:	4604      	mov	r4, r0
 8016cae:	b087      	sub	sp, #28
 8016cb0:	6810      	ldr	r0, [r2, #0]
 8016cb2:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8016cb6:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8016ef0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8016cba:	460e      	mov	r6, r1
 8016cbc:	6851      	ldr	r1, [r2, #4]
 8016cbe:	ad02      	add	r5, sp, #8
 8016cc0:	c503      	stmia	r5!, {r0, r1}
 8016cc2:	6818      	ldr	r0, [r3, #0]
 8016cc4:	6859      	ldr	r1, [r3, #4]
 8016cc6:	ad04      	add	r5, sp, #16
 8016cc8:	4617      	mov	r7, r2
 8016cca:	c503      	stmia	r5!, {r0, r1}
 8016ccc:	a802      	add	r0, sp, #8
 8016cce:	f7f9 f87d 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016cd2:	4639      	mov	r1, r7
 8016cd4:	a804      	add	r0, sp, #16
 8016cd6:	f7f9 f861 	bl	800fd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016cda:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8016cde:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016ce2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8016ce6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8016cea:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8016cee:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016cf2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8016cf6:	440e      	add	r6, r1
 8016cf8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016cfc:	440a      	add	r2, r1
 8016cfe:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016d02:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016d06:	4413      	add	r3, r2
 8016d08:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016d0c:	4b77      	ldr	r3, [pc, #476]	; (8016eec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8016d0e:	6818      	ldr	r0, [r3, #0]
 8016d10:	6803      	ldr	r3, [r0, #0]
 8016d12:	6a1b      	ldr	r3, [r3, #32]
 8016d14:	4798      	blx	r3
 8016d16:	f8b9 b000 	ldrh.w	fp, [r9]
 8016d1a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016d1e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8016d22:	fb0b 2303 	mla	r3, fp, r3, r2
 8016d26:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016d2a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016d2e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8016d32:	fb05 f50b 	mul.w	r5, r5, fp
 8016d36:	9300      	str	r3, [sp, #0]
 8016d38:	d068      	beq.n	8016e0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x164>
 8016d3a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8016d3e:	4558      	cmp	r0, fp
 8016d40:	f080 80cc 	bcs.w	8016edc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8016d44:	9b00      	ldr	r3, [sp, #0]
 8016d46:	18c3      	adds	r3, r0, r3
 8016d48:	9301      	str	r3, [sp, #4]
 8016d4a:	4631      	mov	r1, r6
 8016d4c:	9b01      	ldr	r3, [sp, #4]
 8016d4e:	4298      	cmp	r0, r3
 8016d50:	d24e      	bcs.n	8016df0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x148>
 8016d52:	f811 2b01 	ldrb.w	r2, [r1], #1
 8016d56:	2a00      	cmp	r2, #0
 8016d58:	d047      	beq.n	8016dea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 8016d5a:	fb0a f202 	mul.w	r2, sl, r2
 8016d5e:	1c53      	adds	r3, r2, #1
 8016d60:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016d64:	121b      	asrs	r3, r3, #8
 8016d66:	d040      	beq.n	8016dea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 8016d68:	8802      	ldrh	r2, [r0, #0]
 8016d6a:	f8b4 c000 	ldrh.w	ip, [r4]
 8016d6e:	b29e      	uxth	r6, r3
 8016d70:	1215      	asrs	r5, r2, #8
 8016d72:	43db      	mvns	r3, r3
 8016d74:	b2db      	uxtb	r3, r3
 8016d76:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016d7a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016d7e:	fb15 f503 	smulbb	r5, r5, r3
 8016d82:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8016d86:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016d8a:	00d2      	lsls	r2, r2, #3
 8016d8c:	fb07 5706 	mla	r7, r7, r6, r5
 8016d90:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8016d94:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016d98:	b2d2      	uxtb	r2, r2
 8016d9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016d9e:	fb1e fe03 	smulbb	lr, lr, r3
 8016da2:	fb12 f203 	smulbb	r2, r2, r3
 8016da6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016daa:	fa5f fc8c 	uxtb.w	ip, ip
 8016dae:	fb05 e506 	mla	r5, r5, r6, lr
 8016db2:	fb0c 2c06 	mla	ip, ip, r6, r2
 8016db6:	b2bf      	uxth	r7, r7
 8016db8:	b2ad      	uxth	r5, r5
 8016dba:	fa1f fc8c 	uxth.w	ip, ip
 8016dbe:	1c7b      	adds	r3, r7, #1
 8016dc0:	f10c 0601 	add.w	r6, ip, #1
 8016dc4:	f105 0e01 	add.w	lr, r5, #1
 8016dc8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016dcc:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8016dd0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8016dd4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016dd8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016ddc:	096d      	lsrs	r5, r5, #5
 8016dde:	ea47 070c 	orr.w	r7, r7, ip
 8016de2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016de6:	432f      	orrs	r7, r5
 8016de8:	8007      	strh	r7, [r0, #0]
 8016dea:	3002      	adds	r0, #2
 8016dec:	3402      	adds	r4, #2
 8016dee:	e7ad      	b.n	8016d4c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8016df0:	f8b9 3000 	ldrh.w	r3, [r9]
 8016df4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8016df8:	eba3 0308 	sub.w	r3, r3, r8
 8016dfc:	eba6 0608 	sub.w	r6, r6, r8
 8016e00:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8016e04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016e08:	440e      	add	r6, r1
 8016e0a:	e798      	b.n	8016d3e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8016e0c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8016e10:	42a8      	cmp	r0, r5
 8016e12:	d263      	bcs.n	8016edc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8016e14:	9b00      	ldr	r3, [sp, #0]
 8016e16:	4631      	mov	r1, r6
 8016e18:	eb00 0b03 	add.w	fp, r0, r3
 8016e1c:	4558      	cmp	r0, fp
 8016e1e:	d24f      	bcs.n	8016ec0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8016e20:	f811 3b01 	ldrb.w	r3, [r1], #1
 8016e24:	b12b      	cbz	r3, 8016e32 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8016e26:	2bff      	cmp	r3, #255	; 0xff
 8016e28:	f8b4 e000 	ldrh.w	lr, [r4]
 8016e2c:	d104      	bne.n	8016e38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x190>
 8016e2e:	f8a0 e000 	strh.w	lr, [r0]
 8016e32:	3002      	adds	r0, #2
 8016e34:	3402      	adds	r4, #2
 8016e36:	e7f1      	b.n	8016e1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x174>
 8016e38:	8802      	ldrh	r2, [r0, #0]
 8016e3a:	b29f      	uxth	r7, r3
 8016e3c:	1216      	asrs	r6, r2, #8
 8016e3e:	43db      	mvns	r3, r3
 8016e40:	b2db      	uxtb	r3, r3
 8016e42:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016e46:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016e4a:	fb16 f603 	smulbb	r6, r6, r3
 8016e4e:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8016e52:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016e56:	00d2      	lsls	r2, r2, #3
 8016e58:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016e5c:	b2d2      	uxtb	r2, r2
 8016e5e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016e62:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016e66:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016e6a:	fb1a fa03 	smulbb	sl, sl, r3
 8016e6e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016e72:	fb12 f303 	smulbb	r3, r2, r3
 8016e76:	fa5f fe8e 	uxtb.w	lr, lr
 8016e7a:	fb06 a607 	mla	r6, r6, r7, sl
 8016e7e:	fb0e 3e07 	mla	lr, lr, r7, r3
 8016e82:	fa1f fc8c 	uxth.w	ip, ip
 8016e86:	b2b6      	uxth	r6, r6
 8016e88:	fa1f fe8e 	uxth.w	lr, lr
 8016e8c:	f10c 0201 	add.w	r2, ip, #1
 8016e90:	f10e 0301 	add.w	r3, lr, #1
 8016e94:	f106 0a01 	add.w	sl, r6, #1
 8016e98:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016e9c:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8016ea0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8016ea4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016ea8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8016eac:	0976      	lsrs	r6, r6, #5
 8016eae:	ea4c 0c0e 	orr.w	ip, ip, lr
 8016eb2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016eb6:	ea4c 0c06 	orr.w	ip, ip, r6
 8016eba:	f8a0 c000 	strh.w	ip, [r0]
 8016ebe:	e7b8      	b.n	8016e32 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8016ec0:	f8b9 3000 	ldrh.w	r3, [r9]
 8016ec4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8016ec8:	eba3 0308 	sub.w	r3, r3, r8
 8016ecc:	eba6 0608 	sub.w	r6, r6, r8
 8016ed0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8016ed4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016ed8:	440e      	add	r6, r1
 8016eda:	e799      	b.n	8016e10 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x168>
 8016edc:	4b03      	ldr	r3, [pc, #12]	; (8016eec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8016ede:	6818      	ldr	r0, [r3, #0]
 8016ee0:	6803      	ldr	r3, [r0, #0]
 8016ee2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016ee4:	4798      	blx	r3
 8016ee6:	b007      	add	sp, #28
 8016ee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016eec:	2000e3e0 	.word	0x2000e3e0
 8016ef0:	2000e3da 	.word	0x2000e3da

08016ef4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8016ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ef8:	b089      	sub	sp, #36	; 0x24
 8016efa:	4682      	mov	sl, r0
 8016efc:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8016f00:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016f02:	460d      	mov	r5, r1
 8016f04:	4691      	mov	r9, r2
 8016f06:	4698      	mov	r8, r3
 8016f08:	b3ae      	cbz	r6, 8016f76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8016f0a:	4608      	mov	r0, r1
 8016f0c:	f7fc fa00 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016f10:	4607      	mov	r7, r0
 8016f12:	4628      	mov	r0, r5
 8016f14:	f7fc fa36 	bl	8013384 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016f18:	f8ad 000e 	strh.w	r0, [sp, #14]
 8016f1c:	4628      	mov	r0, r5
 8016f1e:	f8ad 9008 	strh.w	r9, [sp, #8]
 8016f22:	f8ad 800a 	strh.w	r8, [sp, #10]
 8016f26:	f8ad 700c 	strh.w	r7, [sp, #12]
 8016f2a:	f7fc fb83 	bl	8013634 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016f2e:	b178      	cbz	r0, 8016f50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8016f30:	4628      	mov	r0, r5
 8016f32:	f7fc fb7f 	bl	8013634 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016f36:	2802      	cmp	r0, #2
 8016f38:	d00a      	beq.n	8016f50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8016f3a:	4628      	mov	r0, r5
 8016f3c:	f7fc fb7a 	bl	8013634 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016f40:	280b      	cmp	r0, #11
 8016f42:	d005      	beq.n	8016f50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8016f44:	4b69      	ldr	r3, [pc, #420]	; (80170ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8016f46:	4a6a      	ldr	r2, [pc, #424]	; (80170f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8016f48:	486a      	ldr	r0, [pc, #424]	; (80170f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8016f4a:	214b      	movs	r1, #75	; 0x4b
 8016f4c:	f00b f8e0 	bl	8022110 <__assert_func>
 8016f50:	4628      	mov	r0, r5
 8016f52:	f7fc fae5 	bl	8013520 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016f56:	4607      	mov	r7, r0
 8016f58:	4628      	mov	r0, r5
 8016f5a:	f7fc fb13 	bl	8013584 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8016f5e:	4681      	mov	r9, r0
 8016f60:	4628      	mov	r0, r5
 8016f62:	f7fc fb67 	bl	8013634 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016f66:	2802      	cmp	r0, #2
 8016f68:	d108      	bne.n	8016f7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8016f6a:	4633      	mov	r3, r6
 8016f6c:	4622      	mov	r2, r4
 8016f6e:	a902      	add	r1, sp, #8
 8016f70:	4638      	mov	r0, r7
 8016f72:	f7ff fa69 	bl	8016448 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8016f76:	b009      	add	sp, #36	; 0x24
 8016f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f7c:	4628      	mov	r0, r5
 8016f7e:	f7fc fb59 	bl	8013634 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016f82:	280b      	cmp	r0, #11
 8016f84:	d107      	bne.n	8016f96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8016f86:	9600      	str	r6, [sp, #0]
 8016f88:	4623      	mov	r3, r4
 8016f8a:	aa02      	add	r2, sp, #8
 8016f8c:	4649      	mov	r1, r9
 8016f8e:	4638      	mov	r0, r7
 8016f90:	f7ff fe72 	bl	8016c78 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8016f94:	e7ef      	b.n	8016f76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8016f96:	4628      	mov	r0, r5
 8016f98:	f7fc fa88 	bl	80134ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016f9c:	b950      	cbnz	r0, 8016fb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8016f9e:	e9cd 6000 	strd	r6, r0, [sp]
 8016fa2:	f8da 3000 	ldr.w	r3, [sl]
 8016fa6:	aa02      	add	r2, sp, #8
 8016fa8:	68dd      	ldr	r5, [r3, #12]
 8016faa:	4639      	mov	r1, r7
 8016fac:	4623      	mov	r3, r4
 8016fae:	4650      	mov	r0, sl
 8016fb0:	47a8      	blx	r5
 8016fb2:	e7e0      	b.n	8016f76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8016fb4:	f10d 0818 	add.w	r8, sp, #24
 8016fb8:	4629      	mov	r1, r5
 8016fba:	4640      	mov	r0, r8
 8016fbc:	f7fc fa1c 	bl	80133f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016fc0:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016fc4:	ad04      	add	r5, sp, #16
 8016fc6:	e885 0003 	stmia.w	r5, {r0, r1}
 8016fca:	4628      	mov	r0, r5
 8016fcc:	4621      	mov	r1, r4
 8016fce:	f7f4 fced 	bl	800b9ac <_ZN8touchgfx4RectaNERKS0_>
 8016fd2:	4628      	mov	r0, r5
 8016fd4:	f7f4 fd2d 	bl	800ba32 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016fd8:	b138      	cbz	r0, 8016fea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8016fda:	9600      	str	r6, [sp, #0]
 8016fdc:	4623      	mov	r3, r4
 8016fde:	aa02      	add	r2, sp, #8
 8016fe0:	4649      	mov	r1, r9
 8016fe2:	4638      	mov	r0, r7
 8016fe4:	f7ff fe60 	bl	8016ca8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8016fe8:	e7c5      	b.n	8016f76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8016fea:	e9cd 6000 	strd	r6, r0, [sp]
 8016fee:	f8da 3000 	ldr.w	r3, [sl]
 8016ff2:	aa02      	add	r2, sp, #8
 8016ff4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8016ff8:	4639      	mov	r1, r7
 8016ffa:	462b      	mov	r3, r5
 8016ffc:	4650      	mov	r0, sl
 8016ffe:	47d8      	blx	fp
 8017000:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017004:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017008:	4293      	cmp	r3, r2
 801700a:	dd13      	ble.n	8017034 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 801700c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017010:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017014:	f8ad 0018 	strh.w	r0, [sp, #24]
 8017018:	1a9b      	subs	r3, r3, r2
 801701a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801701e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017022:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017026:	9600      	str	r6, [sp, #0]
 8017028:	4643      	mov	r3, r8
 801702a:	aa02      	add	r2, sp, #8
 801702c:	4649      	mov	r1, r9
 801702e:	4638      	mov	r0, r7
 8017030:	f7ff fe3a 	bl	8016ca8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017034:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8017038:	f9b4 2000 	ldrsh.w	r2, [r4]
 801703c:	4293      	cmp	r3, r2
 801703e:	dd13      	ble.n	8017068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8017040:	1a9b      	subs	r3, r3, r2
 8017042:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8017046:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801704a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801704e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017052:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017056:	f8ad 101e 	strh.w	r1, [sp, #30]
 801705a:	9600      	str	r6, [sp, #0]
 801705c:	4643      	mov	r3, r8
 801705e:	aa02      	add	r2, sp, #8
 8017060:	4649      	mov	r1, r9
 8017062:	4638      	mov	r0, r7
 8017064:	f7ff fe20 	bl	8016ca8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017068:	88a2      	ldrh	r2, [r4, #4]
 801706a:	8823      	ldrh	r3, [r4, #0]
 801706c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8017070:	4413      	add	r3, r2
 8017072:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017076:	440a      	add	r2, r1
 8017078:	b29b      	uxth	r3, r3
 801707a:	b292      	uxth	r2, r2
 801707c:	b211      	sxth	r1, r2
 801707e:	b218      	sxth	r0, r3
 8017080:	4288      	cmp	r0, r1
 8017082:	dd13      	ble.n	80170ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8017084:	1a9b      	subs	r3, r3, r2
 8017086:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801708a:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 801708e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8017092:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017096:	f8ad 001e 	strh.w	r0, [sp, #30]
 801709a:	9600      	str	r6, [sp, #0]
 801709c:	4643      	mov	r3, r8
 801709e:	aa02      	add	r2, sp, #8
 80170a0:	4649      	mov	r1, r9
 80170a2:	4638      	mov	r0, r7
 80170a4:	f8ad 501a 	strh.w	r5, [sp, #26]
 80170a8:	f7ff fdfe 	bl	8016ca8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80170ac:	88e2      	ldrh	r2, [r4, #6]
 80170ae:	8863      	ldrh	r3, [r4, #2]
 80170b0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80170b4:	4413      	add	r3, r2
 80170b6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80170ba:	440a      	add	r2, r1
 80170bc:	b29b      	uxth	r3, r3
 80170be:	b292      	uxth	r2, r2
 80170c0:	b211      	sxth	r1, r2
 80170c2:	b218      	sxth	r0, r3
 80170c4:	4288      	cmp	r0, r1
 80170c6:	f77f af56 	ble.w	8016f76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80170ca:	f9b4 5000 	ldrsh.w	r5, [r4]
 80170ce:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80170d2:	f8ad 5018 	strh.w	r5, [sp, #24]
 80170d6:	1a9b      	subs	r3, r3, r2
 80170d8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80170dc:	f8ad 101a 	strh.w	r1, [sp, #26]
 80170e0:	f8ad 001c 	strh.w	r0, [sp, #28]
 80170e4:	9600      	str	r6, [sp, #0]
 80170e6:	4643      	mov	r3, r8
 80170e8:	e779      	b.n	8016fde <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 80170ea:	bf00      	nop
 80170ec:	08026999 	.word	0x08026999
 80170f0:	080270d6 	.word	0x080270d6
 80170f4:	08026c98 	.word	0x08026c98

080170f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80170f8:	b508      	push	{r3, lr}
 80170fa:	b180      	cbz	r0, 801711e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 80170fc:	2902      	cmp	r1, #2
 80170fe:	d014      	beq.n	801712a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8017100:	2903      	cmp	r1, #3
 8017102:	d01d      	beq.n	8017140 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8017104:	2901      	cmp	r1, #1
 8017106:	d101      	bne.n	801710c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8017108:	2001      	movs	r0, #1
 801710a:	bd08      	pop	{r3, pc}
 801710c:	4b0e      	ldr	r3, [pc, #56]	; (8017148 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801710e:	8818      	ldrh	r0, [r3, #0]
 8017110:	b990      	cbnz	r0, 8017138 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8017112:	4b0e      	ldr	r3, [pc, #56]	; (801714c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8017114:	4a0e      	ldr	r2, [pc, #56]	; (8017150 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8017116:	480f      	ldr	r0, [pc, #60]	; (8017154 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8017118:	2154      	movs	r1, #84	; 0x54
 801711a:	f00a fff9 	bl	8022110 <__assert_func>
 801711e:	2902      	cmp	r1, #2
 8017120:	d00e      	beq.n	8017140 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8017122:	2903      	cmp	r1, #3
 8017124:	d0f2      	beq.n	801710c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8017126:	2901      	cmp	r1, #1
 8017128:	d1ee      	bne.n	8017108 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 801712a:	4b07      	ldr	r3, [pc, #28]	; (8017148 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801712c:	8818      	ldrh	r0, [r3, #0]
 801712e:	2800      	cmp	r0, #0
 8017130:	d0ef      	beq.n	8017112 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8017132:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017136:	e7e8      	b.n	801710a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8017138:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801713c:	4240      	negs	r0, r0
 801713e:	e7e4      	b.n	801710a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8017140:	f04f 30ff 	mov.w	r0, #4294967295
 8017144:	e7e1      	b.n	801710a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8017146:	bf00      	nop
 8017148:	2000e3da 	.word	0x2000e3da
 801714c:	08026cca 	.word	0x08026cca
 8017150:	08027253 	.word	0x08027253
 8017154:	08026d0c 	.word	0x08026d0c

08017158 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8017158:	b508      	push	{r3, lr}
 801715a:	b180      	cbz	r0, 801717e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 801715c:	2902      	cmp	r1, #2
 801715e:	d014      	beq.n	801718a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8017160:	2903      	cmp	r1, #3
 8017162:	d018      	beq.n	8017196 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8017164:	2901      	cmp	r1, #1
 8017166:	d001      	beq.n	801716c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8017168:	2001      	movs	r0, #1
 801716a:	e013      	b.n	8017194 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801716c:	4b0e      	ldr	r3, [pc, #56]	; (80171a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801716e:	8818      	ldrh	r0, [r3, #0]
 8017170:	b970      	cbnz	r0, 8017190 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8017172:	4b0e      	ldr	r3, [pc, #56]	; (80171ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8017174:	4a0e      	ldr	r2, [pc, #56]	; (80171b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8017176:	480f      	ldr	r0, [pc, #60]	; (80171b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8017178:	2154      	movs	r1, #84	; 0x54
 801717a:	f00a ffc9 	bl	8022110 <__assert_func>
 801717e:	2902      	cmp	r1, #2
 8017180:	d009      	beq.n	8017196 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8017182:	2903      	cmp	r1, #3
 8017184:	d0f0      	beq.n	8017168 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8017186:	2901      	cmp	r1, #1
 8017188:	d1f0      	bne.n	801716c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801718a:	f04f 30ff 	mov.w	r0, #4294967295
 801718e:	e001      	b.n	8017194 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8017190:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017194:	bd08      	pop	{r3, pc}
 8017196:	4b04      	ldr	r3, [pc, #16]	; (80171a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8017198:	8818      	ldrh	r0, [r3, #0]
 801719a:	2800      	cmp	r0, #0
 801719c:	d0e9      	beq.n	8017172 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801719e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80171a2:	4240      	negs	r0, r0
 80171a4:	e7f6      	b.n	8017194 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80171a6:	bf00      	nop
 80171a8:	2000e3da 	.word	0x2000e3da
 80171ac:	08026cca 	.word	0x08026cca
 80171b0:	08027253 	.word	0x08027253
 80171b4:	08026d0c 	.word	0x08026d0c

080171b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80171b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171bc:	b099      	sub	sp, #100	; 0x64
 80171be:	910b      	str	r1, [sp, #44]	; 0x2c
 80171c0:	a914      	add	r1, sp, #80	; 0x50
 80171c2:	e881 000c 	stmia.w	r1, {r2, r3}
 80171c6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80171ca:	9308      	str	r3, [sp, #32]
 80171cc:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 80171d0:	f89d 10a4 	ldrb.w	r1, [sp, #164]	; 0xa4
 80171d4:	f893 b00d 	ldrb.w	fp, [r3, #13]
 80171d8:	910c      	str	r1, [sp, #48]	; 0x30
 80171da:	f89d 10b0 	ldrb.w	r1, [sp, #176]	; 0xb0
 80171de:	910d      	str	r1, [sp, #52]	; 0x34
 80171e0:	7998      	ldrb	r0, [r3, #6]
 80171e2:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 80171e6:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 80171ea:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 80171ee:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80171f2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80171f6:	ea4f 114b 	mov.w	r1, fp, lsl #5
 80171fa:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80171fe:	4301      	orrs	r1, r0
 8017200:	9109      	str	r1, [sp, #36]	; 0x24
 8017202:	f000 81e2 	beq.w	80175ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8017206:	ea4f 1b0b 	mov.w	fp, fp, lsl #4
 801720a:	79d9      	ldrb	r1, [r3, #7]
 801720c:	f40b 7b80 	and.w	fp, fp, #256	; 0x100
 8017210:	ea51 0b0b 	orrs.w	fp, r1, fp
 8017214:	f000 81d9 	beq.w	80175ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8017218:	f993 3009 	ldrsb.w	r3, [r3, #9]
 801721c:	b29b      	uxth	r3, r3
 801721e:	2e00      	cmp	r6, #0
 8017220:	f000 80fc 	beq.w	801741c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x264>
 8017224:	1af6      	subs	r6, r6, r3
 8017226:	b2b6      	uxth	r6, r6
 8017228:	0433      	lsls	r3, r6, #16
 801722a:	d502      	bpl.n	8017232 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801722c:	1bad      	subs	r5, r5, r6
 801722e:	b22d      	sxth	r5, r5
 8017230:	2600      	movs	r6, #0
 8017232:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017236:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801723a:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 801723e:	428d      	cmp	r5, r1
 8017240:	b28b      	uxth	r3, r1
 8017242:	bfbf      	itttt	lt
 8017244:	18f6      	addlt	r6, r6, r3
 8017246:	1b75      	sublt	r5, r6, r5
 8017248:	b2ae      	uxthlt	r6, r5
 801724a:	460d      	movlt	r5, r1
 801724c:	8891      	ldrh	r1, [r2, #4]
 801724e:	440b      	add	r3, r1
 8017250:	b21b      	sxth	r3, r3
 8017252:	9311      	str	r3, [sp, #68]	; 0x44
 8017254:	8853      	ldrh	r3, [r2, #2]
 8017256:	88d2      	ldrh	r2, [r2, #6]
 8017258:	4413      	add	r3, r2
 801725a:	b21b      	sxth	r3, r3
 801725c:	9310      	str	r3, [sp, #64]	; 0x40
 801725e:	4bb2      	ldr	r3, [pc, #712]	; (8017528 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x370>)
 8017260:	9a08      	ldr	r2, [sp, #32]
 8017262:	f893 9000 	ldrb.w	r9, [r3]
 8017266:	f109 3cff 	add.w	ip, r9, #4294967295
 801726a:	f1dc 0300 	rsbs	r3, ip, #0
 801726e:	eb43 030c 	adc.w	r3, r3, ip
 8017272:	930f      	str	r3, [sp, #60]	; 0x3c
 8017274:	4629      	mov	r1, r5
 8017276:	4653      	mov	r3, sl
 8017278:	a814      	add	r0, sp, #80	; 0x50
 801727a:	f7f8 fbe3 	bl	800fa44 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801727e:	4629      	mov	r1, r5
 8017280:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8017284:	4653      	mov	r3, sl
 8017286:	9a08      	ldr	r2, [sp, #32]
 8017288:	a814      	add	r0, sp, #80	; 0x50
 801728a:	f7f8 fbf3 	bl	800fa74 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801728e:	a918      	add	r1, sp, #96	; 0x60
 8017290:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8017294:	a817      	add	r0, sp, #92	; 0x5c
 8017296:	f7f8 fd4f 	bl	800fd38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801729a:	f1ba 0f00 	cmp.w	sl, #0
 801729e:	f040 80c0 	bne.w	8017422 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 80172a2:	f1b9 0f01 	cmp.w	r9, #1
 80172a6:	f040 80c4 	bne.w	8017432 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27a>
 80172aa:	2301      	movs	r3, #1
 80172ac:	fa03 f308 	lsl.w	r3, r3, r8
 80172b0:	3b01      	subs	r3, #1
 80172b2:	b2db      	uxtb	r3, r3
 80172b4:	f1b8 0f01 	cmp.w	r8, #1
 80172b8:	930a      	str	r3, [sp, #40]	; 0x28
 80172ba:	f000 80e5 	beq.w	8017488 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 80172be:	f1b8 0f02 	cmp.w	r8, #2
 80172c2:	f000 80e4 	beq.w	801748e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d6>
 80172c6:	f1b8 0f04 	cmp.w	r8, #4
 80172ca:	bf15      	itete	ne
 80172cc:	46c1      	movne	r9, r8
 80172ce:	f04f 0904 	moveq.w	r9, #4
 80172d2:	2301      	movne	r3, #1
 80172d4:	2311      	moveq	r3, #17
 80172d6:	9307      	str	r3, [sp, #28]
 80172d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80172da:	b153      	cbz	r3, 80172f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13a>
 80172dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80172de:	2408      	movs	r4, #8
 80172e0:	fb94 f3f9 	sdiv	r3, r4, r9
 80172e4:	1e5c      	subs	r4, r3, #1
 80172e6:	4414      	add	r4, r2
 80172e8:	fb94 f4f3 	sdiv	r4, r4, r3
 80172ec:	fb14 f403 	smulbb	r4, r4, r3
 80172f0:	b2a4      	uxth	r4, r4
 80172f2:	b906      	cbnz	r6, 80172f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 80172f4:	b16f      	cbz	r7, 8017312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 80172f6:	fb07 6304 	mla	r3, r7, r4, r6
 80172fa:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80172fc:	fb08 f303 	mul.w	r3, r8, r3
 8017300:	4639      	mov	r1, r7
 8017302:	f003 0707 	and.w	r7, r3, #7
 8017306:	eb02 03d3 	add.w	r3, r2, r3, lsr #3
 801730a:	9328      	str	r3, [sp, #160]	; 0xa0
 801730c:	ebab 0301 	sub.w	r3, fp, r1
 8017310:	930e      	str	r3, [sp, #56]	; 0x38
 8017312:	4651      	mov	r1, sl
 8017314:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017316:	f7ff feef 	bl	80170f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801731a:	4651      	mov	r1, sl
 801731c:	4683      	mov	fp, r0
 801731e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017320:	f7ff ff1a 	bl	8017158 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8017324:	9a08      	ldr	r2, [sp, #32]
 8017326:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017328:	1a9b      	subs	r3, r3, r2
 801732a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801732c:	429a      	cmp	r2, r3
 801732e:	bfa8      	it	ge
 8017330:	461a      	movge	r2, r3
 8017332:	2a00      	cmp	r2, #0
 8017334:	4682      	mov	sl, r0
 8017336:	9208      	str	r2, [sp, #32]
 8017338:	f340 8147 	ble.w	80175ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 801733c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801733e:	1bad      	subs	r5, r5, r6
 8017340:	1b5d      	subs	r5, r3, r5
 8017342:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017344:	429d      	cmp	r5, r3
 8017346:	bfd4      	ite	le
 8017348:	ebc6 0605 	rsble	r6, r6, r5
 801734c:	ebc6 0603 	rsbgt	r6, r6, r3
 8017350:	2e00      	cmp	r6, #0
 8017352:	f340 813a 	ble.w	80175ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8017356:	1ba4      	subs	r4, r4, r6
 8017358:	fb09 f304 	mul.w	r3, r9, r4
 801735c:	930e      	str	r3, [sp, #56]	; 0x38
 801735e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017360:	2b00      	cmp	r3, #0
 8017362:	f040 809d 	bne.w	80174a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8017366:	4b71      	ldr	r3, [pc, #452]	; (801752c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>)
 8017368:	6818      	ldr	r0, [r3, #0]
 801736a:	6803      	ldr	r3, [r0, #0]
 801736c:	6a1b      	ldr	r3, [r3, #32]
 801736e:	4798      	blx	r3
 8017370:	496f      	ldr	r1, [pc, #444]	; (8017530 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8017372:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8017376:	880c      	ldrh	r4, [r1, #0]
 8017378:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	; 0x5c
 801737c:	fb04 1303 	mla	r3, r4, r3, r1
 8017380:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017384:	9309      	str	r3, [sp, #36]	; 0x24
 8017386:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017388:	7819      	ldrb	r1, [r3, #0]
 801738a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801738c:	0a1b      	lsrs	r3, r3, #8
 801738e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017392:	930f      	str	r3, [sp, #60]	; 0x3c
 8017394:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017396:	08db      	lsrs	r3, r3, #3
 8017398:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801739c:	9310      	str	r3, [sp, #64]	; 0x40
 801739e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80173a0:	00db      	lsls	r3, r3, #3
 80173a2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80173a6:	9311      	str	r3, [sp, #68]	; 0x44
 80173a8:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80173ac:	fb0b ab16 	mls	fp, fp, r6, sl
 80173b0:	fb03 fa06 	mul.w	sl, r3, r6
 80173b4:	930c      	str	r3, [sp, #48]	; 0x30
 80173b6:	eb0a 034b 	add.w	r3, sl, fp, lsl #1
 80173ba:	9312      	str	r3, [sp, #72]	; 0x48
 80173bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80173be:	4139      	asrs	r1, r7
 80173c0:	b29b      	uxth	r3, r3
 80173c2:	b2c9      	uxtb	r1, r1
 80173c4:	9313      	str	r3, [sp, #76]	; 0x4c
 80173c6:	9b08      	ldr	r3, [sp, #32]
 80173c8:	3b01      	subs	r3, #1
 80173ca:	9308      	str	r3, [sp, #32]
 80173cc:	3301      	adds	r3, #1
 80173ce:	f000 80c3 	beq.w	8017558 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80173d2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80173d6:	46b2      	mov	sl, r6
 80173d8:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80173dc:	f0c0 80aa 	bcc.w	8017534 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80173e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80173e2:	400b      	ands	r3, r1
 80173e4:	d00a      	beq.n	80173fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x244>
 80173e6:	9807      	ldr	r0, [sp, #28]
 80173e8:	fb13 f300 	smulbb	r3, r3, r0
 80173ec:	2bfe      	cmp	r3, #254	; 0xfe
 80173ee:	dd59      	ble.n	80174a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 80173f0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80173f2:	28ff      	cmp	r0, #255	; 0xff
 80173f4:	d156      	bne.n	80174a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 80173f6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80173f8:	f8ae 4000 	strh.w	r4, [lr]
 80173fc:	4447      	add	r7, r8
 80173fe:	b2bf      	uxth	r7, r7
 8017400:	2f07      	cmp	r7, #7
 8017402:	bf81      	itttt	hi
 8017404:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8017406:	7859      	ldrbhi	r1, [r3, #1]
 8017408:	3301      	addhi	r3, #1
 801740a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801740c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801740e:	bf9a      	itte	ls
 8017410:	fa41 f109 	asrls.w	r1, r1, r9
 8017414:	b2c9      	uxtbls	r1, r1
 8017416:	2700      	movhi	r7, #0
 8017418:	449e      	add	lr, r3
 801741a:	e7dd      	b.n	80173d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x220>
 801741c:	441d      	add	r5, r3
 801741e:	b22d      	sxth	r5, r5
 8017420:	e707      	b.n	8017232 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8017422:	f1ba 0f01 	cmp.w	sl, #1
 8017426:	f47f af40 	bne.w	80172aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 801742a:	f1b9 0f01 	cmp.w	r9, #1
 801742e:	f47f af3c 	bne.w	80172aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8017432:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 801752c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8017436:	f8d9 0000 	ldr.w	r0, [r9]
 801743a:	6803      	ldr	r3, [r0, #0]
 801743c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801743e:	4798      	blx	r3
 8017440:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 8017444:	464a      	mov	r2, r9
 8017446:	d006      	beq.n	8017456 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 8017448:	f1b8 0f04 	cmp.w	r8, #4
 801744c:	d11a      	bne.n	8017484 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 801744e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017450:	3300      	adds	r3, #0
 8017452:	bf18      	it	ne
 8017454:	2301      	movne	r3, #1
 8017456:	05c0      	lsls	r0, r0, #23
 8017458:	f140 8087 	bpl.w	801756a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 801745c:	f1b8 0f08 	cmp.w	r8, #8
 8017460:	f040 8083 	bne.w	801756a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 8017464:	2b00      	cmp	r3, #0
 8017466:	bf14      	ite	ne
 8017468:	2180      	movne	r1, #128	; 0x80
 801746a:	f44f 7180 	moveq.w	r1, #256	; 0x100
 801746e:	2e00      	cmp	r6, #0
 8017470:	f040 80ae 	bne.w	80175d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x418>
 8017474:	2f00      	cmp	r7, #0
 8017476:	f000 8082 	beq.w	801757e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 801747a:	23ff      	movs	r3, #255	; 0xff
 801747c:	930a      	str	r3, [sp, #40]	; 0x28
 801747e:	46c1      	mov	r9, r8
 8017480:	2301      	movs	r3, #1
 8017482:	e728      	b.n	80172d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8017484:	2300      	movs	r3, #0
 8017486:	e7e6      	b.n	8017456 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 8017488:	46c1      	mov	r9, r8
 801748a:	23ff      	movs	r3, #255	; 0xff
 801748c:	e723      	b.n	80172d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 801748e:	46c1      	mov	r9, r8
 8017490:	2355      	movs	r3, #85	; 0x55
 8017492:	e720      	b.n	80172d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8017494:	23ff      	movs	r3, #255	; 0xff
 8017496:	930a      	str	r3, [sp, #40]	; 0x28
 8017498:	2301      	movs	r3, #1
 801749a:	46c1      	mov	r9, r8
 801749c:	9307      	str	r3, [sp, #28]
 801749e:	e71d      	b.n	80172dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x124>
 80174a0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80174a2:	e765      	b.n	8017370 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1b8>
 80174a4:	980d      	ldr	r0, [sp, #52]	; 0x34
 80174a6:	f8be 5000 	ldrh.w	r5, [lr]
 80174aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80174ac:	fb10 f303 	smulbb	r3, r0, r3
 80174b0:	b29b      	uxth	r3, r3
 80174b2:	1c58      	adds	r0, r3, #1
 80174b4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80174b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80174bc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80174be:	fa1f fc83 	uxth.w	ip, r3
 80174c2:	122c      	asrs	r4, r5, #8
 80174c4:	43db      	mvns	r3, r3
 80174c6:	b2db      	uxtb	r3, r3
 80174c8:	fb1c fb02 	smulbb	fp, ip, r2
 80174cc:	fb10 f00c 	smulbb	r0, r0, ip
 80174d0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80174d4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80174d6:	fb04 0403 	mla	r4, r4, r3, r0
 80174da:	10e8      	asrs	r0, r5, #3
 80174dc:	00ed      	lsls	r5, r5, #3
 80174de:	b2ed      	uxtb	r5, r5
 80174e0:	fb1c fc02 	smulbb	ip, ip, r2
 80174e4:	fb05 cc03 	mla	ip, r5, r3, ip
 80174e8:	b2a4      	uxth	r4, r4
 80174ea:	fa1f fc8c 	uxth.w	ip, ip
 80174ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80174f2:	fb00 b003 	mla	r0, r0, r3, fp
 80174f6:	1c63      	adds	r3, r4, #1
 80174f8:	f10c 0b01 	add.w	fp, ip, #1
 80174fc:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8017500:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8017504:	b280      	uxth	r0, r0
 8017506:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801750a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801750e:	ea44 040b 	orr.w	r4, r4, fp
 8017512:	f100 0b01 	add.w	fp, r0, #1
 8017516:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801751a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801751e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017522:	ea44 040b 	orr.w	r4, r4, fp
 8017526:	e767      	b.n	80173f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x240>
 8017528:	2000e3d8 	.word	0x2000e3d8
 801752c:	2000e3e0 	.word	0x2000e3e0
 8017530:	2000e3da 	.word	0x2000e3da
 8017534:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017536:	b153      	cbz	r3, 801754e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8017538:	441f      	add	r7, r3
 801753a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801753c:	b2bf      	uxth	r7, r7
 801753e:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8017542:	f007 0707 	and.w	r7, r7, #7
 8017546:	7819      	ldrb	r1, [r3, #0]
 8017548:	9328      	str	r3, [sp, #160]	; 0xa0
 801754a:	4139      	asrs	r1, r7
 801754c:	b2c9      	uxtb	r1, r1
 801754e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017550:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017552:	441a      	add	r2, r3
 8017554:	9209      	str	r2, [sp, #36]	; 0x24
 8017556:	e736      	b.n	80173c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20e>
 8017558:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801755a:	2b00      	cmp	r3, #0
 801755c:	d135      	bne.n	80175ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 801755e:	4b21      	ldr	r3, [pc, #132]	; (80175e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x42c>)
 8017560:	6818      	ldr	r0, [r3, #0]
 8017562:	6803      	ldr	r3, [r0, #0]
 8017564:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017566:	4798      	blx	r3
 8017568:	e02f      	b.n	80175ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 801756a:	2b00      	cmp	r3, #0
 801756c:	f43f ae9d 	beq.w	80172aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8017570:	2e00      	cmp	r6, #0
 8017572:	f47f ae9a 	bne.w	80172aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8017576:	2f00      	cmp	r7, #0
 8017578:	f47f ae97 	bne.w	80172aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 801757c:	2180      	movs	r1, #128	; 0x80
 801757e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017580:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017582:	18eb      	adds	r3, r5, r3
 8017584:	4283      	cmp	r3, r0
 8017586:	f73f ae90 	bgt.w	80172aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 801758a:	9b08      	ldr	r3, [sp, #32]
 801758c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801758e:	445b      	add	r3, fp
 8017590:	4283      	cmp	r3, r0
 8017592:	f73f ae8a 	bgt.w	80172aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8017596:	6810      	ldr	r0, [r2, #0]
 8017598:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801759c:	6805      	ldr	r5, [r0, #0]
 801759e:	9105      	str	r1, [sp, #20]
 80175a0:	f1b8 0f08 	cmp.w	r8, #8
 80175a4:	bf18      	it	ne
 80175a6:	3401      	addne	r4, #1
 80175a8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80175aa:	9104      	str	r1, [sp, #16]
 80175ac:	bf18      	it	ne
 80175ae:	f024 0401 	bicne.w	r4, r4, #1
 80175b2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80175b4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80175b8:	bf18      	it	ne
 80175ba:	b2a4      	uxthne	r4, r4
 80175bc:	e9cd 4102 	strd	r4, r1, [sp, #8]
 80175c0:	e9cd 4b00 	strd	r4, fp, [sp]
 80175c4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80175c6:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 80175c8:	47a0      	blx	r4
 80175ca:	b019      	add	sp, #100	; 0x64
 80175cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80175d2:	2b00      	cmp	r3, #0
 80175d4:	f47f af5e 	bne.w	8017494 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80175d8:	23ff      	movs	r3, #255	; 0xff
 80175da:	930a      	str	r3, [sp, #40]	; 0x28
 80175dc:	2301      	movs	r3, #1
 80175de:	46c1      	mov	r9, r8
 80175e0:	9307      	str	r3, [sp, #28]
 80175e2:	e688      	b.n	80172f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 80175e4:	2000e3e0 	.word	0x2000e3e0

080175e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80175e8:	b538      	push	{r3, r4, r5, lr}
 80175ea:	4c15      	ldr	r4, [pc, #84]	; (8017640 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80175ec:	7823      	ldrb	r3, [r4, #0]
 80175ee:	f3bf 8f5b 	dmb	ish
 80175f2:	07da      	lsls	r2, r3, #31
 80175f4:	4605      	mov	r5, r0
 80175f6:	d40b      	bmi.n	8017610 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80175f8:	4620      	mov	r0, r4
 80175fa:	f009 ff6c 	bl	80214d6 <__cxa_guard_acquire>
 80175fe:	b138      	cbz	r0, 8017610 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017600:	4620      	mov	r0, r4
 8017602:	f009 ff74 	bl	80214ee <__cxa_guard_release>
 8017606:	4a0f      	ldr	r2, [pc, #60]	; (8017644 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8017608:	490f      	ldr	r1, [pc, #60]	; (8017648 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801760a:	4810      	ldr	r0, [pc, #64]	; (801764c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801760c:	f009 ff5c 	bl	80214c8 <__aeabi_atexit>
 8017610:	4c0f      	ldr	r4, [pc, #60]	; (8017650 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8017612:	7823      	ldrb	r3, [r4, #0]
 8017614:	f3bf 8f5b 	dmb	ish
 8017618:	07db      	lsls	r3, r3, #31
 801761a:	d40b      	bmi.n	8017634 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801761c:	4620      	mov	r0, r4
 801761e:	f009 ff5a 	bl	80214d6 <__cxa_guard_acquire>
 8017622:	b138      	cbz	r0, 8017634 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8017624:	4620      	mov	r0, r4
 8017626:	f009 ff62 	bl	80214ee <__cxa_guard_release>
 801762a:	4a06      	ldr	r2, [pc, #24]	; (8017644 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801762c:	4909      	ldr	r1, [pc, #36]	; (8017654 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801762e:	480a      	ldr	r0, [pc, #40]	; (8017658 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8017630:	f009 ff4a 	bl	80214c8 <__aeabi_atexit>
 8017634:	4b05      	ldr	r3, [pc, #20]	; (801764c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8017636:	612b      	str	r3, [r5, #16]
 8017638:	4b07      	ldr	r3, [pc, #28]	; (8017658 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801763a:	616b      	str	r3, [r5, #20]
 801763c:	bd38      	pop	{r3, r4, r5, pc}
 801763e:	bf00      	nop
 8017640:	2000e4cc 	.word	0x2000e4cc
 8017644:	20000000 	.word	0x20000000
 8017648:	08015bdd 	.word	0x08015bdd
 801764c:	200000a4 	.word	0x200000a4
 8017650:	2000e4d0 	.word	0x2000e4d0
 8017654:	08015bdb 	.word	0x08015bdb
 8017658:	200000a8 	.word	0x200000a8

0801765c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801765c:	b538      	push	{r3, r4, r5, lr}
 801765e:	4c15      	ldr	r4, [pc, #84]	; (80176b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8017660:	7823      	ldrb	r3, [r4, #0]
 8017662:	f3bf 8f5b 	dmb	ish
 8017666:	07da      	lsls	r2, r3, #31
 8017668:	4605      	mov	r5, r0
 801766a:	d40b      	bmi.n	8017684 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801766c:	4620      	mov	r0, r4
 801766e:	f009 ff32 	bl	80214d6 <__cxa_guard_acquire>
 8017672:	b138      	cbz	r0, 8017684 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017674:	4620      	mov	r0, r4
 8017676:	f009 ff3a 	bl	80214ee <__cxa_guard_release>
 801767a:	4a0f      	ldr	r2, [pc, #60]	; (80176b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801767c:	490f      	ldr	r1, [pc, #60]	; (80176bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801767e:	4810      	ldr	r0, [pc, #64]	; (80176c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017680:	f009 ff22 	bl	80214c8 <__aeabi_atexit>
 8017684:	4c0f      	ldr	r4, [pc, #60]	; (80176c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8017686:	7823      	ldrb	r3, [r4, #0]
 8017688:	f3bf 8f5b 	dmb	ish
 801768c:	07db      	lsls	r3, r3, #31
 801768e:	d40b      	bmi.n	80176a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017690:	4620      	mov	r0, r4
 8017692:	f009 ff20 	bl	80214d6 <__cxa_guard_acquire>
 8017696:	b138      	cbz	r0, 80176a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017698:	4620      	mov	r0, r4
 801769a:	f009 ff28 	bl	80214ee <__cxa_guard_release>
 801769e:	4a06      	ldr	r2, [pc, #24]	; (80176b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80176a0:	4909      	ldr	r1, [pc, #36]	; (80176c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80176a2:	480a      	ldr	r0, [pc, #40]	; (80176cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80176a4:	f009 ff10 	bl	80214c8 <__aeabi_atexit>
 80176a8:	4b05      	ldr	r3, [pc, #20]	; (80176c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80176aa:	60ab      	str	r3, [r5, #8]
 80176ac:	4b07      	ldr	r3, [pc, #28]	; (80176cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80176ae:	60eb      	str	r3, [r5, #12]
 80176b0:	bd38      	pop	{r3, r4, r5, pc}
 80176b2:	bf00      	nop
 80176b4:	2000e4a4 	.word	0x2000e4a4
 80176b8:	20000000 	.word	0x20000000
 80176bc:	08015be1 	.word	0x08015be1
 80176c0:	2000007c 	.word	0x2000007c
 80176c4:	2000e4a8 	.word	0x2000e4a8
 80176c8:	08015bdf 	.word	0x08015bdf
 80176cc:	20000080 	.word	0x20000080

080176d0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80176d0:	b510      	push	{r4, lr}
 80176d2:	4604      	mov	r4, r0
 80176d4:	f7ff ff88 	bl	80175e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80176d8:	4620      	mov	r0, r4
 80176da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80176de:	f7ff bfbd 	b.w	801765c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080176e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80176e4:	b538      	push	{r3, r4, r5, lr}
 80176e6:	4c15      	ldr	r4, [pc, #84]	; (801773c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80176e8:	7823      	ldrb	r3, [r4, #0]
 80176ea:	f3bf 8f5b 	dmb	ish
 80176ee:	07da      	lsls	r2, r3, #31
 80176f0:	4605      	mov	r5, r0
 80176f2:	d40b      	bmi.n	801770c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80176f4:	4620      	mov	r0, r4
 80176f6:	f009 feee 	bl	80214d6 <__cxa_guard_acquire>
 80176fa:	b138      	cbz	r0, 801770c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80176fc:	4620      	mov	r0, r4
 80176fe:	f009 fef6 	bl	80214ee <__cxa_guard_release>
 8017702:	4a0f      	ldr	r2, [pc, #60]	; (8017740 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017704:	490f      	ldr	r1, [pc, #60]	; (8017744 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8017706:	4810      	ldr	r0, [pc, #64]	; (8017748 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017708:	f009 fede 	bl	80214c8 <__aeabi_atexit>
 801770c:	4c0f      	ldr	r4, [pc, #60]	; (801774c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801770e:	7823      	ldrb	r3, [r4, #0]
 8017710:	f3bf 8f5b 	dmb	ish
 8017714:	07db      	lsls	r3, r3, #31
 8017716:	d40b      	bmi.n	8017730 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017718:	4620      	mov	r0, r4
 801771a:	f009 fedc 	bl	80214d6 <__cxa_guard_acquire>
 801771e:	b138      	cbz	r0, 8017730 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017720:	4620      	mov	r0, r4
 8017722:	f009 fee4 	bl	80214ee <__cxa_guard_release>
 8017726:	4a06      	ldr	r2, [pc, #24]	; (8017740 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017728:	4909      	ldr	r1, [pc, #36]	; (8017750 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801772a:	480a      	ldr	r0, [pc, #40]	; (8017754 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801772c:	f009 fecc 	bl	80214c8 <__aeabi_atexit>
 8017730:	4b05      	ldr	r3, [pc, #20]	; (8017748 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017732:	622b      	str	r3, [r5, #32]
 8017734:	4b07      	ldr	r3, [pc, #28]	; (8017754 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017736:	626b      	str	r3, [r5, #36]	; 0x24
 8017738:	bd38      	pop	{r3, r4, r5, pc}
 801773a:	bf00      	nop
 801773c:	2000e4d4 	.word	0x2000e4d4
 8017740:	20000000 	.word	0x20000000
 8017744:	08015bd5 	.word	0x08015bd5
 8017748:	200000ac 	.word	0x200000ac
 801774c:	2000e4d8 	.word	0x2000e4d8
 8017750:	08015bd3 	.word	0x08015bd3
 8017754:	200000b0 	.word	0x200000b0

08017758 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8017758:	b538      	push	{r3, r4, r5, lr}
 801775a:	4c15      	ldr	r4, [pc, #84]	; (80177b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801775c:	7823      	ldrb	r3, [r4, #0]
 801775e:	f3bf 8f5b 	dmb	ish
 8017762:	07da      	lsls	r2, r3, #31
 8017764:	4605      	mov	r5, r0
 8017766:	d40b      	bmi.n	8017780 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017768:	4620      	mov	r0, r4
 801776a:	f009 feb4 	bl	80214d6 <__cxa_guard_acquire>
 801776e:	b138      	cbz	r0, 8017780 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017770:	4620      	mov	r0, r4
 8017772:	f009 febc 	bl	80214ee <__cxa_guard_release>
 8017776:	4a0f      	ldr	r2, [pc, #60]	; (80177b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017778:	490f      	ldr	r1, [pc, #60]	; (80177b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801777a:	4810      	ldr	r0, [pc, #64]	; (80177bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801777c:	f009 fea4 	bl	80214c8 <__aeabi_atexit>
 8017780:	4c0f      	ldr	r4, [pc, #60]	; (80177c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8017782:	7823      	ldrb	r3, [r4, #0]
 8017784:	f3bf 8f5b 	dmb	ish
 8017788:	07db      	lsls	r3, r3, #31
 801778a:	d40b      	bmi.n	80177a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801778c:	4620      	mov	r0, r4
 801778e:	f009 fea2 	bl	80214d6 <__cxa_guard_acquire>
 8017792:	b138      	cbz	r0, 80177a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017794:	4620      	mov	r0, r4
 8017796:	f009 feaa 	bl	80214ee <__cxa_guard_release>
 801779a:	4a06      	ldr	r2, [pc, #24]	; (80177b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801779c:	4909      	ldr	r1, [pc, #36]	; (80177c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801779e:	480a      	ldr	r0, [pc, #40]	; (80177c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80177a0:	f009 fe92 	bl	80214c8 <__aeabi_atexit>
 80177a4:	4b05      	ldr	r3, [pc, #20]	; (80177bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80177a6:	61ab      	str	r3, [r5, #24]
 80177a8:	4b07      	ldr	r3, [pc, #28]	; (80177c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80177aa:	61eb      	str	r3, [r5, #28]
 80177ac:	bd38      	pop	{r3, r4, r5, pc}
 80177ae:	bf00      	nop
 80177b0:	2000e4ac 	.word	0x2000e4ac
 80177b4:	20000000 	.word	0x20000000
 80177b8:	08015bd9 	.word	0x08015bd9
 80177bc:	20000084 	.word	0x20000084
 80177c0:	2000e4b0 	.word	0x2000e4b0
 80177c4:	08015bd7 	.word	0x08015bd7
 80177c8:	20000088 	.word	0x20000088

080177cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80177cc:	b510      	push	{r4, lr}
 80177ce:	4604      	mov	r4, r0
 80177d0:	f7ff ff88 	bl	80176e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80177d4:	4620      	mov	r0, r4
 80177d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80177da:	f7ff bfbd 	b.w	8017758 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080177e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80177e0:	b538      	push	{r3, r4, r5, lr}
 80177e2:	4c15      	ldr	r4, [pc, #84]	; (8017838 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80177e4:	7823      	ldrb	r3, [r4, #0]
 80177e6:	f3bf 8f5b 	dmb	ish
 80177ea:	07da      	lsls	r2, r3, #31
 80177ec:	4605      	mov	r5, r0
 80177ee:	d40b      	bmi.n	8017808 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80177f0:	4620      	mov	r0, r4
 80177f2:	f009 fe70 	bl	80214d6 <__cxa_guard_acquire>
 80177f6:	b138      	cbz	r0, 8017808 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80177f8:	4620      	mov	r0, r4
 80177fa:	f009 fe78 	bl	80214ee <__cxa_guard_release>
 80177fe:	4a0f      	ldr	r2, [pc, #60]	; (801783c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017800:	490f      	ldr	r1, [pc, #60]	; (8017840 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8017802:	4810      	ldr	r0, [pc, #64]	; (8017844 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017804:	f009 fe60 	bl	80214c8 <__aeabi_atexit>
 8017808:	4c0f      	ldr	r4, [pc, #60]	; (8017848 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801780a:	7823      	ldrb	r3, [r4, #0]
 801780c:	f3bf 8f5b 	dmb	ish
 8017810:	07db      	lsls	r3, r3, #31
 8017812:	d40b      	bmi.n	801782c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017814:	4620      	mov	r0, r4
 8017816:	f009 fe5e 	bl	80214d6 <__cxa_guard_acquire>
 801781a:	b138      	cbz	r0, 801782c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801781c:	4620      	mov	r0, r4
 801781e:	f009 fe66 	bl	80214ee <__cxa_guard_release>
 8017822:	4a06      	ldr	r2, [pc, #24]	; (801783c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017824:	4909      	ldr	r1, [pc, #36]	; (801784c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8017826:	480a      	ldr	r0, [pc, #40]	; (8017850 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017828:	f009 fe4e 	bl	80214c8 <__aeabi_atexit>
 801782c:	4b05      	ldr	r3, [pc, #20]	; (8017844 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801782e:	632b      	str	r3, [r5, #48]	; 0x30
 8017830:	4b07      	ldr	r3, [pc, #28]	; (8017850 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017832:	636b      	str	r3, [r5, #52]	; 0x34
 8017834:	bd38      	pop	{r3, r4, r5, pc}
 8017836:	bf00      	nop
 8017838:	2000e4e4 	.word	0x2000e4e4
 801783c:	20000000 	.word	0x20000000
 8017840:	08015bcd 	.word	0x08015bcd
 8017844:	200000bc 	.word	0x200000bc
 8017848:	2000e4e8 	.word	0x2000e4e8
 801784c:	08015bcb 	.word	0x08015bcb
 8017850:	200000c0 	.word	0x200000c0

08017854 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8017854:	b538      	push	{r3, r4, r5, lr}
 8017856:	4c15      	ldr	r4, [pc, #84]	; (80178ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8017858:	7823      	ldrb	r3, [r4, #0]
 801785a:	f3bf 8f5b 	dmb	ish
 801785e:	07da      	lsls	r2, r3, #31
 8017860:	4605      	mov	r5, r0
 8017862:	d40b      	bmi.n	801787c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017864:	4620      	mov	r0, r4
 8017866:	f009 fe36 	bl	80214d6 <__cxa_guard_acquire>
 801786a:	b138      	cbz	r0, 801787c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801786c:	4620      	mov	r0, r4
 801786e:	f009 fe3e 	bl	80214ee <__cxa_guard_release>
 8017872:	4a0f      	ldr	r2, [pc, #60]	; (80178b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017874:	490f      	ldr	r1, [pc, #60]	; (80178b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8017876:	4810      	ldr	r0, [pc, #64]	; (80178b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017878:	f009 fe26 	bl	80214c8 <__aeabi_atexit>
 801787c:	4c0f      	ldr	r4, [pc, #60]	; (80178bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801787e:	7823      	ldrb	r3, [r4, #0]
 8017880:	f3bf 8f5b 	dmb	ish
 8017884:	07db      	lsls	r3, r3, #31
 8017886:	d40b      	bmi.n	80178a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017888:	4620      	mov	r0, r4
 801788a:	f009 fe24 	bl	80214d6 <__cxa_guard_acquire>
 801788e:	b138      	cbz	r0, 80178a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017890:	4620      	mov	r0, r4
 8017892:	f009 fe2c 	bl	80214ee <__cxa_guard_release>
 8017896:	4a06      	ldr	r2, [pc, #24]	; (80178b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017898:	4909      	ldr	r1, [pc, #36]	; (80178c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801789a:	480a      	ldr	r0, [pc, #40]	; (80178c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801789c:	f009 fe14 	bl	80214c8 <__aeabi_atexit>
 80178a0:	4b05      	ldr	r3, [pc, #20]	; (80178b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80178a2:	62ab      	str	r3, [r5, #40]	; 0x28
 80178a4:	4b07      	ldr	r3, [pc, #28]	; (80178c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80178a6:	62eb      	str	r3, [r5, #44]	; 0x2c
 80178a8:	bd38      	pop	{r3, r4, r5, pc}
 80178aa:	bf00      	nop
 80178ac:	2000e4b4 	.word	0x2000e4b4
 80178b0:	20000000 	.word	0x20000000
 80178b4:	08015bd1 	.word	0x08015bd1
 80178b8:	2000008c 	.word	0x2000008c
 80178bc:	2000e4b8 	.word	0x2000e4b8
 80178c0:	08015bcf 	.word	0x08015bcf
 80178c4:	20000090 	.word	0x20000090

080178c8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80178c8:	b510      	push	{r4, lr}
 80178ca:	4604      	mov	r4, r0
 80178cc:	f7ff ff88 	bl	80177e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80178d0:	4620      	mov	r0, r4
 80178d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80178d6:	f7ff bfbd 	b.w	8017854 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080178dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80178dc:	b538      	push	{r3, r4, r5, lr}
 80178de:	4c15      	ldr	r4, [pc, #84]	; (8017934 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80178e0:	7823      	ldrb	r3, [r4, #0]
 80178e2:	f3bf 8f5b 	dmb	ish
 80178e6:	07da      	lsls	r2, r3, #31
 80178e8:	4605      	mov	r5, r0
 80178ea:	d40b      	bmi.n	8017904 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80178ec:	4620      	mov	r0, r4
 80178ee:	f009 fdf2 	bl	80214d6 <__cxa_guard_acquire>
 80178f2:	b138      	cbz	r0, 8017904 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80178f4:	4620      	mov	r0, r4
 80178f6:	f009 fdfa 	bl	80214ee <__cxa_guard_release>
 80178fa:	4a0f      	ldr	r2, [pc, #60]	; (8017938 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80178fc:	490f      	ldr	r1, [pc, #60]	; (801793c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80178fe:	4810      	ldr	r0, [pc, #64]	; (8017940 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8017900:	f009 fde2 	bl	80214c8 <__aeabi_atexit>
 8017904:	4c0f      	ldr	r4, [pc, #60]	; (8017944 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8017906:	7823      	ldrb	r3, [r4, #0]
 8017908:	f3bf 8f5b 	dmb	ish
 801790c:	07db      	lsls	r3, r3, #31
 801790e:	d40b      	bmi.n	8017928 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8017910:	4620      	mov	r0, r4
 8017912:	f009 fde0 	bl	80214d6 <__cxa_guard_acquire>
 8017916:	b138      	cbz	r0, 8017928 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8017918:	4620      	mov	r0, r4
 801791a:	f009 fde8 	bl	80214ee <__cxa_guard_release>
 801791e:	4a06      	ldr	r2, [pc, #24]	; (8017938 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8017920:	4909      	ldr	r1, [pc, #36]	; (8017948 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8017922:	480a      	ldr	r0, [pc, #40]	; (801794c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8017924:	f009 fdd0 	bl	80214c8 <__aeabi_atexit>
 8017928:	4b05      	ldr	r3, [pc, #20]	; (8017940 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801792a:	652b      	str	r3, [r5, #80]	; 0x50
 801792c:	4b07      	ldr	r3, [pc, #28]	; (801794c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801792e:	656b      	str	r3, [r5, #84]	; 0x54
 8017930:	bd38      	pop	{r3, r4, r5, pc}
 8017932:	bf00      	nop
 8017934:	2000e4ec 	.word	0x2000e4ec
 8017938:	20000000 	.word	0x20000000
 801793c:	08015bbd 	.word	0x08015bbd
 8017940:	200000c4 	.word	0x200000c4
 8017944:	2000e4f0 	.word	0x2000e4f0
 8017948:	08015bbb 	.word	0x08015bbb
 801794c:	200000c8 	.word	0x200000c8

08017950 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8017950:	b538      	push	{r3, r4, r5, lr}
 8017952:	4c15      	ldr	r4, [pc, #84]	; (80179a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8017954:	7823      	ldrb	r3, [r4, #0]
 8017956:	f3bf 8f5b 	dmb	ish
 801795a:	07da      	lsls	r2, r3, #31
 801795c:	4605      	mov	r5, r0
 801795e:	d40b      	bmi.n	8017978 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8017960:	4620      	mov	r0, r4
 8017962:	f009 fdb8 	bl	80214d6 <__cxa_guard_acquire>
 8017966:	b138      	cbz	r0, 8017978 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8017968:	4620      	mov	r0, r4
 801796a:	f009 fdc0 	bl	80214ee <__cxa_guard_release>
 801796e:	4a0f      	ldr	r2, [pc, #60]	; (80179ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8017970:	490f      	ldr	r1, [pc, #60]	; (80179b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8017972:	4810      	ldr	r0, [pc, #64]	; (80179b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8017974:	f009 fda8 	bl	80214c8 <__aeabi_atexit>
 8017978:	4c0f      	ldr	r4, [pc, #60]	; (80179b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801797a:	7823      	ldrb	r3, [r4, #0]
 801797c:	f3bf 8f5b 	dmb	ish
 8017980:	07db      	lsls	r3, r3, #31
 8017982:	d40b      	bmi.n	801799c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8017984:	4620      	mov	r0, r4
 8017986:	f009 fda6 	bl	80214d6 <__cxa_guard_acquire>
 801798a:	b138      	cbz	r0, 801799c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801798c:	4620      	mov	r0, r4
 801798e:	f009 fdae 	bl	80214ee <__cxa_guard_release>
 8017992:	4a06      	ldr	r2, [pc, #24]	; (80179ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8017994:	4909      	ldr	r1, [pc, #36]	; (80179bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8017996:	480a      	ldr	r0, [pc, #40]	; (80179c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8017998:	f009 fd96 	bl	80214c8 <__aeabi_atexit>
 801799c:	4b05      	ldr	r3, [pc, #20]	; (80179b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801799e:	64ab      	str	r3, [r5, #72]	; 0x48
 80179a0:	4b07      	ldr	r3, [pc, #28]	; (80179c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80179a2:	64eb      	str	r3, [r5, #76]	; 0x4c
 80179a4:	bd38      	pop	{r3, r4, r5, pc}
 80179a6:	bf00      	nop
 80179a8:	2000e4f4 	.word	0x2000e4f4
 80179ac:	20000000 	.word	0x20000000
 80179b0:	08015bc1 	.word	0x08015bc1
 80179b4:	200000cc 	.word	0x200000cc
 80179b8:	2000e4f8 	.word	0x2000e4f8
 80179bc:	08015bbf 	.word	0x08015bbf
 80179c0:	200000d0 	.word	0x200000d0

080179c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80179c4:	b538      	push	{r3, r4, r5, lr}
 80179c6:	4c15      	ldr	r4, [pc, #84]	; (8017a1c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80179c8:	7823      	ldrb	r3, [r4, #0]
 80179ca:	f3bf 8f5b 	dmb	ish
 80179ce:	07da      	lsls	r2, r3, #31
 80179d0:	4605      	mov	r5, r0
 80179d2:	d40b      	bmi.n	80179ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80179d4:	4620      	mov	r0, r4
 80179d6:	f009 fd7e 	bl	80214d6 <__cxa_guard_acquire>
 80179da:	b138      	cbz	r0, 80179ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80179dc:	4620      	mov	r0, r4
 80179de:	f009 fd86 	bl	80214ee <__cxa_guard_release>
 80179e2:	4a0f      	ldr	r2, [pc, #60]	; (8017a20 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80179e4:	490f      	ldr	r1, [pc, #60]	; (8017a24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80179e6:	4810      	ldr	r0, [pc, #64]	; (8017a28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80179e8:	f009 fd6e 	bl	80214c8 <__aeabi_atexit>
 80179ec:	4c0f      	ldr	r4, [pc, #60]	; (8017a2c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80179ee:	7823      	ldrb	r3, [r4, #0]
 80179f0:	f3bf 8f5b 	dmb	ish
 80179f4:	07db      	lsls	r3, r3, #31
 80179f6:	d40b      	bmi.n	8017a10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80179f8:	4620      	mov	r0, r4
 80179fa:	f009 fd6c 	bl	80214d6 <__cxa_guard_acquire>
 80179fe:	b138      	cbz	r0, 8017a10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8017a00:	4620      	mov	r0, r4
 8017a02:	f009 fd74 	bl	80214ee <__cxa_guard_release>
 8017a06:	4a06      	ldr	r2, [pc, #24]	; (8017a20 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8017a08:	4909      	ldr	r1, [pc, #36]	; (8017a30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8017a0a:	480a      	ldr	r0, [pc, #40]	; (8017a34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8017a0c:	f009 fd5c 	bl	80214c8 <__aeabi_atexit>
 8017a10:	4b05      	ldr	r3, [pc, #20]	; (8017a28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8017a12:	642b      	str	r3, [r5, #64]	; 0x40
 8017a14:	4b07      	ldr	r3, [pc, #28]	; (8017a34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8017a16:	646b      	str	r3, [r5, #68]	; 0x44
 8017a18:	bd38      	pop	{r3, r4, r5, pc}
 8017a1a:	bf00      	nop
 8017a1c:	2000e4bc 	.word	0x2000e4bc
 8017a20:	20000000 	.word	0x20000000
 8017a24:	08015bc5 	.word	0x08015bc5
 8017a28:	20000094 	.word	0x20000094
 8017a2c:	2000e4c0 	.word	0x2000e4c0
 8017a30:	08015bc3 	.word	0x08015bc3
 8017a34:	20000098 	.word	0x20000098

08017a38 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8017a38:	b538      	push	{r3, r4, r5, lr}
 8017a3a:	4c15      	ldr	r4, [pc, #84]	; (8017a90 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8017a3c:	7823      	ldrb	r3, [r4, #0]
 8017a3e:	f3bf 8f5b 	dmb	ish
 8017a42:	07da      	lsls	r2, r3, #31
 8017a44:	4605      	mov	r5, r0
 8017a46:	d40b      	bmi.n	8017a60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8017a48:	4620      	mov	r0, r4
 8017a4a:	f009 fd44 	bl	80214d6 <__cxa_guard_acquire>
 8017a4e:	b138      	cbz	r0, 8017a60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8017a50:	4620      	mov	r0, r4
 8017a52:	f009 fd4c 	bl	80214ee <__cxa_guard_release>
 8017a56:	4a0f      	ldr	r2, [pc, #60]	; (8017a94 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8017a58:	490f      	ldr	r1, [pc, #60]	; (8017a98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8017a5a:	4810      	ldr	r0, [pc, #64]	; (8017a9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8017a5c:	f009 fd34 	bl	80214c8 <__aeabi_atexit>
 8017a60:	4c0f      	ldr	r4, [pc, #60]	; (8017aa0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8017a62:	7823      	ldrb	r3, [r4, #0]
 8017a64:	f3bf 8f5b 	dmb	ish
 8017a68:	07db      	lsls	r3, r3, #31
 8017a6a:	d40b      	bmi.n	8017a84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8017a6c:	4620      	mov	r0, r4
 8017a6e:	f009 fd32 	bl	80214d6 <__cxa_guard_acquire>
 8017a72:	b138      	cbz	r0, 8017a84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8017a74:	4620      	mov	r0, r4
 8017a76:	f009 fd3a 	bl	80214ee <__cxa_guard_release>
 8017a7a:	4a06      	ldr	r2, [pc, #24]	; (8017a94 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8017a7c:	4909      	ldr	r1, [pc, #36]	; (8017aa4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8017a7e:	480a      	ldr	r0, [pc, #40]	; (8017aa8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8017a80:	f009 fd22 	bl	80214c8 <__aeabi_atexit>
 8017a84:	4b05      	ldr	r3, [pc, #20]	; (8017a9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8017a86:	63ab      	str	r3, [r5, #56]	; 0x38
 8017a88:	4b07      	ldr	r3, [pc, #28]	; (8017aa8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8017a8a:	63eb      	str	r3, [r5, #60]	; 0x3c
 8017a8c:	bd38      	pop	{r3, r4, r5, pc}
 8017a8e:	bf00      	nop
 8017a90:	2000e4dc 	.word	0x2000e4dc
 8017a94:	20000000 	.word	0x20000000
 8017a98:	08015bc9 	.word	0x08015bc9
 8017a9c:	200000b4 	.word	0x200000b4
 8017aa0:	2000e4e0 	.word	0x2000e4e0
 8017aa4:	08015bc7 	.word	0x08015bc7
 8017aa8:	200000b8 	.word	0x200000b8

08017aac <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8017aac:	b510      	push	{r4, lr}
 8017aae:	4604      	mov	r4, r0
 8017ab0:	f7ff ff14 	bl	80178dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8017ab4:	4620      	mov	r0, r4
 8017ab6:	f7ff ff85 	bl	80179c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8017aba:	4620      	mov	r0, r4
 8017abc:	f7ff ff48 	bl	8017950 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8017ac0:	4620      	mov	r0, r4
 8017ac2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017ac6:	f7ff bfb7 	b.w	8017a38 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08017acc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8017acc:	b538      	push	{r3, r4, r5, lr}
 8017ace:	4c15      	ldr	r4, [pc, #84]	; (8017b24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8017ad0:	7823      	ldrb	r3, [r4, #0]
 8017ad2:	f3bf 8f5b 	dmb	ish
 8017ad6:	07da      	lsls	r2, r3, #31
 8017ad8:	4605      	mov	r5, r0
 8017ada:	d40b      	bmi.n	8017af4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8017adc:	4620      	mov	r0, r4
 8017ade:	f009 fcfa 	bl	80214d6 <__cxa_guard_acquire>
 8017ae2:	b138      	cbz	r0, 8017af4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8017ae4:	4620      	mov	r0, r4
 8017ae6:	f009 fd02 	bl	80214ee <__cxa_guard_release>
 8017aea:	4a0f      	ldr	r2, [pc, #60]	; (8017b28 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8017aec:	490f      	ldr	r1, [pc, #60]	; (8017b2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8017aee:	4810      	ldr	r0, [pc, #64]	; (8017b30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8017af0:	f009 fcea 	bl	80214c8 <__aeabi_atexit>
 8017af4:	4c0f      	ldr	r4, [pc, #60]	; (8017b34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8017af6:	7823      	ldrb	r3, [r4, #0]
 8017af8:	f3bf 8f5b 	dmb	ish
 8017afc:	07db      	lsls	r3, r3, #31
 8017afe:	d40b      	bmi.n	8017b18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8017b00:	4620      	mov	r0, r4
 8017b02:	f009 fce8 	bl	80214d6 <__cxa_guard_acquire>
 8017b06:	b138      	cbz	r0, 8017b18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8017b08:	4620      	mov	r0, r4
 8017b0a:	f009 fcf0 	bl	80214ee <__cxa_guard_release>
 8017b0e:	4a06      	ldr	r2, [pc, #24]	; (8017b28 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8017b10:	4909      	ldr	r1, [pc, #36]	; (8017b38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8017b12:	480a      	ldr	r0, [pc, #40]	; (8017b3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8017b14:	f009 fcd8 	bl	80214c8 <__aeabi_atexit>
 8017b18:	4b05      	ldr	r3, [pc, #20]	; (8017b30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8017b1a:	662b      	str	r3, [r5, #96]	; 0x60
 8017b1c:	4b07      	ldr	r3, [pc, #28]	; (8017b3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8017b1e:	666b      	str	r3, [r5, #100]	; 0x64
 8017b20:	bd38      	pop	{r3, r4, r5, pc}
 8017b22:	bf00      	nop
 8017b24:	2000e4c4 	.word	0x2000e4c4
 8017b28:	20000000 	.word	0x20000000
 8017b2c:	08015bb5 	.word	0x08015bb5
 8017b30:	2000009c 	.word	0x2000009c
 8017b34:	2000e4c8 	.word	0x2000e4c8
 8017b38:	08015bb3 	.word	0x08015bb3
 8017b3c:	200000a0 	.word	0x200000a0

08017b40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8017b40:	b538      	push	{r3, r4, r5, lr}
 8017b42:	4c15      	ldr	r4, [pc, #84]	; (8017b98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8017b44:	7823      	ldrb	r3, [r4, #0]
 8017b46:	f3bf 8f5b 	dmb	ish
 8017b4a:	07da      	lsls	r2, r3, #31
 8017b4c:	4605      	mov	r5, r0
 8017b4e:	d40b      	bmi.n	8017b68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8017b50:	4620      	mov	r0, r4
 8017b52:	f009 fcc0 	bl	80214d6 <__cxa_guard_acquire>
 8017b56:	b138      	cbz	r0, 8017b68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8017b58:	4620      	mov	r0, r4
 8017b5a:	f009 fcc8 	bl	80214ee <__cxa_guard_release>
 8017b5e:	4a0f      	ldr	r2, [pc, #60]	; (8017b9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8017b60:	490f      	ldr	r1, [pc, #60]	; (8017ba0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8017b62:	4810      	ldr	r0, [pc, #64]	; (8017ba4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8017b64:	f009 fcb0 	bl	80214c8 <__aeabi_atexit>
 8017b68:	4c0f      	ldr	r4, [pc, #60]	; (8017ba8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8017b6a:	7823      	ldrb	r3, [r4, #0]
 8017b6c:	f3bf 8f5b 	dmb	ish
 8017b70:	07db      	lsls	r3, r3, #31
 8017b72:	d40b      	bmi.n	8017b8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8017b74:	4620      	mov	r0, r4
 8017b76:	f009 fcae 	bl	80214d6 <__cxa_guard_acquire>
 8017b7a:	b138      	cbz	r0, 8017b8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8017b7c:	4620      	mov	r0, r4
 8017b7e:	f009 fcb6 	bl	80214ee <__cxa_guard_release>
 8017b82:	4a06      	ldr	r2, [pc, #24]	; (8017b9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8017b84:	4909      	ldr	r1, [pc, #36]	; (8017bac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8017b86:	480a      	ldr	r0, [pc, #40]	; (8017bb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8017b88:	f009 fc9e 	bl	80214c8 <__aeabi_atexit>
 8017b8c:	4b05      	ldr	r3, [pc, #20]	; (8017ba4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8017b8e:	65ab      	str	r3, [r5, #88]	; 0x58
 8017b90:	4b07      	ldr	r3, [pc, #28]	; (8017bb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8017b92:	65eb      	str	r3, [r5, #92]	; 0x5c
 8017b94:	bd38      	pop	{r3, r4, r5, pc}
 8017b96:	bf00      	nop
 8017b98:	2000e49c 	.word	0x2000e49c
 8017b9c:	20000000 	.word	0x20000000
 8017ba0:	08015bb9 	.word	0x08015bb9
 8017ba4:	20000074 	.word	0x20000074
 8017ba8:	2000e4a0 	.word	0x2000e4a0
 8017bac:	08015bb7 	.word	0x08015bb7
 8017bb0:	20000078 	.word	0x20000078

08017bb4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8017bb4:	b510      	push	{r4, lr}
 8017bb6:	4604      	mov	r4, r0
 8017bb8:	f7ff ff88 	bl	8017acc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8017bbc:	4620      	mov	r0, r4
 8017bbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017bc2:	f7ff bfbd 	b.w	8017b40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08017bc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8017bc8:	b538      	push	{r3, r4, r5, lr}
 8017bca:	4c15      	ldr	r4, [pc, #84]	; (8017c20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8017bcc:	7823      	ldrb	r3, [r4, #0]
 8017bce:	f3bf 8f5b 	dmb	ish
 8017bd2:	07da      	lsls	r2, r3, #31
 8017bd4:	4605      	mov	r5, r0
 8017bd6:	d40b      	bmi.n	8017bf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8017bd8:	4620      	mov	r0, r4
 8017bda:	f009 fc7c 	bl	80214d6 <__cxa_guard_acquire>
 8017bde:	b138      	cbz	r0, 8017bf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8017be0:	4620      	mov	r0, r4
 8017be2:	f009 fc84 	bl	80214ee <__cxa_guard_release>
 8017be6:	4a0f      	ldr	r2, [pc, #60]	; (8017c24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8017be8:	490f      	ldr	r1, [pc, #60]	; (8017c28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8017bea:	4810      	ldr	r0, [pc, #64]	; (8017c2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8017bec:	f009 fc6c 	bl	80214c8 <__aeabi_atexit>
 8017bf0:	4c0f      	ldr	r4, [pc, #60]	; (8017c30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8017bf2:	7823      	ldrb	r3, [r4, #0]
 8017bf4:	f3bf 8f5b 	dmb	ish
 8017bf8:	07db      	lsls	r3, r3, #31
 8017bfa:	d40b      	bmi.n	8017c14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8017bfc:	4620      	mov	r0, r4
 8017bfe:	f009 fc6a 	bl	80214d6 <__cxa_guard_acquire>
 8017c02:	b138      	cbz	r0, 8017c14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8017c04:	4620      	mov	r0, r4
 8017c06:	f009 fc72 	bl	80214ee <__cxa_guard_release>
 8017c0a:	4a06      	ldr	r2, [pc, #24]	; (8017c24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8017c0c:	4909      	ldr	r1, [pc, #36]	; (8017c34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8017c0e:	480a      	ldr	r0, [pc, #40]	; (8017c38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8017c10:	f009 fc5a 	bl	80214c8 <__aeabi_atexit>
 8017c14:	4b05      	ldr	r3, [pc, #20]	; (8017c2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8017c16:	672b      	str	r3, [r5, #112]	; 0x70
 8017c18:	4b07      	ldr	r3, [pc, #28]	; (8017c38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8017c1a:	676b      	str	r3, [r5, #116]	; 0x74
 8017c1c:	bd38      	pop	{r3, r4, r5, pc}
 8017c1e:	bf00      	nop
 8017c20:	2000e494 	.word	0x2000e494
 8017c24:	20000000 	.word	0x20000000
 8017c28:	08015bad 	.word	0x08015bad
 8017c2c:	2000006c 	.word	0x2000006c
 8017c30:	2000e498 	.word	0x2000e498
 8017c34:	08015bab 	.word	0x08015bab
 8017c38:	20000070 	.word	0x20000070

08017c3c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8017c3c:	b538      	push	{r3, r4, r5, lr}
 8017c3e:	4c15      	ldr	r4, [pc, #84]	; (8017c94 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8017c40:	7823      	ldrb	r3, [r4, #0]
 8017c42:	f3bf 8f5b 	dmb	ish
 8017c46:	07da      	lsls	r2, r3, #31
 8017c48:	4605      	mov	r5, r0
 8017c4a:	d40b      	bmi.n	8017c64 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8017c4c:	4620      	mov	r0, r4
 8017c4e:	f009 fc42 	bl	80214d6 <__cxa_guard_acquire>
 8017c52:	b138      	cbz	r0, 8017c64 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8017c54:	4620      	mov	r0, r4
 8017c56:	f009 fc4a 	bl	80214ee <__cxa_guard_release>
 8017c5a:	4a0f      	ldr	r2, [pc, #60]	; (8017c98 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8017c5c:	490f      	ldr	r1, [pc, #60]	; (8017c9c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8017c5e:	4810      	ldr	r0, [pc, #64]	; (8017ca0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8017c60:	f009 fc32 	bl	80214c8 <__aeabi_atexit>
 8017c64:	4c0f      	ldr	r4, [pc, #60]	; (8017ca4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8017c66:	7823      	ldrb	r3, [r4, #0]
 8017c68:	f3bf 8f5b 	dmb	ish
 8017c6c:	07db      	lsls	r3, r3, #31
 8017c6e:	d40b      	bmi.n	8017c88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8017c70:	4620      	mov	r0, r4
 8017c72:	f009 fc30 	bl	80214d6 <__cxa_guard_acquire>
 8017c76:	b138      	cbz	r0, 8017c88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8017c78:	4620      	mov	r0, r4
 8017c7a:	f009 fc38 	bl	80214ee <__cxa_guard_release>
 8017c7e:	4a06      	ldr	r2, [pc, #24]	; (8017c98 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8017c80:	4909      	ldr	r1, [pc, #36]	; (8017ca8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8017c82:	480a      	ldr	r0, [pc, #40]	; (8017cac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8017c84:	f009 fc20 	bl	80214c8 <__aeabi_atexit>
 8017c88:	4b05      	ldr	r3, [pc, #20]	; (8017ca0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8017c8a:	66ab      	str	r3, [r5, #104]	; 0x68
 8017c8c:	4b07      	ldr	r3, [pc, #28]	; (8017cac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8017c8e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8017c90:	bd38      	pop	{r3, r4, r5, pc}
 8017c92:	bf00      	nop
 8017c94:	2000e48c 	.word	0x2000e48c
 8017c98:	20000000 	.word	0x20000000
 8017c9c:	08015bb1 	.word	0x08015bb1
 8017ca0:	20000064 	.word	0x20000064
 8017ca4:	2000e490 	.word	0x2000e490
 8017ca8:	08015baf 	.word	0x08015baf
 8017cac:	20000068 	.word	0x20000068

08017cb0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8017cb0:	b510      	push	{r4, lr}
 8017cb2:	4604      	mov	r4, r0
 8017cb4:	f7ff ff88 	bl	8017bc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8017cb8:	4620      	mov	r0, r4
 8017cba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017cbe:	f7ff bfbd 	b.w	8017c3c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08017cc2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8017cc2:	b510      	push	{r4, lr}
 8017cc4:	4604      	mov	r4, r0
 8017cc6:	f7ff fff3 	bl	8017cb0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8017cca:	4620      	mov	r0, r4
 8017ccc:	f7ff ff72 	bl	8017bb4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8017cd0:	4620      	mov	r0, r4
 8017cd2:	f7ff fdf9 	bl	80178c8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8017cd6:	4620      	mov	r0, r4
 8017cd8:	f7ff fcfa 	bl	80176d0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8017cdc:	4620      	mov	r0, r4
 8017cde:	f7ff fd75 	bl	80177cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8017ce2:	4620      	mov	r0, r4
 8017ce4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017ce8:	f7ff bee0 	b.w	8017aac <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08017cec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8017cec:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cf0:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8017cf4:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8017cf8:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8017cfc:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017d00:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8017d04:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8017d08:	8808      	ldrh	r0, [r1, #0]
 8017d0a:	fb0e 4708 	mla	r7, lr, r8, r4
 8017d0e:	f1be 0f00 	cmp.w	lr, #0
 8017d12:	eb02 0a07 	add.w	sl, r2, r7
 8017d16:	db37      	blt.n	8017d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8017d18:	45f3      	cmp	fp, lr
 8017d1a:	dd35      	ble.n	8017d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8017d1c:	2c00      	cmp	r4, #0
 8017d1e:	db31      	blt.n	8017d84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8017d20:	45a0      	cmp	r8, r4
 8017d22:	dd2f      	ble.n	8017d84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8017d24:	5dd2      	ldrb	r2, [r2, r7]
 8017d26:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8017d2a:	1c62      	adds	r2, r4, #1
 8017d2c:	d42f      	bmi.n	8017d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8017d2e:	4590      	cmp	r8, r2
 8017d30:	dd2d      	ble.n	8017d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8017d32:	b366      	cbz	r6, 8017d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8017d34:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017d38:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8017d3c:	f11e 0e01 	adds.w	lr, lr, #1
 8017d40:	d429      	bmi.n	8017d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8017d42:	45f3      	cmp	fp, lr
 8017d44:	dd27      	ble.n	8017d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8017d46:	f1bc 0f00 	cmp.w	ip, #0
 8017d4a:	f000 80a0 	beq.w	8017e8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 8017d4e:	2c00      	cmp	r4, #0
 8017d50:	db1f      	blt.n	8017d92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8017d52:	45a0      	cmp	r8, r4
 8017d54:	dd1d      	ble.n	8017d92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8017d56:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8017d5a:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8017d5e:	3401      	adds	r4, #1
 8017d60:	d41c      	bmi.n	8017d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8017d62:	45a0      	cmp	r8, r4
 8017d64:	dd1a      	ble.n	8017d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8017d66:	b1de      	cbz	r6, 8017da0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8017d68:	44d0      	add	r8, sl
 8017d6a:	f898 2001 	ldrb.w	r2, [r8, #1]
 8017d6e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8017d72:	2e0f      	cmp	r6, #15
 8017d74:	d915      	bls.n	8017da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8017d76:	4b49      	ldr	r3, [pc, #292]	; (8017e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8017d78:	4a49      	ldr	r2, [pc, #292]	; (8017ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8017d7a:	484a      	ldr	r0, [pc, #296]	; (8017ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8017d7c:	f240 11ef 	movw	r1, #495	; 0x1ef
 8017d80:	f00a f9c6 	bl	8022110 <__assert_func>
 8017d84:	4681      	mov	r9, r0
 8017d86:	e7d0      	b.n	8017d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8017d88:	4607      	mov	r7, r0
 8017d8a:	4681      	mov	r9, r0
 8017d8c:	e7d6      	b.n	8017d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8017d8e:	4607      	mov	r7, r0
 8017d90:	e7d4      	b.n	8017d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8017d92:	4686      	mov	lr, r0
 8017d94:	e7e3      	b.n	8017d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8017d96:	4603      	mov	r3, r0
 8017d98:	4686      	mov	lr, r0
 8017d9a:	e7ea      	b.n	8017d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8017d9c:	4603      	mov	r3, r0
 8017d9e:	e7e8      	b.n	8017d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8017da0:	4603      	mov	r3, r0
 8017da2:	f1bc 0f0f 	cmp.w	ip, #15
 8017da6:	d8e6      	bhi.n	8017d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8017da8:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8017dac:	fb16 f80c 	smulbb	r8, r6, ip
 8017db0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017db4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017db8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017dbc:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017dc0:	ea44 0909 	orr.w	r9, r4, r9
 8017dc4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017dc8:	f1cc 0410 	rsb	r4, ip, #16
 8017dcc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017dd0:	1ba4      	subs	r4, r4, r6
 8017dd2:	041a      	lsls	r2, r3, #16
 8017dd4:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8017dd8:	ea4a 0707 	orr.w	r7, sl, r7
 8017ddc:	4377      	muls	r7, r6
 8017dde:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017de2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8017de6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017dea:	fb04 7409 	mla	r4, r4, r9, r7
 8017dee:	4313      	orrs	r3, r2
 8017df0:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8017df4:	fb08 4303 	mla	r3, r8, r3, r4
 8017df8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017dfc:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8017e00:	4322      	orrs	r2, r4
 8017e02:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8017e06:	fb0c 3202 	mla	r2, ip, r2, r3
 8017e0a:	0d53      	lsrs	r3, r2, #21
 8017e0c:	0952      	lsrs	r2, r2, #5
 8017e0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017e12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017e16:	431a      	orrs	r2, r3
 8017e18:	b293      	uxth	r3, r2
 8017e1a:	b2af      	uxth	r7, r5
 8017e1c:	1202      	asrs	r2, r0, #8
 8017e1e:	43ed      	mvns	r5, r5
 8017e20:	b2ed      	uxtb	r5, r5
 8017e22:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017e26:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017e2a:	fb12 f205 	smulbb	r2, r2, r5
 8017e2e:	10c6      	asrs	r6, r0, #3
 8017e30:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017e34:	fb0c 2c07 	mla	ip, ip, r7, r2
 8017e38:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017e3c:	10da      	asrs	r2, r3, #3
 8017e3e:	fb16 f605 	smulbb	r6, r6, r5
 8017e42:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017e46:	fb02 6207 	mla	r2, r2, r7, r6
 8017e4a:	b296      	uxth	r6, r2
 8017e4c:	00c2      	lsls	r2, r0, #3
 8017e4e:	00dc      	lsls	r4, r3, #3
 8017e50:	b2d2      	uxtb	r2, r2
 8017e52:	b2e4      	uxtb	r4, r4
 8017e54:	fb12 f205 	smulbb	r2, r2, r5
 8017e58:	fb04 2207 	mla	r2, r4, r7, r2
 8017e5c:	fa1f fc8c 	uxth.w	ip, ip
 8017e60:	b292      	uxth	r2, r2
 8017e62:	f10c 0301 	add.w	r3, ip, #1
 8017e66:	1c50      	adds	r0, r2, #1
 8017e68:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017e6c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017e70:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017e74:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017e78:	4313      	orrs	r3, r2
 8017e7a:	1c72      	adds	r2, r6, #1
 8017e7c:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8017e80:	0952      	lsrs	r2, r2, #5
 8017e82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017e86:	4313      	orrs	r3, r2
 8017e88:	800b      	strh	r3, [r1, #0]
 8017e8a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e8e:	2e0f      	cmp	r6, #15
 8017e90:	f63f af71 	bhi.w	8017d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8017e94:	4603      	mov	r3, r0
 8017e96:	4686      	mov	lr, r0
 8017e98:	e786      	b.n	8017da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8017e9a:	bf00      	nop
 8017e9c:	08026c23 	.word	0x08026c23
 8017ea0:	0802728e 	.word	0x0802728e
 8017ea4:	08026d0c 	.word	0x08026d0c

08017ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017eac:	ed2d 8b08 	vpush	{d8-d11}
 8017eb0:	b099      	sub	sp, #100	; 0x64
 8017eb2:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8017eb6:	9215      	str	r2, [sp, #84]	; 0x54
 8017eb8:	9309      	str	r3, [sp, #36]	; 0x24
 8017eba:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8017ebc:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8017ec0:	930d      	str	r3, [sp, #52]	; 0x34
 8017ec2:	910c      	str	r1, [sp, #48]	; 0x30
 8017ec4:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8017ec8:	9016      	str	r0, [sp, #88]	; 0x58
 8017eca:	6850      	ldr	r0, [r2, #4]
 8017ecc:	6812      	ldr	r2, [r2, #0]
 8017ece:	fb00 1303 	mla	r3, r0, r3, r1
 8017ed2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8017ed6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017ed8:	681b      	ldr	r3, [r3, #0]
 8017eda:	930b      	str	r3, [sp, #44]	; 0x2c
 8017edc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017ede:	685e      	ldr	r6, [r3, #4]
 8017ee0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ee2:	43db      	mvns	r3, r3
 8017ee4:	b2db      	uxtb	r3, r3
 8017ee6:	eeb0 aa40 	vmov.f32	s20, s0
 8017eea:	eef0 9a60 	vmov.f32	s19, s1
 8017eee:	eeb0 9a41 	vmov.f32	s18, s2
 8017ef2:	eeb0 8a62 	vmov.f32	s16, s5
 8017ef6:	eef0 8a43 	vmov.f32	s17, s6
 8017efa:	eef0 ba44 	vmov.f32	s23, s8
 8017efe:	eeb0 ba64 	vmov.f32	s22, s9
 8017f02:	eef0 aa45 	vmov.f32	s21, s10
 8017f06:	3604      	adds	r6, #4
 8017f08:	930a      	str	r3, [sp, #40]	; 0x28
 8017f0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017f0c:	2b00      	cmp	r3, #0
 8017f0e:	dc03      	bgt.n	8017f18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017f10:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017f12:	2b00      	cmp	r3, #0
 8017f14:	f340 8226 	ble.w	8018364 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8017f18:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017f1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017f1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017f22:	1e48      	subs	r0, r1, #1
 8017f24:	1e57      	subs	r7, r2, #1
 8017f26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f28:	2b00      	cmp	r3, #0
 8017f2a:	f340 80e4 	ble.w	80180f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8017f2e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8017f32:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017f36:	d406      	bmi.n	8017f46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017f38:	4584      	cmp	ip, r0
 8017f3a:	da04      	bge.n	8017f46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017f3c:	2b00      	cmp	r3, #0
 8017f3e:	db02      	blt.n	8017f46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017f40:	42bb      	cmp	r3, r7
 8017f42:	f2c0 80d9 	blt.w	80180f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8017f46:	f11c 0c01 	adds.w	ip, ip, #1
 8017f4a:	f100 80ca 	bmi.w	80180e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8017f4e:	4561      	cmp	r1, ip
 8017f50:	f2c0 80c7 	blt.w	80180e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8017f54:	3301      	adds	r3, #1
 8017f56:	f100 80c4 	bmi.w	80180e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8017f5a:	429a      	cmp	r2, r3
 8017f5c:	f2c0 80c1 	blt.w	80180e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8017f60:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8017f64:	4647      	mov	r7, r8
 8017f66:	f1bb 0f00 	cmp.w	fp, #0
 8017f6a:	f340 80e4 	ble.w	8018136 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8017f6e:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8017f70:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017f72:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8017f76:	689b      	ldr	r3, [r3, #8]
 8017f78:	ea5f 422a 	movs.w	r2, sl, asr #16
 8017f7c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017f80:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8017f84:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017f88:	f100 8122 	bmi.w	80181d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8017f8c:	f103 39ff 	add.w	r9, r3, #4294967295
 8017f90:	454a      	cmp	r2, r9
 8017f92:	f280 811d 	bge.w	80181d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8017f96:	f1bc 0f00 	cmp.w	ip, #0
 8017f9a:	f2c0 8119 	blt.w	80181d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8017f9e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8017fa2:	45cc      	cmp	ip, r9
 8017fa4:	f280 8114 	bge.w	80181d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8017fa8:	b21b      	sxth	r3, r3
 8017faa:	fb0c 2203 	mla	r2, ip, r3, r2
 8017fae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017fb0:	eb04 0902 	add.w	r9, r4, r2
 8017fb4:	5ca2      	ldrb	r2, [r4, r2]
 8017fb6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8017fba:	2800      	cmp	r0, #0
 8017fbc:	f000 80ff 	beq.w	80181be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 8017fc0:	f899 2001 	ldrb.w	r2, [r9, #1]
 8017fc4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8017fc8:	9211      	str	r2, [sp, #68]	; 0x44
 8017fca:	b151      	cbz	r1, 8017fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8017fcc:	eb09 0203 	add.w	r2, r9, r3
 8017fd0:	f819 3003 	ldrb.w	r3, [r9, r3]
 8017fd4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8017fd8:	930f      	str	r3, [sp, #60]	; 0x3c
 8017fda:	7853      	ldrb	r3, [r2, #1]
 8017fdc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8017fe0:	9312      	str	r3, [sp, #72]	; 0x48
 8017fe2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017fe4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017fe6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017fea:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017fee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017ff2:	ea4c 0c03 	orr.w	ip, ip, r3
 8017ff6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017ff8:	041b      	lsls	r3, r3, #16
 8017ffa:	fb10 f201 	smulbb	r2, r0, r1
 8017ffe:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8018002:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018006:	10d2      	asrs	r2, r2, #3
 8018008:	4323      	orrs	r3, r4
 801800a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801800e:	4353      	muls	r3, r2
 8018010:	fb09 330c 	mla	r3, r9, ip, r3
 8018014:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8018018:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801801c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018020:	ea4c 0e0e 	orr.w	lr, ip, lr
 8018024:	f1c1 0c10 	rsb	ip, r1, #16
 8018028:	ebac 0c00 	sub.w	ip, ip, r0
 801802c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018030:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8018034:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018036:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018038:	0418      	lsls	r0, r3, #16
 801803a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801803e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018042:	4318      	orrs	r0, r3
 8018044:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8018048:	fb02 c200 	mla	r2, r2, r0, ip
 801804c:	0d53      	lsrs	r3, r2, #21
 801804e:	0952      	lsrs	r2, r2, #5
 8018050:	f8b7 c000 	ldrh.w	ip, [r7]
 8018054:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018058:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801805c:	431a      	orrs	r2, r3
 801805e:	b292      	uxth	r2, r2
 8018060:	ea4f 212c 	mov.w	r1, ip, asr #8
 8018064:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8018068:	1210      	asrs	r0, r2, #8
 801806a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801806e:	fb11 f104 	smulbb	r1, r1, r4
 8018072:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8018076:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801807a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801807e:	fb00 1003 	mla	r0, r0, r3, r1
 8018082:	fa5f fc8c 	uxtb.w	ip, ip
 8018086:	10d1      	asrs	r1, r2, #3
 8018088:	00d2      	lsls	r2, r2, #3
 801808a:	fb1c fc04 	smulbb	ip, ip, r4
 801808e:	b2d2      	uxtb	r2, r2
 8018090:	fb02 c203 	mla	r2, r2, r3, ip
 8018094:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018098:	b280      	uxth	r0, r0
 801809a:	b292      	uxth	r2, r2
 801809c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80180a0:	fb1e fe04 	smulbb	lr, lr, r4
 80180a4:	fb01 e103 	mla	r1, r1, r3, lr
 80180a8:	f102 0c01 	add.w	ip, r2, #1
 80180ac:	1c43      	adds	r3, r0, #1
 80180ae:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80180b2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80180b6:	b289      	uxth	r1, r1
 80180b8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80180bc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80180c0:	4313      	orrs	r3, r2
 80180c2:	1c4a      	adds	r2, r1, #1
 80180c4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80180c8:	0949      	lsrs	r1, r1, #5
 80180ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80180ce:	430b      	orrs	r3, r1
 80180d0:	803b      	strh	r3, [r7, #0]
 80180d2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80180d4:	449a      	add	sl, r3
 80180d6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80180d8:	3702      	adds	r7, #2
 80180da:	441d      	add	r5, r3
 80180dc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80180e0:	e741      	b.n	8017f66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80180e2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80180e4:	449a      	add	sl, r3
 80180e6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80180e8:	441d      	add	r5, r3
 80180ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180ec:	3b01      	subs	r3, #1
 80180ee:	9309      	str	r3, [sp, #36]	; 0x24
 80180f0:	f108 0802 	add.w	r8, r8, #2
 80180f4:	e717      	b.n	8017f26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80180f6:	d023      	beq.n	8018140 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80180f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180fa:	982d      	ldr	r0, [sp, #180]	; 0xb4
 80180fc:	3b01      	subs	r3, #1
 80180fe:	fb00 a003 	mla	r0, r0, r3, sl
 8018102:	1400      	asrs	r0, r0, #16
 8018104:	f53f af2c 	bmi.w	8017f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018108:	3901      	subs	r1, #1
 801810a:	4288      	cmp	r0, r1
 801810c:	f6bf af28 	bge.w	8017f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018110:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8018112:	fb01 5303 	mla	r3, r1, r3, r5
 8018116:	141b      	asrs	r3, r3, #16
 8018118:	f53f af22 	bmi.w	8017f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801811c:	3a01      	subs	r2, #1
 801811e:	4293      	cmp	r3, r2
 8018120:	f6bf af1e 	bge.w	8017f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018124:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8018128:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801812c:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8018130:	f1be 0f00 	cmp.w	lr, #0
 8018134:	dc6c      	bgt.n	8018210 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018136:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018138:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801813c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8018140:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018142:	2b00      	cmp	r3, #0
 8018144:	f340 810e 	ble.w	8018364 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8018148:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801814c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018150:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018154:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018156:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801815a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801815e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018162:	eef0 6a48 	vmov.f32	s13, s16
 8018166:	ee69 7a27 	vmul.f32	s15, s18, s15
 801816a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801816e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018172:	ee16 aa90 	vmov	sl, s13
 8018176:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801817a:	eef0 6a68 	vmov.f32	s13, s17
 801817e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018182:	ee18 2a10 	vmov	r2, s16
 8018186:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801818a:	fb92 f3f3 	sdiv	r3, r2, r3
 801818e:	ee18 2a90 	vmov	r2, s17
 8018192:	932d      	str	r3, [sp, #180]	; 0xb4
 8018194:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018196:	fb92 f3f3 	sdiv	r3, r2, r3
 801819a:	932e      	str	r3, [sp, #184]	; 0xb8
 801819c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801819e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80181a0:	3b01      	subs	r3, #1
 80181a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80181a6:	930c      	str	r3, [sp, #48]	; 0x30
 80181a8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80181aa:	bf08      	it	eq
 80181ac:	4613      	moveq	r3, r2
 80181ae:	ee16 5a90 	vmov	r5, s13
 80181b2:	9309      	str	r3, [sp, #36]	; 0x24
 80181b4:	eef0 8a67 	vmov.f32	s17, s15
 80181b8:	eeb0 8a47 	vmov.f32	s16, s14
 80181bc:	e6a5      	b.n	8017f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80181be:	2900      	cmp	r1, #0
 80181c0:	f43f af0f 	beq.w	8017fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80181c4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80181c8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80181cc:	930f      	str	r3, [sp, #60]	; 0x3c
 80181ce:	e708      	b.n	8017fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80181d0:	f112 0901 	adds.w	r9, r2, #1
 80181d4:	f53f af7d 	bmi.w	80180d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80181d8:	454b      	cmp	r3, r9
 80181da:	f6ff af7a 	blt.w	80180d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80181de:	f11c 0901 	adds.w	r9, ip, #1
 80181e2:	f53f af76 	bmi.w	80180d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80181e6:	45ce      	cmp	lr, r9
 80181e8:	f6ff af73 	blt.w	80180d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80181ec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80181ee:	9202      	str	r2, [sp, #8]
 80181f0:	b21b      	sxth	r3, r3
 80181f2:	fa0f f28e 	sxth.w	r2, lr
 80181f6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80181fa:	e9cd c003 	strd	ip, r0, [sp, #12]
 80181fe:	9201      	str	r2, [sp, #4]
 8018200:	9300      	str	r3, [sp, #0]
 8018202:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018204:	9816      	ldr	r0, [sp, #88]	; 0x58
 8018206:	4633      	mov	r3, r6
 8018208:	4639      	mov	r1, r7
 801820a:	f7ff fd6f 	bl	8017cec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801820e:	e760      	b.n	80180d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8018210:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8018212:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018214:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018218:	ea4f 422a 	mov.w	r2, sl, asr #16
 801821c:	1429      	asrs	r1, r5, #16
 801821e:	fb03 2101 	mla	r1, r3, r1, r2
 8018222:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018224:	440a      	add	r2, r1
 8018226:	5c61      	ldrb	r1, [r4, r1]
 8018228:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801822c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018230:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8018234:	f1bc 0f00 	cmp.w	ip, #0
 8018238:	f000 808c 	beq.w	8018354 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801823c:	7857      	ldrb	r7, [r2, #1]
 801823e:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8018242:	9413      	str	r4, [sp, #76]	; 0x4c
 8018244:	b140      	cbz	r0, 8018258 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8018246:	18d7      	adds	r7, r2, r3
 8018248:	5cd3      	ldrb	r3, [r2, r3]
 801824a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801824e:	9310      	str	r3, [sp, #64]	; 0x40
 8018250:	787b      	ldrb	r3, [r7, #1]
 8018252:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018256:	9314      	str	r3, [sp, #80]	; 0x50
 8018258:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801825a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801825c:	fb1c f200 	smulbb	r2, ip, r0
 8018260:	041f      	lsls	r7, r3, #16
 8018262:	10d2      	asrs	r2, r2, #3
 8018264:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018268:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801826c:	431f      	orrs	r7, r3
 801826e:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8018272:	9317      	str	r3, [sp, #92]	; 0x5c
 8018274:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018276:	041b      	lsls	r3, r3, #16
 8018278:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801827c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018280:	ea43 030b 	orr.w	r3, r3, fp
 8018284:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8018286:	4353      	muls	r3, r2
 8018288:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801828c:	fb04 3707 	mla	r7, r4, r7, r3
 8018290:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018294:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8018298:	ea43 0b01 	orr.w	fp, r3, r1
 801829c:	f1c0 0110 	rsb	r1, r0, #16
 80182a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80182a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80182a4:	eba1 0c0c 	sub.w	ip, r1, ip
 80182a8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80182ac:	fb0c 770b 	mla	r7, ip, fp, r7
 80182b0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80182b4:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80182b8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80182bc:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80182c0:	ea4c 0c0b 	orr.w	ip, ip, fp
 80182c4:	fb02 770c 	mla	r7, r2, ip, r7
 80182c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80182ca:	0d79      	lsrs	r1, r7, #21
 80182cc:	097f      	lsrs	r7, r7, #5
 80182ce:	8812      	ldrh	r2, [r2, #0]
 80182d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80182d4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80182d8:	430f      	orrs	r7, r1
 80182da:	b2bb      	uxth	r3, r7
 80182dc:	1211      	asrs	r1, r2, #8
 80182de:	1218      	asrs	r0, r3, #8
 80182e0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80182e4:	fb11 f104 	smulbb	r1, r1, r4
 80182e8:	10d7      	asrs	r7, r2, #3
 80182ea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80182ee:	00d2      	lsls	r2, r2, #3
 80182f0:	fb00 1009 	mla	r0, r0, r9, r1
 80182f4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80182f8:	10d9      	asrs	r1, r3, #3
 80182fa:	b2d2      	uxtb	r2, r2
 80182fc:	00db      	lsls	r3, r3, #3
 80182fe:	fb17 f704 	smulbb	r7, r7, r4
 8018302:	fb12 f204 	smulbb	r2, r2, r4
 8018306:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801830a:	b2db      	uxtb	r3, r3
 801830c:	b280      	uxth	r0, r0
 801830e:	fb01 7109 	mla	r1, r1, r9, r7
 8018312:	fb03 2309 	mla	r3, r3, r9, r2
 8018316:	b29b      	uxth	r3, r3
 8018318:	b289      	uxth	r1, r1
 801831a:	1c42      	adds	r2, r0, #1
 801831c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018320:	1c4f      	adds	r7, r1, #1
 8018322:	1c5a      	adds	r2, r3, #1
 8018324:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018328:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801832c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018330:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018334:	0949      	lsrs	r1, r1, #5
 8018336:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018338:	4310      	orrs	r0, r2
 801833a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801833e:	4308      	orrs	r0, r1
 8018340:	f823 0b02 	strh.w	r0, [r3], #2
 8018344:	930e      	str	r3, [sp, #56]	; 0x38
 8018346:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018348:	449a      	add	sl, r3
 801834a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801834c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018350:	441d      	add	r5, r3
 8018352:	e6ed      	b.n	8018130 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018354:	2800      	cmp	r0, #0
 8018356:	f43f af7f 	beq.w	8018258 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801835a:	5cd3      	ldrb	r3, [r2, r3]
 801835c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018360:	9310      	str	r3, [sp, #64]	; 0x40
 8018362:	e779      	b.n	8018258 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8018364:	b019      	add	sp, #100	; 0x64
 8018366:	ecbd 8b08 	vpop	{d8-d11}
 801836a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018370:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018374:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8018378:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801837c:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8018380:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8018384:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8018388:	8808      	ldrh	r0, [r1, #0]
 801838a:	fb06 570e 	mla	r7, r6, lr, r5
 801838e:	2e00      	cmp	r6, #0
 8018390:	eb02 0807 	add.w	r8, r2, r7
 8018394:	db38      	blt.n	8018408 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8018396:	45b1      	cmp	r9, r6
 8018398:	dd36      	ble.n	8018408 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801839a:	2d00      	cmp	r5, #0
 801839c:	db32      	blt.n	8018404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801839e:	45ae      	cmp	lr, r5
 80183a0:	dd30      	ble.n	8018404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80183a2:	5dd2      	ldrb	r2, [r2, r7]
 80183a4:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80183a8:	1c6a      	adds	r2, r5, #1
 80183aa:	d430      	bmi.n	801840e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80183ac:	4596      	cmp	lr, r2
 80183ae:	dd2e      	ble.n	801840e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80183b0:	b36c      	cbz	r4, 801840e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80183b2:	f898 2001 	ldrb.w	r2, [r8, #1]
 80183b6:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80183ba:	3601      	adds	r6, #1
 80183bc:	d42b      	bmi.n	8018416 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80183be:	45b1      	cmp	r9, r6
 80183c0:	dd29      	ble.n	8018416 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80183c2:	f1bc 0f00 	cmp.w	ip, #0
 80183c6:	d028      	beq.n	801841a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 80183c8:	2d00      	cmp	r5, #0
 80183ca:	db22      	blt.n	8018412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80183cc:	45ae      	cmp	lr, r5
 80183ce:	dd20      	ble.n	8018412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80183d0:	f818 600e 	ldrb.w	r6, [r8, lr]
 80183d4:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 80183d8:	3501      	adds	r5, #1
 80183da:	d407      	bmi.n	80183ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80183dc:	45ae      	cmp	lr, r5
 80183de:	dd05      	ble.n	80183ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80183e0:	b134      	cbz	r4, 80183f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80183e2:	44c6      	add	lr, r8
 80183e4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80183e8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80183ec:	2c0f      	cmp	r4, #15
 80183ee:	d802      	bhi.n	80183f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80183f0:	f1bc 0f0f 	cmp.w	ip, #15
 80183f4:	d914      	bls.n	8018420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 80183f6:	4b26      	ldr	r3, [pc, #152]	; (8018490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 80183f8:	4a26      	ldr	r2, [pc, #152]	; (8018494 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 80183fa:	4827      	ldr	r0, [pc, #156]	; (8018498 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 80183fc:	f240 11ef 	movw	r1, #495	; 0x1ef
 8018400:	f009 fe86 	bl	8022110 <__assert_func>
 8018404:	4607      	mov	r7, r0
 8018406:	e7cf      	b.n	80183a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8018408:	4602      	mov	r2, r0
 801840a:	4607      	mov	r7, r0
 801840c:	e7d5      	b.n	80183ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801840e:	4602      	mov	r2, r0
 8018410:	e7d3      	b.n	80183ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8018412:	4606      	mov	r6, r0
 8018414:	e7e0      	b.n	80183d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8018416:	4606      	mov	r6, r0
 8018418:	e7e8      	b.n	80183ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801841a:	2c0f      	cmp	r4, #15
 801841c:	d8eb      	bhi.n	80183f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801841e:	4606      	mov	r6, r0
 8018420:	043d      	lsls	r5, r7, #16
 8018422:	fb14 f30c 	smulbb	r3, r4, ip
 8018426:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801842a:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801842e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018432:	10db      	asrs	r3, r3, #3
 8018434:	432f      	orrs	r7, r5
 8018436:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801843a:	f1cc 0510 	rsb	r5, ip, #16
 801843e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018442:	1b2d      	subs	r5, r5, r4
 8018444:	ea4e 0202 	orr.w	r2, lr, r2
 8018448:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801844c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018450:	4354      	muls	r4, r2
 8018452:	fb05 4507 	mla	r5, r5, r7, r4
 8018456:	0404      	lsls	r4, r0, #16
 8018458:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801845c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018460:	4320      	orrs	r0, r4
 8018462:	fb03 5400 	mla	r4, r3, r0, r5
 8018466:	0430      	lsls	r0, r6, #16
 8018468:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801846c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8018470:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018474:	4330      	orrs	r0, r6
 8018476:	fb03 4000 	mla	r0, r3, r0, r4
 801847a:	0d43      	lsrs	r3, r0, #21
 801847c:	0940      	lsrs	r0, r0, #5
 801847e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018482:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018486:	4318      	orrs	r0, r3
 8018488:	8008      	strh	r0, [r1, #0]
 801848a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801848e:	bf00      	nop
 8018490:	08026c23 	.word	0x08026c23
 8018494:	0802728e 	.word	0x0802728e
 8018498:	08026d0c 	.word	0x08026d0c

0801849c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801849c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184a0:	ed2d 8b0a 	vpush	{d8-d12}
 80184a4:	b093      	sub	sp, #76	; 0x4c
 80184a6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80184aa:	920f      	str	r2, [sp, #60]	; 0x3c
 80184ac:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80184ae:	9108      	str	r1, [sp, #32]
 80184b0:	9306      	str	r3, [sp, #24]
 80184b2:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80184b6:	9010      	str	r0, [sp, #64]	; 0x40
 80184b8:	6850      	ldr	r0, [r2, #4]
 80184ba:	6812      	ldr	r2, [r2, #0]
 80184bc:	fb00 1303 	mla	r3, r0, r3, r1
 80184c0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80184c4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80184c6:	681b      	ldr	r3, [r3, #0]
 80184c8:	9307      	str	r3, [sp, #28]
 80184ca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80184cc:	685f      	ldr	r7, [r3, #4]
 80184ce:	eeb0 aa40 	vmov.f32	s20, s0
 80184d2:	eef0 9a60 	vmov.f32	s19, s1
 80184d6:	eeb0 9a41 	vmov.f32	s18, s2
 80184da:	eeb0 8a62 	vmov.f32	s16, s5
 80184de:	eef0 8a43 	vmov.f32	s17, s6
 80184e2:	eeb0 ca44 	vmov.f32	s24, s8
 80184e6:	eef0 ba64 	vmov.f32	s23, s9
 80184ea:	eeb0 ba45 	vmov.f32	s22, s10
 80184ee:	3704      	adds	r7, #4
 80184f0:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80184f4:	9b08      	ldr	r3, [sp, #32]
 80184f6:	2b00      	cmp	r3, #0
 80184f8:	dc03      	bgt.n	8018502 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80184fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80184fc:	2b00      	cmp	r3, #0
 80184fe:	f340 81b2 	ble.w	8018866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8018502:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018504:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018508:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801850c:	1e48      	subs	r0, r1, #1
 801850e:	f102 3cff 	add.w	ip, r2, #4294967295
 8018512:	9b06      	ldr	r3, [sp, #24]
 8018514:	2b00      	cmp	r3, #0
 8018516:	f340 80a9 	ble.w	801866c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801851a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801851e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018522:	d406      	bmi.n	8018532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018524:	4586      	cmp	lr, r0
 8018526:	da04      	bge.n	8018532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018528:	2b00      	cmp	r3, #0
 801852a:	db02      	blt.n	8018532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801852c:	4563      	cmp	r3, ip
 801852e:	f2c0 809e 	blt.w	801866e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8018532:	f11e 0e01 	adds.w	lr, lr, #1
 8018536:	f100 808f 	bmi.w	8018658 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801853a:	4571      	cmp	r1, lr
 801853c:	f2c0 808c 	blt.w	8018658 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018540:	3301      	adds	r3, #1
 8018542:	f100 8089 	bmi.w	8018658 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018546:	429a      	cmp	r2, r3
 8018548:	f2c0 8086 	blt.w	8018658 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801854c:	f8dd b018 	ldr.w	fp, [sp, #24]
 8018550:	46c8      	mov	r8, r9
 8018552:	f1bb 0f00 	cmp.w	fp, #0
 8018556:	f340 80a6 	ble.w	80186a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801855a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801855c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801855e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018562:	689b      	ldr	r3, [r3, #8]
 8018564:	1422      	asrs	r2, r4, #16
 8018566:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801856a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801856e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018572:	f100 80e3 	bmi.w	801873c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018576:	f103 3aff 	add.w	sl, r3, #4294967295
 801857a:	4552      	cmp	r2, sl
 801857c:	f280 80de 	bge.w	801873c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018580:	f1bc 0f00 	cmp.w	ip, #0
 8018584:	f2c0 80da 	blt.w	801873c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018588:	f10e 3aff 	add.w	sl, lr, #4294967295
 801858c:	45d4      	cmp	ip, sl
 801858e:	f280 80d5 	bge.w	801873c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8018592:	b21b      	sxth	r3, r3
 8018594:	fb0c 2203 	mla	r2, ip, r3, r2
 8018598:	9d07      	ldr	r5, [sp, #28]
 801859a:	eb05 0a02 	add.w	sl, r5, r2
 801859e:	5caa      	ldrb	r2, [r5, r2]
 80185a0:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80185a4:	2800      	cmp	r0, #0
 80185a6:	f000 80c0 	beq.w	801872a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80185aa:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80185ae:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80185b2:	920b      	str	r2, [sp, #44]	; 0x2c
 80185b4:	b151      	cbz	r1, 80185cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80185b6:	eb0a 0203 	add.w	r2, sl, r3
 80185ba:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80185be:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80185c2:	9309      	str	r3, [sp, #36]	; 0x24
 80185c4:	7853      	ldrb	r3, [r2, #1]
 80185c6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80185ca:	930c      	str	r3, [sp, #48]	; 0x30
 80185cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80185ce:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80185d0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80185d4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80185d8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80185dc:	ea4c 0c03 	orr.w	ip, ip, r3
 80185e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80185e2:	041b      	lsls	r3, r3, #16
 80185e4:	fb10 f201 	smulbb	r2, r0, r1
 80185e8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80185ec:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80185f0:	10d2      	asrs	r2, r2, #3
 80185f2:	432b      	orrs	r3, r5
 80185f4:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80185f8:	4353      	muls	r3, r2
 80185fa:	fb0a 330c 	mla	r3, sl, ip, r3
 80185fe:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8018602:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018606:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801860a:	ea4c 0e0e 	orr.w	lr, ip, lr
 801860e:	f1c1 0c10 	rsb	ip, r1, #16
 8018612:	ebac 0c00 	sub.w	ip, ip, r0
 8018616:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801861a:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801861e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018620:	0418      	lsls	r0, r3, #16
 8018622:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018626:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801862a:	4318      	orrs	r0, r3
 801862c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8018630:	fb02 c200 	mla	r2, r2, r0, ip
 8018634:	0d53      	lsrs	r3, r2, #21
 8018636:	0952      	lsrs	r2, r2, #5
 8018638:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801863c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018640:	431a      	orrs	r2, r3
 8018642:	f8a8 2000 	strh.w	r2, [r8]
 8018646:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018648:	441c      	add	r4, r3
 801864a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801864c:	f108 0802 	add.w	r8, r8, #2
 8018650:	441e      	add	r6, r3
 8018652:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018656:	e77c      	b.n	8018552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8018658:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801865a:	441c      	add	r4, r3
 801865c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801865e:	441e      	add	r6, r3
 8018660:	9b06      	ldr	r3, [sp, #24]
 8018662:	3b01      	subs	r3, #1
 8018664:	9306      	str	r3, [sp, #24]
 8018666:	f109 0902 	add.w	r9, r9, #2
 801866a:	e752      	b.n	8018512 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801866c:	d020      	beq.n	80186b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801866e:	9b06      	ldr	r3, [sp, #24]
 8018670:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8018672:	3b01      	subs	r3, #1
 8018674:	fb00 4003 	mla	r0, r0, r3, r4
 8018678:	1400      	asrs	r0, r0, #16
 801867a:	f53f af67 	bmi.w	801854c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801867e:	3901      	subs	r1, #1
 8018680:	4288      	cmp	r0, r1
 8018682:	f6bf af63 	bge.w	801854c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018686:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018688:	fb01 6303 	mla	r3, r1, r3, r6
 801868c:	141b      	asrs	r3, r3, #16
 801868e:	f53f af5d 	bmi.w	801854c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018692:	3a01      	subs	r2, #1
 8018694:	4293      	cmp	r3, r2
 8018696:	f6bf af59 	bge.w	801854c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801869a:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801869e:	46ca      	mov	sl, r9
 80186a0:	f1b8 0f00 	cmp.w	r8, #0
 80186a4:	dc67      	bgt.n	8018776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80186a6:	9b06      	ldr	r3, [sp, #24]
 80186a8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80186ac:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80186b0:	9b08      	ldr	r3, [sp, #32]
 80186b2:	2b00      	cmp	r3, #0
 80186b4:	f340 80d7 	ble.w	8018866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80186b8:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80186bc:	ee79 9aab 	vadd.f32	s19, s19, s23
 80186c0:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80186c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80186c6:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80186ca:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80186ce:	eef0 6a48 	vmov.f32	s13, s16
 80186d2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80186d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186da:	ee37 8a48 	vsub.f32	s16, s14, s16
 80186de:	ee16 4a90 	vmov	r4, s13
 80186e2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80186e6:	eef0 6a68 	vmov.f32	s13, s17
 80186ea:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80186ee:	ee18 2a10 	vmov	r2, s16
 80186f2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80186f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80186fa:	ee18 2a90 	vmov	r2, s17
 80186fe:	9329      	str	r3, [sp, #164]	; 0xa4
 8018700:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018702:	fb92 f3f3 	sdiv	r3, r2, r3
 8018706:	932a      	str	r3, [sp, #168]	; 0xa8
 8018708:	9b08      	ldr	r3, [sp, #32]
 801870a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801870c:	3b01      	subs	r3, #1
 801870e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018712:	9308      	str	r3, [sp, #32]
 8018714:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018716:	bf08      	it	eq
 8018718:	4613      	moveq	r3, r2
 801871a:	ee16 6a90 	vmov	r6, s13
 801871e:	9306      	str	r3, [sp, #24]
 8018720:	eef0 8a67 	vmov.f32	s17, s15
 8018724:	eeb0 8a47 	vmov.f32	s16, s14
 8018728:	e6e4      	b.n	80184f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801872a:	2900      	cmp	r1, #0
 801872c:	f43f af4e 	beq.w	80185cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8018730:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8018734:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018738:	9309      	str	r3, [sp, #36]	; 0x24
 801873a:	e747      	b.n	80185cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801873c:	f112 0a01 	adds.w	sl, r2, #1
 8018740:	d481      	bmi.n	8018646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018742:	4553      	cmp	r3, sl
 8018744:	f6ff af7f 	blt.w	8018646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018748:	f11c 0a01 	adds.w	sl, ip, #1
 801874c:	f53f af7b 	bmi.w	8018646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018750:	45d6      	cmp	lr, sl
 8018752:	f6ff af78 	blt.w	8018646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018756:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801875a:	b21b      	sxth	r3, r3
 801875c:	fa0f f28e 	sxth.w	r2, lr
 8018760:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8018764:	9201      	str	r2, [sp, #4]
 8018766:	9300      	str	r3, [sp, #0]
 8018768:	9a07      	ldr	r2, [sp, #28]
 801876a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801876c:	463b      	mov	r3, r7
 801876e:	4641      	mov	r1, r8
 8018770:	f7ff fdfe 	bl	8018370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018774:	e767      	b.n	8018646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018776:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018778:	9d07      	ldr	r5, [sp, #28]
 801877a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801877e:	1422      	asrs	r2, r4, #16
 8018780:	1431      	asrs	r1, r6, #16
 8018782:	fb03 2101 	mla	r1, r3, r1, r2
 8018786:	9a07      	ldr	r2, [sp, #28]
 8018788:	440a      	add	r2, r1
 801878a:	5c69      	ldrb	r1, [r5, r1]
 801878c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8018790:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018794:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8018798:	f1be 0f00 	cmp.w	lr, #0
 801879c:	d05c      	beq.n	8018858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801879e:	f892 c001 	ldrb.w	ip, [r2, #1]
 80187a2:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80187a6:	950d      	str	r5, [sp, #52]	; 0x34
 80187a8:	b150      	cbz	r0, 80187c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80187aa:	eb02 0c03 	add.w	ip, r2, r3
 80187ae:	5cd3      	ldrb	r3, [r2, r3]
 80187b0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80187b4:	930a      	str	r3, [sp, #40]	; 0x28
 80187b6:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80187ba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80187be:	930e      	str	r3, [sp, #56]	; 0x38
 80187c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80187c2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80187c4:	fb1e f200 	smulbb	r2, lr, r0
 80187c8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80187cc:	10d2      	asrs	r2, r2, #3
 80187ce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80187d2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80187d6:	ea4c 0c03 	orr.w	ip, ip, r3
 80187da:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80187de:	9311      	str	r3, [sp, #68]	; 0x44
 80187e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80187e2:	041b      	lsls	r3, r3, #16
 80187e4:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80187e8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80187ec:	ea43 030b 	orr.w	r3, r3, fp
 80187f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80187f2:	4353      	muls	r3, r2
 80187f4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80187f8:	fb05 3c0c 	mla	ip, r5, ip, r3
 80187fc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018800:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8018804:	ea43 0b01 	orr.w	fp, r3, r1
 8018808:	f1c0 0110 	rsb	r1, r0, #16
 801880c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801880e:	eba1 0e0e 	sub.w	lr, r1, lr
 8018812:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018816:	fb0e cc0b 	mla	ip, lr, fp, ip
 801881a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801881e:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8018822:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018826:	ea4b 0e0e 	orr.w	lr, fp, lr
 801882a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801882e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8018832:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8018836:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801883a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801883e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018842:	ea43 0c0c 	orr.w	ip, r3, ip
 8018846:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018848:	f82a cb02 	strh.w	ip, [sl], #2
 801884c:	441c      	add	r4, r3
 801884e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018850:	f108 38ff 	add.w	r8, r8, #4294967295
 8018854:	441e      	add	r6, r3
 8018856:	e723      	b.n	80186a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018858:	2800      	cmp	r0, #0
 801885a:	d0b1      	beq.n	80187c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801885c:	5cd3      	ldrb	r3, [r2, r3]
 801885e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018862:	930a      	str	r3, [sp, #40]	; 0x28
 8018864:	e7ac      	b.n	80187c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8018866:	b013      	add	sp, #76	; 0x4c
 8018868:	ecbd 8b0a 	vpop	{d8-d12}
 801886c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8018870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018874:	468b      	mov	fp, r1
 8018876:	8809      	ldrh	r1, [r1, #0]
 8018878:	b089      	sub	sp, #36	; 0x24
 801887a:	10cd      	asrs	r5, r1, #3
 801887c:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8018880:	ea4f 2921 	mov.w	r9, r1, asr #8
 8018884:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018888:	00c9      	lsls	r1, r1, #3
 801888a:	9500      	str	r5, [sp, #0]
 801888c:	b2c9      	uxtb	r1, r1
 801888e:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8018892:	9101      	str	r1, [sp, #4]
 8018894:	9900      	ldr	r1, [sp, #0]
 8018896:	9202      	str	r2, [sp, #8]
 8018898:	fb04 650e 	mla	r5, r4, lr, r6
 801889c:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80188a0:	eb02 0805 	add.w	r8, r2, r5
 80188a4:	0209      	lsls	r1, r1, #8
 80188a6:	9a01      	ldr	r2, [sp, #4]
 80188a8:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80188ac:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80188b0:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80188b4:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80188b8:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80188bc:	4311      	orrs	r1, r2
 80188be:	2c00      	cmp	r4, #0
 80188c0:	9107      	str	r1, [sp, #28]
 80188c2:	db43      	blt.n	801894c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80188c4:	45a2      	cmp	sl, r4
 80188c6:	dd41      	ble.n	801894c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80188c8:	2e00      	cmp	r6, #0
 80188ca:	db3d      	blt.n	8018948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80188cc:	45b6      	cmp	lr, r6
 80188ce:	dd3b      	ble.n	8018948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80188d0:	9a02      	ldr	r2, [sp, #8]
 80188d2:	5d55      	ldrb	r5, [r2, r5]
 80188d4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80188d8:	441d      	add	r5, r3
 80188da:	1c72      	adds	r2, r6, #1
 80188dc:	d439      	bmi.n	8018952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80188de:	4596      	cmp	lr, r2
 80188e0:	dd37      	ble.n	8018952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80188e2:	2f00      	cmp	r7, #0
 80188e4:	d035      	beq.n	8018952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80188e6:	f898 1001 	ldrb.w	r1, [r8, #1]
 80188ea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80188ee:	4419      	add	r1, r3
 80188f0:	3401      	adds	r4, #1
 80188f2:	d432      	bmi.n	801895a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80188f4:	45a2      	cmp	sl, r4
 80188f6:	dd30      	ble.n	801895a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80188f8:	b378      	cbz	r0, 801895a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80188fa:	2e00      	cmp	r6, #0
 80188fc:	db2b      	blt.n	8018956 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80188fe:	45b6      	cmp	lr, r6
 8018900:	dd29      	ble.n	8018956 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8018902:	f818 400e 	ldrb.w	r4, [r8, lr]
 8018906:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801890a:	441c      	add	r4, r3
 801890c:	3601      	adds	r6, #1
 801890e:	d427      	bmi.n	8018960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8018910:	45b6      	cmp	lr, r6
 8018912:	dd25      	ble.n	8018960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8018914:	b327      	cbz	r7, 8018960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8018916:	44c6      	add	lr, r8
 8018918:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801891c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018920:	4413      	add	r3, r2
 8018922:	782a      	ldrb	r2, [r5, #0]
 8018924:	9202      	str	r2, [sp, #8]
 8018926:	780a      	ldrb	r2, [r1, #0]
 8018928:	9203      	str	r2, [sp, #12]
 801892a:	7822      	ldrb	r2, [r4, #0]
 801892c:	9204      	str	r2, [sp, #16]
 801892e:	2f0f      	cmp	r7, #15
 8018930:	781a      	ldrb	r2, [r3, #0]
 8018932:	9205      	str	r2, [sp, #20]
 8018934:	d801      	bhi.n	801893a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8018936:	280f      	cmp	r0, #15
 8018938:	d914      	bls.n	8018964 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801893a:	4b3f      	ldr	r3, [pc, #252]	; (8018a38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 801893c:	4a3f      	ldr	r2, [pc, #252]	; (8018a3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801893e:	4840      	ldr	r0, [pc, #256]	; (8018a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8018940:	f240 210d 	movw	r1, #525	; 0x20d
 8018944:	f009 fbe4 	bl	8022110 <__assert_func>
 8018948:	ad07      	add	r5, sp, #28
 801894a:	e7c6      	b.n	80188da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 801894c:	a907      	add	r1, sp, #28
 801894e:	460d      	mov	r5, r1
 8018950:	e7ce      	b.n	80188f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8018952:	a907      	add	r1, sp, #28
 8018954:	e7cc      	b.n	80188f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8018956:	ac07      	add	r4, sp, #28
 8018958:	e7d8      	b.n	801890c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801895a:	ab07      	add	r3, sp, #28
 801895c:	461c      	mov	r4, r3
 801895e:	e7e0      	b.n	8018922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8018960:	ab07      	add	r3, sp, #28
 8018962:	e7de      	b.n	8018922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8018964:	b2ba      	uxth	r2, r7
 8018966:	b280      	uxth	r0, r0
 8018968:	fb02 fa00 	mul.w	sl, r2, r0
 801896c:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8018970:	0112      	lsls	r2, r2, #4
 8018972:	b280      	uxth	r0, r0
 8018974:	f891 8002 	ldrb.w	r8, [r1, #2]
 8018978:	7849      	ldrb	r1, [r1, #1]
 801897a:	78ae      	ldrb	r6, [r5, #2]
 801897c:	786d      	ldrb	r5, [r5, #1]
 801897e:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8018982:	eba2 020a 	sub.w	r2, r2, sl
 8018986:	b292      	uxth	r2, r2
 8018988:	ebae 0e00 	sub.w	lr, lr, r0
 801898c:	fa1f fe8e 	uxth.w	lr, lr
 8018990:	4351      	muls	r1, r2
 8018992:	fb02 f808 	mul.w	r8, r2, r8
 8018996:	fb0e 8806 	mla	r8, lr, r6, r8
 801899a:	fb0e 1505 	mla	r5, lr, r5, r1
 801899e:	78a6      	ldrb	r6, [r4, #2]
 80189a0:	7861      	ldrb	r1, [r4, #1]
 80189a2:	fa1f f78c 	uxth.w	r7, ip
 80189a6:	fb00 8806 	mla	r8, r0, r6, r8
 80189aa:	fb00 5501 	mla	r5, r0, r1, r5
 80189ae:	789e      	ldrb	r6, [r3, #2]
 80189b0:	7859      	ldrb	r1, [r3, #1]
 80189b2:	9b00      	ldr	r3, [sp, #0]
 80189b4:	ea6f 0c0c 	mvn.w	ip, ip
 80189b8:	fa5f fc8c 	uxtb.w	ip, ip
 80189bc:	fb0a 5101 	mla	r1, sl, r1, r5
 80189c0:	fb13 f50c 	smulbb	r5, r3, ip
 80189c4:	9b03      	ldr	r3, [sp, #12]
 80189c6:	435a      	muls	r2, r3
 80189c8:	9b02      	ldr	r3, [sp, #8]
 80189ca:	fb0e 2203 	mla	r2, lr, r3, r2
 80189ce:	9b04      	ldr	r3, [sp, #16]
 80189d0:	fb00 2003 	mla	r0, r0, r3, r2
 80189d4:	9b05      	ldr	r3, [sp, #20]
 80189d6:	fb0a 8606 	mla	r6, sl, r6, r8
 80189da:	fb0a 0a03 	mla	sl, sl, r3, r0
 80189de:	9b01      	ldr	r3, [sp, #4]
 80189e0:	fb19 f90c 	smulbb	r9, r9, ip
 80189e4:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80189e8:	fb13 fc0c 	smulbb	ip, r3, ip
 80189ec:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80189f0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80189f4:	fb06 9607 	mla	r6, r6, r7, r9
 80189f8:	fb01 5107 	mla	r1, r1, r7, r5
 80189fc:	fb0a c707 	mla	r7, sl, r7, ip
 8018a00:	b2b6      	uxth	r6, r6
 8018a02:	b289      	uxth	r1, r1
 8018a04:	b2bf      	uxth	r7, r7
 8018a06:	f106 0901 	add.w	r9, r6, #1
 8018a0a:	f107 0c01 	add.w	ip, r7, #1
 8018a0e:	1c4d      	adds	r5, r1, #1
 8018a10:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8018a14:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8018a18:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8018a1c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018a20:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8018a24:	0949      	lsrs	r1, r1, #5
 8018a26:	433e      	orrs	r6, r7
 8018a28:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018a2c:	430e      	orrs	r6, r1
 8018a2e:	f8ab 6000 	strh.w	r6, [fp]
 8018a32:	b009      	add	sp, #36	; 0x24
 8018a34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a38:	08026c23 	.word	0x08026c23
 8018a3c:	080271e5 	.word	0x080271e5
 8018a40:	08026d0c 	.word	0x08026d0c

08018a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a48:	ed2d 8b08 	vpush	{d8-d11}
 8018a4c:	b095      	sub	sp, #84	; 0x54
 8018a4e:	eeb0 aa40 	vmov.f32	s20, s0
 8018a52:	9212      	str	r2, [sp, #72]	; 0x48
 8018a54:	9309      	str	r3, [sp, #36]	; 0x24
 8018a56:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018a58:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8018a5c:	930f      	str	r3, [sp, #60]	; 0x3c
 8018a5e:	910e      	str	r1, [sp, #56]	; 0x38
 8018a60:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8018a64:	9013      	str	r0, [sp, #76]	; 0x4c
 8018a66:	6850      	ldr	r0, [r2, #4]
 8018a68:	6812      	ldr	r2, [r2, #0]
 8018a6a:	fb00 1303 	mla	r3, r0, r3, r1
 8018a6e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018a72:	930a      	str	r3, [sp, #40]	; 0x28
 8018a74:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018a76:	681b      	ldr	r3, [r3, #0]
 8018a78:	930d      	str	r3, [sp, #52]	; 0x34
 8018a7a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018a7c:	685c      	ldr	r4, [r3, #4]
 8018a7e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018a80:	43db      	mvns	r3, r3
 8018a82:	b2db      	uxtb	r3, r3
 8018a84:	eef0 9a60 	vmov.f32	s19, s1
 8018a88:	eeb0 9a41 	vmov.f32	s18, s2
 8018a8c:	eeb0 8a62 	vmov.f32	s16, s5
 8018a90:	eef0 8a43 	vmov.f32	s17, s6
 8018a94:	eef0 ba44 	vmov.f32	s23, s8
 8018a98:	eeb0 ba64 	vmov.f32	s22, s9
 8018a9c:	eef0 aa45 	vmov.f32	s21, s10
 8018aa0:	3404      	adds	r4, #4
 8018aa2:	930b      	str	r3, [sp, #44]	; 0x2c
 8018aa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018aa6:	2b00      	cmp	r3, #0
 8018aa8:	dc03      	bgt.n	8018ab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018aaa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018aac:	2b00      	cmp	r3, #0
 8018aae:	f340 8258 	ble.w	8018f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8018ab2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018ab4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018ab8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018abc:	1e48      	subs	r0, r1, #1
 8018abe:	1e55      	subs	r5, r2, #1
 8018ac0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ac2:	2b00      	cmp	r3, #0
 8018ac4:	f340 80fc 	ble.w	8018cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018ac8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8018aca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018acc:	1436      	asrs	r6, r6, #16
 8018ace:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018ad2:	d406      	bmi.n	8018ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018ad4:	4286      	cmp	r6, r0
 8018ad6:	da04      	bge.n	8018ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018ad8:	2b00      	cmp	r3, #0
 8018ada:	db02      	blt.n	8018ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018adc:	42ab      	cmp	r3, r5
 8018ade:	f2c0 80f0 	blt.w	8018cc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018ae2:	3601      	adds	r6, #1
 8018ae4:	f100 80dd 	bmi.w	8018ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8018ae8:	42b1      	cmp	r1, r6
 8018aea:	f2c0 80da 	blt.w	8018ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8018aee:	3301      	adds	r3, #1
 8018af0:	f100 80d7 	bmi.w	8018ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8018af4:	429a      	cmp	r2, r3
 8018af6:	f2c0 80d4 	blt.w	8018ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8018afa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018afc:	9311      	str	r3, [sp, #68]	; 0x44
 8018afe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018b00:	930c      	str	r3, [sp, #48]	; 0x30
 8018b02:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018b04:	2b00      	cmp	r3, #0
 8018b06:	f340 80fd 	ble.w	8018d04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8018b0a:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8018b0c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018b0e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018b10:	68c6      	ldr	r6, [r0, #12]
 8018b12:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018b14:	141d      	asrs	r5, r3, #16
 8018b16:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018b1a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018b1c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8018b1e:	1400      	asrs	r0, r0, #16
 8018b20:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8018b24:	6892      	ldr	r2, [r2, #8]
 8018b26:	f100 8141 	bmi.w	8018dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018b2a:	1e57      	subs	r7, r2, #1
 8018b2c:	42b8      	cmp	r0, r7
 8018b2e:	f280 813d 	bge.w	8018dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018b32:	2d00      	cmp	r5, #0
 8018b34:	f2c0 813a 	blt.w	8018dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018b38:	1e77      	subs	r7, r6, #1
 8018b3a:	42bd      	cmp	r5, r7
 8018b3c:	f280 8136 	bge.w	8018dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018b40:	b212      	sxth	r2, r2
 8018b42:	fb05 0002 	mla	r0, r5, r2, r0
 8018b46:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018b48:	f815 a000 	ldrb.w	sl, [r5, r0]
 8018b4c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8018b50:	182e      	adds	r6, r5, r0
 8018b52:	eb04 050a 	add.w	r5, r4, sl
 8018b56:	2b00      	cmp	r3, #0
 8018b58:	f000 811a 	beq.w	8018d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 8018b5c:	f896 c001 	ldrb.w	ip, [r6, #1]
 8018b60:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018b64:	44a4      	add	ip, r4
 8018b66:	2900      	cmp	r1, #0
 8018b68:	f000 811a 	beq.w	8018da0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8018b6c:	18b0      	adds	r0, r6, r2
 8018b6e:	5cb2      	ldrb	r2, [r6, r2]
 8018b70:	7840      	ldrb	r0, [r0, #1]
 8018b72:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018b76:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018b7a:	4422      	add	r2, r4
 8018b7c:	4420      	add	r0, r4
 8018b7e:	b29b      	uxth	r3, r3
 8018b80:	b289      	uxth	r1, r1
 8018b82:	fb03 f901 	mul.w	r9, r3, r1
 8018b86:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018b8a:	011b      	lsls	r3, r3, #4
 8018b8c:	b289      	uxth	r1, r1
 8018b8e:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8018b92:	f895 b002 	ldrb.w	fp, [r5, #2]
 8018b96:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018b98:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8018b9c:	f8b6 e000 	ldrh.w	lr, [r6]
 8018ba0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8018ba4:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8018ba8:	eba3 0309 	sub.w	r3, r3, r9
 8018bac:	b29b      	uxth	r3, r3
 8018bae:	eba8 0801 	sub.w	r8, r8, r1
 8018bb2:	fa1f f888 	uxth.w	r8, r8
 8018bb6:	435f      	muls	r7, r3
 8018bb8:	fb08 770b 	mla	r7, r8, fp, r7
 8018bbc:	f892 b002 	ldrb.w	fp, [r2, #2]
 8018bc0:	9310      	str	r3, [sp, #64]	; 0x40
 8018bc2:	fb01 770b 	mla	r7, r1, fp, r7
 8018bc6:	f890 b002 	ldrb.w	fp, [r0, #2]
 8018bca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018bcc:	fb09 770b 	mla	r7, r9, fp, r7
 8018bd0:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8018bd4:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8018bd8:	fb1b fb03 	smulbb	fp, fp, r3
 8018bdc:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018be0:	fb07 b706 	mla	r7, r7, r6, fp
 8018be4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018be6:	f895 b001 	ldrb.w	fp, [r5, #1]
 8018bea:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8018bee:	f89c c000 	ldrb.w	ip, [ip]
 8018bf2:	435d      	muls	r5, r3
 8018bf4:	fb08 550b 	mla	r5, r8, fp, r5
 8018bf8:	f892 b001 	ldrb.w	fp, [r2, #1]
 8018bfc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018bfe:	fb01 550b 	mla	r5, r1, fp, r5
 8018c02:	f890 b001 	ldrb.w	fp, [r0, #1]
 8018c06:	fb09 550b 	mla	r5, r9, fp, r5
 8018c0a:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8018c0e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8018c12:	fb1b fb03 	smulbb	fp, fp, r3
 8018c16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018c18:	fb03 f30c 	mul.w	r3, r3, ip
 8018c1c:	f892 c000 	ldrb.w	ip, [r2]
 8018c20:	fb08 330a 	mla	r3, r8, sl, r3
 8018c24:	fb01 330c 	mla	r3, r1, ip, r3
 8018c28:	f890 c000 	ldrb.w	ip, [r0]
 8018c2c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018c30:	fb09 3c0c 	mla	ip, r9, ip, r3
 8018c34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018c36:	fa5f fe8e 	uxtb.w	lr, lr
 8018c3a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8018c3e:	fb1e fe03 	smulbb	lr, lr, r3
 8018c42:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8018c46:	fb05 b506 	mla	r5, r5, r6, fp
 8018c4a:	fb0c ee06 	mla	lr, ip, r6, lr
 8018c4e:	b2bf      	uxth	r7, r7
 8018c50:	b2ad      	uxth	r5, r5
 8018c52:	fa1f fe8e 	uxth.w	lr, lr
 8018c56:	1c7a      	adds	r2, r7, #1
 8018c58:	f10e 0c01 	add.w	ip, lr, #1
 8018c5c:	f105 0b01 	add.w	fp, r5, #1
 8018c60:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018c64:	eb0c 2e1e 	add.w	lr, ip, lr, lsr #8
 8018c68:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8018c6c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018c70:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018c74:	096d      	lsrs	r5, r5, #5
 8018c76:	ea47 070e 	orr.w	r7, r7, lr
 8018c7a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018c7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018c80:	433d      	orrs	r5, r7
 8018c82:	801d      	strh	r5, [r3, #0]
 8018c84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018c86:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018c88:	3302      	adds	r3, #2
 8018c8a:	930c      	str	r3, [sp, #48]	; 0x30
 8018c8c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018c8e:	4413      	add	r3, r2
 8018c90:	9327      	str	r3, [sp, #156]	; 0x9c
 8018c92:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018c94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c96:	4413      	add	r3, r2
 8018c98:	9328      	str	r3, [sp, #160]	; 0xa0
 8018c9a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018c9c:	3b01      	subs	r3, #1
 8018c9e:	9311      	str	r3, [sp, #68]	; 0x44
 8018ca0:	e72f      	b.n	8018b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8018ca2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018ca4:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8018ca6:	4433      	add	r3, r6
 8018ca8:	9327      	str	r3, [sp, #156]	; 0x9c
 8018caa:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8018cac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018cae:	4433      	add	r3, r6
 8018cb0:	9328      	str	r3, [sp, #160]	; 0xa0
 8018cb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018cb4:	3b01      	subs	r3, #1
 8018cb6:	9309      	str	r3, [sp, #36]	; 0x24
 8018cb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018cba:	3302      	adds	r3, #2
 8018cbc:	930a      	str	r3, [sp, #40]	; 0x28
 8018cbe:	e6ff      	b.n	8018ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018cc0:	d027      	beq.n	8018d12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 8018cc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018cc4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8018cc6:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8018cc8:	3b01      	subs	r3, #1
 8018cca:	fb00 5003 	mla	r0, r0, r3, r5
 8018cce:	1400      	asrs	r0, r0, #16
 8018cd0:	f53f af13 	bmi.w	8018afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8018cd4:	3901      	subs	r1, #1
 8018cd6:	4288      	cmp	r0, r1
 8018cd8:	f6bf af0f 	bge.w	8018afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8018cdc:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018cde:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8018ce0:	fb01 0303 	mla	r3, r1, r3, r0
 8018ce4:	141b      	asrs	r3, r3, #16
 8018ce6:	f53f af08 	bmi.w	8018afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8018cea:	3a01      	subs	r2, #1
 8018cec:	4293      	cmp	r3, r2
 8018cee:	f6bf af04 	bge.w	8018afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8018cf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018cf4:	9311      	str	r3, [sp, #68]	; 0x44
 8018cf6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8018cfa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018cfc:	930c      	str	r3, [sp, #48]	; 0x30
 8018cfe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018d00:	2b00      	cmp	r3, #0
 8018d02:	dc70      	bgt.n	8018de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 8018d04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018d06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018d08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018d0c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018d10:	930a      	str	r3, [sp, #40]	; 0x28
 8018d12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018d14:	2b00      	cmp	r3, #0
 8018d16:	f340 8124 	ble.w	8018f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8018d1a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018d1e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018d22:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018d26:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018d28:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018d2c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018d30:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018d34:	eef0 6a48 	vmov.f32	s13, s16
 8018d38:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018d3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d40:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018d44:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8018d48:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018d4c:	eef0 6a68 	vmov.f32	s13, s17
 8018d50:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018d54:	ee18 2a10 	vmov	r2, s16
 8018d58:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018d5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d60:	ee18 2a90 	vmov	r2, s17
 8018d64:	9329      	str	r3, [sp, #164]	; 0xa4
 8018d66:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018d68:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d6c:	932a      	str	r3, [sp, #168]	; 0xa8
 8018d6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018d70:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018d72:	3b01      	subs	r3, #1
 8018d74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d78:	930e      	str	r3, [sp, #56]	; 0x38
 8018d7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018d7c:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8018d80:	bf08      	it	eq
 8018d82:	4613      	moveq	r3, r2
 8018d84:	9309      	str	r3, [sp, #36]	; 0x24
 8018d86:	eef0 8a67 	vmov.f32	s17, s15
 8018d8a:	eeb0 8a47 	vmov.f32	s16, s14
 8018d8e:	e689      	b.n	8018aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018d90:	b149      	cbz	r1, 8018da6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018d92:	5cb2      	ldrb	r2, [r6, r2]
 8018d94:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018d98:	4422      	add	r2, r4
 8018d9a:	4628      	mov	r0, r5
 8018d9c:	46ac      	mov	ip, r5
 8018d9e:	e6ee      	b.n	8018b7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8018da0:	4628      	mov	r0, r5
 8018da2:	462a      	mov	r2, r5
 8018da4:	e6eb      	b.n	8018b7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8018da6:	4628      	mov	r0, r5
 8018da8:	462a      	mov	r2, r5
 8018daa:	e7f7      	b.n	8018d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018dac:	1c47      	adds	r7, r0, #1
 8018dae:	f53f af69 	bmi.w	8018c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8018db2:	42ba      	cmp	r2, r7
 8018db4:	f6ff af66 	blt.w	8018c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8018db8:	1c6f      	adds	r7, r5, #1
 8018dba:	f53f af63 	bmi.w	8018c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8018dbe:	42be      	cmp	r6, r7
 8018dc0:	f6ff af60 	blt.w	8018c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8018dc4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8018dc6:	9002      	str	r0, [sp, #8]
 8018dc8:	b236      	sxth	r6, r6
 8018dca:	b212      	sxth	r2, r2
 8018dcc:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8018dd0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8018dd4:	9200      	str	r2, [sp, #0]
 8018dd6:	9601      	str	r6, [sp, #4]
 8018dd8:	4623      	mov	r3, r4
 8018dda:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8018dde:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018de0:	f7ff fd46 	bl	8018870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8018de4:	e74e      	b.n	8018c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8018de6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018de8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8018dea:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8018dec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018dee:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018df2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8018df4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8018df8:	142d      	asrs	r5, r5, #16
 8018dfa:	1400      	asrs	r0, r0, #16
 8018dfc:	fb02 5000 	mla	r0, r2, r0, r5
 8018e00:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018e02:	f815 9000 	ldrb.w	r9, [r5, r0]
 8018e06:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8018e0a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8018e0e:	182e      	adds	r6, r5, r0
 8018e10:	eb04 0509 	add.w	r5, r4, r9
 8018e14:	2b00      	cmp	r3, #0
 8018e16:	f000 8096 	beq.w	8018f46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 8018e1a:	7877      	ldrb	r7, [r6, #1]
 8018e1c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8018e20:	4427      	add	r7, r4
 8018e22:	2900      	cmp	r1, #0
 8018e24:	f000 8097 	beq.w	8018f56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018e28:	18b0      	adds	r0, r6, r2
 8018e2a:	5cb2      	ldrb	r2, [r6, r2]
 8018e2c:	7840      	ldrb	r0, [r0, #1]
 8018e2e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018e32:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018e36:	4422      	add	r2, r4
 8018e38:	4420      	add	r0, r4
 8018e3a:	b29b      	uxth	r3, r3
 8018e3c:	b289      	uxth	r1, r1
 8018e3e:	fb03 f801 	mul.w	r8, r3, r1
 8018e42:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018e44:	f895 b002 	ldrb.w	fp, [r5, #2]
 8018e48:	f8b6 c000 	ldrh.w	ip, [r6]
 8018e4c:	78be      	ldrb	r6, [r7, #2]
 8018e4e:	f814 9009 	ldrb.w	r9, [r4, r9]
 8018e52:	011b      	lsls	r3, r3, #4
 8018e54:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8018e58:	b289      	uxth	r1, r1
 8018e5a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8018e5e:	eba3 0308 	sub.w	r3, r3, r8
 8018e62:	b29b      	uxth	r3, r3
 8018e64:	ebae 0e01 	sub.w	lr, lr, r1
 8018e68:	fa1f fe8e 	uxth.w	lr, lr
 8018e6c:	435e      	muls	r6, r3
 8018e6e:	fb0e 660b 	mla	r6, lr, fp, r6
 8018e72:	f892 b002 	ldrb.w	fp, [r2, #2]
 8018e76:	9310      	str	r3, [sp, #64]	; 0x40
 8018e78:	fb01 660b 	mla	r6, r1, fp, r6
 8018e7c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8018e80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018e82:	fb08 660b 	mla	r6, r8, fp, r6
 8018e86:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8018e8a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8018e8e:	fb1b fb03 	smulbb	fp, fp, r3
 8018e92:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8018e96:	fb06 b60a 	mla	r6, r6, sl, fp
 8018e9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e9c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8018ea0:	787d      	ldrb	r5, [r7, #1]
 8018ea2:	783f      	ldrb	r7, [r7, #0]
 8018ea4:	435d      	muls	r5, r3
 8018ea6:	fb0e 550b 	mla	r5, lr, fp, r5
 8018eaa:	f892 b001 	ldrb.w	fp, [r2, #1]
 8018eae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018eb0:	fb01 550b 	mla	r5, r1, fp, r5
 8018eb4:	f890 b001 	ldrb.w	fp, [r0, #1]
 8018eb8:	fb08 550b 	mla	r5, r8, fp, r5
 8018ebc:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8018ec0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8018ec4:	fb1b fb03 	smulbb	fp, fp, r3
 8018ec8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018eca:	437b      	muls	r3, r7
 8018ecc:	7817      	ldrb	r7, [r2, #0]
 8018ece:	fb0e 3309 	mla	r3, lr, r9, r3
 8018ed2:	fb01 3307 	mla	r3, r1, r7, r3
 8018ed6:	7807      	ldrb	r7, [r0, #0]
 8018ed8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018edc:	fb08 3707 	mla	r7, r8, r7, r3
 8018ee0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018ee2:	fa5f fc8c 	uxtb.w	ip, ip
 8018ee6:	fb1c fc03 	smulbb	ip, ip, r3
 8018eea:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8018eee:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018ef2:	fb05 b50a 	mla	r5, r5, sl, fp
 8018ef6:	fb07 c70a 	mla	r7, r7, sl, ip
 8018efa:	b2b6      	uxth	r6, r6
 8018efc:	b2ad      	uxth	r5, r5
 8018efe:	b2bf      	uxth	r7, r7
 8018f00:	1c73      	adds	r3, r6, #1
 8018f02:	1c7a      	adds	r2, r7, #1
 8018f04:	f105 0b01 	add.w	fp, r5, #1
 8018f08:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8018f0c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8018f10:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8018f14:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018f18:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8018f1c:	096d      	lsrs	r5, r5, #5
 8018f1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018f20:	4316      	orrs	r6, r2
 8018f22:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018f26:	432e      	orrs	r6, r5
 8018f28:	f823 6b02 	strh.w	r6, [r3], #2
 8018f2c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018f2e:	930c      	str	r3, [sp, #48]	; 0x30
 8018f30:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018f32:	4413      	add	r3, r2
 8018f34:	9327      	str	r3, [sp, #156]	; 0x9c
 8018f36:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018f38:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f3a:	4413      	add	r3, r2
 8018f3c:	9328      	str	r3, [sp, #160]	; 0xa0
 8018f3e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018f40:	3b01      	subs	r3, #1
 8018f42:	9311      	str	r3, [sp, #68]	; 0x44
 8018f44:	e6db      	b.n	8018cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8018f46:	b149      	cbz	r1, 8018f5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8018f48:	5cb2      	ldrb	r2, [r6, r2]
 8018f4a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018f4e:	4422      	add	r2, r4
 8018f50:	4628      	mov	r0, r5
 8018f52:	462f      	mov	r7, r5
 8018f54:	e771      	b.n	8018e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8018f56:	4628      	mov	r0, r5
 8018f58:	462a      	mov	r2, r5
 8018f5a:	e76e      	b.n	8018e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8018f5c:	4628      	mov	r0, r5
 8018f5e:	462a      	mov	r2, r5
 8018f60:	e7f7      	b.n	8018f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 8018f62:	b015      	add	sp, #84	; 0x54
 8018f64:	ecbd 8b08 	vpop	{d8-d11}
 8018f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8018f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f70:	880e      	ldrh	r6, [r1, #0]
 8018f72:	b085      	sub	sp, #20
 8018f74:	0230      	lsls	r0, r6, #8
 8018f76:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8018f7a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8018f7e:	0170      	lsls	r0, r6, #5
 8018f80:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8018f84:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8018f88:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8018f8c:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8018f90:	00f6      	lsls	r6, r6, #3
 8018f92:	ea4b 0000 	orr.w	r0, fp, r0
 8018f96:	b2f6      	uxtb	r6, r6
 8018f98:	4691      	mov	r9, r2
 8018f9a:	fb05 7a0c 	mla	sl, r5, ip, r7
 8018f9e:	4306      	orrs	r6, r0
 8018fa0:	2d00      	cmp	r5, #0
 8018fa2:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8018fa6:	9603      	str	r6, [sp, #12]
 8018fa8:	eb09 0e0a 	add.w	lr, r9, sl
 8018fac:	db42      	blt.n	8019034 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8018fae:	45a8      	cmp	r8, r5
 8018fb0:	dd40      	ble.n	8019034 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8018fb2:	2f00      	cmp	r7, #0
 8018fb4:	db3c      	blt.n	8019030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8018fb6:	45bc      	cmp	ip, r7
 8018fb8:	dd3a      	ble.n	8019030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8018fba:	f819 600a 	ldrb.w	r6, [r9, sl]
 8018fbe:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018fc2:	441e      	add	r6, r3
 8018fc4:	1c78      	adds	r0, r7, #1
 8018fc6:	d438      	bmi.n	801903a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8018fc8:	4584      	cmp	ip, r0
 8018fca:	dd36      	ble.n	801903a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8018fcc:	b3aa      	cbz	r2, 801903a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8018fce:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8018fd2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018fd6:	4418      	add	r0, r3
 8018fd8:	3501      	adds	r5, #1
 8018fda:	d432      	bmi.n	8019042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8018fdc:	45a8      	cmp	r8, r5
 8018fde:	dd30      	ble.n	8019042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8018fe0:	b37c      	cbz	r4, 8019042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8018fe2:	2f00      	cmp	r7, #0
 8018fe4:	db2b      	blt.n	801903e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8018fe6:	45bc      	cmp	ip, r7
 8018fe8:	dd29      	ble.n	801903e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8018fea:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8018fee:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018ff2:	441d      	add	r5, r3
 8018ff4:	3701      	adds	r7, #1
 8018ff6:	d427      	bmi.n	8019048 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8018ff8:	45bc      	cmp	ip, r7
 8018ffa:	dd25      	ble.n	8019048 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8018ffc:	b322      	cbz	r2, 8019048 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8018ffe:	44f4      	add	ip, lr
 8019000:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8019004:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019008:	443b      	add	r3, r7
 801900a:	781f      	ldrb	r7, [r3, #0]
 801900c:	f896 a000 	ldrb.w	sl, [r6]
 8019010:	f890 b000 	ldrb.w	fp, [r0]
 8019014:	f895 9000 	ldrb.w	r9, [r5]
 8019018:	9700      	str	r7, [sp, #0]
 801901a:	2a0f      	cmp	r2, #15
 801901c:	d801      	bhi.n	8019022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 801901e:	2c0f      	cmp	r4, #15
 8019020:	d914      	bls.n	801904c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8019022:	4b2c      	ldr	r3, [pc, #176]	; (80190d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8019024:	4a2c      	ldr	r2, [pc, #176]	; (80190d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8019026:	482d      	ldr	r0, [pc, #180]	; (80190dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8019028:	f240 210d 	movw	r1, #525	; 0x20d
 801902c:	f009 f870 	bl	8022110 <__assert_func>
 8019030:	ae03      	add	r6, sp, #12
 8019032:	e7c7      	b.n	8018fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8019034:	a803      	add	r0, sp, #12
 8019036:	4606      	mov	r6, r0
 8019038:	e7ce      	b.n	8018fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 801903a:	a803      	add	r0, sp, #12
 801903c:	e7cc      	b.n	8018fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 801903e:	ad03      	add	r5, sp, #12
 8019040:	e7d8      	b.n	8018ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8019042:	ab03      	add	r3, sp, #12
 8019044:	461d      	mov	r5, r3
 8019046:	e7e0      	b.n	801900a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8019048:	ab03      	add	r3, sp, #12
 801904a:	e7de      	b.n	801900a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 801904c:	b292      	uxth	r2, r2
 801904e:	b2a4      	uxth	r4, r4
 8019050:	fb02 f804 	mul.w	r8, r2, r4
 8019054:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8019058:	0112      	lsls	r2, r2, #4
 801905a:	b2a4      	uxth	r4, r4
 801905c:	f890 e002 	ldrb.w	lr, [r0, #2]
 8019060:	78b7      	ldrb	r7, [r6, #2]
 8019062:	7840      	ldrb	r0, [r0, #1]
 8019064:	7876      	ldrb	r6, [r6, #1]
 8019066:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801906a:	eba2 0208 	sub.w	r2, r2, r8
 801906e:	b292      	uxth	r2, r2
 8019070:	ebac 0c04 	sub.w	ip, ip, r4
 8019074:	fa1f fc8c 	uxth.w	ip, ip
 8019078:	fb02 fe0e 	mul.w	lr, r2, lr
 801907c:	fb0c ee07 	mla	lr, ip, r7, lr
 8019080:	78af      	ldrb	r7, [r5, #2]
 8019082:	fb04 ee07 	mla	lr, r4, r7, lr
 8019086:	789f      	ldrb	r7, [r3, #2]
 8019088:	785b      	ldrb	r3, [r3, #1]
 801908a:	fb08 e707 	mla	r7, r8, r7, lr
 801908e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019092:	fb02 fe0b 	mul.w	lr, r2, fp
 8019096:	4342      	muls	r2, r0
 8019098:	7868      	ldrb	r0, [r5, #1]
 801909a:	9701      	str	r7, [sp, #4]
 801909c:	fb0c ee0a 	mla	lr, ip, sl, lr
 80190a0:	9f00      	ldr	r7, [sp, #0]
 80190a2:	fb0c 2206 	mla	r2, ip, r6, r2
 80190a6:	fb04 ee09 	mla	lr, r4, r9, lr
 80190aa:	fb04 2400 	mla	r4, r4, r0, r2
 80190ae:	fb08 ee07 	mla	lr, r8, r7, lr
 80190b2:	9f01      	ldr	r7, [sp, #4]
 80190b4:	fb08 4803 	mla	r8, r8, r3, r4
 80190b8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80190bc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80190c0:	ea47 070e 	orr.w	r7, r7, lr
 80190c4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80190c8:	ea47 0708 	orr.w	r7, r7, r8
 80190cc:	800f      	strh	r7, [r1, #0]
 80190ce:	b005      	add	sp, #20
 80190d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190d4:	08026c23 	.word	0x08026c23
 80190d8:	080271e5 	.word	0x080271e5
 80190dc:	08026d0c 	.word	0x08026d0c

080190e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80190e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190e4:	ed2d 8b08 	vpush	{d8-d11}
 80190e8:	b08f      	sub	sp, #60	; 0x3c
 80190ea:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 80190ee:	920c      	str	r2, [sp, #48]	; 0x30
 80190f0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80190f2:	910a      	str	r1, [sp, #40]	; 0x28
 80190f4:	9306      	str	r3, [sp, #24]
 80190f6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80190fa:	900d      	str	r0, [sp, #52]	; 0x34
 80190fc:	6850      	ldr	r0, [r2, #4]
 80190fe:	6812      	ldr	r2, [r2, #0]
 8019100:	fb00 1303 	mla	r3, r0, r3, r1
 8019104:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019108:	9307      	str	r3, [sp, #28]
 801910a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801910c:	681b      	ldr	r3, [r3, #0]
 801910e:	9308      	str	r3, [sp, #32]
 8019110:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019112:	685c      	ldr	r4, [r3, #4]
 8019114:	eeb0 aa40 	vmov.f32	s20, s0
 8019118:	eef0 9a60 	vmov.f32	s19, s1
 801911c:	eeb0 9a41 	vmov.f32	s18, s2
 8019120:	eeb0 8a62 	vmov.f32	s16, s5
 8019124:	eef0 8a43 	vmov.f32	s17, s6
 8019128:	eef0 ba44 	vmov.f32	s23, s8
 801912c:	eeb0 ba64 	vmov.f32	s22, s9
 8019130:	eef0 aa45 	vmov.f32	s21, s10
 8019134:	3404      	adds	r4, #4
 8019136:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019138:	2b00      	cmp	r3, #0
 801913a:	dc03      	bgt.n	8019144 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801913c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801913e:	2b00      	cmp	r3, #0
 8019140:	f340 81d6 	ble.w	80194f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8019144:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019146:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801914a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801914e:	1e48      	subs	r0, r1, #1
 8019150:	1e56      	subs	r6, r2, #1
 8019152:	9b06      	ldr	r3, [sp, #24]
 8019154:	2b00      	cmp	r3, #0
 8019156:	f340 80b7 	ble.w	80192c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801915a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801915e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019162:	d406      	bmi.n	8019172 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019164:	4287      	cmp	r7, r0
 8019166:	da04      	bge.n	8019172 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019168:	2b00      	cmp	r3, #0
 801916a:	db02      	blt.n	8019172 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801916c:	42b3      	cmp	r3, r6
 801916e:	f2c0 80ac 	blt.w	80192ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8019172:	3701      	adds	r7, #1
 8019174:	f100 809d 	bmi.w	80192b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019178:	42b9      	cmp	r1, r7
 801917a:	f2c0 809a 	blt.w	80192b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801917e:	3301      	adds	r3, #1
 8019180:	f100 8097 	bmi.w	80192b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019184:	429a      	cmp	r2, r3
 8019186:	f2c0 8094 	blt.w	80192b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801918a:	9b06      	ldr	r3, [sp, #24]
 801918c:	930b      	str	r3, [sp, #44]	; 0x2c
 801918e:	9b07      	ldr	r3, [sp, #28]
 8019190:	9309      	str	r3, [sp, #36]	; 0x24
 8019192:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019194:	2b00      	cmp	r3, #0
 8019196:	f340 80b5 	ble.w	8019304 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801919a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801919c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801919e:	68c7      	ldr	r7, [r0, #12]
 80191a0:	6892      	ldr	r2, [r2, #8]
 80191a2:	ea5f 402b 	movs.w	r0, fp, asr #16
 80191a6:	ea4f 4625 	mov.w	r6, r5, asr #16
 80191aa:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80191ae:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80191b2:	f100 80fb 	bmi.w	80193ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80191b6:	f102 3cff 	add.w	ip, r2, #4294967295
 80191ba:	4560      	cmp	r0, ip
 80191bc:	f280 80f6 	bge.w	80193ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80191c0:	2e00      	cmp	r6, #0
 80191c2:	f2c0 80f3 	blt.w	80193ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80191c6:	f107 3cff 	add.w	ip, r7, #4294967295
 80191ca:	4566      	cmp	r6, ip
 80191cc:	f280 80ee 	bge.w	80193ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80191d0:	b212      	sxth	r2, r2
 80191d2:	fb06 0002 	mla	r0, r6, r2, r0
 80191d6:	9e08      	ldr	r6, [sp, #32]
 80191d8:	1837      	adds	r7, r6, r0
 80191da:	5c30      	ldrb	r0, [r6, r0]
 80191dc:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80191e0:	eb04 0c08 	add.w	ip, r4, r8
 80191e4:	2b00      	cmp	r3, #0
 80191e6:	f000 80d3 	beq.w	8019390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80191ea:	787e      	ldrb	r6, [r7, #1]
 80191ec:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80191f0:	4426      	add	r6, r4
 80191f2:	2900      	cmp	r1, #0
 80191f4:	f000 80d4 	beq.w	80193a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 80191f8:	18b8      	adds	r0, r7, r2
 80191fa:	5cba      	ldrb	r2, [r7, r2]
 80191fc:	7840      	ldrb	r0, [r0, #1]
 80191fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019202:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019206:	4422      	add	r2, r4
 8019208:	4420      	add	r0, r4
 801920a:	b29b      	uxth	r3, r3
 801920c:	b289      	uxth	r1, r1
 801920e:	fb03 f901 	mul.w	r9, r3, r1
 8019212:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019216:	011b      	lsls	r3, r3, #4
 8019218:	b289      	uxth	r1, r1
 801921a:	78b7      	ldrb	r7, [r6, #2]
 801921c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019220:	f89c c001 	ldrb.w	ip, [ip, #1]
 8019224:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8019228:	eba3 0309 	sub.w	r3, r3, r9
 801922c:	b29b      	uxth	r3, r3
 801922e:	ebae 0e01 	sub.w	lr, lr, r1
 8019232:	fa1f fe8e 	uxth.w	lr, lr
 8019236:	435f      	muls	r7, r3
 8019238:	fb0e 770a 	mla	r7, lr, sl, r7
 801923c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019240:	fb01 770a 	mla	r7, r1, sl, r7
 8019244:	f890 a002 	ldrb.w	sl, [r0, #2]
 8019248:	fb09 7a0a 	mla	sl, r9, sl, r7
 801924c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019250:	f896 8000 	ldrb.w	r8, [r6]
 8019254:	7876      	ldrb	r6, [r6, #1]
 8019256:	fb03 f808 	mul.w	r8, r3, r8
 801925a:	fb0e 8807 	mla	r8, lr, r7, r8
 801925e:	7817      	ldrb	r7, [r2, #0]
 8019260:	fb01 8807 	mla	r8, r1, r7, r8
 8019264:	7807      	ldrb	r7, [r0, #0]
 8019266:	fb09 8707 	mla	r7, r9, r7, r8
 801926a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801926e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019272:	ea4a 0707 	orr.w	r7, sl, r7
 8019276:	4373      	muls	r3, r6
 8019278:	f892 a001 	ldrb.w	sl, [r2, #1]
 801927c:	fb0e 330c 	mla	r3, lr, ip, r3
 8019280:	fb01 310a 	mla	r1, r1, sl, r3
 8019284:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019288:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801928a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801928e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019292:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019296:	ea47 070a 	orr.w	r7, r7, sl
 801929a:	801f      	strh	r7, [r3, #0]
 801929c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801929e:	3302      	adds	r3, #2
 80192a0:	9309      	str	r3, [sp, #36]	; 0x24
 80192a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80192a4:	449b      	add	fp, r3
 80192a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80192a8:	441d      	add	r5, r3
 80192aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80192ac:	3b01      	subs	r3, #1
 80192ae:	930b      	str	r3, [sp, #44]	; 0x2c
 80192b0:	e76f      	b.n	8019192 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80192b2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80192b4:	449b      	add	fp, r3
 80192b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80192b8:	441d      	add	r5, r3
 80192ba:	9b06      	ldr	r3, [sp, #24]
 80192bc:	3b01      	subs	r3, #1
 80192be:	9306      	str	r3, [sp, #24]
 80192c0:	9b07      	ldr	r3, [sp, #28]
 80192c2:	3302      	adds	r3, #2
 80192c4:	9307      	str	r3, [sp, #28]
 80192c6:	e744      	b.n	8019152 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80192c8:	d023      	beq.n	8019312 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80192ca:	9b06      	ldr	r3, [sp, #24]
 80192cc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80192ce:	3b01      	subs	r3, #1
 80192d0:	fb00 b003 	mla	r0, r0, r3, fp
 80192d4:	1400      	asrs	r0, r0, #16
 80192d6:	f53f af58 	bmi.w	801918a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80192da:	3901      	subs	r1, #1
 80192dc:	4288      	cmp	r0, r1
 80192de:	f6bf af54 	bge.w	801918a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80192e2:	9924      	ldr	r1, [sp, #144]	; 0x90
 80192e4:	fb01 5303 	mla	r3, r1, r3, r5
 80192e8:	141b      	asrs	r3, r3, #16
 80192ea:	f53f af4e 	bmi.w	801918a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80192ee:	3a01      	subs	r2, #1
 80192f0:	4293      	cmp	r3, r2
 80192f2:	f6bf af4a 	bge.w	801918a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80192f6:	9b06      	ldr	r3, [sp, #24]
 80192f8:	9309      	str	r3, [sp, #36]	; 0x24
 80192fa:	9b07      	ldr	r3, [sp, #28]
 80192fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80192fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019300:	2b00      	cmp	r3, #0
 8019302:	dc70      	bgt.n	80193e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8019304:	9b06      	ldr	r3, [sp, #24]
 8019306:	9a07      	ldr	r2, [sp, #28]
 8019308:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801930c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019310:	9307      	str	r3, [sp, #28]
 8019312:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019314:	2b00      	cmp	r3, #0
 8019316:	f340 80eb 	ble.w	80194f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801931a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801931e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019322:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019326:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019328:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801932c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019330:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019334:	eef0 6a48 	vmov.f32	s13, s16
 8019338:	ee69 7a27 	vmul.f32	s15, s18, s15
 801933c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019340:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019344:	ee16 ba90 	vmov	fp, s13
 8019348:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801934c:	eef0 6a68 	vmov.f32	s13, s17
 8019350:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019354:	ee18 2a10 	vmov	r2, s16
 8019358:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801935c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019360:	ee18 2a90 	vmov	r2, s17
 8019364:	9323      	str	r3, [sp, #140]	; 0x8c
 8019366:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019368:	fb92 f3f3 	sdiv	r3, r2, r3
 801936c:	9324      	str	r3, [sp, #144]	; 0x90
 801936e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019370:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019372:	3b01      	subs	r3, #1
 8019374:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019378:	930a      	str	r3, [sp, #40]	; 0x28
 801937a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801937c:	bf08      	it	eq
 801937e:	4613      	moveq	r3, r2
 8019380:	ee16 5a90 	vmov	r5, s13
 8019384:	9306      	str	r3, [sp, #24]
 8019386:	eef0 8a67 	vmov.f32	s17, s15
 801938a:	eeb0 8a47 	vmov.f32	s16, s14
 801938e:	e6d2      	b.n	8019136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8019390:	b149      	cbz	r1, 80193a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8019392:	5cba      	ldrb	r2, [r7, r2]
 8019394:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019398:	4422      	add	r2, r4
 801939a:	4660      	mov	r0, ip
 801939c:	4666      	mov	r6, ip
 801939e:	e734      	b.n	801920a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80193a0:	4660      	mov	r0, ip
 80193a2:	4662      	mov	r2, ip
 80193a4:	e731      	b.n	801920a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80193a6:	4660      	mov	r0, ip
 80193a8:	4662      	mov	r2, ip
 80193aa:	e7f7      	b.n	801939c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 80193ac:	f110 0c01 	adds.w	ip, r0, #1
 80193b0:	f53f af74 	bmi.w	801929c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80193b4:	4562      	cmp	r2, ip
 80193b6:	f6ff af71 	blt.w	801929c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80193ba:	f116 0c01 	adds.w	ip, r6, #1
 80193be:	f53f af6d 	bmi.w	801929c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80193c2:	4567      	cmp	r7, ip
 80193c4:	f6ff af6a 	blt.w	801929c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80193c8:	b23f      	sxth	r7, r7
 80193ca:	b212      	sxth	r2, r2
 80193cc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80193d0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80193d4:	9200      	str	r2, [sp, #0]
 80193d6:	9701      	str	r7, [sp, #4]
 80193d8:	4623      	mov	r3, r4
 80193da:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80193de:	980d      	ldr	r0, [sp, #52]	; 0x34
 80193e0:	f7ff fdc4 	bl	8018f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80193e4:	e75a      	b.n	801929c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80193e6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80193e8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80193ec:	ea4f 462b 	mov.w	r6, fp, asr #16
 80193f0:	1428      	asrs	r0, r5, #16
 80193f2:	fb02 6000 	mla	r0, r2, r0, r6
 80193f6:	9e08      	ldr	r6, [sp, #32]
 80193f8:	f816 8000 	ldrb.w	r8, [r6, r0]
 80193fc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8019400:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019404:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019408:	1837      	adds	r7, r6, r0
 801940a:	eb04 0c08 	add.w	ip, r4, r8
 801940e:	2b00      	cmp	r3, #0
 8019410:	d060      	beq.n	80194d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8019412:	787e      	ldrb	r6, [r7, #1]
 8019414:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019418:	4426      	add	r6, r4
 801941a:	2900      	cmp	r1, #0
 801941c:	d062      	beq.n	80194e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 801941e:	18b8      	adds	r0, r7, r2
 8019420:	5cba      	ldrb	r2, [r7, r2]
 8019422:	7840      	ldrb	r0, [r0, #1]
 8019424:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019428:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801942c:	4422      	add	r2, r4
 801942e:	4420      	add	r0, r4
 8019430:	b29b      	uxth	r3, r3
 8019432:	b289      	uxth	r1, r1
 8019434:	fb03 f901 	mul.w	r9, r3, r1
 8019438:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801943c:	011b      	lsls	r3, r3, #4
 801943e:	b289      	uxth	r1, r1
 8019440:	78b7      	ldrb	r7, [r6, #2]
 8019442:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019446:	f89c c001 	ldrb.w	ip, [ip, #1]
 801944a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801944e:	eba3 0309 	sub.w	r3, r3, r9
 8019452:	b29b      	uxth	r3, r3
 8019454:	ebae 0e01 	sub.w	lr, lr, r1
 8019458:	fa1f fe8e 	uxth.w	lr, lr
 801945c:	435f      	muls	r7, r3
 801945e:	fb0e 770a 	mla	r7, lr, sl, r7
 8019462:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019466:	fb01 770a 	mla	r7, r1, sl, r7
 801946a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801946e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8019472:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019476:	f896 8000 	ldrb.w	r8, [r6]
 801947a:	7876      	ldrb	r6, [r6, #1]
 801947c:	fb03 f808 	mul.w	r8, r3, r8
 8019480:	fb0e 8807 	mla	r8, lr, r7, r8
 8019484:	7817      	ldrb	r7, [r2, #0]
 8019486:	fb01 8807 	mla	r8, r1, r7, r8
 801948a:	7807      	ldrb	r7, [r0, #0]
 801948c:	fb09 8707 	mla	r7, r9, r7, r8
 8019490:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8019494:	4373      	muls	r3, r6
 8019496:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801949a:	7856      	ldrb	r6, [r2, #1]
 801949c:	ea4a 0707 	orr.w	r7, sl, r7
 80194a0:	fb0e 330c 	mla	r3, lr, ip, r3
 80194a4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80194a8:	fb01 3306 	mla	r3, r1, r6, r3
 80194ac:	fb09 3a0a 	mla	sl, r9, sl, r3
 80194b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80194b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80194b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80194ba:	ea47 070a 	orr.w	r7, r7, sl
 80194be:	f823 7b02 	strh.w	r7, [r3], #2
 80194c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80194c4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80194c6:	449b      	add	fp, r3
 80194c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80194ca:	441d      	add	r5, r3
 80194cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194ce:	3b01      	subs	r3, #1
 80194d0:	9309      	str	r3, [sp, #36]	; 0x24
 80194d2:	e714      	b.n	80192fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 80194d4:	b149      	cbz	r1, 80194ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 80194d6:	5cba      	ldrb	r2, [r7, r2]
 80194d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80194dc:	4422      	add	r2, r4
 80194de:	4660      	mov	r0, ip
 80194e0:	4666      	mov	r6, ip
 80194e2:	e7a5      	b.n	8019430 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80194e4:	4660      	mov	r0, ip
 80194e6:	4662      	mov	r2, ip
 80194e8:	e7a2      	b.n	8019430 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80194ea:	4660      	mov	r0, ip
 80194ec:	4662      	mov	r2, ip
 80194ee:	e7f7      	b.n	80194e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 80194f0:	b00f      	add	sp, #60	; 0x3c
 80194f2:	ecbd 8b08 	vpop	{d8-d11}
 80194f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080194fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80194fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019500:	880e      	ldrh	r6, [r1, #0]
 8019502:	b085      	sub	sp, #20
 8019504:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8019508:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801950c:	4691      	mov	r9, r2
 801950e:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8019512:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8019516:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801951a:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801951e:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8019522:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8019526:	9200      	str	r2, [sp, #0]
 8019528:	00f6      	lsls	r6, r6, #3
 801952a:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 801952e:	9201      	str	r2, [sp, #4]
 8019530:	2c00      	cmp	r4, #0
 8019532:	b2f2      	uxtb	r2, r6
 8019534:	fb04 560c 	mla	r6, r4, ip, r5
 8019538:	9202      	str	r2, [sp, #8]
 801953a:	eb09 0e06 	add.w	lr, r9, r6
 801953e:	db3e      	blt.n	80195be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8019540:	45a0      	cmp	r8, r4
 8019542:	dd3c      	ble.n	80195be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8019544:	2d00      	cmp	r5, #0
 8019546:	db38      	blt.n	80195ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8019548:	45ac      	cmp	ip, r5
 801954a:	dd36      	ble.n	80195ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801954c:	f819 2006 	ldrb.w	r2, [r9, r6]
 8019550:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8019554:	1c6e      	adds	r6, r5, #1
 8019556:	d435      	bmi.n	80195c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8019558:	45b4      	cmp	ip, r6
 801955a:	dd33      	ble.n	80195c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 801955c:	b3a0      	cbz	r0, 80195c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801955e:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8019562:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8019566:	3401      	adds	r4, #1
 8019568:	d432      	bmi.n	80195d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 801956a:	45a0      	cmp	r8, r4
 801956c:	dd30      	ble.n	80195d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 801956e:	b397      	cbz	r7, 80195d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8019570:	2d00      	cmp	r5, #0
 8019572:	db2b      	blt.n	80195cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8019574:	45ac      	cmp	ip, r5
 8019576:	dd29      	ble.n	80195cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8019578:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801957c:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8019580:	3501      	adds	r5, #1
 8019582:	d42b      	bmi.n	80195dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8019584:	45ac      	cmp	ip, r5
 8019586:	dd29      	ble.n	80195dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8019588:	b350      	cbz	r0, 80195e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 801958a:	44f4      	add	ip, lr
 801958c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019590:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8019594:	280f      	cmp	r0, #15
 8019596:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801959a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801959e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80195a2:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80195a6:	d801      	bhi.n	80195ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 80195a8:	2f0f      	cmp	r7, #15
 80195aa:	d91b      	bls.n	80195e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 80195ac:	4b84      	ldr	r3, [pc, #528]	; (80197c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 80195ae:	4a85      	ldr	r2, [pc, #532]	; (80197c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 80195b0:	4885      	ldr	r0, [pc, #532]	; (80197c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 80195b2:	f240 210d 	movw	r1, #525	; 0x20d
 80195b6:	f008 fdab 	bl	8022110 <__assert_func>
 80195ba:	2200      	movs	r2, #0
 80195bc:	e7ca      	b.n	8019554 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 80195be:	2600      	movs	r6, #0
 80195c0:	4632      	mov	r2, r6
 80195c2:	e7d0      	b.n	8019566 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 80195c4:	2600      	movs	r6, #0
 80195c6:	e7ce      	b.n	8019566 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 80195c8:	4606      	mov	r6, r0
 80195ca:	e7cc      	b.n	8019566 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 80195cc:	2400      	movs	r4, #0
 80195ce:	e7d7      	b.n	8019580 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 80195d0:	2300      	movs	r3, #0
 80195d2:	461c      	mov	r4, r3
 80195d4:	e7de      	b.n	8019594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 80195d6:	463b      	mov	r3, r7
 80195d8:	463c      	mov	r4, r7
 80195da:	e7db      	b.n	8019594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 80195dc:	2300      	movs	r3, #0
 80195de:	e7d9      	b.n	8019594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 80195e0:	4603      	mov	r3, r0
 80195e2:	e7d7      	b.n	8019594 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 80195e4:	b280      	uxth	r0, r0
 80195e6:	b2bf      	uxth	r7, r7
 80195e8:	fb00 fe07 	mul.w	lr, r0, r7
 80195ec:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80195f0:	0100      	lsls	r0, r0, #4
 80195f2:	eba0 0c0e 	sub.w	ip, r0, lr
 80195f6:	b2bf      	uxth	r7, r7
 80195f8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80195fc:	fa1f fc8c 	uxth.w	ip, ip
 8019600:	1bed      	subs	r5, r5, r7
 8019602:	b2ad      	uxth	r5, r5
 8019604:	fb0c f00a 	mul.w	r0, ip, sl
 8019608:	fb05 000b 	mla	r0, r5, fp, r0
 801960c:	fb07 0009 	mla	r0, r7, r9, r0
 8019610:	fb0e 0008 	mla	r0, lr, r8, r0
 8019614:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019618:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801961c:	9003      	str	r0, [sp, #12]
 801961e:	d018      	beq.n	8019652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8019620:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019624:	fb0b f000 	mul.w	r0, fp, r0
 8019628:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801962c:	fb0b fb02 	mul.w	fp, fp, r2
 8019630:	0a02      	lsrs	r2, r0, #8
 8019632:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019636:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801963a:	4402      	add	r2, r0
 801963c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019640:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019644:	0a12      	lsrs	r2, r2, #8
 8019646:	0a00      	lsrs	r0, r0, #8
 8019648:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801964c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019650:	4302      	orrs	r2, r0
 8019652:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019656:	d019      	beq.n	801968c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8019658:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801965c:	fb0a fb0b 	mul.w	fp, sl, fp
 8019660:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019664:	fb0a fa06 	mul.w	sl, sl, r6
 8019668:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801966c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019670:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019674:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8019678:	445e      	add	r6, fp
 801967a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801967e:	0a36      	lsrs	r6, r6, #8
 8019680:	0a00      	lsrs	r0, r0, #8
 8019682:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019686:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801968a:	4306      	orrs	r6, r0
 801968c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019690:	d019      	beq.n	80196c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 8019692:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019696:	fb09 fa0a 	mul.w	sl, r9, sl
 801969a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801969e:	fb09 f904 	mul.w	r9, r9, r4
 80196a2:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80196a6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80196aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80196ae:	f509 7080 	add.w	r0, r9, #256	; 0x100
 80196b2:	4454      	add	r4, sl
 80196b4:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 80196b8:	0a24      	lsrs	r4, r4, #8
 80196ba:	0a00      	lsrs	r0, r0, #8
 80196bc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80196c0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80196c4:	4304      	orrs	r4, r0
 80196c6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80196ca:	d019      	beq.n	8019700 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 80196cc:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80196d0:	fb08 f909 	mul.w	r9, r8, r9
 80196d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80196d8:	fb08 f803 	mul.w	r8, r8, r3
 80196dc:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80196e0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80196e4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80196e8:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80196ec:	444b      	add	r3, r9
 80196ee:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80196f2:	0a1b      	lsrs	r3, r3, #8
 80196f4:	0a00      	lsrs	r0, r0, #8
 80196f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80196fa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80196fe:	4303      	orrs	r3, r0
 8019700:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019704:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019708:	fb0c f808 	mul.w	r8, ip, r8
 801970c:	fb05 8800 	mla	r8, r5, r0, r8
 8019710:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8019714:	fb07 8800 	mla	r8, r7, r0, r8
 8019718:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801971c:	fb0e 8000 	mla	r0, lr, r0, r8
 8019720:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019724:	fb0c f606 	mul.w	r6, ip, r6
 8019728:	0a00      	lsrs	r0, r0, #8
 801972a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801972e:	fb05 6202 	mla	r2, r5, r2, r6
 8019732:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8019736:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 801973a:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801973e:	fb07 2700 	mla	r7, r7, r0, r2
 8019742:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8019746:	9b03      	ldr	r3, [sp, #12]
 8019748:	9c00      	ldr	r4, [sp, #0]
 801974a:	b2ad      	uxth	r5, r5
 801974c:	436b      	muls	r3, r5
 801974e:	fb0e 7000 	mla	r0, lr, r0, r7
 8019752:	1c5a      	adds	r2, r3, #1
 8019754:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019758:	0a00      	lsrs	r0, r0, #8
 801975a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801975e:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8019762:	ea48 0000 	orr.w	r0, r8, r0
 8019766:	b2d2      	uxtb	r2, r2
 8019768:	fb14 f602 	smulbb	r6, r4, r2
 801976c:	0c03      	lsrs	r3, r0, #16
 801976e:	fb03 6305 	mla	r3, r3, r5, r6
 8019772:	b29e      	uxth	r6, r3
 8019774:	9b01      	ldr	r3, [sp, #4]
 8019776:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801977a:	fb13 f302 	smulbb	r3, r3, r2
 801977e:	fb04 3405 	mla	r4, r4, r5, r3
 8019782:	9b02      	ldr	r3, [sp, #8]
 8019784:	b2c0      	uxtb	r0, r0
 8019786:	fb13 f202 	smulbb	r2, r3, r2
 801978a:	fb00 2005 	mla	r0, r0, r5, r2
 801978e:	b280      	uxth	r0, r0
 8019790:	b2a4      	uxth	r4, r4
 8019792:	1c42      	adds	r2, r0, #1
 8019794:	1c73      	adds	r3, r6, #1
 8019796:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801979a:	1c62      	adds	r2, r4, #1
 801979c:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 80197a0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80197a4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80197a8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80197ac:	0952      	lsrs	r2, r2, #5
 80197ae:	4303      	orrs	r3, r0
 80197b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80197b4:	4313      	orrs	r3, r2
 80197b6:	800b      	strh	r3, [r1, #0]
 80197b8:	b005      	add	sp, #20
 80197ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197be:	bf00      	nop
 80197c0:	08026c23 	.word	0x08026c23
 80197c4:	080271e5 	.word	0x080271e5
 80197c8:	08026d0c 	.word	0x08026d0c

080197cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197d0:	ed2d 8b08 	vpush	{d8-d11}
 80197d4:	b09f      	sub	sp, #124	; 0x7c
 80197d6:	eeb0 aa40 	vmov.f32	s20, s0
 80197da:	921b      	str	r2, [sp, #108]	; 0x6c
 80197dc:	9309      	str	r3, [sp, #36]	; 0x24
 80197de:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80197e0:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 80197e4:	931c      	str	r3, [sp, #112]	; 0x70
 80197e6:	9119      	str	r1, [sp, #100]	; 0x64
 80197e8:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 80197ec:	901d      	str	r0, [sp, #116]	; 0x74
 80197ee:	6850      	ldr	r0, [r2, #4]
 80197f0:	6812      	ldr	r2, [r2, #0]
 80197f2:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 80197f4:	fb00 1303 	mla	r3, r0, r3, r1
 80197f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80197fc:	930c      	str	r3, [sp, #48]	; 0x30
 80197fe:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019800:	681b      	ldr	r3, [r3, #0]
 8019802:	9312      	str	r3, [sp, #72]	; 0x48
 8019804:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019806:	685e      	ldr	r6, [r3, #4]
 8019808:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801980c:	930d      	str	r3, [sp, #52]	; 0x34
 801980e:	eef0 9a60 	vmov.f32	s19, s1
 8019812:	eeb0 9a41 	vmov.f32	s18, s2
 8019816:	eeb0 8a62 	vmov.f32	s16, s5
 801981a:	eef0 8a43 	vmov.f32	s17, s6
 801981e:	eef0 ba44 	vmov.f32	s23, s8
 8019822:	eeb0 ba64 	vmov.f32	s22, s9
 8019826:	eef0 aa45 	vmov.f32	s21, s10
 801982a:	3604      	adds	r6, #4
 801982c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801982e:	2b00      	cmp	r3, #0
 8019830:	dc03      	bgt.n	801983a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019832:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019834:	2b00      	cmp	r3, #0
 8019836:	f340 838e 	ble.w	8019f56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 801983a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801983c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019840:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019844:	1e48      	subs	r0, r1, #1
 8019846:	1e57      	subs	r7, r2, #1
 8019848:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801984a:	2b00      	cmp	r3, #0
 801984c:	f340 819b 	ble.w	8019b86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 8019850:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019852:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019856:	ea4f 4325 	mov.w	r3, r5, asr #16
 801985a:	d406      	bmi.n	801986a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801985c:	4584      	cmp	ip, r0
 801985e:	da04      	bge.n	801986a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019860:	2b00      	cmp	r3, #0
 8019862:	db02      	blt.n	801986a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019864:	42bb      	cmp	r3, r7
 8019866:	f2c0 818f 	blt.w	8019b88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801986a:	f11c 0c01 	adds.w	ip, ip, #1
 801986e:	f100 817d 	bmi.w	8019b6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8019872:	4561      	cmp	r1, ip
 8019874:	f2c0 817a 	blt.w	8019b6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8019878:	3301      	adds	r3, #1
 801987a:	f100 8177 	bmi.w	8019b6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 801987e:	429a      	cmp	r2, r3
 8019880:	f2c0 8174 	blt.w	8019b6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8019884:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019886:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8019888:	931a      	str	r3, [sp, #104]	; 0x68
 801988a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801988c:	2b00      	cmp	r3, #0
 801988e:	f340 8199 	ble.w	8019bc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8019892:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019894:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019898:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801989a:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801989e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80198a0:	141b      	asrs	r3, r3, #16
 80198a2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80198a6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80198aa:	f100 81dc 	bmi.w	8019c66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80198ae:	f100 38ff 	add.w	r8, r0, #4294967295
 80198b2:	4543      	cmp	r3, r8
 80198b4:	f280 81d7 	bge.w	8019c66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80198b8:	f1bc 0f00 	cmp.w	ip, #0
 80198bc:	f2c0 81d3 	blt.w	8019c66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80198c0:	f10e 38ff 	add.w	r8, lr, #4294967295
 80198c4:	45c4      	cmp	ip, r8
 80198c6:	f280 81ce 	bge.w	8019c66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80198ca:	b200      	sxth	r0, r0
 80198cc:	fb0c 3300 	mla	r3, ip, r0, r3
 80198d0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80198d2:	eb04 0803 	add.w	r8, r4, r3
 80198d6:	5ce3      	ldrb	r3, [r4, r3]
 80198d8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80198dc:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80198e0:	2a00      	cmp	r2, #0
 80198e2:	f000 81b5 	beq.w	8019c50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80198e6:	f898 c001 	ldrb.w	ip, [r8, #1]
 80198ea:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80198ee:	940e      	str	r4, [sp, #56]	; 0x38
 80198f0:	0e24      	lsrs	r4, r4, #24
 80198f2:	9415      	str	r4, [sp, #84]	; 0x54
 80198f4:	b179      	cbz	r1, 8019916 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80198f6:	eb08 0c00 	add.w	ip, r8, r0
 80198fa:	f818 0000 	ldrb.w	r0, [r8, r0]
 80198fe:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019902:	900a      	str	r0, [sp, #40]	; 0x28
 8019904:	0e00      	lsrs	r0, r0, #24
 8019906:	9013      	str	r0, [sp, #76]	; 0x4c
 8019908:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801990c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019910:	900f      	str	r0, [sp, #60]	; 0x3c
 8019912:	0e00      	lsrs	r0, r0, #24
 8019914:	9016      	str	r0, [sp, #88]	; 0x58
 8019916:	b292      	uxth	r2, r2
 8019918:	b289      	uxth	r1, r1
 801991a:	fb02 f901 	mul.w	r9, r2, r1
 801991e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019922:	0112      	lsls	r2, r2, #4
 8019924:	eba2 0809 	sub.w	r8, r2, r9
 8019928:	b289      	uxth	r1, r1
 801992a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801992e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019930:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019932:	fa1f f888 	uxth.w	r8, r8
 8019936:	1a52      	subs	r2, r2, r1
 8019938:	b292      	uxth	r2, r2
 801993a:	fb08 f000 	mul.w	r0, r8, r0
 801993e:	fb02 000e 	mla	r0, r2, lr, r0
 8019942:	fb01 0004 	mla	r0, r1, r4, r0
 8019946:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019948:	fb09 0004 	mla	r0, r9, r4, r0
 801994c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019950:	2800      	cmp	r0, #0
 8019952:	f000 8100 	beq.w	8019b56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019956:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801995a:	d01b      	beq.n	8019994 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801995c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019960:	fb0e fa0a 	mul.w	sl, lr, sl
 8019964:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019968:	fb0e fe03 	mul.w	lr, lr, r3
 801996c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019970:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019974:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019978:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801997c:	4453      	add	r3, sl
 801997e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019982:	0a1b      	lsrs	r3, r3, #8
 8019984:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019988:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801998c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019990:	ea43 030c 	orr.w	r3, r3, ip
 8019994:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019996:	2cff      	cmp	r4, #255	; 0xff
 8019998:	d021      	beq.n	80199de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801999a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801999c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80199a0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80199a2:	fb04 fb0b 	mul.w	fp, r4, fp
 80199a6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80199a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80199ac:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80199ae:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80199b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80199b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199ba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80199be:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80199c2:	44de      	add	lr, fp
 80199c4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80199c8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80199cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80199d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80199d8:	ea4e 040a 	orr.w	r4, lr, sl
 80199dc:	940e      	str	r4, [sp, #56]	; 0x38
 80199de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80199e0:	2cff      	cmp	r4, #255	; 0xff
 80199e2:	d021      	beq.n	8019a28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80199e4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80199e6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80199ea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80199ec:	fb04 fb0b 	mul.w	fp, r4, fp
 80199f0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80199f2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80199f6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80199f8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80199fc:	fb04 fa0a 	mul.w	sl, r4, sl
 8019a00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a04:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019a08:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019a0c:	44de      	add	lr, fp
 8019a0e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019a12:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019a22:	ea4e 040a 	orr.w	r4, lr, sl
 8019a26:	940a      	str	r4, [sp, #40]	; 0x28
 8019a28:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019a2a:	2cff      	cmp	r4, #255	; 0xff
 8019a2c:	d021      	beq.n	8019a72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8019a2e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019a30:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019a34:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019a36:	fb04 fb0b 	mul.w	fp, r4, fp
 8019a3a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019a3c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019a40:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019a42:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019a46:	fb04 fa0a 	mul.w	sl, r4, sl
 8019a4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a4e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019a52:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019a56:	44de      	add	lr, fp
 8019a58:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019a5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019a6c:	ea4e 040a 	orr.w	r4, lr, sl
 8019a70:	940f      	str	r4, [sp, #60]	; 0x3c
 8019a72:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019a74:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019a78:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019a7a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019a7e:	fb08 fc0c 	mul.w	ip, r8, ip
 8019a82:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019a86:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019a8a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019a8c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019a90:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019a94:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019a96:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019a9a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019a9e:	fb08 f80e 	mul.w	r8, r8, lr
 8019aa2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019aa6:	fb02 8303 	mla	r3, r2, r3, r8
 8019aaa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019aac:	f8b7 e000 	ldrh.w	lr, [r7]
 8019ab0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019ab2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019ab6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019ab8:	fb01 330a 	mla	r3, r1, sl, r3
 8019abc:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8019ac0:	fb09 3901 	mla	r9, r9, r1, r3
 8019ac4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019ac6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019ac8:	4343      	muls	r3, r0
 8019aca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ace:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019ad2:	1c58      	adds	r0, r3, #1
 8019ad4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019ad8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019adc:	ea4c 0c09 	orr.w	ip, ip, r9
 8019ae0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019ae4:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8019ae8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019aec:	ea4f 232e 	mov.w	r3, lr, asr #8
 8019af0:	b2c0      	uxtb	r0, r0
 8019af2:	fb11 f102 	smulbb	r1, r1, r2
 8019af6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019afa:	fb03 1300 	mla	r3, r3, r0, r1
 8019afe:	b299      	uxth	r1, r3
 8019b00:	ea4f 02ee 	mov.w	r2, lr, asr #3
 8019b04:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8019b08:	fb13 f304 	smulbb	r3, r3, r4
 8019b0c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019b10:	fb02 3200 	mla	r2, r2, r0, r3
 8019b14:	fa5f fc8c 	uxtb.w	ip, ip
 8019b18:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 8019b1c:	b2db      	uxtb	r3, r3
 8019b1e:	fb1c fc04 	smulbb	ip, ip, r4
 8019b22:	fb03 cc00 	mla	ip, r3, r0, ip
 8019b26:	b292      	uxth	r2, r2
 8019b28:	fa1f fc8c 	uxth.w	ip, ip
 8019b2c:	1c4b      	adds	r3, r1, #1
 8019b2e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019b32:	f10c 0001 	add.w	r0, ip, #1
 8019b36:	1c51      	adds	r1, r2, #1
 8019b38:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8019b3c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019b40:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019b44:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019b48:	0952      	lsrs	r2, r2, #5
 8019b4a:	ea43 030c 	orr.w	r3, r3, ip
 8019b4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019b52:	4313      	orrs	r3, r2
 8019b54:	803b      	strh	r3, [r7, #0]
 8019b56:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8019b58:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8019b5a:	441a      	add	r2, r3
 8019b5c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019b5e:	9231      	str	r2, [sp, #196]	; 0xc4
 8019b60:	441d      	add	r5, r3
 8019b62:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019b64:	3b01      	subs	r3, #1
 8019b66:	3702      	adds	r7, #2
 8019b68:	931a      	str	r3, [sp, #104]	; 0x68
 8019b6a:	e68e      	b.n	801988a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8019b6c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8019b6e:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019b70:	441c      	add	r4, r3
 8019b72:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019b74:	9431      	str	r4, [sp, #196]	; 0xc4
 8019b76:	441d      	add	r5, r3
 8019b78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b7a:	3b01      	subs	r3, #1
 8019b7c:	9309      	str	r3, [sp, #36]	; 0x24
 8019b7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019b80:	3302      	adds	r3, #2
 8019b82:	930c      	str	r3, [sp, #48]	; 0x30
 8019b84:	e660      	b.n	8019848 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019b86:	d024      	beq.n	8019bd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8019b88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b8a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8019b8c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019b8e:	3b01      	subs	r3, #1
 8019b90:	fb00 4003 	mla	r0, r0, r3, r4
 8019b94:	1400      	asrs	r0, r0, #16
 8019b96:	f53f ae75 	bmi.w	8019884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019b9a:	3901      	subs	r1, #1
 8019b9c:	4288      	cmp	r0, r1
 8019b9e:	f6bf ae71 	bge.w	8019884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019ba2:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8019ba4:	fb01 5303 	mla	r3, r1, r3, r5
 8019ba8:	141b      	asrs	r3, r3, #16
 8019baa:	f53f ae6b 	bmi.w	8019884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019bae:	3a01      	subs	r2, #1
 8019bb0:	4293      	cmp	r3, r2
 8019bb2:	f6bf ae67 	bge.w	8019884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019bb6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019bba:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8019bbe:	f1bb 0f00 	cmp.w	fp, #0
 8019bc2:	dc70      	bgt.n	8019ca6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 8019bc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019bc6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019bca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019bcc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019bd0:	930c      	str	r3, [sp, #48]	; 0x30
 8019bd2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019bd4:	2b00      	cmp	r3, #0
 8019bd6:	f340 81be 	ble.w	8019f56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 8019bda:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019bde:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019be2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019be6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019be8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019bec:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019bf0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019bf4:	eef0 6a48 	vmov.f32	s13, s16
 8019bf8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019bfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c00:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019c04:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8019c08:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019c0c:	eef0 6a68 	vmov.f32	s13, s17
 8019c10:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019c14:	ee18 2a10 	vmov	r2, s16
 8019c18:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019c1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c20:	ee18 2a90 	vmov	r2, s17
 8019c24:	9333      	str	r3, [sp, #204]	; 0xcc
 8019c26:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019c28:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c2c:	9334      	str	r3, [sp, #208]	; 0xd0
 8019c2e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019c30:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8019c32:	3b01      	subs	r3, #1
 8019c34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c38:	9319      	str	r3, [sp, #100]	; 0x64
 8019c3a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019c3c:	bf08      	it	eq
 8019c3e:	4613      	moveq	r3, r2
 8019c40:	ee16 5a90 	vmov	r5, s13
 8019c44:	9309      	str	r3, [sp, #36]	; 0x24
 8019c46:	eef0 8a67 	vmov.f32	s17, s15
 8019c4a:	eeb0 8a47 	vmov.f32	s16, s14
 8019c4e:	e5ed      	b.n	801982c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019c50:	2900      	cmp	r1, #0
 8019c52:	f43f ae60 	beq.w	8019916 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8019c56:	f818 0000 	ldrb.w	r0, [r8, r0]
 8019c5a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019c5e:	900a      	str	r0, [sp, #40]	; 0x28
 8019c60:	0e00      	lsrs	r0, r0, #24
 8019c62:	9013      	str	r0, [sp, #76]	; 0x4c
 8019c64:	e657      	b.n	8019916 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8019c66:	f113 0801 	adds.w	r8, r3, #1
 8019c6a:	f53f af74 	bmi.w	8019b56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019c6e:	4540      	cmp	r0, r8
 8019c70:	f6ff af71 	blt.w	8019b56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019c74:	f11c 0801 	adds.w	r8, ip, #1
 8019c78:	f53f af6d 	bmi.w	8019b56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019c7c:	45c6      	cmp	lr, r8
 8019c7e:	f6ff af6a 	blt.w	8019b56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019c82:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8019c84:	9302      	str	r3, [sp, #8]
 8019c86:	b200      	sxth	r0, r0
 8019c88:	fa0f f38e 	sxth.w	r3, lr
 8019c8c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019c90:	e9cd c203 	strd	ip, r2, [sp, #12]
 8019c94:	9301      	str	r3, [sp, #4]
 8019c96:	9000      	str	r0, [sp, #0]
 8019c98:	4633      	mov	r3, r6
 8019c9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019c9c:	981d      	ldr	r0, [sp, #116]	; 0x74
 8019c9e:	4639      	mov	r1, r7
 8019ca0:	f7ff fc2c 	bl	80194fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8019ca4:	e757      	b.n	8019b56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019ca6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019ca8:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8019caa:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019cae:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8019cb0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019cb4:	1427      	asrs	r7, r4, #16
 8019cb6:	142b      	asrs	r3, r5, #16
 8019cb8:	fb01 7303 	mla	r3, r1, r3, r7
 8019cbc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019cbe:	18e7      	adds	r7, r4, r3
 8019cc0:	5ce3      	ldrb	r3, [r4, r3]
 8019cc2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019cc6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019cca:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019cce:	2a00      	cmp	r2, #0
 8019cd0:	f000 8137 	beq.w	8019f42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x776>
 8019cd4:	f897 e001 	ldrb.w	lr, [r7, #1]
 8019cd8:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8019cdc:	9410      	str	r4, [sp, #64]	; 0x40
 8019cde:	0e24      	lsrs	r4, r4, #24
 8019ce0:	9417      	str	r4, [sp, #92]	; 0x5c
 8019ce2:	b170      	cbz	r0, 8019d02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8019ce4:	eb07 0e01 	add.w	lr, r7, r1
 8019ce8:	5c79      	ldrb	r1, [r7, r1]
 8019cea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019cee:	910b      	str	r1, [sp, #44]	; 0x2c
 8019cf0:	0e09      	lsrs	r1, r1, #24
 8019cf2:	9114      	str	r1, [sp, #80]	; 0x50
 8019cf4:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8019cf8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019cfc:	9111      	str	r1, [sp, #68]	; 0x44
 8019cfe:	0e09      	lsrs	r1, r1, #24
 8019d00:	9118      	str	r1, [sp, #96]	; 0x60
 8019d02:	b292      	uxth	r2, r2
 8019d04:	b280      	uxth	r0, r0
 8019d06:	fb02 f800 	mul.w	r8, r2, r0
 8019d0a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019d0e:	0112      	lsls	r2, r2, #4
 8019d10:	eba2 0e08 	sub.w	lr, r2, r8
 8019d14:	b280      	uxth	r0, r0
 8019d16:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019d1a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8019d1c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019d1e:	fa1f fe8e 	uxth.w	lr, lr
 8019d22:	1a12      	subs	r2, r2, r0
 8019d24:	b292      	uxth	r2, r2
 8019d26:	fb0e f101 	mul.w	r1, lr, r1
 8019d2a:	fb02 110c 	mla	r1, r2, ip, r1
 8019d2e:	fb00 1104 	mla	r1, r0, r4, r1
 8019d32:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019d34:	fb08 1104 	mla	r1, r8, r4, r1
 8019d38:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019d3c:	2900      	cmp	r1, #0
 8019d3e:	f000 80f5 	beq.w	8019f2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 8019d42:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019d46:	d019      	beq.n	8019d7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b0>
 8019d48:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019d4c:	fb0c fa0a 	mul.w	sl, ip, sl
 8019d50:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019d54:	fb0c fc03 	mul.w	ip, ip, r3
 8019d58:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019d5c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019d60:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019d64:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019d68:	4453      	add	r3, sl
 8019d6a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019d6e:	0a1b      	lsrs	r3, r3, #8
 8019d70:	0a3f      	lsrs	r7, r7, #8
 8019d72:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019d76:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019d7a:	433b      	orrs	r3, r7
 8019d7c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019d7e:	2cff      	cmp	r4, #255	; 0xff
 8019d80:	d020      	beq.n	8019dc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f8>
 8019d82:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019d84:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019d88:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019d8a:	4367      	muls	r7, r4
 8019d8c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019d8e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019d92:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019d94:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019d98:	fb04 fa0a 	mul.w	sl, r4, sl
 8019d9c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019da0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019da4:	44bc      	add	ip, r7
 8019da6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019daa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019dae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019db2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019db6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019dba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019dbe:	ea4c 040a 	orr.w	r4, ip, sl
 8019dc2:	9410      	str	r4, [sp, #64]	; 0x40
 8019dc4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019dc6:	2cff      	cmp	r4, #255	; 0xff
 8019dc8:	d020      	beq.n	8019e0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x640>
 8019dca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019dcc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019dd0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019dd2:	4367      	muls	r7, r4
 8019dd4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019dd6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019dda:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019ddc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019de0:	fb04 fa0a 	mul.w	sl, r4, sl
 8019de4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019de8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019dec:	44bc      	add	ip, r7
 8019dee:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019df2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019df6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019dfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019dfe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019e02:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019e06:	ea4c 040a 	orr.w	r4, ip, sl
 8019e0a:	940b      	str	r4, [sp, #44]	; 0x2c
 8019e0c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019e0e:	2cff      	cmp	r4, #255	; 0xff
 8019e10:	d020      	beq.n	8019e54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8019e12:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019e14:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019e18:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019e1a:	4367      	muls	r7, r4
 8019e1c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019e1e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019e22:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019e24:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019e28:	fb04 fa0a 	mul.w	sl, r4, sl
 8019e2c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019e30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019e34:	44bc      	add	ip, r7
 8019e36:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019e3a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019e3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e42:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019e4a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019e4e:	ea4c 040a 	orr.w	r4, ip, sl
 8019e52:	9411      	str	r4, [sp, #68]	; 0x44
 8019e54:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019e56:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019e5a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019e5c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019e60:	fb0e f707 	mul.w	r7, lr, r7
 8019e64:	fb02 770c 	mla	r7, r2, ip, r7
 8019e68:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019e6c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019e6e:	fb00 770c 	mla	r7, r0, ip, r7
 8019e72:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019e76:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019e78:	fb08 770c 	mla	r7, r8, ip, r7
 8019e7c:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019e80:	fb0e fe0c 	mul.w	lr, lr, ip
 8019e84:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019e88:	fb02 e303 	mla	r3, r2, r3, lr
 8019e8c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019e8e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019e90:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019e94:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019e96:	fb00 330a 	mla	r3, r0, sl, r3
 8019e9a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019e9e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019ea2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019ea4:	f8b9 0000 	ldrh.w	r0, [r9]
 8019ea8:	434b      	muls	r3, r1
 8019eaa:	0a3f      	lsrs	r7, r7, #8
 8019eac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019eb0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019eb4:	1c59      	adds	r1, r3, #1
 8019eb6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019eba:	ea47 070c 	orr.w	r7, r7, ip
 8019ebe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8019ec2:	1202      	asrs	r2, r0, #8
 8019ec4:	0c3b      	lsrs	r3, r7, #16
 8019ec6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019eca:	b2c9      	uxtb	r1, r1
 8019ecc:	fb13 f304 	smulbb	r3, r3, r4
 8019ed0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019ed4:	fb02 3201 	mla	r2, r2, r1, r3
 8019ed8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8019edc:	10c3      	asrs	r3, r0, #3
 8019ede:	b2ff      	uxtb	r7, r7
 8019ee0:	00c0      	lsls	r0, r0, #3
 8019ee2:	b292      	uxth	r2, r2
 8019ee4:	fb1c fc04 	smulbb	ip, ip, r4
 8019ee8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019eec:	b2c0      	uxtb	r0, r0
 8019eee:	fb17 f704 	smulbb	r7, r7, r4
 8019ef2:	fb03 c301 	mla	r3, r3, r1, ip
 8019ef6:	fb00 7001 	mla	r0, r0, r1, r7
 8019efa:	f102 0c01 	add.w	ip, r2, #1
 8019efe:	b280      	uxth	r0, r0
 8019f00:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8019f04:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8019f08:	1c42      	adds	r2, r0, #1
 8019f0a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019f0e:	b29b      	uxth	r3, r3
 8019f10:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019f14:	ea4c 0200 	orr.w	r2, ip, r0
 8019f18:	f103 0c01 	add.w	ip, r3, #1
 8019f1c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019f20:	095b      	lsrs	r3, r3, #5
 8019f22:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019f26:	431a      	orrs	r2, r3
 8019f28:	f8a9 2000 	strh.w	r2, [r9]
 8019f2c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8019f2e:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8019f30:	441a      	add	r2, r3
 8019f32:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019f34:	9231      	str	r2, [sp, #196]	; 0xc4
 8019f36:	f109 0902 	add.w	r9, r9, #2
 8019f3a:	441d      	add	r5, r3
 8019f3c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019f40:	e63d      	b.n	8019bbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8019f42:	2800      	cmp	r0, #0
 8019f44:	f43f aedd 	beq.w	8019d02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8019f48:	5c79      	ldrb	r1, [r7, r1]
 8019f4a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019f4e:	910b      	str	r1, [sp, #44]	; 0x2c
 8019f50:	0e09      	lsrs	r1, r1, #24
 8019f52:	9114      	str	r1, [sp, #80]	; 0x50
 8019f54:	e6d5      	b.n	8019d02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8019f56:	b01f      	add	sp, #124	; 0x7c
 8019f58:	ecbd 8b08 	vpop	{d8-d11}
 8019f5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8019f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f64:	880e      	ldrh	r6, [r1, #0]
 8019f66:	b085      	sub	sp, #20
 8019f68:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8019f6c:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8019f70:	4691      	mov	r9, r2
 8019f72:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8019f76:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8019f7a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8019f7e:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8019f82:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8019f86:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8019f8a:	9200      	str	r2, [sp, #0]
 8019f8c:	00f6      	lsls	r6, r6, #3
 8019f8e:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8019f92:	9201      	str	r2, [sp, #4]
 8019f94:	2c00      	cmp	r4, #0
 8019f96:	b2f2      	uxtb	r2, r6
 8019f98:	fb04 560c 	mla	r6, r4, ip, r5
 8019f9c:	9202      	str	r2, [sp, #8]
 8019f9e:	eb09 0e06 	add.w	lr, r9, r6
 8019fa2:	db3e      	blt.n	801a022 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8019fa4:	45a0      	cmp	r8, r4
 8019fa6:	dd3c      	ble.n	801a022 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8019fa8:	2d00      	cmp	r5, #0
 8019faa:	db38      	blt.n	801a01e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8019fac:	45ac      	cmp	ip, r5
 8019fae:	dd36      	ble.n	801a01e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8019fb0:	f819 2006 	ldrb.w	r2, [r9, r6]
 8019fb4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8019fb8:	1c6e      	adds	r6, r5, #1
 8019fba:	d435      	bmi.n	801a028 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8019fbc:	45b4      	cmp	ip, r6
 8019fbe:	dd33      	ble.n	801a028 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8019fc0:	b3a0      	cbz	r0, 801a02c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8019fc2:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8019fc6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8019fca:	3401      	adds	r4, #1
 8019fcc:	d432      	bmi.n	801a034 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 8019fce:	45a0      	cmp	r8, r4
 8019fd0:	dd30      	ble.n	801a034 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 8019fd2:	b397      	cbz	r7, 801a03a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8019fd4:	2d00      	cmp	r5, #0
 8019fd6:	db2b      	blt.n	801a030 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8019fd8:	45ac      	cmp	ip, r5
 8019fda:	dd29      	ble.n	801a030 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8019fdc:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8019fe0:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8019fe4:	3501      	adds	r5, #1
 8019fe6:	d42b      	bmi.n	801a040 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8019fe8:	45ac      	cmp	ip, r5
 8019fea:	dd29      	ble.n	801a040 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8019fec:	b350      	cbz	r0, 801a044 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe4>
 8019fee:	44f4      	add	ip, lr
 8019ff0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019ff4:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8019ff8:	280f      	cmp	r0, #15
 8019ffa:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019ffe:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a002:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a006:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a00a:	d801      	bhi.n	801a010 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb0>
 801a00c:	2f0f      	cmp	r7, #15
 801a00e:	d91b      	bls.n	801a048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe8>
 801a010:	4b7d      	ldr	r3, [pc, #500]	; (801a208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 801a012:	4a7e      	ldr	r2, [pc, #504]	; (801a20c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 801a014:	487e      	ldr	r0, [pc, #504]	; (801a210 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 801a016:	f240 210d 	movw	r1, #525	; 0x20d
 801a01a:	f008 f879 	bl	8022110 <__assert_func>
 801a01e:	2200      	movs	r2, #0
 801a020:	e7ca      	b.n	8019fb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 801a022:	2600      	movs	r6, #0
 801a024:	4632      	mov	r2, r6
 801a026:	e7d0      	b.n	8019fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801a028:	2600      	movs	r6, #0
 801a02a:	e7ce      	b.n	8019fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801a02c:	4606      	mov	r6, r0
 801a02e:	e7cc      	b.n	8019fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801a030:	2400      	movs	r4, #0
 801a032:	e7d7      	b.n	8019fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x84>
 801a034:	2300      	movs	r3, #0
 801a036:	461c      	mov	r4, r3
 801a038:	e7de      	b.n	8019ff8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 801a03a:	463b      	mov	r3, r7
 801a03c:	463c      	mov	r4, r7
 801a03e:	e7db      	b.n	8019ff8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 801a040:	2300      	movs	r3, #0
 801a042:	e7d9      	b.n	8019ff8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 801a044:	4603      	mov	r3, r0
 801a046:	e7d7      	b.n	8019ff8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 801a048:	b280      	uxth	r0, r0
 801a04a:	b2bf      	uxth	r7, r7
 801a04c:	fb00 fe07 	mul.w	lr, r0, r7
 801a050:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a054:	0100      	lsls	r0, r0, #4
 801a056:	eba0 0c0e 	sub.w	ip, r0, lr
 801a05a:	b2bf      	uxth	r7, r7
 801a05c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a060:	fa1f fc8c 	uxth.w	ip, ip
 801a064:	1bed      	subs	r5, r5, r7
 801a066:	b2ad      	uxth	r5, r5
 801a068:	fb0c f00a 	mul.w	r0, ip, sl
 801a06c:	fb05 000b 	mla	r0, r5, fp, r0
 801a070:	fb07 0009 	mla	r0, r7, r9, r0
 801a074:	fb0e 0008 	mla	r0, lr, r8, r0
 801a078:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a07c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a080:	9003      	str	r0, [sp, #12]
 801a082:	d018      	beq.n	801a0b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x156>
 801a084:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a088:	fb0b f000 	mul.w	r0, fp, r0
 801a08c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a090:	fb0b fb02 	mul.w	fp, fp, r2
 801a094:	0a02      	lsrs	r2, r0, #8
 801a096:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a09a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a09e:	4402      	add	r2, r0
 801a0a0:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a0a4:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a0a8:	0a12      	lsrs	r2, r2, #8
 801a0aa:	0a00      	lsrs	r0, r0, #8
 801a0ac:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a0b0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a0b4:	4302      	orrs	r2, r0
 801a0b6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a0ba:	d019      	beq.n	801a0f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x190>
 801a0bc:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801a0c0:	fb0a fb0b 	mul.w	fp, sl, fp
 801a0c4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a0c8:	fb0a fa06 	mul.w	sl, sl, r6
 801a0cc:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801a0d0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a0d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a0d8:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a0dc:	445e      	add	r6, fp
 801a0de:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a0e2:	0a36      	lsrs	r6, r6, #8
 801a0e4:	0a00      	lsrs	r0, r0, #8
 801a0e6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a0ea:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a0ee:	4306      	orrs	r6, r0
 801a0f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a0f4:	d019      	beq.n	801a12a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1ca>
 801a0f6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a0fa:	fb09 fa0a 	mul.w	sl, r9, sl
 801a0fe:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a102:	fb09 f904 	mul.w	r9, r9, r4
 801a106:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a10a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a10e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a112:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801a116:	4454      	add	r4, sl
 801a118:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801a11c:	0a24      	lsrs	r4, r4, #8
 801a11e:	0a00      	lsrs	r0, r0, #8
 801a120:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a124:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a128:	4304      	orrs	r4, r0
 801a12a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a12e:	d019      	beq.n	801a164 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x204>
 801a130:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a134:	fb08 f909 	mul.w	r9, r8, r9
 801a138:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a13c:	fb08 f803 	mul.w	r8, r8, r3
 801a140:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a144:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a148:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a14c:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801a150:	444b      	add	r3, r9
 801a152:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801a156:	0a1b      	lsrs	r3, r3, #8
 801a158:	0a00      	lsrs	r0, r0, #8
 801a15a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a15e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a162:	4303      	orrs	r3, r0
 801a164:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a168:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a16c:	fb0c f808 	mul.w	r8, ip, r8
 801a170:	fb05 8800 	mla	r8, r5, r0, r8
 801a174:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801a178:	fb07 8800 	mla	r8, r7, r0, r8
 801a17c:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801a180:	fb0e 8000 	mla	r0, lr, r0, r8
 801a184:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a188:	0a00      	lsrs	r0, r0, #8
 801a18a:	fb0c f606 	mul.w	r6, ip, r6
 801a18e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a192:	fb05 6202 	mla	r2, r5, r2, r6
 801a196:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801a19a:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801a19e:	fb07 2700 	mla	r7, r7, r0, r2
 801a1a2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801a1a6:	9b03      	ldr	r3, [sp, #12]
 801a1a8:	9c02      	ldr	r4, [sp, #8]
 801a1aa:	9d01      	ldr	r5, [sp, #4]
 801a1ac:	fb0e 7000 	mla	r0, lr, r0, r7
 801a1b0:	43da      	mvns	r2, r3
 801a1b2:	9b00      	ldr	r3, [sp, #0]
 801a1b4:	b2d2      	uxtb	r2, r2
 801a1b6:	0a00      	lsrs	r0, r0, #8
 801a1b8:	4353      	muls	r3, r2
 801a1ba:	4354      	muls	r4, r2
 801a1bc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a1c0:	ea48 0000 	orr.w	r0, r8, r0
 801a1c4:	4355      	muls	r5, r2
 801a1c6:	4622      	mov	r2, r4
 801a1c8:	1c5c      	adds	r4, r3, #1
 801a1ca:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 801a1ce:	0c03      	lsrs	r3, r0, #16
 801a1d0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801a1d4:	4b0f      	ldr	r3, [pc, #60]	; (801a214 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b4>)
 801a1d6:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 801a1da:	1c54      	adds	r4, r2, #1
 801a1dc:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801a1e0:	b2c2      	uxtb	r2, r0
 801a1e2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a1e6:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801a1ea:	1c6a      	adds	r2, r5, #1
 801a1ec:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801a1f0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a1f4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801a1f8:	00c0      	lsls	r0, r0, #3
 801a1fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a1fe:	4318      	orrs	r0, r3
 801a200:	8008      	strh	r0, [r1, #0]
 801a202:	b005      	add	sp, #20
 801a204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a208:	08026c23 	.word	0x08026c23
 801a20c:	080271e5 	.word	0x080271e5
 801a210:	08026d0c 	.word	0x08026d0c
 801a214:	fffff800 	.word	0xfffff800

0801a218 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a21c:	ed2d 8b08 	vpush	{d8-d11}
 801a220:	b09b      	sub	sp, #108	; 0x6c
 801a222:	eeb0 aa40 	vmov.f32	s20, s0
 801a226:	9218      	str	r2, [sp, #96]	; 0x60
 801a228:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a22a:	9116      	str	r1, [sp, #88]	; 0x58
 801a22c:	9307      	str	r3, [sp, #28]
 801a22e:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801a232:	9019      	str	r0, [sp, #100]	; 0x64
 801a234:	6850      	ldr	r0, [r2, #4]
 801a236:	6812      	ldr	r2, [r2, #0]
 801a238:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 801a23a:	fb00 1303 	mla	r3, r0, r3, r1
 801a23e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a242:	930a      	str	r3, [sp, #40]	; 0x28
 801a244:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a246:	681b      	ldr	r3, [r3, #0]
 801a248:	930f      	str	r3, [sp, #60]	; 0x3c
 801a24a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a24c:	685e      	ldr	r6, [r3, #4]
 801a24e:	eef0 9a60 	vmov.f32	s19, s1
 801a252:	eeb0 9a41 	vmov.f32	s18, s2
 801a256:	eeb0 8a62 	vmov.f32	s16, s5
 801a25a:	eef0 8a43 	vmov.f32	s17, s6
 801a25e:	eef0 ba44 	vmov.f32	s23, s8
 801a262:	eeb0 ba64 	vmov.f32	s22, s9
 801a266:	eef0 aa45 	vmov.f32	s21, s10
 801a26a:	3604      	adds	r6, #4
 801a26c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a26e:	2b00      	cmp	r3, #0
 801a270:	dc03      	bgt.n	801a27a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801a272:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a274:	2b00      	cmp	r3, #0
 801a276:	f340 8371 	ble.w	801a95c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801a27a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a27c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a280:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a284:	1e48      	subs	r0, r1, #1
 801a286:	1e57      	subs	r7, r2, #1
 801a288:	9b07      	ldr	r3, [sp, #28]
 801a28a:	2b00      	cmp	r3, #0
 801a28c:	f340 8189 	ble.w	801a5a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a290:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801a292:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a296:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a29a:	d406      	bmi.n	801a2aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a29c:	4584      	cmp	ip, r0
 801a29e:	da04      	bge.n	801a2aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a2a0:	2b00      	cmp	r3, #0
 801a2a2:	db02      	blt.n	801a2aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a2a4:	42bb      	cmp	r3, r7
 801a2a6:	f2c0 817d 	blt.w	801a5a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a2aa:	f11c 0c01 	adds.w	ip, ip, #1
 801a2ae:	f100 816b 	bmi.w	801a588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a2b2:	4561      	cmp	r1, ip
 801a2b4:	f2c0 8168 	blt.w	801a588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a2b8:	3301      	adds	r3, #1
 801a2ba:	f100 8165 	bmi.w	801a588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a2be:	429a      	cmp	r2, r3
 801a2c0:	f2c0 8162 	blt.w	801a588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a2c4:	9b07      	ldr	r3, [sp, #28]
 801a2c6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a2c8:	9317      	str	r3, [sp, #92]	; 0x5c
 801a2ca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a2cc:	2b00      	cmp	r3, #0
 801a2ce:	f340 8187 	ble.w	801a5e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801a2d2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a2d4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a2d8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a2da:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801a2de:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a2e0:	141b      	asrs	r3, r3, #16
 801a2e2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a2e6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a2ea:	f100 81ca 	bmi.w	801a682 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a2ee:	f101 38ff 	add.w	r8, r1, #4294967295
 801a2f2:	4543      	cmp	r3, r8
 801a2f4:	f280 81c5 	bge.w	801a682 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a2f8:	f1bc 0f00 	cmp.w	ip, #0
 801a2fc:	f2c0 81c1 	blt.w	801a682 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a300:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a304:	45c4      	cmp	ip, r8
 801a306:	f280 81bc 	bge.w	801a682 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a30a:	b209      	sxth	r1, r1
 801a30c:	fb0c 3301 	mla	r3, ip, r1, r3
 801a310:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a312:	eb04 0803 	add.w	r8, r4, r3
 801a316:	5ce3      	ldrb	r3, [r4, r3]
 801a318:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a31c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801a320:	2a00      	cmp	r2, #0
 801a322:	f000 81a3 	beq.w	801a66c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a326:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a32a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801a32e:	940b      	str	r4, [sp, #44]	; 0x2c
 801a330:	0e24      	lsrs	r4, r4, #24
 801a332:	9412      	str	r4, [sp, #72]	; 0x48
 801a334:	b178      	cbz	r0, 801a356 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a336:	eb08 0c01 	add.w	ip, r8, r1
 801a33a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801a33e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a342:	9108      	str	r1, [sp, #32]
 801a344:	0e09      	lsrs	r1, r1, #24
 801a346:	9110      	str	r1, [sp, #64]	; 0x40
 801a348:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801a34c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a350:	910c      	str	r1, [sp, #48]	; 0x30
 801a352:	0e09      	lsrs	r1, r1, #24
 801a354:	9113      	str	r1, [sp, #76]	; 0x4c
 801a356:	b292      	uxth	r2, r2
 801a358:	b280      	uxth	r0, r0
 801a35a:	fb02 f900 	mul.w	r9, r2, r0
 801a35e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a362:	0112      	lsls	r2, r2, #4
 801a364:	eba2 0809 	sub.w	r8, r2, r9
 801a368:	b280      	uxth	r0, r0
 801a36a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a36e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a370:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a372:	fa1f f888 	uxth.w	r8, r8
 801a376:	1a12      	subs	r2, r2, r0
 801a378:	b292      	uxth	r2, r2
 801a37a:	fb08 f101 	mul.w	r1, r8, r1
 801a37e:	fb02 110e 	mla	r1, r2, lr, r1
 801a382:	fb00 1104 	mla	r1, r0, r4, r1
 801a386:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a388:	fb09 1104 	mla	r1, r9, r4, r1
 801a38c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a390:	2900      	cmp	r1, #0
 801a392:	f000 80ee 	beq.w	801a572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a396:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a39a:	d01b      	beq.n	801a3d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801a39c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a3a0:	fb0e fa0a 	mul.w	sl, lr, sl
 801a3a4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a3a8:	fb0e fe03 	mul.w	lr, lr, r3
 801a3ac:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a3b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a3b4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a3b8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a3bc:	4453      	add	r3, sl
 801a3be:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a3c2:	0a1b      	lsrs	r3, r3, #8
 801a3c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a3c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a3cc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a3d0:	ea43 030c 	orr.w	r3, r3, ip
 801a3d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a3d6:	2cff      	cmp	r4, #255	; 0xff
 801a3d8:	d021      	beq.n	801a41e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801a3da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a3dc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a3e0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a3e2:	fb04 fb0b 	mul.w	fp, r4, fp
 801a3e6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a3e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a3ec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a3ee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a3f2:	fb04 fa0a 	mul.w	sl, r4, sl
 801a3f6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3fa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a3fe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a402:	44de      	add	lr, fp
 801a404:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a408:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a40c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a410:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a414:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a418:	ea4e 040a 	orr.w	r4, lr, sl
 801a41c:	940b      	str	r4, [sp, #44]	; 0x2c
 801a41e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a420:	2cff      	cmp	r4, #255	; 0xff
 801a422:	d021      	beq.n	801a468 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a424:	9c08      	ldr	r4, [sp, #32]
 801a426:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a42a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a42c:	fb04 fb0b 	mul.w	fp, r4, fp
 801a430:	9c08      	ldr	r4, [sp, #32]
 801a432:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a436:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a438:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a43c:	fb04 fa0a 	mul.w	sl, r4, sl
 801a440:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a444:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a448:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a44c:	44de      	add	lr, fp
 801a44e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a452:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a456:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a45a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a45e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a462:	ea4e 040a 	orr.w	r4, lr, sl
 801a466:	9408      	str	r4, [sp, #32]
 801a468:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a46a:	2cff      	cmp	r4, #255	; 0xff
 801a46c:	d021      	beq.n	801a4b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a46e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a470:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a474:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a476:	fb04 fb0b 	mul.w	fp, r4, fp
 801a47a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a47c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a480:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a482:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a486:	fb04 fa0a 	mul.w	sl, r4, sl
 801a48a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a48e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a492:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a496:	44de      	add	lr, fp
 801a498:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a49c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a4a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a4a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a4ac:	ea4e 040a 	orr.w	r4, lr, sl
 801a4b0:	940c      	str	r4, [sp, #48]	; 0x30
 801a4b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a4b4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a4b8:	9c08      	ldr	r4, [sp, #32]
 801a4ba:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801a4be:	fb08 fc0c 	mul.w	ip, r8, ip
 801a4c2:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a4c6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a4ca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a4cc:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a4d0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a4d4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a4d6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a4da:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801a4de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a4e2:	fb08 f80e 	mul.w	r8, r8, lr
 801a4e6:	fb02 8303 	mla	r3, r2, r3, r8
 801a4ea:	9a08      	ldr	r2, [sp, #32]
 801a4ec:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a4f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a4f2:	fb00 330a 	mla	r3, r0, sl, r3
 801a4f6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801a4fa:	fb09 3900 	mla	r9, r9, r0, r3
 801a4fe:	883b      	ldrh	r3, [r7, #0]
 801a500:	43c9      	mvns	r1, r1
 801a502:	1218      	asrs	r0, r3, #8
 801a504:	b2c9      	uxtb	r1, r1
 801a506:	10da      	asrs	r2, r3, #3
 801a508:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a50c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a510:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a514:	00db      	lsls	r3, r3, #3
 801a516:	4348      	muls	r0, r1
 801a518:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a51c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a520:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a524:	b2db      	uxtb	r3, r3
 801a526:	434b      	muls	r3, r1
 801a528:	ea4c 0c09 	orr.w	ip, ip, r9
 801a52c:	434a      	muls	r2, r1
 801a52e:	1c41      	adds	r1, r0, #1
 801a530:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801a534:	ea4f 401c 	mov.w	r0, ip, lsr #16
 801a538:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801a53c:	4960      	ldr	r1, [pc, #384]	; (801a6c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801a53e:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801a542:	1c59      	adds	r1, r3, #1
 801a544:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a548:	fa5f f38c 	uxtb.w	r3, ip
 801a54c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a550:	1c51      	adds	r1, r2, #1
 801a552:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a556:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a55a:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 801a55e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a562:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 801a566:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a56a:	ea43 0c0c 	orr.w	ip, r3, ip
 801a56e:	f8a7 c000 	strh.w	ip, [r7]
 801a572:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a574:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a576:	441a      	add	r2, r3
 801a578:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a57a:	922d      	str	r2, [sp, #180]	; 0xb4
 801a57c:	441d      	add	r5, r3
 801a57e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a580:	3b01      	subs	r3, #1
 801a582:	3702      	adds	r7, #2
 801a584:	9317      	str	r3, [sp, #92]	; 0x5c
 801a586:	e6a0      	b.n	801a2ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a588:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a58a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801a58c:	441c      	add	r4, r3
 801a58e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a590:	942d      	str	r4, [sp, #180]	; 0xb4
 801a592:	441d      	add	r5, r3
 801a594:	9b07      	ldr	r3, [sp, #28]
 801a596:	3b01      	subs	r3, #1
 801a598:	9307      	str	r3, [sp, #28]
 801a59a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a59c:	3302      	adds	r3, #2
 801a59e:	930a      	str	r3, [sp, #40]	; 0x28
 801a5a0:	e672      	b.n	801a288 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a5a2:	d024      	beq.n	801a5ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801a5a4:	9b07      	ldr	r3, [sp, #28]
 801a5a6:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801a5a8:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801a5aa:	3b01      	subs	r3, #1
 801a5ac:	fb00 4003 	mla	r0, r0, r3, r4
 801a5b0:	1400      	asrs	r0, r0, #16
 801a5b2:	f53f ae87 	bmi.w	801a2c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a5b6:	3901      	subs	r1, #1
 801a5b8:	4288      	cmp	r0, r1
 801a5ba:	f6bf ae83 	bge.w	801a2c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a5be:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801a5c0:	fb01 5303 	mla	r3, r1, r3, r5
 801a5c4:	141b      	asrs	r3, r3, #16
 801a5c6:	f53f ae7d 	bmi.w	801a2c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a5ca:	3a01      	subs	r2, #1
 801a5cc:	4293      	cmp	r3, r2
 801a5ce:	f6bf ae79 	bge.w	801a2c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a5d2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a5d6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801a5da:	f1bb 0f00 	cmp.w	fp, #0
 801a5de:	dc71      	bgt.n	801a6c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801a5e0:	9b07      	ldr	r3, [sp, #28]
 801a5e2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a5e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a5e8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a5ec:	930a      	str	r3, [sp, #40]	; 0x28
 801a5ee:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a5f0:	2b00      	cmp	r3, #0
 801a5f2:	f340 81b3 	ble.w	801a95c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801a5f6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a5fa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a5fe:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a602:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a604:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a608:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a60c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a610:	eef0 6a48 	vmov.f32	s13, s16
 801a614:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a618:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a61c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a620:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 801a624:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a628:	eef0 6a68 	vmov.f32	s13, s17
 801a62c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a630:	ee18 2a10 	vmov	r2, s16
 801a634:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a638:	fb92 f3f3 	sdiv	r3, r2, r3
 801a63c:	ee18 2a90 	vmov	r2, s17
 801a640:	932f      	str	r3, [sp, #188]	; 0xbc
 801a642:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a644:	fb92 f3f3 	sdiv	r3, r2, r3
 801a648:	9330      	str	r3, [sp, #192]	; 0xc0
 801a64a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a64c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a64e:	3b01      	subs	r3, #1
 801a650:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a654:	9316      	str	r3, [sp, #88]	; 0x58
 801a656:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a658:	bf08      	it	eq
 801a65a:	4613      	moveq	r3, r2
 801a65c:	ee16 5a90 	vmov	r5, s13
 801a660:	9307      	str	r3, [sp, #28]
 801a662:	eef0 8a67 	vmov.f32	s17, s15
 801a666:	eeb0 8a47 	vmov.f32	s16, s14
 801a66a:	e5ff      	b.n	801a26c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a66c:	2800      	cmp	r0, #0
 801a66e:	f43f ae72 	beq.w	801a356 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a672:	f818 1001 	ldrb.w	r1, [r8, r1]
 801a676:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a67a:	9108      	str	r1, [sp, #32]
 801a67c:	0e09      	lsrs	r1, r1, #24
 801a67e:	9110      	str	r1, [sp, #64]	; 0x40
 801a680:	e669      	b.n	801a356 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a682:	f113 0801 	adds.w	r8, r3, #1
 801a686:	f53f af74 	bmi.w	801a572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a68a:	4541      	cmp	r1, r8
 801a68c:	f6ff af71 	blt.w	801a572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a690:	f11c 0801 	adds.w	r8, ip, #1
 801a694:	f53f af6d 	bmi.w	801a572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a698:	45c6      	cmp	lr, r8
 801a69a:	f6ff af6a 	blt.w	801a572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a69e:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801a6a2:	b209      	sxth	r1, r1
 801a6a4:	fa0f f38e 	sxth.w	r3, lr
 801a6a8:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801a6ac:	9301      	str	r3, [sp, #4]
 801a6ae:	9100      	str	r1, [sp, #0]
 801a6b0:	4633      	mov	r3, r6
 801a6b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a6b4:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a6b6:	4639      	mov	r1, r7
 801a6b8:	f7ff fc52 	bl	8019f60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801a6bc:	e759      	b.n	801a572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a6be:	bf00      	nop
 801a6c0:	fffff800 	.word	0xfffff800
 801a6c4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a6c6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801a6c8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a6cc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a6ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a6d2:	1427      	asrs	r7, r4, #16
 801a6d4:	142b      	asrs	r3, r5, #16
 801a6d6:	fb01 7303 	mla	r3, r1, r3, r7
 801a6da:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a6dc:	18e7      	adds	r7, r4, r3
 801a6de:	5ce3      	ldrb	r3, [r4, r3]
 801a6e0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a6e4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a6e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a6ec:	2a00      	cmp	r2, #0
 801a6ee:	f000 812b 	beq.w	801a948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801a6f2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801a6f6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801a6fa:	940d      	str	r4, [sp, #52]	; 0x34
 801a6fc:	0e24      	lsrs	r4, r4, #24
 801a6fe:	9414      	str	r4, [sp, #80]	; 0x50
 801a700:	b170      	cbz	r0, 801a720 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a702:	eb07 0e01 	add.w	lr, r7, r1
 801a706:	5c79      	ldrb	r1, [r7, r1]
 801a708:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a70c:	9109      	str	r1, [sp, #36]	; 0x24
 801a70e:	0e09      	lsrs	r1, r1, #24
 801a710:	9111      	str	r1, [sp, #68]	; 0x44
 801a712:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801a716:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a71a:	910e      	str	r1, [sp, #56]	; 0x38
 801a71c:	0e09      	lsrs	r1, r1, #24
 801a71e:	9115      	str	r1, [sp, #84]	; 0x54
 801a720:	b292      	uxth	r2, r2
 801a722:	b280      	uxth	r0, r0
 801a724:	fb02 f800 	mul.w	r8, r2, r0
 801a728:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801a72c:	0112      	lsls	r2, r2, #4
 801a72e:	eba2 0e08 	sub.w	lr, r2, r8
 801a732:	b280      	uxth	r0, r0
 801a734:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a738:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a73a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a73c:	fa1f fe8e 	uxth.w	lr, lr
 801a740:	1a09      	subs	r1, r1, r0
 801a742:	b289      	uxth	r1, r1
 801a744:	fb0e f202 	mul.w	r2, lr, r2
 801a748:	fb01 220c 	mla	r2, r1, ip, r2
 801a74c:	fb00 2204 	mla	r2, r0, r4, r2
 801a750:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a752:	fb08 2204 	mla	r2, r8, r4, r2
 801a756:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a75a:	2a00      	cmp	r2, #0
 801a75c:	f000 80e9 	beq.w	801a932 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71a>
 801a760:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a764:	d019      	beq.n	801a79a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 801a766:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a76a:	fb0c fa0a 	mul.w	sl, ip, sl
 801a76e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a772:	fb0c fc03 	mul.w	ip, ip, r3
 801a776:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a77a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a77e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a782:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a786:	4453      	add	r3, sl
 801a788:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a78c:	0a1b      	lsrs	r3, r3, #8
 801a78e:	0a3f      	lsrs	r7, r7, #8
 801a790:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a794:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a798:	433b      	orrs	r3, r7
 801a79a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a79c:	2cff      	cmp	r4, #255	; 0xff
 801a79e:	d020      	beq.n	801a7e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 801a7a0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a7a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a7a6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a7a8:	4367      	muls	r7, r4
 801a7aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a7ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a7b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a7b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a7b6:	fb04 fa0a 	mul.w	sl, r4, sl
 801a7ba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a7be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a7c2:	44bc      	add	ip, r7
 801a7c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a7c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a7cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a7d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a7d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a7d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a7dc:	ea4c 040a 	orr.w	r4, ip, sl
 801a7e0:	940d      	str	r4, [sp, #52]	; 0x34
 801a7e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a7e4:	2cff      	cmp	r4, #255	; 0xff
 801a7e6:	d020      	beq.n	801a82a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 801a7e8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a7ea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a7ee:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a7f0:	4367      	muls	r7, r4
 801a7f2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a7f4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a7f8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a7fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a7fe:	fb04 fa0a 	mul.w	sl, r4, sl
 801a802:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a806:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a80a:	44bc      	add	ip, r7
 801a80c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a810:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a814:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a818:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a81c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a820:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a824:	ea4c 040a 	orr.w	r4, ip, sl
 801a828:	9409      	str	r4, [sp, #36]	; 0x24
 801a82a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a82c:	2cff      	cmp	r4, #255	; 0xff
 801a82e:	d020      	beq.n	801a872 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 801a830:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a832:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a836:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a838:	4367      	muls	r7, r4
 801a83a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a83c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a840:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a842:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a846:	fb04 fa0a 	mul.w	sl, r4, sl
 801a84a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a84e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a852:	44bc      	add	ip, r7
 801a854:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a858:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a85c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a860:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a864:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a868:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a86c:	ea4c 040a 	orr.w	r4, ip, sl
 801a870:	940e      	str	r4, [sp, #56]	; 0x38
 801a872:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a874:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a878:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a87a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a87e:	fb0e f707 	mul.w	r7, lr, r7
 801a882:	fb01 770c 	mla	r7, r1, ip, r7
 801a886:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a88a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a88c:	fb00 770c 	mla	r7, r0, ip, r7
 801a890:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a894:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a896:	fb08 770c 	mla	r7, r8, ip, r7
 801a89a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a89e:	fb0e fe0c 	mul.w	lr, lr, ip
 801a8a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a8a6:	fb01 e303 	mla	r3, r1, r3, lr
 801a8aa:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a8ac:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a8b0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a8b2:	fb00 330a 	mla	r3, r0, sl, r3
 801a8b6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a8ba:	fb08 3c0c 	mla	ip, r8, ip, r3
 801a8be:	f8b9 3000 	ldrh.w	r3, [r9]
 801a8c2:	43d2      	mvns	r2, r2
 801a8c4:	1218      	asrs	r0, r3, #8
 801a8c6:	b2d2      	uxtb	r2, r2
 801a8c8:	0a3f      	lsrs	r7, r7, #8
 801a8ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8ce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a8d2:	4350      	muls	r0, r2
 801a8d4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a8d8:	10d9      	asrs	r1, r3, #3
 801a8da:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a8de:	00db      	lsls	r3, r3, #3
 801a8e0:	ea47 070c 	orr.w	r7, r7, ip
 801a8e4:	b2db      	uxtb	r3, r3
 801a8e6:	f100 0c01 	add.w	ip, r0, #1
 801a8ea:	4353      	muls	r3, r2
 801a8ec:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 801a8f0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a8f4:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801a8f8:	4351      	muls	r1, r2
 801a8fa:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 801a8fe:	4a1a      	ldr	r2, [pc, #104]	; (801a968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801a900:	f103 0c01 	add.w	ip, r3, #1
 801a904:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a908:	fa5f fc87 	uxtb.w	ip, r7
 801a90c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a910:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801a914:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 801a918:	1c4b      	adds	r3, r1, #1
 801a91a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a91e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a922:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 801a926:	00ff      	lsls	r7, r7, #3
 801a928:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a92c:	4338      	orrs	r0, r7
 801a92e:	f8a9 0000 	strh.w	r0, [r9]
 801a932:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a934:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a936:	441a      	add	r2, r3
 801a938:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a93a:	922d      	str	r2, [sp, #180]	; 0xb4
 801a93c:	f109 0902 	add.w	r9, r9, #2
 801a940:	441d      	add	r5, r3
 801a942:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a946:	e648      	b.n	801a5da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801a948:	2800      	cmp	r0, #0
 801a94a:	f43f aee9 	beq.w	801a720 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a94e:	5c79      	ldrb	r1, [r7, r1]
 801a950:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a954:	9109      	str	r1, [sp, #36]	; 0x24
 801a956:	0e09      	lsrs	r1, r1, #24
 801a958:	9111      	str	r1, [sp, #68]	; 0x44
 801a95a:	e6e1      	b.n	801a720 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a95c:	b01b      	add	sp, #108	; 0x6c
 801a95e:	ecbd 8b08 	vpop	{d8-d11}
 801a962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a966:	bf00      	nop
 801a968:	fffff800 	.word	0xfffff800

0801a96c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801a96c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a970:	b085      	sub	sp, #20
 801a972:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801a976:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801a97a:	9103      	str	r1, [sp, #12]
 801a97c:	fb05 7106 	mla	r1, r5, r6, r7
 801a980:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 801a984:	2d00      	cmp	r5, #0
 801a986:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a98a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801a98e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801a992:	9401      	str	r4, [sp, #4]
 801a994:	eb03 0901 	add.w	r9, r3, r1
 801a998:	f2c0 80c0 	blt.w	801ab1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801a99c:	45a8      	cmp	r8, r5
 801a99e:	f340 80bd 	ble.w	801ab1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801a9a2:	2f00      	cmp	r7, #0
 801a9a4:	f2c0 80b6 	blt.w	801ab14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801a9a8:	42be      	cmp	r6, r7
 801a9aa:	f340 80b3 	ble.w	801ab14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801a9ae:	f813 c001 	ldrb.w	ip, [r3, r1]
 801a9b2:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 801a9b6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a9ba:	d019      	beq.n	801a9f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 801a9bc:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801a9c0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801a9c4:	435a      	muls	r2, r3
 801a9c6:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801a9ca:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801a9ce:	fb0c f403 	mul.w	r4, ip, r3
 801a9d2:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801a9d6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801a9da:	441a      	add	r2, r3
 801a9dc:	f104 0320 	add.w	r3, r4, #32
 801a9e0:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801a9e4:	0a1b      	lsrs	r3, r3, #8
 801a9e6:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801a9ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a9ee:	4319      	orrs	r1, r3
 801a9f0:	b289      	uxth	r1, r1
 801a9f2:	1c7b      	adds	r3, r7, #1
 801a9f4:	f100 8097 	bmi.w	801ab26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801a9f8:	429e      	cmp	r6, r3
 801a9fa:	f340 8094 	ble.w	801ab26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801a9fe:	2800      	cmp	r0, #0
 801aa00:	f000 8094 	beq.w	801ab2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 801aa04:	f899 4001 	ldrb.w	r4, [r9, #1]
 801aa08:	9b01      	ldr	r3, [sp, #4]
 801aa0a:	2cff      	cmp	r4, #255	; 0xff
 801aa0c:	885b      	ldrh	r3, [r3, #2]
 801aa0e:	d01b      	beq.n	801aa48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 801aa10:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801aa14:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801aa18:	fb0a f202 	mul.w	r2, sl, r2
 801aa1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801aa20:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801aa24:	fb04 fa03 	mul.w	sl, r4, r3
 801aa28:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801aa2c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801aa30:	441a      	add	r2, r3
 801aa32:	f10a 0320 	add.w	r3, sl, #32
 801aa36:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801aa3a:	0a1b      	lsrs	r3, r3, #8
 801aa3c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801aa40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801aa44:	ea4b 0303 	orr.w	r3, fp, r3
 801aa48:	b29b      	uxth	r3, r3
 801aa4a:	3501      	adds	r5, #1
 801aa4c:	d474      	bmi.n	801ab38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801aa4e:	45a8      	cmp	r8, r5
 801aa50:	dd72      	ble.n	801ab38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801aa52:	f1be 0f00 	cmp.w	lr, #0
 801aa56:	f000 8120 	beq.w	801ac9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 801aa5a:	2f00      	cmp	r7, #0
 801aa5c:	db69      	blt.n	801ab32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801aa5e:	42be      	cmp	r6, r7
 801aa60:	dd67      	ble.n	801ab32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801aa62:	f819 5006 	ldrb.w	r5, [r9, r6]
 801aa66:	9a01      	ldr	r2, [sp, #4]
 801aa68:	2dff      	cmp	r5, #255	; 0xff
 801aa6a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801aa6e:	d01c      	beq.n	801aaaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 801aa70:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801aa74:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801aa78:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801aa7c:	fb05 fa0b 	mul.w	sl, r5, fp
 801aa80:	fb08 f802 	mul.w	r8, r8, r2
 801aa84:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801aa88:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801aa8c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801aa90:	4490      	add	r8, r2
 801aa92:	f10a 0220 	add.w	r2, sl, #32
 801aa96:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801aa9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa9e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801aaa2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aaa6:	ea4b 0b0a 	orr.w	fp, fp, sl
 801aaaa:	fa1f fb8b 	uxth.w	fp, fp
 801aaae:	3701      	adds	r7, #1
 801aab0:	d447      	bmi.n	801ab42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801aab2:	42be      	cmp	r6, r7
 801aab4:	dd45      	ble.n	801ab42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801aab6:	2800      	cmp	r0, #0
 801aab8:	d046      	beq.n	801ab48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801aaba:	3601      	adds	r6, #1
 801aabc:	9a01      	ldr	r2, [sp, #4]
 801aabe:	f819 7006 	ldrb.w	r7, [r9, r6]
 801aac2:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801aac6:	2fff      	cmp	r7, #255	; 0xff
 801aac8:	d01a      	beq.n	801ab00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801aaca:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801aace:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801aad2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aad6:	fb07 f902 	mul.w	r9, r7, r2
 801aada:	fb08 f806 	mul.w	r8, r8, r6
 801aade:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801aae2:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801aae6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801aaea:	44b0      	add	r8, r6
 801aaec:	f109 0620 	add.w	r6, r9, #32
 801aaf0:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801aaf4:	0a36      	lsrs	r6, r6, #8
 801aaf6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801aafa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aafe:	4332      	orrs	r2, r6
 801ab00:	b292      	uxth	r2, r2
 801ab02:	280f      	cmp	r0, #15
 801ab04:	d922      	bls.n	801ab4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801ab06:	4b69      	ldr	r3, [pc, #420]	; (801acac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 801ab08:	4a69      	ldr	r2, [pc, #420]	; (801acb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801ab0a:	486a      	ldr	r0, [pc, #424]	; (801acb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 801ab0c:	f240 210d 	movw	r1, #525	; 0x20d
 801ab10:	f007 fafe 	bl	8022110 <__assert_func>
 801ab14:	f04f 0c00 	mov.w	ip, #0
 801ab18:	4661      	mov	r1, ip
 801ab1a:	e76a      	b.n	801a9f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 801ab1c:	2400      	movs	r4, #0
 801ab1e:	46a4      	mov	ip, r4
 801ab20:	4623      	mov	r3, r4
 801ab22:	4621      	mov	r1, r4
 801ab24:	e791      	b.n	801aa4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801ab26:	2400      	movs	r4, #0
 801ab28:	4623      	mov	r3, r4
 801ab2a:	e78e      	b.n	801aa4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801ab2c:	4604      	mov	r4, r0
 801ab2e:	4603      	mov	r3, r0
 801ab30:	e78b      	b.n	801aa4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801ab32:	2500      	movs	r5, #0
 801ab34:	46ab      	mov	fp, r5
 801ab36:	e7ba      	b.n	801aaae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 801ab38:	2700      	movs	r7, #0
 801ab3a:	463d      	mov	r5, r7
 801ab3c:	463a      	mov	r2, r7
 801ab3e:	46bb      	mov	fp, r7
 801ab40:	e7df      	b.n	801ab02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801ab42:	2700      	movs	r7, #0
 801ab44:	463a      	mov	r2, r7
 801ab46:	e7dc      	b.n	801ab02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801ab48:	4607      	mov	r7, r0
 801ab4a:	4602      	mov	r2, r0
 801ab4c:	f1be 0f0f 	cmp.w	lr, #15
 801ab50:	d8d9      	bhi.n	801ab06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801ab52:	b286      	uxth	r6, r0
 801ab54:	fa1f f98e 	uxth.w	r9, lr
 801ab58:	fb06 f809 	mul.w	r8, r6, r9
 801ab5c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ab60:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ab64:	0136      	lsls	r6, r6, #4
 801ab66:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ab6a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ab6e:	9601      	str	r6, [sp, #4]
 801ab70:	ea4a 0101 	orr.w	r1, sl, r1
 801ab74:	fa1f f689 	uxth.w	r6, r9
 801ab78:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801ab7c:	fb10 f90e 	smulbb	r9, r0, lr
 801ab80:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801ab84:	9602      	str	r6, [sp, #8]
 801ab86:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ab8a:	460e      	mov	r6, r1
 801ab8c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ab90:	f1ce 0110 	rsb	r1, lr, #16
 801ab94:	1a09      	subs	r1, r1, r0
 801ab96:	ea4a 0303 	orr.w	r3, sl, r3
 801ab9a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801ab9e:	4343      	muls	r3, r0
 801aba0:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801aba4:	9801      	ldr	r0, [sp, #4]
 801aba6:	fb01 3106 	mla	r1, r1, r6, r3
 801abaa:	9e02      	ldr	r6, [sp, #8]
 801abac:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801abb0:	1b80      	subs	r0, r0, r6
 801abb2:	9e01      	ldr	r6, [sp, #4]
 801abb4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801abb8:	eba6 0608 	sub.w	r6, r6, r8
 801abbc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801abc0:	b2b6      	uxth	r6, r6
 801abc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801abc6:	ea4a 0202 	orr.w	r2, sl, r2
 801abca:	b280      	uxth	r0, r0
 801abcc:	4374      	muls	r4, r6
 801abce:	fb09 1302 	mla	r3, r9, r2, r1
 801abd2:	fb0c 4400 	mla	r4, ip, r0, r4
 801abd6:	9a03      	ldr	r2, [sp, #12]
 801abd8:	9802      	ldr	r0, [sp, #8]
 801abda:	8811      	ldrh	r1, [r2, #0]
 801abdc:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 801abe0:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801abe4:	fb00 4505 	mla	r5, r0, r5, r4
 801abe8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801abec:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801abf0:	fb08 5707 	mla	r7, r8, r7, r5
 801abf4:	ea4a 0b0b 	orr.w	fp, sl, fp
 801abf8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801abfc:	b292      	uxth	r2, r2
 801abfe:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801ac02:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ac06:	4357      	muls	r7, r2
 801ac08:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801ac0c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ac10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ac14:	f107 0801 	add.w	r8, r7, #1
 801ac18:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ac1c:	ea43 0e0e 	orr.w	lr, r3, lr
 801ac20:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801ac24:	fa1f f38e 	uxth.w	r3, lr
 801ac28:	1208      	asrs	r0, r1, #8
 801ac2a:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801ac2e:	b2ff      	uxtb	r7, r7
 801ac30:	121c      	asrs	r4, r3, #8
 801ac32:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ac36:	fb10 f007 	smulbb	r0, r0, r7
 801ac3a:	10cd      	asrs	r5, r1, #3
 801ac3c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ac40:	00c9      	lsls	r1, r1, #3
 801ac42:	fb04 0402 	mla	r4, r4, r2, r0
 801ac46:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ac4a:	10d8      	asrs	r0, r3, #3
 801ac4c:	b2c9      	uxtb	r1, r1
 801ac4e:	00db      	lsls	r3, r3, #3
 801ac50:	fb11 f107 	smulbb	r1, r1, r7
 801ac54:	fb15 f507 	smulbb	r5, r5, r7
 801ac58:	b2db      	uxtb	r3, r3
 801ac5a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ac5e:	fb00 5002 	mla	r0, r0, r2, r5
 801ac62:	fb03 1202 	mla	r2, r3, r2, r1
 801ac66:	b2a4      	uxth	r4, r4
 801ac68:	b292      	uxth	r2, r2
 801ac6a:	1c63      	adds	r3, r4, #1
 801ac6c:	1c51      	adds	r1, r2, #1
 801ac6e:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801ac72:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ac76:	b280      	uxth	r0, r0
 801ac78:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ac7c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801ac80:	4313      	orrs	r3, r2
 801ac82:	1c42      	adds	r2, r0, #1
 801ac84:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ac88:	0940      	lsrs	r0, r0, #5
 801ac8a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ac8e:	9a03      	ldr	r2, [sp, #12]
 801ac90:	4303      	orrs	r3, r0
 801ac92:	8013      	strh	r3, [r2, #0]
 801ac94:	b005      	add	sp, #20
 801ac96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac9a:	280f      	cmp	r0, #15
 801ac9c:	f63f af33 	bhi.w	801ab06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801aca0:	4677      	mov	r7, lr
 801aca2:	4675      	mov	r5, lr
 801aca4:	4672      	mov	r2, lr
 801aca6:	46f3      	mov	fp, lr
 801aca8:	e753      	b.n	801ab52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 801acaa:	bf00      	nop
 801acac:	08026c23 	.word	0x08026c23
 801acb0:	080271e5 	.word	0x080271e5
 801acb4:	08026d0c 	.word	0x08026d0c

0801acb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801acb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acbc:	ed2d 8b08 	vpush	{d8-d11}
 801acc0:	b097      	sub	sp, #92	; 0x5c
 801acc2:	eeb0 aa40 	vmov.f32	s20, s0
 801acc6:	9214      	str	r2, [sp, #80]	; 0x50
 801acc8:	9308      	str	r3, [sp, #32]
 801acca:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801accc:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801acd0:	9312      	str	r3, [sp, #72]	; 0x48
 801acd2:	9111      	str	r1, [sp, #68]	; 0x44
 801acd4:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801acd8:	9015      	str	r0, [sp, #84]	; 0x54
 801acda:	6850      	ldr	r0, [r2, #4]
 801acdc:	6812      	ldr	r2, [r2, #0]
 801acde:	fb00 1303 	mla	r3, r0, r3, r1
 801ace2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ace6:	9309      	str	r3, [sp, #36]	; 0x24
 801ace8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acea:	681b      	ldr	r3, [r3, #0]
 801acec:	930b      	str	r3, [sp, #44]	; 0x2c
 801acee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acf0:	685b      	ldr	r3, [r3, #4]
 801acf2:	930c      	str	r3, [sp, #48]	; 0x30
 801acf4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801acf8:	930a      	str	r3, [sp, #40]	; 0x28
 801acfa:	eef0 9a60 	vmov.f32	s19, s1
 801acfe:	eeb0 9a41 	vmov.f32	s18, s2
 801ad02:	eeb0 8a62 	vmov.f32	s16, s5
 801ad06:	eef0 8a43 	vmov.f32	s17, s6
 801ad0a:	eef0 ba44 	vmov.f32	s23, s8
 801ad0e:	eeb0 ba64 	vmov.f32	s22, s9
 801ad12:	eef0 aa45 	vmov.f32	s21, s10
 801ad16:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ad18:	2b00      	cmp	r3, #0
 801ad1a:	dc03      	bgt.n	801ad24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ad1c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ad1e:	2b00      	cmp	r3, #0
 801ad20:	f340 83cb 	ble.w	801b4ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801ad24:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ad26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ad2a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ad2e:	1e48      	subs	r0, r1, #1
 801ad30:	1e55      	subs	r5, r2, #1
 801ad32:	9b08      	ldr	r3, [sp, #32]
 801ad34:	2b00      	cmp	r3, #0
 801ad36:	f340 81a3 	ble.w	801b080 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ad3a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801ad3c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ad3e:	1436      	asrs	r6, r6, #16
 801ad40:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ad44:	d406      	bmi.n	801ad54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ad46:	4286      	cmp	r6, r0
 801ad48:	da04      	bge.n	801ad54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ad4a:	2b00      	cmp	r3, #0
 801ad4c:	db02      	blt.n	801ad54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ad4e:	42ab      	cmp	r3, r5
 801ad50:	f2c0 8197 	blt.w	801b082 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801ad54:	3601      	adds	r6, #1
 801ad56:	f100 8184 	bmi.w	801b062 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ad5a:	42b1      	cmp	r1, r6
 801ad5c:	f2c0 8181 	blt.w	801b062 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ad60:	3301      	adds	r3, #1
 801ad62:	f100 817e 	bmi.w	801b062 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ad66:	429a      	cmp	r2, r3
 801ad68:	f2c0 817b 	blt.w	801b062 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ad6c:	9b08      	ldr	r3, [sp, #32]
 801ad6e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801ad70:	9313      	str	r3, [sp, #76]	; 0x4c
 801ad72:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ad76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ad78:	2b00      	cmp	r3, #0
 801ad7a:	f340 81a4 	ble.w	801b0c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 801ad7e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ad80:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801ad82:	1418      	asrs	r0, r3, #16
 801ad84:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ad86:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ad8a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ad8c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ad90:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ad92:	142d      	asrs	r5, r5, #16
 801ad94:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ad98:	f100 81f8 	bmi.w	801b18c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801ad9c:	f102 3eff 	add.w	lr, r2, #4294967295
 801ada0:	4575      	cmp	r5, lr
 801ada2:	f280 81f3 	bge.w	801b18c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801ada6:	2800      	cmp	r0, #0
 801ada8:	f2c0 81f0 	blt.w	801b18c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801adac:	f103 3eff 	add.w	lr, r3, #4294967295
 801adb0:	4570      	cmp	r0, lr
 801adb2:	f280 81eb 	bge.w	801b18c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801adb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801adb8:	b212      	sxth	r2, r2
 801adba:	fb00 5002 	mla	r0, r0, r2, r5
 801adbe:	fa1f fe81 	uxth.w	lr, r1
 801adc2:	eb03 0a00 	add.w	sl, r3, r0
 801adc6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801adca:	f813 9000 	ldrb.w	r9, [r3, r0]
 801adce:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801add2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801add6:	b29b      	uxth	r3, r3
 801add8:	f1bc 0f00 	cmp.w	ip, #0
 801addc:	f000 81b9 	beq.w	801b152 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801ade0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ade4:	940d      	str	r4, [sp, #52]	; 0x34
 801ade6:	eb0a 0b02 	add.w	fp, sl, r2
 801adea:	fa1f fa8c 	uxth.w	sl, ip
 801adee:	fb0a fe0e 	mul.w	lr, sl, lr
 801adf2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801adf6:	fa1f fa8a 	uxth.w	sl, sl
 801adfa:	eba5 050e 	sub.w	r5, r5, lr
 801adfe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ae02:	940e      	str	r4, [sp, #56]	; 0x38
 801ae04:	eba3 030a 	sub.w	r3, r3, sl
 801ae08:	b2ad      	uxth	r5, r5
 801ae0a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ae0c:	b29b      	uxth	r3, r3
 801ae0e:	fb08 f505 	mul.w	r5, r8, r5
 801ae12:	fb09 5303 	mla	r3, r9, r3, r5
 801ae16:	fb0a 3304 	mla	r3, sl, r4, r3
 801ae1a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ae1c:	fb0e 3304 	mla	r3, lr, r4, r3
 801ae20:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ae24:	2b00      	cmp	r3, #0
 801ae26:	f000 810f 	beq.w	801b048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801ae2a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ae2c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ae30:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ae34:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ae38:	f000 8190 	beq.w	801b15c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 801ae3c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ae40:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ae44:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ae48:	fb09 f000 	mul.w	r0, r9, r0
 801ae4c:	fb0a fe0e 	mul.w	lr, sl, lr
 801ae50:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801ae54:	f100 0b20 	add.w	fp, r0, #32
 801ae58:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ae5c:	44ce      	add	lr, r9
 801ae5e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ae62:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ae66:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ae6a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ae6e:	ea4e 0909 	orr.w	r9, lr, r9
 801ae72:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ae76:	8868      	ldrh	r0, [r5, #2]
 801ae78:	d019      	beq.n	801aeae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801ae7a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ae7e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ae82:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ae86:	fb08 f800 	mul.w	r8, r8, r0
 801ae8a:	fb0a fe0e 	mul.w	lr, sl, lr
 801ae8e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ae92:	f108 0b20 	add.w	fp, r8, #32
 801ae96:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ae9a:	4486      	add	lr, r0
 801ae9c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801aea0:	0a00      	lsrs	r0, r0, #8
 801aea2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801aea6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aeaa:	ea4e 0000 	orr.w	r0, lr, r0
 801aeae:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801aeb2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801aeb6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801aeba:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801aebe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801aec2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801aec6:	ea4e 0909 	orr.w	r9, lr, r9
 801aeca:	ea4a 0000 	orr.w	r0, sl, r0
 801aece:	f1bc 0f00 	cmp.w	ip, #0
 801aed2:	f000 8145 	beq.w	801b160 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801aed6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801aeda:	3a01      	subs	r2, #1
 801aedc:	0052      	lsls	r2, r2, #1
 801aede:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801aee0:	3202      	adds	r2, #2
 801aee2:	2cff      	cmp	r4, #255	; 0xff
 801aee4:	eb05 0e02 	add.w	lr, r5, r2
 801aee8:	5aaa      	ldrh	r2, [r5, r2]
 801aeea:	d018      	beq.n	801af1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801aeec:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801aef0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aef4:	fb04 fa02 	mul.w	sl, r4, r2
 801aef8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801aefc:	fb08 f805 	mul.w	r8, r8, r5
 801af00:	f10a 0520 	add.w	r5, sl, #32
 801af04:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801af08:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801af0c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801af10:	4442      	add	r2, r8
 801af12:	0a2d      	lsrs	r5, r5, #8
 801af14:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801af18:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801af1c:	432a      	orrs	r2, r5
 801af1e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af20:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801af24:	2cff      	cmp	r4, #255	; 0xff
 801af26:	d01a      	beq.n	801af5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801af28:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801af2c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801af30:	fb04 fa05 	mul.w	sl, r4, r5
 801af34:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801af38:	fb08 f80e 	mul.w	r8, r8, lr
 801af3c:	f10a 0e20 	add.w	lr, sl, #32
 801af40:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801af44:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801af48:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801af4c:	4445      	add	r5, r8
 801af4e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801af52:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801af56:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801af5a:	ea45 050e 	orr.w	r5, r5, lr
 801af5e:	fb1c fe01 	smulbb	lr, ip, r1
 801af62:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801af66:	f1cc 0810 	rsb	r8, ip, #16
 801af6a:	eba8 0801 	sub.w	r8, r8, r1
 801af6e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801af72:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801af76:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801af7a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801af7e:	4341      	muls	r1, r0
 801af80:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801af84:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801af88:	ea4a 0202 	orr.w	r2, sl, r2
 801af8c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801af90:	fb09 1108 	mla	r1, r9, r8, r1
 801af94:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801af98:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801af9c:	fb0c 1102 	mla	r1, ip, r2, r1
 801afa0:	ea4b 0505 	orr.w	r5, fp, r5
 801afa4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801afa8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801afac:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801afb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801afb4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801afb8:	ea42 0e0e 	orr.w	lr, r2, lr
 801afbc:	fa1f f28e 	uxth.w	r2, lr
 801afc0:	2bff      	cmp	r3, #255	; 0xff
 801afc2:	d103      	bne.n	801afcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801afc4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801afc6:	29ff      	cmp	r1, #255	; 0xff
 801afc8:	f000 80de 	beq.w	801b188 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 801afcc:	990a      	ldr	r1, [sp, #40]	; 0x28
 801afce:	8838      	ldrh	r0, [r7, #0]
 801afd0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801afd2:	434b      	muls	r3, r1
 801afd4:	f103 0c01 	add.w	ip, r3, #1
 801afd8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801afdc:	ea6f 2c23 	mvn.w	ip, r3, asr #8
 801afe0:	1205      	asrs	r5, r0, #8
 801afe2:	fa5f fc8c 	uxtb.w	ip, ip
 801afe6:	1213      	asrs	r3, r2, #8
 801afe8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801afec:	fb15 f50c 	smulbb	r5, r5, ip
 801aff0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801aff4:	fb03 5301 	mla	r3, r3, r1, r5
 801aff8:	b29d      	uxth	r5, r3
 801affa:	10c3      	asrs	r3, r0, #3
 801affc:	00c0      	lsls	r0, r0, #3
 801affe:	10d1      	asrs	r1, r2, #3
 801b000:	b2c0      	uxtb	r0, r0
 801b002:	00d2      	lsls	r2, r2, #3
 801b004:	fb10 f00c 	smulbb	r0, r0, ip
 801b008:	b2d2      	uxtb	r2, r2
 801b00a:	fb02 0204 	mla	r2, r2, r4, r0
 801b00e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b012:	fb13 f30c 	smulbb	r3, r3, ip
 801b016:	b292      	uxth	r2, r2
 801b018:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b01c:	fb01 3104 	mla	r1, r1, r4, r3
 801b020:	1c50      	adds	r0, r2, #1
 801b022:	1c6b      	adds	r3, r5, #1
 801b024:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801b028:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b02c:	b289      	uxth	r1, r1
 801b02e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b032:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801b036:	4313      	orrs	r3, r2
 801b038:	1c4a      	adds	r2, r1, #1
 801b03a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b03e:	0949      	lsrs	r1, r1, #5
 801b040:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b044:	430b      	orrs	r3, r1
 801b046:	803b      	strh	r3, [r7, #0]
 801b048:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b04a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801b04c:	4413      	add	r3, r2
 801b04e:	9329      	str	r3, [sp, #164]	; 0xa4
 801b050:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b052:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b054:	441a      	add	r2, r3
 801b056:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b058:	922a      	str	r2, [sp, #168]	; 0xa8
 801b05a:	3b01      	subs	r3, #1
 801b05c:	3702      	adds	r7, #2
 801b05e:	9313      	str	r3, [sp, #76]	; 0x4c
 801b060:	e689      	b.n	801ad76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801b062:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b064:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 801b066:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 801b068:	4433      	add	r3, r6
 801b06a:	9329      	str	r3, [sp, #164]	; 0xa4
 801b06c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b06e:	441c      	add	r4, r3
 801b070:	9b08      	ldr	r3, [sp, #32]
 801b072:	942a      	str	r4, [sp, #168]	; 0xa8
 801b074:	3b01      	subs	r3, #1
 801b076:	9308      	str	r3, [sp, #32]
 801b078:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b07a:	3302      	adds	r3, #2
 801b07c:	9309      	str	r3, [sp, #36]	; 0x24
 801b07e:	e658      	b.n	801ad32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b080:	d028      	beq.n	801b0d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801b082:	9b08      	ldr	r3, [sp, #32]
 801b084:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b086:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801b088:	3b01      	subs	r3, #1
 801b08a:	fb00 5003 	mla	r0, r0, r3, r5
 801b08e:	1400      	asrs	r0, r0, #16
 801b090:	f53f ae6c 	bmi.w	801ad6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b094:	3901      	subs	r1, #1
 801b096:	4288      	cmp	r0, r1
 801b098:	f6bf ae68 	bge.w	801ad6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b09c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b09e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 801b0a0:	fb01 0303 	mla	r3, r1, r3, r0
 801b0a4:	141b      	asrs	r3, r3, #16
 801b0a6:	f53f ae61 	bmi.w	801ad6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b0aa:	3a01      	subs	r2, #1
 801b0ac:	4293      	cmp	r3, r2
 801b0ae:	f6bf ae5d 	bge.w	801ad6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b0b2:	9b08      	ldr	r3, [sp, #32]
 801b0b4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801b0b8:	9313      	str	r3, [sp, #76]	; 0x4c
 801b0ba:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801b0be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b0c0:	2b00      	cmp	r3, #0
 801b0c2:	f300 8082 	bgt.w	801b1ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801b0c6:	9b08      	ldr	r3, [sp, #32]
 801b0c8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b0cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b0ce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b0d2:	9309      	str	r3, [sp, #36]	; 0x24
 801b0d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b0d6:	2b00      	cmp	r3, #0
 801b0d8:	f340 81ef 	ble.w	801b4ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801b0dc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b0e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b0e4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b0e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b0ea:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b0ee:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b0f2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b0f6:	eef0 6a48 	vmov.f32	s13, s16
 801b0fa:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b0fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b102:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b106:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b10a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b10e:	eef0 6a68 	vmov.f32	s13, s17
 801b112:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b116:	ee18 2a10 	vmov	r2, s16
 801b11a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b11e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b122:	ee18 2a90 	vmov	r2, s17
 801b126:	932b      	str	r3, [sp, #172]	; 0xac
 801b128:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b12a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b12e:	932c      	str	r3, [sp, #176]	; 0xb0
 801b130:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b132:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b134:	3b01      	subs	r3, #1
 801b136:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b13a:	9311      	str	r3, [sp, #68]	; 0x44
 801b13c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b13e:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801b142:	bf08      	it	eq
 801b144:	4613      	moveq	r3, r2
 801b146:	9308      	str	r3, [sp, #32]
 801b148:	eef0 8a67 	vmov.f32	s17, s15
 801b14c:	eeb0 8a47 	vmov.f32	s16, s14
 801b150:	e5e1      	b.n	801ad16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b152:	fb08 f505 	mul.w	r5, r8, r5
 801b156:	fb09 5303 	mla	r3, r9, r3, r5
 801b15a:	e661      	b.n	801ae20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 801b15c:	4681      	mov	r9, r0
 801b15e:	e688      	b.n	801ae72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801b160:	f1c1 0210 	rsb	r2, r1, #16
 801b164:	4341      	muls	r1, r0
 801b166:	fb09 1902 	mla	r9, r9, r2, r1
 801b16a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b16e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801b172:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b176:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b17a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b17e:	ea42 0909 	orr.w	r9, r2, r9
 801b182:	fa1f f289 	uxth.w	r2, r9
 801b186:	e71b      	b.n	801afc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 801b188:	803a      	strh	r2, [r7, #0]
 801b18a:	e75d      	b.n	801b048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b18c:	f115 0e01 	adds.w	lr, r5, #1
 801b190:	f53f af5a 	bmi.w	801b048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b194:	4572      	cmp	r2, lr
 801b196:	f6ff af57 	blt.w	801b048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b19a:	f110 0e01 	adds.w	lr, r0, #1
 801b19e:	f53f af53 	bmi.w	801b048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b1a2:	4573      	cmp	r3, lr
 801b1a4:	f6ff af50 	blt.w	801b048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b1a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b1aa:	9502      	str	r5, [sp, #8]
 801b1ac:	b21b      	sxth	r3, r3
 801b1ae:	b212      	sxth	r2, r2
 801b1b0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801b1b4:	9301      	str	r3, [sp, #4]
 801b1b6:	9200      	str	r2, [sp, #0]
 801b1b8:	e9cd c405 	strd	ip, r4, [sp, #20]
 801b1bc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801b1c0:	4639      	mov	r1, r7
 801b1c2:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b1c4:	f7ff fbd2 	bl	801a96c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801b1c8:	e73e      	b.n	801b048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801b1ca:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b1cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b1d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b1d2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801b1d6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b1d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b1dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b1de:	141f      	asrs	r7, r3, #16
 801b1e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b1e2:	141b      	asrs	r3, r3, #16
 801b1e4:	fb01 3707 	mla	r7, r1, r7, r3
 801b1e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b1ea:	fa1f fc82 	uxth.w	ip, r2
 801b1ee:	eb03 0a07 	add.w	sl, r3, r7
 801b1f2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801b1f6:	f813 9007 	ldrb.w	r9, [r3, r7]
 801b1fa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b1fe:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801b202:	b29b      	uxth	r3, r3
 801b204:	2d00      	cmp	r5, #0
 801b206:	f000 813d 	beq.w	801b484 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801b20a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801b20e:	940f      	str	r4, [sp, #60]	; 0x3c
 801b210:	eb0a 0b01 	add.w	fp, sl, r1
 801b214:	fa1f fa85 	uxth.w	sl, r5
 801b218:	fb0a fc0c 	mul.w	ip, sl, ip
 801b21c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801b220:	fa1f fa8a 	uxth.w	sl, sl
 801b224:	eba0 000c 	sub.w	r0, r0, ip
 801b228:	eba3 030a 	sub.w	r3, r3, sl
 801b22c:	b280      	uxth	r0, r0
 801b22e:	fb08 f000 	mul.w	r0, r8, r0
 801b232:	b29b      	uxth	r3, r3
 801b234:	fb09 0303 	mla	r3, r9, r3, r0
 801b238:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b23a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b23e:	9410      	str	r4, [sp, #64]	; 0x40
 801b240:	fb0a 3300 	mla	r3, sl, r0, r3
 801b244:	fb0c 3304 	mla	r3, ip, r4, r3
 801b248:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b24c:	2b00      	cmp	r3, #0
 801b24e:	f000 810b 	beq.w	801b468 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801b252:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801b254:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b256:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b25a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801b25e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801b262:	f000 8114 	beq.w	801b48e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 801b266:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801b26a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b26e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b272:	fb09 f707 	mul.w	r7, r9, r7
 801b276:	fb0a fc0c 	mul.w	ip, sl, ip
 801b27a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801b27e:	f107 0b20 	add.w	fp, r7, #32
 801b282:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801b286:	44cc      	add	ip, r9
 801b288:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801b28c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b290:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b294:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b298:	ea4c 0909 	orr.w	r9, ip, r9
 801b29c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b2a0:	8847      	ldrh	r7, [r0, #2]
 801b2a2:	d019      	beq.n	801b2d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 801b2a4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801b2a8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b2ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b2b0:	fb08 f807 	mul.w	r8, r8, r7
 801b2b4:	fb0a fc0c 	mul.w	ip, sl, ip
 801b2b8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801b2bc:	f108 0b20 	add.w	fp, r8, #32
 801b2c0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801b2c4:	44bc      	add	ip, r7
 801b2c6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801b2ca:	0a3f      	lsrs	r7, r7, #8
 801b2cc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b2d0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b2d4:	ea4c 0707 	orr.w	r7, ip, r7
 801b2d8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801b2dc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801b2e0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b2e4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b2e8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b2ec:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801b2f0:	ea4c 0909 	orr.w	r9, ip, r9
 801b2f4:	ea4a 0707 	orr.w	r7, sl, r7
 801b2f8:	2d00      	cmp	r5, #0
 801b2fa:	f000 80ca 	beq.w	801b492 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 801b2fe:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801b302:	3901      	subs	r1, #1
 801b304:	0049      	lsls	r1, r1, #1
 801b306:	3102      	adds	r1, #2
 801b308:	eb00 0c01 	add.w	ip, r0, r1
 801b30c:	5a41      	ldrh	r1, [r0, r1]
 801b30e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b310:	28ff      	cmp	r0, #255	; 0xff
 801b312:	d019      	beq.n	801b348 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 801b314:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b316:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801b31a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b31e:	fb04 fa01 	mul.w	sl, r4, r1
 801b322:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b326:	fb08 f800 	mul.w	r8, r8, r0
 801b32a:	f10a 0020 	add.w	r0, sl, #32
 801b32e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801b332:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801b336:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b33a:	4441      	add	r1, r8
 801b33c:	0a00      	lsrs	r0, r0, #8
 801b33e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801b342:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b346:	4301      	orrs	r1, r0
 801b348:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b34a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801b34e:	2cff      	cmp	r4, #255	; 0xff
 801b350:	d01a      	beq.n	801b388 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 801b352:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801b356:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b35a:	fb04 fa00 	mul.w	sl, r4, r0
 801b35e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b362:	fb08 f80c 	mul.w	r8, r8, ip
 801b366:	f10a 0c20 	add.w	ip, sl, #32
 801b36a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801b36e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801b372:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b376:	4440      	add	r0, r8
 801b378:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b37c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801b380:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b384:	ea40 000c 	orr.w	r0, r0, ip
 801b388:	fb15 fc02 	smulbb	ip, r5, r2
 801b38c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801b390:	f1c5 0810 	rsb	r8, r5, #16
 801b394:	eba8 0802 	sub.w	r8, r8, r2
 801b398:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b39c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801b3a0:	437a      	muls	r2, r7
 801b3a2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b3a6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801b3aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b3ae:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b3b2:	fb09 2208 	mla	r2, r9, r8, r2
 801b3b6:	ea4a 0101 	orr.w	r1, sl, r1
 801b3ba:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801b3be:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b3c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b3c6:	fb05 2201 	mla	r2, r5, r1, r2
 801b3ca:	ea4b 0000 	orr.w	r0, fp, r0
 801b3ce:	fb0c 2200 	mla	r2, ip, r0, r2
 801b3d2:	0d57      	lsrs	r7, r2, #21
 801b3d4:	0952      	lsrs	r2, r2, #5
 801b3d6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b3da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b3de:	433a      	orrs	r2, r7
 801b3e0:	2bff      	cmp	r3, #255	; 0xff
 801b3e2:	b292      	uxth	r2, r2
 801b3e4:	d102      	bne.n	801b3ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801b3e6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b3e8:	29ff      	cmp	r1, #255	; 0xff
 801b3ea:	d063      	beq.n	801b4b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 801b3ec:	980a      	ldr	r0, [sp, #40]	; 0x28
 801b3ee:	f8be 1000 	ldrh.w	r1, [lr]
 801b3f2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b3f4:	4343      	muls	r3, r0
 801b3f6:	1c58      	adds	r0, r3, #1
 801b3f8:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801b3fc:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801b400:	1208      	asrs	r0, r1, #8
 801b402:	b2db      	uxtb	r3, r3
 801b404:	1215      	asrs	r5, r2, #8
 801b406:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b40a:	fb10 f003 	smulbb	r0, r0, r3
 801b40e:	10cf      	asrs	r7, r1, #3
 801b410:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b414:	00c9      	lsls	r1, r1, #3
 801b416:	fb05 0504 	mla	r5, r5, r4, r0
 801b41a:	b2c9      	uxtb	r1, r1
 801b41c:	10d0      	asrs	r0, r2, #3
 801b41e:	00d2      	lsls	r2, r2, #3
 801b420:	fb11 f103 	smulbb	r1, r1, r3
 801b424:	b2d2      	uxtb	r2, r2
 801b426:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b42a:	fb02 1204 	mla	r2, r2, r4, r1
 801b42e:	fb17 f703 	smulbb	r7, r7, r3
 801b432:	b2ad      	uxth	r5, r5
 801b434:	b292      	uxth	r2, r2
 801b436:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b43a:	fb00 7004 	mla	r0, r0, r4, r7
 801b43e:	1c6b      	adds	r3, r5, #1
 801b440:	1c57      	adds	r7, r2, #1
 801b442:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b446:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801b44a:	b280      	uxth	r0, r0
 801b44c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b450:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b454:	433d      	orrs	r5, r7
 801b456:	1c47      	adds	r7, r0, #1
 801b458:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801b45c:	097f      	lsrs	r7, r7, #5
 801b45e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b462:	433d      	orrs	r5, r7
 801b464:	f8ae 5000 	strh.w	r5, [lr]
 801b468:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b46a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801b46c:	4413      	add	r3, r2
 801b46e:	9329      	str	r3, [sp, #164]	; 0xa4
 801b470:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b472:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b474:	441a      	add	r2, r3
 801b476:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b478:	922a      	str	r2, [sp, #168]	; 0xa8
 801b47a:	3b01      	subs	r3, #1
 801b47c:	f10e 0e02 	add.w	lr, lr, #2
 801b480:	9313      	str	r3, [sp, #76]	; 0x4c
 801b482:	e61c      	b.n	801b0be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 801b484:	fb08 f000 	mul.w	r0, r8, r0
 801b488:	fb09 0303 	mla	r3, r9, r3, r0
 801b48c:	e6dc      	b.n	801b248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 801b48e:	46b9      	mov	r9, r7
 801b490:	e704      	b.n	801b29c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 801b492:	f1c2 0110 	rsb	r1, r2, #16
 801b496:	437a      	muls	r2, r7
 801b498:	fb09 2901 	mla	r9, r9, r1, r2
 801b49c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b4a0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801b4a4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801b4a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b4ac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b4b0:	4302      	orrs	r2, r0
 801b4b2:	e795      	b.n	801b3e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 801b4b4:	f8ae 2000 	strh.w	r2, [lr]
 801b4b8:	e7d6      	b.n	801b468 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801b4ba:	b017      	add	sp, #92	; 0x5c
 801b4bc:	ecbd 8b08 	vpop	{d8-d11}
 801b4c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b4c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801b4c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4c8:	b085      	sub	sp, #20
 801b4ca:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801b4ce:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801b4d2:	9103      	str	r1, [sp, #12]
 801b4d4:	fb05 7106 	mla	r1, r5, r6, r7
 801b4d8:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 801b4dc:	2d00      	cmp	r5, #0
 801b4de:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801b4e2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801b4e6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801b4ea:	9401      	str	r4, [sp, #4]
 801b4ec:	eb02 0901 	add.w	r9, r2, r1
 801b4f0:	f2c0 80c0 	blt.w	801b674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801b4f4:	45a8      	cmp	r8, r5
 801b4f6:	f340 80bd 	ble.w	801b674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801b4fa:	2f00      	cmp	r7, #0
 801b4fc:	f2c0 80b6 	blt.w	801b66c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801b500:	42be      	cmp	r6, r7
 801b502:	f340 80b3 	ble.w	801b66c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801b506:	f812 c001 	ldrb.w	ip, [r2, r1]
 801b50a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 801b50e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b512:	d019      	beq.n	801b548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 801b514:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801b518:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b51c:	435a      	muls	r2, r3
 801b51e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801b522:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801b526:	fb0c f403 	mul.w	r4, ip, r3
 801b52a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801b52e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801b532:	441a      	add	r2, r3
 801b534:	f104 0320 	add.w	r3, r4, #32
 801b538:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801b53c:	0a1b      	lsrs	r3, r3, #8
 801b53e:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801b542:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b546:	4319      	orrs	r1, r3
 801b548:	b289      	uxth	r1, r1
 801b54a:	1c7b      	adds	r3, r7, #1
 801b54c:	f100 8097 	bmi.w	801b67e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801b550:	429e      	cmp	r6, r3
 801b552:	f340 8094 	ble.w	801b67e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801b556:	2800      	cmp	r0, #0
 801b558:	f000 8094 	beq.w	801b684 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 801b55c:	f899 4001 	ldrb.w	r4, [r9, #1]
 801b560:	9b01      	ldr	r3, [sp, #4]
 801b562:	2cff      	cmp	r4, #255	; 0xff
 801b564:	885b      	ldrh	r3, [r3, #2]
 801b566:	d01b      	beq.n	801b5a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 801b568:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801b56c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801b570:	fb0a f202 	mul.w	r2, sl, r2
 801b574:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b578:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801b57c:	fb04 fa03 	mul.w	sl, r4, r3
 801b580:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801b584:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801b588:	441a      	add	r2, r3
 801b58a:	f10a 0320 	add.w	r3, sl, #32
 801b58e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801b592:	0a1b      	lsrs	r3, r3, #8
 801b594:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801b598:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b59c:	ea4b 0303 	orr.w	r3, fp, r3
 801b5a0:	b29b      	uxth	r3, r3
 801b5a2:	3501      	adds	r5, #1
 801b5a4:	d474      	bmi.n	801b690 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801b5a6:	45a8      	cmp	r8, r5
 801b5a8:	dd72      	ble.n	801b690 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801b5aa:	f1be 0f00 	cmp.w	lr, #0
 801b5ae:	f000 8111 	beq.w	801b7d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x310>
 801b5b2:	2f00      	cmp	r7, #0
 801b5b4:	db69      	blt.n	801b68a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801b5b6:	42be      	cmp	r6, r7
 801b5b8:	dd67      	ble.n	801b68a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801b5ba:	f819 5006 	ldrb.w	r5, [r9, r6]
 801b5be:	9a01      	ldr	r2, [sp, #4]
 801b5c0:	2dff      	cmp	r5, #255	; 0xff
 801b5c2:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801b5c6:	d01c      	beq.n	801b602 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 801b5c8:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801b5cc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b5d0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b5d4:	fb05 fa0b 	mul.w	sl, r5, fp
 801b5d8:	fb08 f802 	mul.w	r8, r8, r2
 801b5dc:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801b5e0:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801b5e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b5e8:	4490      	add	r8, r2
 801b5ea:	f10a 0220 	add.w	r2, sl, #32
 801b5ee:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801b5f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5f6:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801b5fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b5fe:	ea4b 0b0a 	orr.w	fp, fp, sl
 801b602:	fa1f fb8b 	uxth.w	fp, fp
 801b606:	3701      	adds	r7, #1
 801b608:	d447      	bmi.n	801b69a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801b60a:	42be      	cmp	r6, r7
 801b60c:	dd45      	ble.n	801b69a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801b60e:	2800      	cmp	r0, #0
 801b610:	d046      	beq.n	801b6a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 801b612:	3601      	adds	r6, #1
 801b614:	9a01      	ldr	r2, [sp, #4]
 801b616:	f819 7006 	ldrb.w	r7, [r9, r6]
 801b61a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801b61e:	2fff      	cmp	r7, #255	; 0xff
 801b620:	d01a      	beq.n	801b658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 801b622:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801b626:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801b62a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b62e:	fb07 f902 	mul.w	r9, r7, r2
 801b632:	fb08 f806 	mul.w	r8, r8, r6
 801b636:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801b63a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801b63e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b642:	44b0      	add	r8, r6
 801b644:	f109 0620 	add.w	r6, r9, #32
 801b648:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801b64c:	0a36      	lsrs	r6, r6, #8
 801b64e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801b652:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b656:	4332      	orrs	r2, r6
 801b658:	b292      	uxth	r2, r2
 801b65a:	280f      	cmp	r0, #15
 801b65c:	d922      	bls.n	801b6a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801b65e:	4b61      	ldr	r3, [pc, #388]	; (801b7e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 801b660:	4a61      	ldr	r2, [pc, #388]	; (801b7e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 801b662:	4862      	ldr	r0, [pc, #392]	; (801b7ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 801b664:	f240 210d 	movw	r1, #525	; 0x20d
 801b668:	f006 fd52 	bl	8022110 <__assert_func>
 801b66c:	f04f 0c00 	mov.w	ip, #0
 801b670:	4661      	mov	r1, ip
 801b672:	e76a      	b.n	801b54a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801b674:	2400      	movs	r4, #0
 801b676:	46a4      	mov	ip, r4
 801b678:	4623      	mov	r3, r4
 801b67a:	4621      	mov	r1, r4
 801b67c:	e791      	b.n	801b5a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801b67e:	2400      	movs	r4, #0
 801b680:	4623      	mov	r3, r4
 801b682:	e78e      	b.n	801b5a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801b684:	4604      	mov	r4, r0
 801b686:	4603      	mov	r3, r0
 801b688:	e78b      	b.n	801b5a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801b68a:	2500      	movs	r5, #0
 801b68c:	46ab      	mov	fp, r5
 801b68e:	e7ba      	b.n	801b606 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 801b690:	2700      	movs	r7, #0
 801b692:	463d      	mov	r5, r7
 801b694:	463a      	mov	r2, r7
 801b696:	46bb      	mov	fp, r7
 801b698:	e7df      	b.n	801b65a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801b69a:	2700      	movs	r7, #0
 801b69c:	463a      	mov	r2, r7
 801b69e:	e7dc      	b.n	801b65a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801b6a0:	4607      	mov	r7, r0
 801b6a2:	4602      	mov	r2, r0
 801b6a4:	f1be 0f0f 	cmp.w	lr, #15
 801b6a8:	d8d9      	bhi.n	801b65e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801b6aa:	b286      	uxth	r6, r0
 801b6ac:	fa1f f98e 	uxth.w	r9, lr
 801b6b0:	fb06 f809 	mul.w	r8, r6, r9
 801b6b4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b6b8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801b6bc:	0136      	lsls	r6, r6, #4
 801b6be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b6c2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b6c6:	9601      	str	r6, [sp, #4]
 801b6c8:	ea4a 0101 	orr.w	r1, sl, r1
 801b6cc:	fa1f f689 	uxth.w	r6, r9
 801b6d0:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801b6d4:	fb10 f90e 	smulbb	r9, r0, lr
 801b6d8:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801b6dc:	9602      	str	r6, [sp, #8]
 801b6de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b6e2:	460e      	mov	r6, r1
 801b6e4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b6e8:	f1ce 0110 	rsb	r1, lr, #16
 801b6ec:	1a09      	subs	r1, r1, r0
 801b6ee:	ea4a 0303 	orr.w	r3, sl, r3
 801b6f2:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801b6f6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b6fa:	4343      	muls	r3, r0
 801b6fc:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801b700:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b704:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b708:	fb01 3106 	mla	r1, r1, r6, r3
 801b70c:	ea4a 0202 	orr.w	r2, sl, r2
 801b710:	fb09 1302 	mla	r3, r9, r2, r1
 801b714:	9901      	ldr	r1, [sp, #4]
 801b716:	9802      	ldr	r0, [sp, #8]
 801b718:	9a03      	ldr	r2, [sp, #12]
 801b71a:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801b71e:	1a09      	subs	r1, r1, r0
 801b720:	9801      	ldr	r0, [sp, #4]
 801b722:	8812      	ldrh	r2, [r2, #0]
 801b724:	eba0 0608 	sub.w	r6, r0, r8
 801b728:	b2b6      	uxth	r6, r6
 801b72a:	b289      	uxth	r1, r1
 801b72c:	4374      	muls	r4, r6
 801b72e:	fb0c 4401 	mla	r4, ip, r1, r4
 801b732:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801b736:	9902      	ldr	r1, [sp, #8]
 801b738:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b73c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801b740:	fb01 4505 	mla	r5, r1, r5, r4
 801b744:	ea4a 0b0b 	orr.w	fp, sl, fp
 801b748:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801b74c:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801b750:	fb08 5707 	mla	r7, r8, r7, r5
 801b754:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801b758:	1211      	asrs	r1, r2, #8
 801b75a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b75e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801b762:	b2ff      	uxtb	r7, r7
 801b764:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b768:	10d0      	asrs	r0, r2, #3
 801b76a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b76e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b772:	00d2      	lsls	r2, r2, #3
 801b774:	4379      	muls	r1, r7
 801b776:	ea43 0e0e 	orr.w	lr, r3, lr
 801b77a:	b2d2      	uxtb	r2, r2
 801b77c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b780:	fa1f f38e 	uxth.w	r3, lr
 801b784:	4378      	muls	r0, r7
 801b786:	4357      	muls	r7, r2
 801b788:	1c4a      	adds	r2, r1, #1
 801b78a:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b78e:	1219      	asrs	r1, r3, #8
 801b790:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b794:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801b798:	4a15      	ldr	r2, [pc, #84]	; (801b7f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x32c>)
 801b79a:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801b79e:	1c42      	adds	r2, r0, #1
 801b7a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b7a4:	10da      	asrs	r2, r3, #3
 801b7a6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b7aa:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b7ae:	00d2      	lsls	r2, r2, #3
 801b7b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b7b4:	430a      	orrs	r2, r1
 801b7b6:	00db      	lsls	r3, r3, #3
 801b7b8:	1c79      	adds	r1, r7, #1
 801b7ba:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801b7be:	b2db      	uxtb	r3, r3
 801b7c0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b7c4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801b7c8:	4313      	orrs	r3, r2
 801b7ca:	9a03      	ldr	r2, [sp, #12]
 801b7cc:	8013      	strh	r3, [r2, #0]
 801b7ce:	b005      	add	sp, #20
 801b7d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7d4:	280f      	cmp	r0, #15
 801b7d6:	f63f af42 	bhi.w	801b65e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801b7da:	4677      	mov	r7, lr
 801b7dc:	4675      	mov	r5, lr
 801b7de:	4672      	mov	r2, lr
 801b7e0:	46f3      	mov	fp, lr
 801b7e2:	e762      	b.n	801b6aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 801b7e4:	08026c23 	.word	0x08026c23
 801b7e8:	080271e5 	.word	0x080271e5
 801b7ec:	08026d0c 	.word	0x08026d0c
 801b7f0:	fffff800 	.word	0xfffff800

0801b7f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b7f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7f8:	ed2d 8b08 	vpush	{d8-d11}
 801b7fc:	b093      	sub	sp, #76	; 0x4c
 801b7fe:	eeb0 aa40 	vmov.f32	s20, s0
 801b802:	9210      	str	r2, [sp, #64]	; 0x40
 801b804:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b806:	910e      	str	r1, [sp, #56]	; 0x38
 801b808:	9306      	str	r3, [sp, #24]
 801b80a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b80e:	9011      	str	r0, [sp, #68]	; 0x44
 801b810:	6850      	ldr	r0, [r2, #4]
 801b812:	6812      	ldr	r2, [r2, #0]
 801b814:	fb00 1303 	mla	r3, r0, r3, r1
 801b818:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b81c:	9307      	str	r3, [sp, #28]
 801b81e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b820:	681b      	ldr	r3, [r3, #0]
 801b822:	9308      	str	r3, [sp, #32]
 801b824:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b826:	685b      	ldr	r3, [r3, #4]
 801b828:	9309      	str	r3, [sp, #36]	; 0x24
 801b82a:	eef0 9a60 	vmov.f32	s19, s1
 801b82e:	eeb0 9a41 	vmov.f32	s18, s2
 801b832:	eeb0 8a62 	vmov.f32	s16, s5
 801b836:	eef0 8a43 	vmov.f32	s17, s6
 801b83a:	eef0 ba44 	vmov.f32	s23, s8
 801b83e:	eeb0 ba64 	vmov.f32	s22, s9
 801b842:	eef0 aa45 	vmov.f32	s21, s10
 801b846:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b848:	2b00      	cmp	r3, #0
 801b84a:	dc03      	bgt.n	801b854 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b84c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b84e:	2b00      	cmp	r3, #0
 801b850:	f340 83b6 	ble.w	801bfc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801b854:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b856:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b85a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b85e:	1e48      	subs	r0, r1, #1
 801b860:	1e55      	subs	r5, r2, #1
 801b862:	9b06      	ldr	r3, [sp, #24]
 801b864:	2b00      	cmp	r3, #0
 801b866:	f340 8199 	ble.w	801bb9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801b86a:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801b86c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b86e:	1436      	asrs	r6, r6, #16
 801b870:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b874:	d406      	bmi.n	801b884 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b876:	4286      	cmp	r6, r0
 801b878:	da04      	bge.n	801b884 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b87a:	2b00      	cmp	r3, #0
 801b87c:	db02      	blt.n	801b884 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b87e:	42ab      	cmp	r3, r5
 801b880:	f2c0 818d 	blt.w	801bb9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801b884:	3601      	adds	r6, #1
 801b886:	f100 817a 	bmi.w	801bb7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b88a:	42b1      	cmp	r1, r6
 801b88c:	f2c0 8177 	blt.w	801bb7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b890:	3301      	adds	r3, #1
 801b892:	f100 8174 	bmi.w	801bb7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b896:	429a      	cmp	r2, r3
 801b898:	f2c0 8171 	blt.w	801bb7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b89c:	9b06      	ldr	r3, [sp, #24]
 801b89e:	9f07      	ldr	r7, [sp, #28]
 801b8a0:	930f      	str	r3, [sp, #60]	; 0x3c
 801b8a2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801b8a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b8a8:	2b00      	cmp	r3, #0
 801b8aa:	f340 819a 	ble.w	801bbe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801b8ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b8b0:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801b8b2:	1418      	asrs	r0, r3, #16
 801b8b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b8b6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801b8ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b8bc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801b8c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b8c2:	142d      	asrs	r5, r5, #16
 801b8c4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801b8c8:	f100 81ee 	bmi.w	801bca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801b8cc:	f102 3eff 	add.w	lr, r2, #4294967295
 801b8d0:	4575      	cmp	r5, lr
 801b8d2:	f280 81e9 	bge.w	801bca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801b8d6:	2800      	cmp	r0, #0
 801b8d8:	f2c0 81e6 	blt.w	801bca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801b8dc:	f103 3eff 	add.w	lr, r3, #4294967295
 801b8e0:	4570      	cmp	r0, lr
 801b8e2:	f280 81e1 	bge.w	801bca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801b8e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b8e8:	b212      	sxth	r2, r2
 801b8ea:	fb00 5002 	mla	r0, r0, r2, r5
 801b8ee:	fa1f fe81 	uxth.w	lr, r1
 801b8f2:	eb03 0a00 	add.w	sl, r3, r0
 801b8f6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801b8fa:	f813 9000 	ldrb.w	r9, [r3, r0]
 801b8fe:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b902:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801b906:	b29b      	uxth	r3, r3
 801b908:	f1bc 0f00 	cmp.w	ip, #0
 801b90c:	f000 81af 	beq.w	801bc6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801b910:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801b914:	940a      	str	r4, [sp, #40]	; 0x28
 801b916:	eb0a 0b02 	add.w	fp, sl, r2
 801b91a:	fa1f fa8c 	uxth.w	sl, ip
 801b91e:	fb0a fe0e 	mul.w	lr, sl, lr
 801b922:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801b926:	fa1f fa8a 	uxth.w	sl, sl
 801b92a:	eba5 050e 	sub.w	r5, r5, lr
 801b92e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b932:	940b      	str	r4, [sp, #44]	; 0x2c
 801b934:	eba3 030a 	sub.w	r3, r3, sl
 801b938:	b2ad      	uxth	r5, r5
 801b93a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b93c:	b29b      	uxth	r3, r3
 801b93e:	fb08 f505 	mul.w	r5, r8, r5
 801b942:	fb09 5303 	mla	r3, r9, r3, r5
 801b946:	fb0a 3304 	mla	r3, sl, r4, r3
 801b94a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b94c:	fb0e 3304 	mla	r3, lr, r4, r3
 801b950:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b954:	2b00      	cmp	r3, #0
 801b956:	f000 8105 	beq.w	801bb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b95a:	9c08      	ldr	r4, [sp, #32]
 801b95c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b960:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801b964:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801b968:	f000 8186 	beq.w	801bc78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b96c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801b970:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b974:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b978:	fb09 f000 	mul.w	r0, r9, r0
 801b97c:	fb0a fe0e 	mul.w	lr, sl, lr
 801b980:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801b984:	f100 0b20 	add.w	fp, r0, #32
 801b988:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801b98c:	44ce      	add	lr, r9
 801b98e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801b992:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b996:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b99a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b99e:	ea4e 0909 	orr.w	r9, lr, r9
 801b9a2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b9a6:	8868      	ldrh	r0, [r5, #2]
 801b9a8:	d019      	beq.n	801b9de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801b9aa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801b9ae:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b9b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b9b6:	fb08 f800 	mul.w	r8, r8, r0
 801b9ba:	fb0a fe0e 	mul.w	lr, sl, lr
 801b9be:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801b9c2:	f108 0b20 	add.w	fp, r8, #32
 801b9c6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801b9ca:	4486      	add	lr, r0
 801b9cc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801b9d0:	0a00      	lsrs	r0, r0, #8
 801b9d2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b9d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b9da:	ea4e 0000 	orr.w	r0, lr, r0
 801b9de:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801b9e2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b9e6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801b9ea:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b9ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b9f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b9f6:	ea4e 0909 	orr.w	r9, lr, r9
 801b9fa:	ea4a 0000 	orr.w	r0, sl, r0
 801b9fe:	f1bc 0f00 	cmp.w	ip, #0
 801ba02:	f000 813b 	beq.w	801bc7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801ba06:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801ba0a:	3a01      	subs	r2, #1
 801ba0c:	0052      	lsls	r2, r2, #1
 801ba0e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ba10:	3202      	adds	r2, #2
 801ba12:	2cff      	cmp	r4, #255	; 0xff
 801ba14:	eb05 0e02 	add.w	lr, r5, r2
 801ba18:	5aaa      	ldrh	r2, [r5, r2]
 801ba1a:	d018      	beq.n	801ba4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801ba1c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801ba20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ba24:	fb04 fa02 	mul.w	sl, r4, r2
 801ba28:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ba2c:	fb08 f805 	mul.w	r8, r8, r5
 801ba30:	f10a 0520 	add.w	r5, sl, #32
 801ba34:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ba38:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801ba3c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ba40:	4442      	add	r2, r8
 801ba42:	0a2d      	lsrs	r5, r5, #8
 801ba44:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ba48:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ba4c:	432a      	orrs	r2, r5
 801ba4e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ba50:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ba54:	2cff      	cmp	r4, #255	; 0xff
 801ba56:	d01a      	beq.n	801ba8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ba58:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801ba5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ba60:	fb04 fa05 	mul.w	sl, r4, r5
 801ba64:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ba68:	fb08 f80e 	mul.w	r8, r8, lr
 801ba6c:	f10a 0e20 	add.w	lr, sl, #32
 801ba70:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ba74:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801ba78:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ba7c:	4445      	add	r5, r8
 801ba7e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ba82:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ba86:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801ba8a:	ea45 050e 	orr.w	r5, r5, lr
 801ba8e:	fb1c fe01 	smulbb	lr, ip, r1
 801ba92:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ba96:	f1cc 0810 	rsb	r8, ip, #16
 801ba9a:	eba8 0801 	sub.w	r8, r8, r1
 801ba9e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801baa2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801baa6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801baaa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801baae:	4341      	muls	r1, r0
 801bab0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bab4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bab8:	ea4a 0202 	orr.w	r2, sl, r2
 801babc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801bac0:	fb09 1108 	mla	r1, r9, r8, r1
 801bac4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801bac8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801bacc:	fb0c 1102 	mla	r1, ip, r2, r1
 801bad0:	ea4b 0505 	orr.w	r5, fp, r5
 801bad4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801bad8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801badc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bae0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bae4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bae8:	ea42 0e0e 	orr.w	lr, r2, lr
 801baec:	fa1f f28e 	uxth.w	r2, lr
 801baf0:	2bff      	cmp	r3, #255	; 0xff
 801baf2:	f000 80d7 	beq.w	801bca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801baf6:	f8b7 c000 	ldrh.w	ip, [r7]
 801bafa:	43db      	mvns	r3, r3
 801bafc:	ea4f 202c 	mov.w	r0, ip, asr #8
 801bb00:	fa5f fe83 	uxtb.w	lr, r3
 801bb04:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bb08:	fb00 f00e 	mul.w	r0, r0, lr
 801bb0c:	1c41      	adds	r1, r0, #1
 801bb0e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801bb12:	1210      	asrs	r0, r2, #8
 801bb14:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bb18:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bb1c:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801bb20:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bb24:	496f      	ldr	r1, [pc, #444]	; (801bce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 801bb26:	fb05 f50e 	mul.w	r5, r5, lr
 801bb2a:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801bb2e:	1c69      	adds	r1, r5, #1
 801bb30:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801bb34:	10d1      	asrs	r1, r2, #3
 801bb36:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bb3a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801bb3e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801bb42:	b2db      	uxtb	r3, r3
 801bb44:	00c9      	lsls	r1, r1, #3
 801bb46:	fb03 f30e 	mul.w	r3, r3, lr
 801bb4a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bb4e:	4301      	orrs	r1, r0
 801bb50:	1c58      	adds	r0, r3, #1
 801bb52:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bb56:	00d3      	lsls	r3, r2, #3
 801bb58:	b2db      	uxtb	r3, r3
 801bb5a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bb5e:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 801bb62:	803b      	strh	r3, [r7, #0]
 801bb64:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bb66:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801bb68:	4413      	add	r3, r2
 801bb6a:	9325      	str	r3, [sp, #148]	; 0x94
 801bb6c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801bb6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bb70:	441a      	add	r2, r3
 801bb72:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bb74:	9226      	str	r2, [sp, #152]	; 0x98
 801bb76:	3b01      	subs	r3, #1
 801bb78:	3702      	adds	r7, #2
 801bb7a:	930f      	str	r3, [sp, #60]	; 0x3c
 801bb7c:	e693      	b.n	801b8a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bb7e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bb80:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801bb82:	9c26      	ldr	r4, [sp, #152]	; 0x98
 801bb84:	4433      	add	r3, r6
 801bb86:	9325      	str	r3, [sp, #148]	; 0x94
 801bb88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bb8a:	441c      	add	r4, r3
 801bb8c:	9b06      	ldr	r3, [sp, #24]
 801bb8e:	9426      	str	r4, [sp, #152]	; 0x98
 801bb90:	3b01      	subs	r3, #1
 801bb92:	9306      	str	r3, [sp, #24]
 801bb94:	9b07      	ldr	r3, [sp, #28]
 801bb96:	3302      	adds	r3, #2
 801bb98:	9307      	str	r3, [sp, #28]
 801bb9a:	e662      	b.n	801b862 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bb9c:	d028      	beq.n	801bbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801bb9e:	9b06      	ldr	r3, [sp, #24]
 801bba0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801bba2:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801bba4:	3b01      	subs	r3, #1
 801bba6:	fb00 5003 	mla	r0, r0, r3, r5
 801bbaa:	1400      	asrs	r0, r0, #16
 801bbac:	f53f ae76 	bmi.w	801b89c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bbb0:	3901      	subs	r1, #1
 801bbb2:	4288      	cmp	r0, r1
 801bbb4:	f6bf ae72 	bge.w	801b89c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bbb8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801bbba:	9826      	ldr	r0, [sp, #152]	; 0x98
 801bbbc:	fb01 0303 	mla	r3, r1, r3, r0
 801bbc0:	141b      	asrs	r3, r3, #16
 801bbc2:	f53f ae6b 	bmi.w	801b89c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bbc6:	3a01      	subs	r2, #1
 801bbc8:	4293      	cmp	r3, r2
 801bbca:	f6bf ae67 	bge.w	801b89c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bbce:	9b06      	ldr	r3, [sp, #24]
 801bbd0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801bbd4:	930f      	str	r3, [sp, #60]	; 0x3c
 801bbd6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801bbda:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bbdc:	2b00      	cmp	r3, #0
 801bbde:	f300 8083 	bgt.w	801bce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801bbe2:	9b06      	ldr	r3, [sp, #24]
 801bbe4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bbe8:	9b07      	ldr	r3, [sp, #28]
 801bbea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801bbee:	9307      	str	r3, [sp, #28]
 801bbf0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bbf2:	2b00      	cmp	r3, #0
 801bbf4:	f340 81e4 	ble.w	801bfc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801bbf8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801bbfc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bc00:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801bc04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc06:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801bc0a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801bc0e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801bc12:	eef0 6a48 	vmov.f32	s13, s16
 801bc16:	ee69 7a27 	vmul.f32	s15, s18, s15
 801bc1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bc1e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801bc22:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801bc26:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801bc2a:	eef0 6a68 	vmov.f32	s13, s17
 801bc2e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801bc32:	ee18 2a10 	vmov	r2, s16
 801bc36:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801bc3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc3e:	ee18 2a90 	vmov	r2, s17
 801bc42:	9327      	str	r3, [sp, #156]	; 0x9c
 801bc44:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc46:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc4a:	9328      	str	r3, [sp, #160]	; 0xa0
 801bc4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bc50:	3b01      	subs	r3, #1
 801bc52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bc56:	930e      	str	r3, [sp, #56]	; 0x38
 801bc58:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc5a:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 801bc5e:	bf08      	it	eq
 801bc60:	4613      	moveq	r3, r2
 801bc62:	9306      	str	r3, [sp, #24]
 801bc64:	eef0 8a67 	vmov.f32	s17, s15
 801bc68:	eeb0 8a47 	vmov.f32	s16, s14
 801bc6c:	e5eb      	b.n	801b846 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bc6e:	fb08 f505 	mul.w	r5, r8, r5
 801bc72:	fb09 5303 	mla	r3, r9, r3, r5
 801bc76:	e66b      	b.n	801b950 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801bc78:	4681      	mov	r9, r0
 801bc7a:	e692      	b.n	801b9a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bc7c:	f1c1 0210 	rsb	r2, r1, #16
 801bc80:	4341      	muls	r1, r0
 801bc82:	fb09 1902 	mla	r9, r9, r2, r1
 801bc86:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bc8a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801bc8e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bc92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bc96:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bc9a:	ea42 0909 	orr.w	r9, r2, r9
 801bc9e:	fa1f f289 	uxth.w	r2, r9
 801bca2:	e725      	b.n	801baf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801bca4:	803a      	strh	r2, [r7, #0]
 801bca6:	e75d      	b.n	801bb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801bca8:	f115 0e01 	adds.w	lr, r5, #1
 801bcac:	f53f af5a 	bmi.w	801bb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801bcb0:	4572      	cmp	r2, lr
 801bcb2:	f6ff af57 	blt.w	801bb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801bcb6:	f110 0e01 	adds.w	lr, r0, #1
 801bcba:	f53f af53 	bmi.w	801bb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801bcbe:	4573      	cmp	r3, lr
 801bcc0:	f6ff af50 	blt.w	801bb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801bcc4:	b21b      	sxth	r3, r3
 801bcc6:	b212      	sxth	r2, r2
 801bcc8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801bccc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801bcd0:	9301      	str	r3, [sp, #4]
 801bcd2:	9200      	str	r2, [sp, #0]
 801bcd4:	4639      	mov	r1, r7
 801bcd6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801bcda:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bcdc:	f7ff fbf2 	bl	801b4c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801bce0:	e740      	b.n	801bb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801bce2:	bf00      	nop
 801bce4:	fffff800 	.word	0xfffff800
 801bce8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bcea:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bcee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bcf0:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801bcf4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bcf6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bcfa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bcfc:	141f      	asrs	r7, r3, #16
 801bcfe:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bd00:	141b      	asrs	r3, r3, #16
 801bd02:	fb01 3707 	mla	r7, r1, r7, r3
 801bd06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd08:	fa1f fc82 	uxth.w	ip, r2
 801bd0c:	eb03 0a07 	add.w	sl, r3, r7
 801bd10:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801bd14:	f813 9007 	ldrb.w	r9, [r3, r7]
 801bd18:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bd1c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801bd20:	b29b      	uxth	r3, r3
 801bd22:	2d00      	cmp	r5, #0
 801bd24:	f000 8131 	beq.w	801bf8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x796>
 801bd28:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801bd2c:	940c      	str	r4, [sp, #48]	; 0x30
 801bd2e:	eb0a 0b01 	add.w	fp, sl, r1
 801bd32:	fa1f fa85 	uxth.w	sl, r5
 801bd36:	fb0a fc0c 	mul.w	ip, sl, ip
 801bd3a:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801bd3e:	fa1f fa8a 	uxth.w	sl, sl
 801bd42:	eba0 000c 	sub.w	r0, r0, ip
 801bd46:	eba3 030a 	sub.w	r3, r3, sl
 801bd4a:	b280      	uxth	r0, r0
 801bd4c:	fb08 f000 	mul.w	r0, r8, r0
 801bd50:	b29b      	uxth	r3, r3
 801bd52:	fb09 0303 	mla	r3, r9, r3, r0
 801bd56:	980c      	ldr	r0, [sp, #48]	; 0x30
 801bd58:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801bd5c:	940d      	str	r4, [sp, #52]	; 0x34
 801bd5e:	fb0a 3300 	mla	r3, sl, r0, r3
 801bd62:	fb0c 3304 	mla	r3, ip, r4, r3
 801bd66:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bd6a:	2b00      	cmp	r3, #0
 801bd6c:	f000 80ff 	beq.w	801bf6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 801bd70:	9808      	ldr	r0, [sp, #32]
 801bd72:	9c08      	ldr	r4, [sp, #32]
 801bd74:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801bd78:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801bd7c:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801bd80:	f000 8108 	beq.w	801bf94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a0>
 801bd84:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801bd88:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801bd8c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bd90:	fb09 f707 	mul.w	r7, r9, r7
 801bd94:	fb0a fc0c 	mul.w	ip, sl, ip
 801bd98:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801bd9c:	f107 0b20 	add.w	fp, r7, #32
 801bda0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801bda4:	44cc      	add	ip, r9
 801bda6:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801bdaa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bdae:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801bdb2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bdb6:	ea4c 0909 	orr.w	r9, ip, r9
 801bdba:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801bdbe:	8847      	ldrh	r7, [r0, #2]
 801bdc0:	d019      	beq.n	801bdf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 801bdc2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801bdc6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bdca:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bdce:	fb08 f807 	mul.w	r8, r8, r7
 801bdd2:	fb0a fc0c 	mul.w	ip, sl, ip
 801bdd6:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801bdda:	f108 0b20 	add.w	fp, r8, #32
 801bdde:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801bde2:	44bc      	add	ip, r7
 801bde4:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801bde8:	0a3f      	lsrs	r7, r7, #8
 801bdea:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801bdee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bdf2:	ea4c 0707 	orr.w	r7, ip, r7
 801bdf6:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801bdfa:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801bdfe:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801be02:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801be06:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801be0a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801be0e:	ea4c 0909 	orr.w	r9, ip, r9
 801be12:	ea4a 0707 	orr.w	r7, sl, r7
 801be16:	2d00      	cmp	r5, #0
 801be18:	f000 80be 	beq.w	801bf98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801be1c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801be20:	3901      	subs	r1, #1
 801be22:	0049      	lsls	r1, r1, #1
 801be24:	3102      	adds	r1, #2
 801be26:	eb00 0c01 	add.w	ip, r0, r1
 801be2a:	5a41      	ldrh	r1, [r0, r1]
 801be2c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801be2e:	28ff      	cmp	r0, #255	; 0xff
 801be30:	d019      	beq.n	801be66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 801be32:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801be34:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801be38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801be3c:	fb04 fa01 	mul.w	sl, r4, r1
 801be40:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801be44:	fb08 f800 	mul.w	r8, r8, r0
 801be48:	f10a 0020 	add.w	r0, sl, #32
 801be4c:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801be50:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801be54:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801be58:	4441      	add	r1, r8
 801be5a:	0a00      	lsrs	r0, r0, #8
 801be5c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801be60:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801be64:	4301      	orrs	r1, r0
 801be66:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801be68:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801be6c:	2cff      	cmp	r4, #255	; 0xff
 801be6e:	d01a      	beq.n	801bea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 801be70:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801be74:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801be78:	fb04 fa00 	mul.w	sl, r4, r0
 801be7c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801be80:	fb08 f80c 	mul.w	r8, r8, ip
 801be84:	f10a 0c20 	add.w	ip, sl, #32
 801be88:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801be8c:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801be90:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801be94:	4440      	add	r0, r8
 801be96:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801be9a:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801be9e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801bea2:	ea40 000c 	orr.w	r0, r0, ip
 801bea6:	fb15 fc02 	smulbb	ip, r5, r2
 801beaa:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801beae:	f1c5 0810 	rsb	r8, r5, #16
 801beb2:	eba8 0802 	sub.w	r8, r8, r2
 801beb6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801beba:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801bebe:	437a      	muls	r2, r7
 801bec0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801bec4:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801bec8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801becc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801bed0:	fb09 2208 	mla	r2, r9, r8, r2
 801bed4:	ea4a 0101 	orr.w	r1, sl, r1
 801bed8:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801bedc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801bee0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bee4:	fb05 2201 	mla	r2, r5, r1, r2
 801bee8:	ea4b 0000 	orr.w	r0, fp, r0
 801beec:	fb0c 2200 	mla	r2, ip, r0, r2
 801bef0:	0d57      	lsrs	r7, r2, #21
 801bef2:	0952      	lsrs	r2, r2, #5
 801bef4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bef8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801befc:	433a      	orrs	r2, r7
 801befe:	2bff      	cmp	r3, #255	; 0xff
 801bf00:	b292      	uxth	r2, r2
 801bf02:	d05a      	beq.n	801bfba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c6>
 801bf04:	f8be 7000 	ldrh.w	r7, [lr]
 801bf08:	4c30      	ldr	r4, [pc, #192]	; (801bfcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 801bf0a:	43db      	mvns	r3, r3
 801bf0c:	1238      	asrs	r0, r7, #8
 801bf0e:	fa5f fc83 	uxtb.w	ip, r3
 801bf12:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bf16:	10fd      	asrs	r5, r7, #3
 801bf18:	fb00 f00c 	mul.w	r0, r0, ip
 801bf1c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bf20:	fb05 f10c 	mul.w	r1, r5, ip
 801bf24:	1c45      	adds	r5, r0, #1
 801bf26:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801bf2a:	1215      	asrs	r5, r2, #8
 801bf2c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bf30:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801bf34:	1c4d      	adds	r5, r1, #1
 801bf36:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801bf3a:	10d1      	asrs	r1, r2, #3
 801bf3c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bf40:	00fb      	lsls	r3, r7, #3
 801bf42:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801bf46:	b2db      	uxtb	r3, r3
 801bf48:	00c9      	lsls	r1, r1, #3
 801bf4a:	fb03 f30c 	mul.w	r3, r3, ip
 801bf4e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bf52:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801bf56:	4308      	orrs	r0, r1
 801bf58:	00d2      	lsls	r2, r2, #3
 801bf5a:	1c59      	adds	r1, r3, #1
 801bf5c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801bf60:	b2d1      	uxtb	r1, r2
 801bf62:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801bf66:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 801bf6a:	f8ae 0000 	strh.w	r0, [lr]
 801bf6e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bf70:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801bf72:	4413      	add	r3, r2
 801bf74:	9325      	str	r3, [sp, #148]	; 0x94
 801bf76:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801bf78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bf7a:	441a      	add	r2, r3
 801bf7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bf7e:	9226      	str	r2, [sp, #152]	; 0x98
 801bf80:	3b01      	subs	r3, #1
 801bf82:	f10e 0e02 	add.w	lr, lr, #2
 801bf86:	930f      	str	r3, [sp, #60]	; 0x3c
 801bf88:	e627      	b.n	801bbda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801bf8a:	fb08 f000 	mul.w	r0, r8, r0
 801bf8e:	fb09 0303 	mla	r3, r9, r3, r0
 801bf92:	e6e8      	b.n	801bd66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 801bf94:	46b9      	mov	r9, r7
 801bf96:	e710      	b.n	801bdba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801bf98:	f1c2 0110 	rsb	r1, r2, #16
 801bf9c:	437a      	muls	r2, r7
 801bf9e:	fb09 2901 	mla	r9, r9, r1, r2
 801bfa2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bfa6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801bfaa:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801bfae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfb2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bfb6:	4302      	orrs	r2, r0
 801bfb8:	e7a1      	b.n	801befe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801bfba:	f8ae 2000 	strh.w	r2, [lr]
 801bfbe:	e7d6      	b.n	801bf6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 801bfc0:	b013      	add	sp, #76	; 0x4c
 801bfc2:	ecbd 8b08 	vpop	{d8-d11}
 801bfc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfca:	bf00      	nop
 801bfcc:	fffff800 	.word	0xfffff800

0801bfd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801bfd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bfd4:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 801bfd8:	fb0c 4e03 	mla	lr, ip, r3, r4
 801bfdc:	f1bc 0f00 	cmp.w	ip, #0
 801bfe0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801bfe4:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 801bfe8:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 801bfec:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801bff0:	8808      	ldrh	r0, [r1, #0]
 801bff2:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 801bff6:	db2f      	blt.n	801c058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801bff8:	45e2      	cmp	sl, ip
 801bffa:	dd2d      	ble.n	801c058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801bffc:	2c00      	cmp	r4, #0
 801bffe:	db29      	blt.n	801c054 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801c000:	42a3      	cmp	r3, r4
 801c002:	dd27      	ble.n	801c054 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801c004:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 801c008:	1c62      	adds	r2, r4, #1
 801c00a:	d428      	bmi.n	801c05e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801c00c:	4293      	cmp	r3, r2
 801c00e:	dd26      	ble.n	801c05e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801c010:	b32f      	cbz	r7, 801c05e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801c012:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 801c016:	f11c 0c01 	adds.w	ip, ip, #1
 801c01a:	d424      	bmi.n	801c066 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801c01c:	45e2      	cmp	sl, ip
 801c01e:	dd22      	ble.n	801c066 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801c020:	2e00      	cmp	r6, #0
 801c022:	f000 809c 	beq.w	801c15e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 801c026:	2c00      	cmp	r4, #0
 801c028:	db1b      	blt.n	801c062 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801c02a:	42a3      	cmp	r3, r4
 801c02c:	dd19      	ble.n	801c062 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801c02e:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801c032:	3401      	adds	r4, #1
 801c034:	d41a      	bmi.n	801c06c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801c036:	42a3      	cmp	r3, r4
 801c038:	dd18      	ble.n	801c06c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801c03a:	b1cf      	cbz	r7, 801c070 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 801c03c:	3301      	adds	r3, #1
 801c03e:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801c042:	2f0f      	cmp	r7, #15
 801c044:	d915      	bls.n	801c072 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 801c046:	4b49      	ldr	r3, [pc, #292]	; (801c16c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 801c048:	4a49      	ldr	r2, [pc, #292]	; (801c170 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 801c04a:	484a      	ldr	r0, [pc, #296]	; (801c174 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 801c04c:	f240 11ef 	movw	r1, #495	; 0x1ef
 801c050:	f006 f85e 	bl	8022110 <__assert_func>
 801c054:	4681      	mov	r9, r0
 801c056:	e7d7      	b.n	801c008 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 801c058:	4686      	mov	lr, r0
 801c05a:	4681      	mov	r9, r0
 801c05c:	e7db      	b.n	801c016 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801c05e:	4686      	mov	lr, r0
 801c060:	e7d9      	b.n	801c016 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801c062:	4684      	mov	ip, r0
 801c064:	e7e5      	b.n	801c032 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 801c066:	4603      	mov	r3, r0
 801c068:	4684      	mov	ip, r0
 801c06a:	e7ea      	b.n	801c042 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801c06c:	4603      	mov	r3, r0
 801c06e:	e7e8      	b.n	801c042 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801c070:	4603      	mov	r3, r0
 801c072:	2e0f      	cmp	r6, #15
 801c074:	d8e7      	bhi.n	801c046 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801c076:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801c07a:	fb17 f806 	smulbb	r8, r7, r6
 801c07e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c082:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 801c086:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c08a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801c08e:	ea44 0909 	orr.w	r9, r4, r9
 801c092:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c096:	f1c6 0410 	rsb	r4, r6, #16
 801c09a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c09e:	1be4      	subs	r4, r4, r7
 801c0a0:	041a      	lsls	r2, r3, #16
 801c0a2:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 801c0a6:	ea4a 0e0e 	orr.w	lr, sl, lr
 801c0aa:	fb07 fe0e 	mul.w	lr, r7, lr
 801c0ae:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c0b2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801c0b6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c0ba:	fb04 e409 	mla	r4, r4, r9, lr
 801c0be:	4313      	orrs	r3, r2
 801c0c0:	ea4f 420c 	mov.w	r2, ip, lsl #16
 801c0c4:	fb08 4303 	mla	r3, r8, r3, r4
 801c0c8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c0cc:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801c0d0:	4322      	orrs	r2, r4
 801c0d2:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801c0d6:	fb06 3202 	mla	r2, r6, r2, r3
 801c0da:	0d53      	lsrs	r3, r2, #21
 801c0dc:	0952      	lsrs	r2, r2, #5
 801c0de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c0e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c0e6:	431a      	orrs	r2, r3
 801c0e8:	b293      	uxth	r3, r2
 801c0ea:	b2af      	uxth	r7, r5
 801c0ec:	1202      	asrs	r2, r0, #8
 801c0ee:	43ed      	mvns	r5, r5
 801c0f0:	b2ed      	uxtb	r5, r5
 801c0f2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c0f6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c0fa:	fb12 f205 	smulbb	r2, r2, r5
 801c0fe:	10c6      	asrs	r6, r0, #3
 801c100:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c104:	fb0c 2c07 	mla	ip, ip, r7, r2
 801c108:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c10c:	10da      	asrs	r2, r3, #3
 801c10e:	fb16 f605 	smulbb	r6, r6, r5
 801c112:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c116:	fb02 6207 	mla	r2, r2, r7, r6
 801c11a:	b296      	uxth	r6, r2
 801c11c:	00c2      	lsls	r2, r0, #3
 801c11e:	00dc      	lsls	r4, r3, #3
 801c120:	b2d2      	uxtb	r2, r2
 801c122:	b2e4      	uxtb	r4, r4
 801c124:	fb12 f205 	smulbb	r2, r2, r5
 801c128:	fb04 2207 	mla	r2, r4, r7, r2
 801c12c:	fa1f fc8c 	uxth.w	ip, ip
 801c130:	b292      	uxth	r2, r2
 801c132:	f10c 0301 	add.w	r3, ip, #1
 801c136:	1c50      	adds	r0, r2, #1
 801c138:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c13c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c140:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c144:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c148:	4313      	orrs	r3, r2
 801c14a:	1c72      	adds	r2, r6, #1
 801c14c:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801c150:	0952      	lsrs	r2, r2, #5
 801c152:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c156:	4313      	orrs	r3, r2
 801c158:	800b      	strh	r3, [r1, #0]
 801c15a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c15e:	2f0f      	cmp	r7, #15
 801c160:	f63f af71 	bhi.w	801c046 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801c164:	4603      	mov	r3, r0
 801c166:	4684      	mov	ip, r0
 801c168:	e785      	b.n	801c076 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 801c16a:	bf00      	nop
 801c16c:	08026c23 	.word	0x08026c23
 801c170:	0802728e 	.word	0x0802728e
 801c174:	08026d0c 	.word	0x08026d0c

0801c178 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c17c:	ed2d 8b08 	vpush	{d8-d11}
 801c180:	b093      	sub	sp, #76	; 0x4c
 801c182:	461d      	mov	r5, r3
 801c184:	9210      	str	r2, [sp, #64]	; 0x40
 801c186:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c188:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 801c18c:	920b      	str	r2, [sp, #44]	; 0x2c
 801c18e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 801c192:	910a      	str	r1, [sp, #40]	; 0x28
 801c194:	6859      	ldr	r1, [r3, #4]
 801c196:	681b      	ldr	r3, [r3, #0]
 801c198:	9011      	str	r0, [sp, #68]	; 0x44
 801c19a:	fb01 2707 	mla	r7, r1, r7, r2
 801c19e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801c1a2:	9307      	str	r3, [sp, #28]
 801c1a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c1a6:	681b      	ldr	r3, [r3, #0]
 801c1a8:	9309      	str	r3, [sp, #36]	; 0x24
 801c1aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c1ac:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801c1b0:	43db      	mvns	r3, r3
 801c1b2:	b2db      	uxtb	r3, r3
 801c1b4:	eeb0 aa40 	vmov.f32	s20, s0
 801c1b8:	eef0 9a60 	vmov.f32	s19, s1
 801c1bc:	eeb0 9a41 	vmov.f32	s18, s2
 801c1c0:	eeb0 8a62 	vmov.f32	s16, s5
 801c1c4:	eef0 8a43 	vmov.f32	s17, s6
 801c1c8:	eef0 ba44 	vmov.f32	s23, s8
 801c1cc:	eeb0 ba64 	vmov.f32	s22, s9
 801c1d0:	eef0 aa45 	vmov.f32	s21, s10
 801c1d4:	9308      	str	r3, [sp, #32]
 801c1d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c1d8:	2b00      	cmp	r3, #0
 801c1da:	dc03      	bgt.n	801c1e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c1dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c1de:	2b00      	cmp	r3, #0
 801c1e0:	f340 8203 	ble.w	801c5ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801c1e4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c1e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c1ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c1ee:	1e48      	subs	r0, r1, #1
 801c1f0:	f102 3cff 	add.w	ip, r2, #4294967295
 801c1f4:	2d00      	cmp	r5, #0
 801c1f6:	f340 80da 	ble.w	801c3ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c1fa:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c1fe:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c202:	d406      	bmi.n	801c212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c204:	4586      	cmp	lr, r0
 801c206:	da04      	bge.n	801c212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c208:	2b00      	cmp	r3, #0
 801c20a:	db02      	blt.n	801c212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c20c:	4563      	cmp	r3, ip
 801c20e:	f2c0 80cf 	blt.w	801c3b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801c212:	f11e 0e01 	adds.w	lr, lr, #1
 801c216:	f100 80c1 	bmi.w	801c39c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c21a:	4571      	cmp	r1, lr
 801c21c:	f2c0 80be 	blt.w	801c39c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c220:	3301      	adds	r3, #1
 801c222:	f100 80bb 	bmi.w	801c39c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c226:	429a      	cmp	r2, r3
 801c228:	f2c0 80b8 	blt.w	801c39c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c22c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801c230:	46a9      	mov	r9, r5
 801c232:	f1b9 0f00 	cmp.w	r9, #0
 801c236:	f340 80d8 	ble.w	801c3ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801c23a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c23c:	1421      	asrs	r1, r4, #16
 801c23e:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c242:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c246:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c24a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801c24e:	f100 8111 	bmi.w	801c474 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801c252:	f10e 3aff 	add.w	sl, lr, #4294967295
 801c256:	4551      	cmp	r1, sl
 801c258:	f280 810c 	bge.w	801c474 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801c25c:	2800      	cmp	r0, #0
 801c25e:	f2c0 8109 	blt.w	801c474 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801c262:	f103 3aff 	add.w	sl, r3, #4294967295
 801c266:	4550      	cmp	r0, sl
 801c268:	f280 8104 	bge.w	801c474 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801c26c:	fa0f f38e 	sxth.w	r3, lr
 801c270:	fb00 1103 	mla	r1, r0, r3, r1
 801c274:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c276:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801c27a:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801c27e:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801c282:	f1bc 0f00 	cmp.w	ip, #0
 801c286:	d007      	beq.n	801c298 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 801c288:	005b      	lsls	r3, r3, #1
 801c28a:	eb0a 0003 	add.w	r0, sl, r3
 801c28e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801c292:	930c      	str	r3, [sp, #48]	; 0x30
 801c294:	8843      	ldrh	r3, [r0, #2]
 801c296:	930d      	str	r3, [sp, #52]	; 0x34
 801c298:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801c29c:	fb12 f30c 	smulbb	r3, r2, ip
 801c2a0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c2a4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c2a8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c2ac:	10db      	asrs	r3, r3, #3
 801c2ae:	ea40 000e 	orr.w	r0, r0, lr
 801c2b2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c2b6:	f1cc 0e10 	rsb	lr, ip, #16
 801c2ba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c2be:	ebae 0e02 	sub.w	lr, lr, r2
 801c2c2:	ea4a 0101 	orr.w	r1, sl, r1
 801c2c6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c2ca:	4351      	muls	r1, r2
 801c2cc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c2ce:	9f08      	ldr	r7, [sp, #32]
 801c2d0:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801c2d4:	fb0e 1e00 	mla	lr, lr, r0, r1
 801c2d8:	0410      	lsls	r0, r2, #16
 801c2da:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c2de:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c2e2:	4310      	orrs	r0, r2
 801c2e4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c2e6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c2e8:	0412      	lsls	r2, r2, #16
 801c2ea:	fb03 e000 	mla	r0, r3, r0, lr
 801c2ee:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c2f2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801c2f6:	ea42 020e 	orr.w	r2, r2, lr
 801c2fa:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801c2fe:	fb03 0302 	mla	r3, r3, r2, r0
 801c302:	0d5a      	lsrs	r2, r3, #21
 801c304:	095b      	lsrs	r3, r3, #5
 801c306:	f8b8 c000 	ldrh.w	ip, [r8]
 801c30a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c30e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c312:	4313      	orrs	r3, r2
 801c314:	b29b      	uxth	r3, r3
 801c316:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c31a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801c31e:	1218      	asrs	r0, r3, #8
 801c320:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c324:	fb11 f107 	smulbb	r1, r1, r7
 801c328:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801c32c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c330:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c334:	fb00 1002 	mla	r0, r0, r2, r1
 801c338:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c33c:	10d9      	asrs	r1, r3, #3
 801c33e:	fa5f fc8c 	uxtb.w	ip, ip
 801c342:	00db      	lsls	r3, r3, #3
 801c344:	b2db      	uxtb	r3, r3
 801c346:	fb1c fc07 	smulbb	ip, ip, r7
 801c34a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c34e:	fb1e fe07 	smulbb	lr, lr, r7
 801c352:	fb01 e102 	mla	r1, r1, r2, lr
 801c356:	fb03 c202 	mla	r2, r3, r2, ip
 801c35a:	b280      	uxth	r0, r0
 801c35c:	b292      	uxth	r2, r2
 801c35e:	1c43      	adds	r3, r0, #1
 801c360:	f102 0c01 	add.w	ip, r2, #1
 801c364:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c368:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801c36c:	b289      	uxth	r1, r1
 801c36e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c372:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c376:	4313      	orrs	r3, r2
 801c378:	1c4a      	adds	r2, r1, #1
 801c37a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c37e:	0949      	lsrs	r1, r1, #5
 801c380:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c384:	430b      	orrs	r3, r1
 801c386:	f8a8 3000 	strh.w	r3, [r8]
 801c38a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c38c:	441c      	add	r4, r3
 801c38e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c390:	f108 0802 	add.w	r8, r8, #2
 801c394:	441e      	add	r6, r3
 801c396:	f109 39ff 	add.w	r9, r9, #4294967295
 801c39a:	e74a      	b.n	801c232 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801c39c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c39e:	441c      	add	r4, r3
 801c3a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c3a2:	441e      	add	r6, r3
 801c3a4:	9b07      	ldr	r3, [sp, #28]
 801c3a6:	3302      	adds	r3, #2
 801c3a8:	3d01      	subs	r5, #1
 801c3aa:	9307      	str	r3, [sp, #28]
 801c3ac:	e722      	b.n	801c1f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c3ae:	d022      	beq.n	801c3f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801c3b0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801c3b2:	1e6b      	subs	r3, r5, #1
 801c3b4:	fb00 4003 	mla	r0, r0, r3, r4
 801c3b8:	1400      	asrs	r0, r0, #16
 801c3ba:	f53f af37 	bmi.w	801c22c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801c3be:	3901      	subs	r1, #1
 801c3c0:	4288      	cmp	r0, r1
 801c3c2:	f6bf af33 	bge.w	801c22c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801c3c6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c3c8:	fb01 6303 	mla	r3, r1, r3, r6
 801c3cc:	141b      	asrs	r3, r3, #16
 801c3ce:	f53f af2d 	bmi.w	801c22c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801c3d2:	3a01      	subs	r2, #1
 801c3d4:	4293      	cmp	r3, r2
 801c3d6:	f6bf af29 	bge.w	801c22c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801c3da:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801c3de:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801c3e2:	46a8      	mov	r8, r5
 801c3e4:	f1b8 0f00 	cmp.w	r8, #0
 801c3e8:	dc5e      	bgt.n	801c4a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c3ea:	9b07      	ldr	r3, [sp, #28]
 801c3ec:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c3f0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c3f4:	9307      	str	r3, [sp, #28]
 801c3f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c3f8:	2b00      	cmp	r3, #0
 801c3fa:	f340 80f6 	ble.w	801c5ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801c3fe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c402:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c406:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c40a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c40c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c410:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c414:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c418:	eef0 6a48 	vmov.f32	s13, s16
 801c41c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c420:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c424:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c428:	ee16 4a90 	vmov	r4, s13
 801c42c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c430:	eef0 6a68 	vmov.f32	s13, s17
 801c434:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c438:	ee18 2a10 	vmov	r2, s16
 801c43c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c440:	fb92 f3f3 	sdiv	r3, r2, r3
 801c444:	ee18 2a90 	vmov	r2, s17
 801c448:	9327      	str	r3, [sp, #156]	; 0x9c
 801c44a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c44c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c450:	9328      	str	r3, [sp, #160]	; 0xa0
 801c452:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c454:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c456:	3b01      	subs	r3, #1
 801c458:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c45c:	930a      	str	r3, [sp, #40]	; 0x28
 801c45e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c460:	ee16 6a90 	vmov	r6, s13
 801c464:	bf14      	ite	ne
 801c466:	461d      	movne	r5, r3
 801c468:	4615      	moveq	r5, r2
 801c46a:	eef0 8a67 	vmov.f32	s17, s15
 801c46e:	eeb0 8a47 	vmov.f32	s16, s14
 801c472:	e6b0      	b.n	801c1d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c474:	f111 0a01 	adds.w	sl, r1, #1
 801c478:	d487      	bmi.n	801c38a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801c47a:	45d6      	cmp	lr, sl
 801c47c:	db85      	blt.n	801c38a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801c47e:	f110 0a01 	adds.w	sl, r0, #1
 801c482:	d482      	bmi.n	801c38a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801c484:	4553      	cmp	r3, sl
 801c486:	db80      	blt.n	801c38a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801c488:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801c48a:	9101      	str	r1, [sp, #4]
 801c48c:	b21b      	sxth	r3, r3
 801c48e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801c492:	9300      	str	r3, [sp, #0]
 801c494:	e9cd c704 	strd	ip, r7, [sp, #16]
 801c498:	fa0f f38e 	sxth.w	r3, lr
 801c49c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c49e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c4a0:	4641      	mov	r1, r8
 801c4a2:	f7ff fd95 	bl	801bfd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801c4a6:	e770      	b.n	801c38a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801c4a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c4aa:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c4ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c4b0:	1430      	asrs	r0, r6, #16
 801c4b2:	1423      	asrs	r3, r4, #16
 801c4b4:	fb01 3000 	mla	r0, r1, r0, r3
 801c4b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c4ba:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801c4be:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801c4c2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801c4c6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c4ca:	8858      	ldrh	r0, [r3, #2]
 801c4cc:	f1be 0f00 	cmp.w	lr, #0
 801c4d0:	d00b      	beq.n	801c4ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c4d2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c4d6:	3901      	subs	r1, #1
 801c4d8:	0049      	lsls	r1, r1, #1
 801c4da:	3102      	adds	r1, #2
 801c4dc:	eb03 0b01 	add.w	fp, r3, r1
 801c4e0:	5a5b      	ldrh	r3, [r3, r1]
 801c4e2:	930e      	str	r3, [sp, #56]	; 0x38
 801c4e4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c4e8:	930f      	str	r3, [sp, #60]	; 0x3c
 801c4ea:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801c4ee:	fb12 f30e 	smulbb	r3, r2, lr
 801c4f2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c4f6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c4fa:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801c4fe:	10db      	asrs	r3, r3, #3
 801c500:	ea41 010c 	orr.w	r1, r1, ip
 801c504:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c508:	f1ce 0c10 	rsb	ip, lr, #16
 801c50c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c510:	ebac 0c02 	sub.w	ip, ip, r2
 801c514:	ea4b 0000 	orr.w	r0, fp, r0
 801c518:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c51c:	4350      	muls	r0, r2
 801c51e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c520:	9f08      	ldr	r7, [sp, #32]
 801c522:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801c526:	fb0c 0c01 	mla	ip, ip, r1, r0
 801c52a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801c52e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801c532:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c534:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c536:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c53a:	0412      	lsls	r2, r2, #16
 801c53c:	ea4b 0101 	orr.w	r1, fp, r1
 801c540:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c544:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c548:	fb03 c101 	mla	r1, r3, r1, ip
 801c54c:	4302      	orrs	r2, r0
 801c54e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801c552:	fb03 1202 	mla	r2, r3, r2, r1
 801c556:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801c55a:	0952      	lsrs	r2, r2, #5
 801c55c:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801c560:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801c564:	f8b9 2000 	ldrh.w	r2, [r9]
 801c568:	ea4b 0303 	orr.w	r3, fp, r3
 801c56c:	b29b      	uxth	r3, r3
 801c56e:	1211      	asrs	r1, r2, #8
 801c570:	1218      	asrs	r0, r3, #8
 801c572:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c576:	fb11 f107 	smulbb	r1, r1, r7
 801c57a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801c57e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c582:	00d2      	lsls	r2, r2, #3
 801c584:	fb00 100a 	mla	r0, r0, sl, r1
 801c588:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c58c:	10d9      	asrs	r1, r3, #3
 801c58e:	b2d2      	uxtb	r2, r2
 801c590:	00db      	lsls	r3, r3, #3
 801c592:	fb1c fc07 	smulbb	ip, ip, r7
 801c596:	fb12 f207 	smulbb	r2, r2, r7
 801c59a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c59e:	b2db      	uxtb	r3, r3
 801c5a0:	b280      	uxth	r0, r0
 801c5a2:	fb01 c10a 	mla	r1, r1, sl, ip
 801c5a6:	fb03 230a 	mla	r3, r3, sl, r2
 801c5aa:	b29b      	uxth	r3, r3
 801c5ac:	b289      	uxth	r1, r1
 801c5ae:	1c42      	adds	r2, r0, #1
 801c5b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c5b4:	f101 0c01 	add.w	ip, r1, #1
 801c5b8:	1c5a      	adds	r2, r3, #1
 801c5ba:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c5be:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c5c2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c5c4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c5c8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c5cc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c5d0:	4310      	orrs	r0, r2
 801c5d2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c5d6:	441c      	add	r4, r3
 801c5d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c5da:	ea40 000c 	orr.w	r0, r0, ip
 801c5de:	f829 0b02 	strh.w	r0, [r9], #2
 801c5e2:	441e      	add	r6, r3
 801c5e4:	f108 38ff 	add.w	r8, r8, #4294967295
 801c5e8:	e6fc      	b.n	801c3e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801c5ea:	b013      	add	sp, #76	; 0x4c
 801c5ec:	ecbd 8b08 	vpop	{d8-d11}
 801c5f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c5f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801c5f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c5f8:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 801c5fc:	fb06 5c03 	mla	ip, r6, r3, r5
 801c600:	2e00      	cmp	r6, #0
 801c602:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801c606:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 801c60a:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801c60e:	8808      	ldrh	r0, [r1, #0]
 801c610:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801c614:	db2e      	blt.n	801c674 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801c616:	45b0      	cmp	r8, r6
 801c618:	dd2c      	ble.n	801c674 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801c61a:	2d00      	cmp	r5, #0
 801c61c:	db28      	blt.n	801c670 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801c61e:	42ab      	cmp	r3, r5
 801c620:	dd26      	ble.n	801c670 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801c622:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801c626:	1c6a      	adds	r2, r5, #1
 801c628:	d427      	bmi.n	801c67a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801c62a:	4293      	cmp	r3, r2
 801c62c:	dd25      	ble.n	801c67a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801c62e:	b324      	cbz	r4, 801c67a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801c630:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801c634:	3601      	adds	r6, #1
 801c636:	d424      	bmi.n	801c682 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801c638:	45b0      	cmp	r8, r6
 801c63a:	dd22      	ble.n	801c682 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801c63c:	b31f      	cbz	r7, 801c686 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801c63e:	2d00      	cmp	r5, #0
 801c640:	db1d      	blt.n	801c67e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801c642:	42ab      	cmp	r3, r5
 801c644:	dd1b      	ble.n	801c67e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801c646:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801c64a:	3501      	adds	r5, #1
 801c64c:	d405      	bmi.n	801c65a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801c64e:	42ab      	cmp	r3, r5
 801c650:	dd03      	ble.n	801c65a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801c652:	b124      	cbz	r4, 801c65e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 801c654:	3301      	adds	r3, #1
 801c656:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801c65a:	2c0f      	cmp	r4, #15
 801c65c:	d801      	bhi.n	801c662 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801c65e:	2f0f      	cmp	r7, #15
 801c660:	d914      	bls.n	801c68c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801c662:	4b27      	ldr	r3, [pc, #156]	; (801c700 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 801c664:	4a27      	ldr	r2, [pc, #156]	; (801c704 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 801c666:	4828      	ldr	r0, [pc, #160]	; (801c708 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 801c668:	f240 11ef 	movw	r1, #495	; 0x1ef
 801c66c:	f005 fd50 	bl	8022110 <__assert_func>
 801c670:	4684      	mov	ip, r0
 801c672:	e7d8      	b.n	801c626 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 801c674:	4602      	mov	r2, r0
 801c676:	4684      	mov	ip, r0
 801c678:	e7dc      	b.n	801c634 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801c67a:	4602      	mov	r2, r0
 801c67c:	e7da      	b.n	801c634 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801c67e:	4606      	mov	r6, r0
 801c680:	e7e3      	b.n	801c64a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801c682:	4606      	mov	r6, r0
 801c684:	e7e9      	b.n	801c65a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801c686:	2c0f      	cmp	r4, #15
 801c688:	d8eb      	bhi.n	801c662 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801c68a:	4606      	mov	r6, r0
 801c68c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801c690:	fb14 f307 	smulbb	r3, r4, r7
 801c694:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801c698:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801c69c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c6a0:	10db      	asrs	r3, r3, #3
 801c6a2:	ea45 0c0c 	orr.w	ip, r5, ip
 801c6a6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c6aa:	f1c7 0510 	rsb	r5, r7, #16
 801c6ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c6b2:	1b2d      	subs	r5, r5, r4
 801c6b4:	ea4e 0202 	orr.w	r2, lr, r2
 801c6b8:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801c6bc:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801c6c0:	4354      	muls	r4, r2
 801c6c2:	fb05 450c 	mla	r5, r5, ip, r4
 801c6c6:	0404      	lsls	r4, r0, #16
 801c6c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c6cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c6d0:	4320      	orrs	r0, r4
 801c6d2:	fb03 5400 	mla	r4, r3, r0, r5
 801c6d6:	0430      	lsls	r0, r6, #16
 801c6d8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c6dc:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801c6e0:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801c6e4:	4330      	orrs	r0, r6
 801c6e6:	fb07 4000 	mla	r0, r7, r0, r4
 801c6ea:	0d43      	lsrs	r3, r0, #21
 801c6ec:	0940      	lsrs	r0, r0, #5
 801c6ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c6f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c6f6:	4318      	orrs	r0, r3
 801c6f8:	8008      	strh	r0, [r1, #0]
 801c6fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c6fe:	bf00      	nop
 801c700:	08026c23 	.word	0x08026c23
 801c704:	0802728e 	.word	0x0802728e
 801c708:	08026d0c 	.word	0x08026d0c

0801c70c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c70c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c710:	ed2d 8b08 	vpush	{d8-d11}
 801c714:	b08f      	sub	sp, #60	; 0x3c
 801c716:	461d      	mov	r5, r3
 801c718:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c71a:	920c      	str	r2, [sp, #48]	; 0x30
 801c71c:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 801c720:	9107      	str	r1, [sp, #28]
 801c722:	6859      	ldr	r1, [r3, #4]
 801c724:	681b      	ldr	r3, [r3, #0]
 801c726:	900d      	str	r0, [sp, #52]	; 0x34
 801c728:	fb01 2707 	mla	r7, r1, r7, r2
 801c72c:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801c730:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c732:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801c736:	f8d3 8000 	ldr.w	r8, [r3]
 801c73a:	eeb0 aa40 	vmov.f32	s20, s0
 801c73e:	eef0 9a60 	vmov.f32	s19, s1
 801c742:	eeb0 9a41 	vmov.f32	s18, s2
 801c746:	eeb0 8a62 	vmov.f32	s16, s5
 801c74a:	eef0 8a43 	vmov.f32	s17, s6
 801c74e:	eef0 ba44 	vmov.f32	s23, s8
 801c752:	eeb0 ba64 	vmov.f32	s22, s9
 801c756:	eef0 aa45 	vmov.f32	s21, s10
 801c75a:	9b07      	ldr	r3, [sp, #28]
 801c75c:	2b00      	cmp	r3, #0
 801c75e:	dc03      	bgt.n	801c768 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c760:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c762:	2b00      	cmp	r3, #0
 801c764:	f340 8181 	ble.w	801ca6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801c768:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c76a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c76e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c772:	1e48      	subs	r0, r1, #1
 801c774:	f102 3cff 	add.w	ip, r2, #4294967295
 801c778:	2d00      	cmp	r5, #0
 801c77a:	f340 809b 	ble.w	801c8b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801c77e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c782:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c786:	d406      	bmi.n	801c796 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c788:	4586      	cmp	lr, r0
 801c78a:	da04      	bge.n	801c796 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c78c:	2b00      	cmp	r3, #0
 801c78e:	db02      	blt.n	801c796 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c790:	4563      	cmp	r3, ip
 801c792:	f2c0 8090 	blt.w	801c8b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801c796:	f11e 0e01 	adds.w	lr, lr, #1
 801c79a:	f100 8084 	bmi.w	801c8a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801c79e:	4571      	cmp	r1, lr
 801c7a0:	f2c0 8081 	blt.w	801c8a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801c7a4:	3301      	adds	r3, #1
 801c7a6:	d47e      	bmi.n	801c8a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801c7a8:	429a      	cmp	r2, r3
 801c7aa:	db7c      	blt.n	801c8a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801c7ac:	46aa      	mov	sl, r5
 801c7ae:	46b9      	mov	r9, r7
 801c7b0:	f1ba 0f00 	cmp.w	sl, #0
 801c7b4:	f340 8099 	ble.w	801c8ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801c7b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c7ba:	1421      	asrs	r1, r4, #16
 801c7bc:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c7c0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c7c4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c7c8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801c7cc:	f100 80d0 	bmi.w	801c970 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801c7d0:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c7d4:	4559      	cmp	r1, fp
 801c7d6:	f280 80cb 	bge.w	801c970 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801c7da:	2800      	cmp	r0, #0
 801c7dc:	f2c0 80c8 	blt.w	801c970 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801c7e0:	f103 3bff 	add.w	fp, r3, #4294967295
 801c7e4:	4558      	cmp	r0, fp
 801c7e6:	f280 80c3 	bge.w	801c970 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801c7ea:	fa0f fe8e 	sxth.w	lr, lr
 801c7ee:	fb00 110e 	mla	r1, r0, lr, r1
 801c7f2:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801c7f6:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801c7fa:	8841      	ldrh	r1, [r0, #2]
 801c7fc:	f1bc 0f00 	cmp.w	ip, #0
 801c800:	d00b      	beq.n	801c81a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801c802:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801c806:	3b01      	subs	r3, #1
 801c808:	005b      	lsls	r3, r3, #1
 801c80a:	3302      	adds	r3, #2
 801c80c:	eb00 0e03 	add.w	lr, r0, r3
 801c810:	5ac3      	ldrh	r3, [r0, r3]
 801c812:	9308      	str	r3, [sp, #32]
 801c814:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801c818:	9309      	str	r3, [sp, #36]	; 0x24
 801c81a:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801c81e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c822:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c826:	ea40 000b 	orr.w	r0, r0, fp
 801c82a:	fb12 f30c 	smulbb	r3, r2, ip
 801c82e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c832:	10db      	asrs	r3, r3, #3
 801c834:	f1cc 0e10 	rsb	lr, ip, #16
 801c838:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c83c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c840:	ebae 0e02 	sub.w	lr, lr, r2
 801c844:	ea4b 0101 	orr.w	r1, fp, r1
 801c848:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c84c:	4351      	muls	r1, r2
 801c84e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c850:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801c854:	fb0e 1e00 	mla	lr, lr, r0, r1
 801c858:	0410      	lsls	r0, r2, #16
 801c85a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c85e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c862:	4310      	orrs	r0, r2
 801c864:	9a08      	ldr	r2, [sp, #32]
 801c866:	9908      	ldr	r1, [sp, #32]
 801c868:	0412      	lsls	r2, r2, #16
 801c86a:	fb03 e000 	mla	r0, r3, r0, lr
 801c86e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c872:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801c876:	ea42 020e 	orr.w	r2, r2, lr
 801c87a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801c87e:	fb03 0302 	mla	r3, r3, r2, r0
 801c882:	0d5a      	lsrs	r2, r3, #21
 801c884:	095b      	lsrs	r3, r3, #5
 801c886:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c88a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c88e:	4313      	orrs	r3, r2
 801c890:	f8a9 3000 	strh.w	r3, [r9]
 801c894:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801c896:	441c      	add	r4, r3
 801c898:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c89a:	f109 0902 	add.w	r9, r9, #2
 801c89e:	441e      	add	r6, r3
 801c8a0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c8a4:	e784      	b.n	801c7b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801c8a6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801c8a8:	441c      	add	r4, r3
 801c8aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c8ac:	3d01      	subs	r5, #1
 801c8ae:	441e      	add	r6, r3
 801c8b0:	3702      	adds	r7, #2
 801c8b2:	e761      	b.n	801c778 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c8b4:	d01d      	beq.n	801c8f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801c8b6:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c8b8:	1e6b      	subs	r3, r5, #1
 801c8ba:	fb00 4003 	mla	r0, r0, r3, r4
 801c8be:	1400      	asrs	r0, r0, #16
 801c8c0:	f53f af74 	bmi.w	801c7ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c8c4:	3901      	subs	r1, #1
 801c8c6:	4288      	cmp	r0, r1
 801c8c8:	f6bf af70 	bge.w	801c7ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c8cc:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c8ce:	fb01 6303 	mla	r3, r1, r3, r6
 801c8d2:	141b      	asrs	r3, r3, #16
 801c8d4:	f53f af6a 	bmi.w	801c7ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c8d8:	3a01      	subs	r2, #1
 801c8da:	4293      	cmp	r3, r2
 801c8dc:	f6bf af66 	bge.w	801c7ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c8e0:	46a9      	mov	r9, r5
 801c8e2:	46ba      	mov	sl, r7
 801c8e4:	f1b9 0f00 	cmp.w	r9, #0
 801c8e8:	dc5a      	bgt.n	801c9a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801c8ea:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c8ee:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801c8f2:	9b07      	ldr	r3, [sp, #28]
 801c8f4:	2b00      	cmp	r3, #0
 801c8f6:	f340 80b8 	ble.w	801ca6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801c8fa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c8fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c902:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c906:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c908:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c90c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c910:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c914:	eef0 6a48 	vmov.f32	s13, s16
 801c918:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c91c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c920:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c924:	ee16 4a90 	vmov	r4, s13
 801c928:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c92c:	eef0 6a68 	vmov.f32	s13, s17
 801c930:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c934:	ee18 2a10 	vmov	r2, s16
 801c938:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c93c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c940:	ee18 2a90 	vmov	r2, s17
 801c944:	9323      	str	r3, [sp, #140]	; 0x8c
 801c946:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c948:	fb92 f3f3 	sdiv	r3, r2, r3
 801c94c:	9324      	str	r3, [sp, #144]	; 0x90
 801c94e:	9b07      	ldr	r3, [sp, #28]
 801c950:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c952:	3b01      	subs	r3, #1
 801c954:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c958:	9307      	str	r3, [sp, #28]
 801c95a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c95c:	ee16 6a90 	vmov	r6, s13
 801c960:	bf14      	ite	ne
 801c962:	461d      	movne	r5, r3
 801c964:	4615      	moveq	r5, r2
 801c966:	eef0 8a67 	vmov.f32	s17, s15
 801c96a:	eeb0 8a47 	vmov.f32	s16, s14
 801c96e:	e6f4      	b.n	801c75a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801c970:	f111 0b01 	adds.w	fp, r1, #1
 801c974:	d48e      	bmi.n	801c894 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c976:	45de      	cmp	lr, fp
 801c978:	db8c      	blt.n	801c894 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c97a:	f110 0b01 	adds.w	fp, r0, #1
 801c97e:	d489      	bmi.n	801c894 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c980:	455b      	cmp	r3, fp
 801c982:	db87      	blt.n	801c894 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c984:	b21b      	sxth	r3, r3
 801c986:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801c98a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801c98e:	9300      	str	r3, [sp, #0]
 801c990:	4642      	mov	r2, r8
 801c992:	fa0f f38e 	sxth.w	r3, lr
 801c996:	4649      	mov	r1, r9
 801c998:	980d      	ldr	r0, [sp, #52]	; 0x34
 801c99a:	f7ff fe2b 	bl	801c5f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801c99e:	e779      	b.n	801c894 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c9a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c9a2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801c9a6:	1420      	asrs	r0, r4, #16
 801c9a8:	1431      	asrs	r1, r6, #16
 801c9aa:	fb03 0101 	mla	r1, r3, r1, r0
 801c9ae:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801c9b2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801c9b6:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801c9ba:	8841      	ldrh	r1, [r0, #2]
 801c9bc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c9c0:	f1be 0f00 	cmp.w	lr, #0
 801c9c4:	d00b      	beq.n	801c9de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801c9c6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801c9ca:	3b01      	subs	r3, #1
 801c9cc:	005b      	lsls	r3, r3, #1
 801c9ce:	3302      	adds	r3, #2
 801c9d0:	eb00 0b03 	add.w	fp, r0, r3
 801c9d4:	5ac3      	ldrh	r3, [r0, r3]
 801c9d6:	930a      	str	r3, [sp, #40]	; 0x28
 801c9d8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c9dc:	930b      	str	r3, [sp, #44]	; 0x2c
 801c9de:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801c9e2:	fb12 f30e 	smulbb	r3, r2, lr
 801c9e6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c9ea:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c9ee:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c9f2:	10db      	asrs	r3, r3, #3
 801c9f4:	ea40 000c 	orr.w	r0, r0, ip
 801c9f8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c9fc:	f1ce 0c10 	rsb	ip, lr, #16
 801ca00:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ca04:	ebac 0c02 	sub.w	ip, ip, r2
 801ca08:	ea4b 0101 	orr.w	r1, fp, r1
 801ca0c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ca10:	4351      	muls	r1, r2
 801ca12:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ca14:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801ca18:	fb0c 1c00 	mla	ip, ip, r0, r1
 801ca1c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801ca20:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801ca24:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ca26:	990a      	ldr	r1, [sp, #40]	; 0x28
 801ca28:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ca2c:	0412      	lsls	r2, r2, #16
 801ca2e:	ea4b 0000 	orr.w	r0, fp, r0
 801ca32:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ca36:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801ca3a:	fb03 c000 	mla	r0, r3, r0, ip
 801ca3e:	ea42 0b0b 	orr.w	fp, r2, fp
 801ca42:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801ca46:	fb03 000b 	mla	r0, r3, fp, r0
 801ca4a:	0d43      	lsrs	r3, r0, #21
 801ca4c:	0940      	lsrs	r0, r0, #5
 801ca4e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ca52:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ca56:	4318      	orrs	r0, r3
 801ca58:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801ca5a:	f82a 0b02 	strh.w	r0, [sl], #2
 801ca5e:	441c      	add	r4, r3
 801ca60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ca62:	f109 39ff 	add.w	r9, r9, #4294967295
 801ca66:	441e      	add	r6, r3
 801ca68:	e73c      	b.n	801c8e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801ca6a:	b00f      	add	sp, #60	; 0x3c
 801ca6c:	ecbd 8b08 	vpop	{d8-d11}
 801ca70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ca74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801ca74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca78:	880e      	ldrh	r6, [r1, #0]
 801ca7a:	b085      	sub	sp, #20
 801ca7c:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801ca80:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801ca84:	4690      	mov	r8, r2
 801ca86:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801ca8a:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801ca8e:	9200      	str	r2, [sp, #0]
 801ca90:	00f6      	lsls	r6, r6, #3
 801ca92:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801ca96:	9201      	str	r2, [sp, #4]
 801ca98:	2c00      	cmp	r4, #0
 801ca9a:	b2f2      	uxtb	r2, r6
 801ca9c:	fb04 5603 	mla	r6, r4, r3, r5
 801caa0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801caa4:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801caa8:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801caac:	9202      	str	r2, [sp, #8]
 801caae:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801cab2:	db36      	blt.n	801cb22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801cab4:	45a6      	cmp	lr, r4
 801cab6:	dd34      	ble.n	801cb22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801cab8:	2d00      	cmp	r5, #0
 801caba:	db30      	blt.n	801cb1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801cabc:	42ab      	cmp	r3, r5
 801cabe:	dd2e      	ble.n	801cb1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801cac0:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801cac4:	1c6e      	adds	r6, r5, #1
 801cac6:	d42f      	bmi.n	801cb28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801cac8:	42b3      	cmp	r3, r6
 801caca:	dd2d      	ble.n	801cb28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801cacc:	b370      	cbz	r0, 801cb2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 801cace:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801cad2:	3401      	adds	r4, #1
 801cad4:	d42e      	bmi.n	801cb34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801cad6:	45a6      	cmp	lr, r4
 801cad8:	dd2c      	ble.n	801cb34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801cada:	b377      	cbz	r7, 801cb3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 801cadc:	2d00      	cmp	r5, #0
 801cade:	db27      	blt.n	801cb30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801cae0:	42ab      	cmp	r3, r5
 801cae2:	dd25      	ble.n	801cb30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801cae4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801cae8:	3501      	adds	r5, #1
 801caea:	d429      	bmi.n	801cb40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801caec:	42ab      	cmp	r3, r5
 801caee:	dd27      	ble.n	801cb40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801caf0:	b340      	cbz	r0, 801cb44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801caf2:	3301      	adds	r3, #1
 801caf4:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801caf8:	280f      	cmp	r0, #15
 801cafa:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801cafe:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801cb02:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801cb06:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801cb0a:	d801      	bhi.n	801cb10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801cb0c:	2f0f      	cmp	r7, #15
 801cb0e:	d91b      	bls.n	801cb48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801cb10:	4b84      	ldr	r3, [pc, #528]	; (801cd24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 801cb12:	4a85      	ldr	r2, [pc, #532]	; (801cd28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801cb14:	4885      	ldr	r0, [pc, #532]	; (801cd2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801cb16:	f240 210d 	movw	r1, #525	; 0x20d
 801cb1a:	f005 faf9 	bl	8022110 <__assert_func>
 801cb1e:	2200      	movs	r2, #0
 801cb20:	e7d0      	b.n	801cac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 801cb22:	2600      	movs	r6, #0
 801cb24:	4632      	mov	r2, r6
 801cb26:	e7d4      	b.n	801cad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801cb28:	2600      	movs	r6, #0
 801cb2a:	e7d2      	b.n	801cad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801cb2c:	4606      	mov	r6, r0
 801cb2e:	e7d0      	b.n	801cad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801cb30:	2400      	movs	r4, #0
 801cb32:	e7d9      	b.n	801cae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801cb34:	2300      	movs	r3, #0
 801cb36:	461c      	mov	r4, r3
 801cb38:	e7de      	b.n	801caf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801cb3a:	463b      	mov	r3, r7
 801cb3c:	463c      	mov	r4, r7
 801cb3e:	e7db      	b.n	801caf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801cb40:	2300      	movs	r3, #0
 801cb42:	e7d9      	b.n	801caf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801cb44:	4603      	mov	r3, r0
 801cb46:	e7d7      	b.n	801caf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801cb48:	b280      	uxth	r0, r0
 801cb4a:	b2bf      	uxth	r7, r7
 801cb4c:	fb00 fe07 	mul.w	lr, r0, r7
 801cb50:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801cb54:	0100      	lsls	r0, r0, #4
 801cb56:	eba0 0c0e 	sub.w	ip, r0, lr
 801cb5a:	b2bf      	uxth	r7, r7
 801cb5c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801cb60:	fa1f fc8c 	uxth.w	ip, ip
 801cb64:	1bed      	subs	r5, r5, r7
 801cb66:	b2ad      	uxth	r5, r5
 801cb68:	fb0c f00a 	mul.w	r0, ip, sl
 801cb6c:	fb05 000b 	mla	r0, r5, fp, r0
 801cb70:	fb07 0009 	mla	r0, r7, r9, r0
 801cb74:	fb0e 0008 	mla	r0, lr, r8, r0
 801cb78:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801cb7c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801cb80:	9003      	str	r0, [sp, #12]
 801cb82:	d018      	beq.n	801cbb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 801cb84:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801cb88:	fb0b f000 	mul.w	r0, fp, r0
 801cb8c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801cb90:	fb0b fb02 	mul.w	fp, fp, r2
 801cb94:	0a02      	lsrs	r2, r0, #8
 801cb96:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801cb9a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801cb9e:	4402      	add	r2, r0
 801cba0:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801cba4:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801cba8:	0a12      	lsrs	r2, r2, #8
 801cbaa:	0a00      	lsrs	r0, r0, #8
 801cbac:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801cbb0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801cbb4:	4302      	orrs	r2, r0
 801cbb6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801cbba:	d019      	beq.n	801cbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 801cbbc:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801cbc0:	fb0a fb0b 	mul.w	fp, sl, fp
 801cbc4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801cbc8:	fb0a fa06 	mul.w	sl, sl, r6
 801cbcc:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801cbd0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801cbd4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cbd8:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801cbdc:	445e      	add	r6, fp
 801cbde:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801cbe2:	0a36      	lsrs	r6, r6, #8
 801cbe4:	0a00      	lsrs	r0, r0, #8
 801cbe6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801cbea:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801cbee:	4306      	orrs	r6, r0
 801cbf0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cbf4:	d019      	beq.n	801cc2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801cbf6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801cbfa:	fb09 fa0a 	mul.w	sl, r9, sl
 801cbfe:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801cc02:	fb09 f904 	mul.w	r9, r9, r4
 801cc06:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801cc0a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801cc0e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801cc12:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801cc16:	4454      	add	r4, sl
 801cc18:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801cc1c:	0a24      	lsrs	r4, r4, #8
 801cc1e:	0a00      	lsrs	r0, r0, #8
 801cc20:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801cc24:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801cc28:	4304      	orrs	r4, r0
 801cc2a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cc2e:	d019      	beq.n	801cc64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 801cc30:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801cc34:	fb08 f909 	mul.w	r9, r8, r9
 801cc38:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801cc3c:	fb08 f803 	mul.w	r8, r8, r3
 801cc40:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801cc44:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801cc48:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801cc4c:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801cc50:	444b      	add	r3, r9
 801cc52:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cc56:	0a1b      	lsrs	r3, r3, #8
 801cc58:	0a00      	lsrs	r0, r0, #8
 801cc5a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801cc5e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801cc62:	4303      	orrs	r3, r0
 801cc64:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801cc68:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801cc6c:	fb0c f808 	mul.w	r8, ip, r8
 801cc70:	fb05 8800 	mla	r8, r5, r0, r8
 801cc74:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801cc78:	fb07 8800 	mla	r8, r7, r0, r8
 801cc7c:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801cc80:	fb0e 8000 	mla	r0, lr, r0, r8
 801cc84:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801cc88:	fb0c f606 	mul.w	r6, ip, r6
 801cc8c:	0a00      	lsrs	r0, r0, #8
 801cc8e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801cc92:	fb05 6202 	mla	r2, r5, r2, r6
 801cc96:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801cc9a:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 801cc9e:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801cca2:	fb07 2700 	mla	r7, r7, r0, r2
 801cca6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801ccaa:	9b03      	ldr	r3, [sp, #12]
 801ccac:	9c00      	ldr	r4, [sp, #0]
 801ccae:	b2ad      	uxth	r5, r5
 801ccb0:	436b      	muls	r3, r5
 801ccb2:	fb0e 7000 	mla	r0, lr, r0, r7
 801ccb6:	1c5a      	adds	r2, r3, #1
 801ccb8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ccbc:	0a00      	lsrs	r0, r0, #8
 801ccbe:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801ccc2:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801ccc6:	ea48 0000 	orr.w	r0, r8, r0
 801ccca:	b2d2      	uxtb	r2, r2
 801cccc:	fb14 f602 	smulbb	r6, r4, r2
 801ccd0:	0c03      	lsrs	r3, r0, #16
 801ccd2:	fb03 6305 	mla	r3, r3, r5, r6
 801ccd6:	b29e      	uxth	r6, r3
 801ccd8:	9b01      	ldr	r3, [sp, #4]
 801ccda:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801ccde:	fb13 f302 	smulbb	r3, r3, r2
 801cce2:	fb04 3405 	mla	r4, r4, r5, r3
 801cce6:	9b02      	ldr	r3, [sp, #8]
 801cce8:	b2c0      	uxtb	r0, r0
 801ccea:	fb13 f202 	smulbb	r2, r3, r2
 801ccee:	fb00 2005 	mla	r0, r0, r5, r2
 801ccf2:	b280      	uxth	r0, r0
 801ccf4:	b2a4      	uxth	r4, r4
 801ccf6:	1c42      	adds	r2, r0, #1
 801ccf8:	1c73      	adds	r3, r6, #1
 801ccfa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ccfe:	1c62      	adds	r2, r4, #1
 801cd00:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801cd04:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801cd08:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801cd0c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801cd10:	0952      	lsrs	r2, r2, #5
 801cd12:	4303      	orrs	r3, r0
 801cd14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd18:	4313      	orrs	r3, r2
 801cd1a:	800b      	strh	r3, [r1, #0]
 801cd1c:	b005      	add	sp, #20
 801cd1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd22:	bf00      	nop
 801cd24:	08026c23 	.word	0x08026c23
 801cd28:	080271e5 	.word	0x080271e5
 801cd2c:	08026d0c 	.word	0x08026d0c

0801cd30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cd30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd34:	ed2d 8b08 	vpush	{d8-d11}
 801cd38:	b09d      	sub	sp, #116	; 0x74
 801cd3a:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 801cd3e:	9219      	str	r2, [sp, #100]	; 0x64
 801cd40:	9307      	str	r3, [sp, #28]
 801cd42:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801cd44:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801cd48:	931a      	str	r3, [sp, #104]	; 0x68
 801cd4a:	9117      	str	r1, [sp, #92]	; 0x5c
 801cd4c:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801cd50:	901b      	str	r0, [sp, #108]	; 0x6c
 801cd52:	6850      	ldr	r0, [r2, #4]
 801cd54:	6812      	ldr	r2, [r2, #0]
 801cd56:	fb00 1303 	mla	r3, r0, r3, r1
 801cd5a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cd5e:	930a      	str	r3, [sp, #40]	; 0x28
 801cd60:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801cd62:	681b      	ldr	r3, [r3, #0]
 801cd64:	9310      	str	r3, [sp, #64]	; 0x40
 801cd66:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801cd6a:	930b      	str	r3, [sp, #44]	; 0x2c
 801cd6c:	eeb0 aa40 	vmov.f32	s20, s0
 801cd70:	eef0 9a60 	vmov.f32	s19, s1
 801cd74:	eeb0 9a41 	vmov.f32	s18, s2
 801cd78:	eeb0 8a62 	vmov.f32	s16, s5
 801cd7c:	eef0 8a43 	vmov.f32	s17, s6
 801cd80:	eef0 ba44 	vmov.f32	s23, s8
 801cd84:	eeb0 ba64 	vmov.f32	s22, s9
 801cd88:	eef0 aa45 	vmov.f32	s21, s10
 801cd8c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801cd8e:	2b00      	cmp	r3, #0
 801cd90:	dc03      	bgt.n	801cd9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801cd92:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801cd94:	2b00      	cmp	r3, #0
 801cd96:	f340 837b 	ble.w	801d490 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801cd9a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801cd9c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cda0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cda4:	1e48      	subs	r0, r1, #1
 801cda6:	1e57      	subs	r7, r2, #1
 801cda8:	9b07      	ldr	r3, [sp, #28]
 801cdaa:	2b00      	cmp	r3, #0
 801cdac:	f340 8194 	ble.w	801d0d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801cdb0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801cdb4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cdb8:	d406      	bmi.n	801cdc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cdba:	4584      	cmp	ip, r0
 801cdbc:	da04      	bge.n	801cdc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cdbe:	2b00      	cmp	r3, #0
 801cdc0:	db02      	blt.n	801cdc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cdc2:	42bb      	cmp	r3, r7
 801cdc4:	f2c0 8189 	blt.w	801d0da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801cdc8:	f11c 0c01 	adds.w	ip, ip, #1
 801cdcc:	f100 8179 	bmi.w	801d0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801cdd0:	4561      	cmp	r1, ip
 801cdd2:	f2c0 8176 	blt.w	801d0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801cdd6:	3301      	adds	r3, #1
 801cdd8:	f100 8173 	bmi.w	801d0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801cddc:	429a      	cmp	r2, r3
 801cdde:	f2c0 8170 	blt.w	801d0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801cde2:	9b07      	ldr	r3, [sp, #28]
 801cde4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801cde6:	9318      	str	r3, [sp, #96]	; 0x60
 801cde8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cdea:	2b00      	cmp	r3, #0
 801cdec:	f340 8192 	ble.w	801d114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801cdf0:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801cdf2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801cdf4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801cdf8:	689b      	ldr	r3, [r3, #8]
 801cdfa:	1422      	asrs	r2, r4, #16
 801cdfc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ce00:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ce04:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ce08:	f100 81d3 	bmi.w	801d1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801ce0c:	f103 38ff 	add.w	r8, r3, #4294967295
 801ce10:	4542      	cmp	r2, r8
 801ce12:	f280 81ce 	bge.w	801d1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801ce16:	f1bc 0f00 	cmp.w	ip, #0
 801ce1a:	f2c0 81ca 	blt.w	801d1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801ce1e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ce22:	45c4      	cmp	ip, r8
 801ce24:	f280 81c5 	bge.w	801d1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801ce28:	b21b      	sxth	r3, r3
 801ce2a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ce2e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ce30:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ce34:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ce38:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ce3c:	2800      	cmp	r0, #0
 801ce3e:	f000 81af 	beq.w	801d1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801ce42:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ce46:	950c      	str	r5, [sp, #48]	; 0x30
 801ce48:	0e2d      	lsrs	r5, r5, #24
 801ce4a:	9513      	str	r5, [sp, #76]	; 0x4c
 801ce4c:	b181      	cbz	r1, 801ce70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801ce4e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ce52:	3b01      	subs	r3, #1
 801ce54:	009b      	lsls	r3, r3, #2
 801ce56:	3304      	adds	r3, #4
 801ce58:	eb08 0c03 	add.w	ip, r8, r3
 801ce5c:	f858 3003 	ldr.w	r3, [r8, r3]
 801ce60:	9308      	str	r3, [sp, #32]
 801ce62:	0e1b      	lsrs	r3, r3, #24
 801ce64:	9311      	str	r3, [sp, #68]	; 0x44
 801ce66:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ce6a:	930d      	str	r3, [sp, #52]	; 0x34
 801ce6c:	0e1b      	lsrs	r3, r3, #24
 801ce6e:	9314      	str	r3, [sp, #80]	; 0x50
 801ce70:	b280      	uxth	r0, r0
 801ce72:	b289      	uxth	r1, r1
 801ce74:	fb00 f901 	mul.w	r9, r0, r1
 801ce78:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ce7c:	0100      	lsls	r0, r0, #4
 801ce7e:	eba0 0809 	sub.w	r8, r0, r9
 801ce82:	b289      	uxth	r1, r1
 801ce84:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801ce88:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ce8a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ce8c:	fa1f f888 	uxth.w	r8, r8
 801ce90:	1a5b      	subs	r3, r3, r1
 801ce92:	b29b      	uxth	r3, r3
 801ce94:	fb08 f000 	mul.w	r0, r8, r0
 801ce98:	fb03 000e 	mla	r0, r3, lr, r0
 801ce9c:	fb01 0005 	mla	r0, r1, r5, r0
 801cea0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cea2:	fb09 0005 	mla	r0, r9, r5, r0
 801cea6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ceaa:	2800      	cmp	r0, #0
 801ceac:	f000 8100 	beq.w	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801ceb0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ceb4:	d01b      	beq.n	801ceee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801ceb6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801ceba:	fb0e fa0a 	mul.w	sl, lr, sl
 801cebe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801cec2:	fb0e fe02 	mul.w	lr, lr, r2
 801cec6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ceca:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801cece:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ced2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ced6:	4452      	add	r2, sl
 801ced8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801cedc:	0a12      	lsrs	r2, r2, #8
 801cede:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cee2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801cee6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ceea:	ea42 020c 	orr.w	r2, r2, ip
 801ceee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cef0:	2dff      	cmp	r5, #255	; 0xff
 801cef2:	d021      	beq.n	801cf38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801cef4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cef6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801cefa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cefc:	fb05 fb0b 	mul.w	fp, r5, fp
 801cf00:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cf02:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801cf06:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cf08:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cf0c:	fb05 fa0a 	mul.w	sl, r5, sl
 801cf10:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cf14:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cf18:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801cf1c:	44de      	add	lr, fp
 801cf1e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cf22:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cf26:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cf2a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cf2e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cf32:	ea4e 050a 	orr.w	r5, lr, sl
 801cf36:	950c      	str	r5, [sp, #48]	; 0x30
 801cf38:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cf3a:	2dff      	cmp	r5, #255	; 0xff
 801cf3c:	d021      	beq.n	801cf82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801cf3e:	9d08      	ldr	r5, [sp, #32]
 801cf40:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801cf44:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cf46:	fb05 fb0b 	mul.w	fp, r5, fp
 801cf4a:	9d08      	ldr	r5, [sp, #32]
 801cf4c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801cf50:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cf52:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cf56:	fb05 fa0a 	mul.w	sl, r5, sl
 801cf5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cf5e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cf62:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801cf66:	44de      	add	lr, fp
 801cf68:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cf6c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cf70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cf74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cf78:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cf7c:	ea4e 050a 	orr.w	r5, lr, sl
 801cf80:	9508      	str	r5, [sp, #32]
 801cf82:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cf84:	2dff      	cmp	r5, #255	; 0xff
 801cf86:	d021      	beq.n	801cfcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801cf88:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801cf8a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801cf8e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cf90:	fb05 fb0b 	mul.w	fp, r5, fp
 801cf94:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801cf96:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801cf9a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cf9c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cfa0:	fb05 fa0a 	mul.w	sl, r5, sl
 801cfa4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cfa8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cfac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801cfb0:	44de      	add	lr, fp
 801cfb2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cfb6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cfba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cfbe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cfc2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cfc6:	ea4e 050a 	orr.w	r5, lr, sl
 801cfca:	950d      	str	r5, [sp, #52]	; 0x34
 801cfcc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cfce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801cfd2:	9d08      	ldr	r5, [sp, #32]
 801cfd4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801cfd8:	fb08 fc0c 	mul.w	ip, r8, ip
 801cfdc:	fb03 cc0e 	mla	ip, r3, lr, ip
 801cfe0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801cfe4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801cfe6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801cfea:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801cfee:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cff0:	fb09 cc0e 	mla	ip, r9, lr, ip
 801cff4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801cff8:	fb08 f80e 	mul.w	r8, r8, lr
 801cffc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d000:	fb03 8202 	mla	r2, r3, r2, r8
 801d004:	9b08      	ldr	r3, [sp, #32]
 801d006:	f8b7 e000 	ldrh.w	lr, [r7]
 801d00a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d00c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801d010:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d012:	fb01 220a 	mla	r2, r1, sl, r2
 801d016:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801d01a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d01c:	fb09 2901 	mla	r9, r9, r1, r2
 801d020:	4343      	muls	r3, r0
 801d022:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d026:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d02a:	1c58      	adds	r0, r3, #1
 801d02c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d030:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801d034:	ea4c 0c09 	orr.w	ip, ip, r9
 801d038:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d03c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d03e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801d042:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d046:	ea4f 232e 	mov.w	r3, lr, asr #8
 801d04a:	b2c0      	uxtb	r0, r0
 801d04c:	fb11 f102 	smulbb	r1, r1, r2
 801d050:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d054:	fb03 1300 	mla	r3, r3, r0, r1
 801d058:	b299      	uxth	r1, r3
 801d05a:	ea4f 02ee 	mov.w	r2, lr, asr #3
 801d05e:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801d062:	fb13 f305 	smulbb	r3, r3, r5
 801d066:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d06a:	fb02 3200 	mla	r2, r2, r0, r3
 801d06e:	fa5f fc8c 	uxtb.w	ip, ip
 801d072:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 801d076:	b2db      	uxtb	r3, r3
 801d078:	fb1c fc05 	smulbb	ip, ip, r5
 801d07c:	fb03 cc00 	mla	ip, r3, r0, ip
 801d080:	b292      	uxth	r2, r2
 801d082:	fa1f fc8c 	uxth.w	ip, ip
 801d086:	1c4b      	adds	r3, r1, #1
 801d088:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d08c:	f10c 0001 	add.w	r0, ip, #1
 801d090:	1c51      	adds	r1, r2, #1
 801d092:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 801d096:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d09a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801d09e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d0a2:	0952      	lsrs	r2, r2, #5
 801d0a4:	ea43 030c 	orr.w	r3, r3, ip
 801d0a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d0ac:	4313      	orrs	r3, r2
 801d0ae:	803b      	strh	r3, [r7, #0]
 801d0b0:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801d0b2:	441c      	add	r4, r3
 801d0b4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d0b6:	441e      	add	r6, r3
 801d0b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d0ba:	3b01      	subs	r3, #1
 801d0bc:	3702      	adds	r7, #2
 801d0be:	9318      	str	r3, [sp, #96]	; 0x60
 801d0c0:	e692      	b.n	801cde8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801d0c2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801d0c4:	441c      	add	r4, r3
 801d0c6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d0c8:	441e      	add	r6, r3
 801d0ca:	9b07      	ldr	r3, [sp, #28]
 801d0cc:	3b01      	subs	r3, #1
 801d0ce:	9307      	str	r3, [sp, #28]
 801d0d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d0d2:	3302      	adds	r3, #2
 801d0d4:	930a      	str	r3, [sp, #40]	; 0x28
 801d0d6:	e667      	b.n	801cda8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d0d8:	d023      	beq.n	801d122 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801d0da:	9b07      	ldr	r3, [sp, #28]
 801d0dc:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801d0de:	3b01      	subs	r3, #1
 801d0e0:	fb00 4003 	mla	r0, r0, r3, r4
 801d0e4:	1400      	asrs	r0, r0, #16
 801d0e6:	f53f ae7c 	bmi.w	801cde2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d0ea:	3901      	subs	r1, #1
 801d0ec:	4288      	cmp	r0, r1
 801d0ee:	f6bf ae78 	bge.w	801cde2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d0f2:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801d0f4:	fb01 6303 	mla	r3, r1, r3, r6
 801d0f8:	141b      	asrs	r3, r3, #16
 801d0fa:	f53f ae72 	bmi.w	801cde2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d0fe:	3a01      	subs	r2, #1
 801d100:	4293      	cmp	r3, r2
 801d102:	f6bf ae6e 	bge.w	801cde2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d106:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d10a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801d10e:	f1bb 0f00 	cmp.w	fp, #0
 801d112:	dc6c      	bgt.n	801d1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801d114:	9b07      	ldr	r3, [sp, #28]
 801d116:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d11a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d11c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d120:	930a      	str	r3, [sp, #40]	; 0x28
 801d122:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d124:	2b00      	cmp	r3, #0
 801d126:	f340 81b3 	ble.w	801d490 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801d12a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801d12e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d132:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801d136:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d138:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801d13c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801d140:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801d144:	eef0 6a48 	vmov.f32	s13, s16
 801d148:	ee69 7a27 	vmul.f32	s15, s18, s15
 801d14c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d150:	ee37 8a48 	vsub.f32	s16, s14, s16
 801d154:	ee16 4a90 	vmov	r4, s13
 801d158:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801d15c:	eef0 6a68 	vmov.f32	s13, s17
 801d160:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801d164:	ee18 2a10 	vmov	r2, s16
 801d168:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801d16c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d170:	ee18 2a90 	vmov	r2, s17
 801d174:	9331      	str	r3, [sp, #196]	; 0xc4
 801d176:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d178:	fb92 f3f3 	sdiv	r3, r2, r3
 801d17c:	9332      	str	r3, [sp, #200]	; 0xc8
 801d17e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d180:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801d182:	3b01      	subs	r3, #1
 801d184:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d188:	9317      	str	r3, [sp, #92]	; 0x5c
 801d18a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d18c:	bf08      	it	eq
 801d18e:	4613      	moveq	r3, r2
 801d190:	ee16 6a90 	vmov	r6, s13
 801d194:	9307      	str	r3, [sp, #28]
 801d196:	eef0 8a67 	vmov.f32	s17, s15
 801d19a:	eeb0 8a47 	vmov.f32	s16, s14
 801d19e:	e5f5      	b.n	801cd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801d1a0:	2900      	cmp	r1, #0
 801d1a2:	f43f ae65 	beq.w	801ce70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801d1a6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801d1aa:	9308      	str	r3, [sp, #32]
 801d1ac:	0e1b      	lsrs	r3, r3, #24
 801d1ae:	9311      	str	r3, [sp, #68]	; 0x44
 801d1b0:	e65e      	b.n	801ce70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801d1b2:	f112 0801 	adds.w	r8, r2, #1
 801d1b6:	f53f af7b 	bmi.w	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d1ba:	4543      	cmp	r3, r8
 801d1bc:	f6ff af78 	blt.w	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d1c0:	f11c 0801 	adds.w	r8, ip, #1
 801d1c4:	f53f af74 	bmi.w	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d1c8:	45c6      	cmp	lr, r8
 801d1ca:	f6ff af71 	blt.w	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d1ce:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d1d0:	9201      	str	r2, [sp, #4]
 801d1d2:	fa0f f28e 	sxth.w	r2, lr
 801d1d6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801d1da:	e9cd c002 	strd	ip, r0, [sp, #8]
 801d1de:	9200      	str	r2, [sp, #0]
 801d1e0:	b21b      	sxth	r3, r3
 801d1e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d1e4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d1e6:	4639      	mov	r1, r7
 801d1e8:	f7ff fc44 	bl	801ca74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801d1ec:	e760      	b.n	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801d1ee:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801d1f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d1f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d1f6:	1427      	asrs	r7, r4, #16
 801d1f8:	1433      	asrs	r3, r6, #16
 801d1fa:	fb01 7303 	mla	r3, r1, r3, r7
 801d1fe:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801d202:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801d206:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d20a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d20e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d212:	2a00      	cmp	r2, #0
 801d214:	f000 8133 	beq.w	801d47e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74e>
 801d218:	687d      	ldr	r5, [r7, #4]
 801d21a:	950e      	str	r5, [sp, #56]	; 0x38
 801d21c:	0e2d      	lsrs	r5, r5, #24
 801d21e:	9515      	str	r5, [sp, #84]	; 0x54
 801d220:	b178      	cbz	r0, 801d242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801d222:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801d226:	3901      	subs	r1, #1
 801d228:	0089      	lsls	r1, r1, #2
 801d22a:	3104      	adds	r1, #4
 801d22c:	eb07 0e01 	add.w	lr, r7, r1
 801d230:	5879      	ldr	r1, [r7, r1]
 801d232:	9109      	str	r1, [sp, #36]	; 0x24
 801d234:	0e09      	lsrs	r1, r1, #24
 801d236:	9112      	str	r1, [sp, #72]	; 0x48
 801d238:	f8de 1004 	ldr.w	r1, [lr, #4]
 801d23c:	910f      	str	r1, [sp, #60]	; 0x3c
 801d23e:	0e09      	lsrs	r1, r1, #24
 801d240:	9116      	str	r1, [sp, #88]	; 0x58
 801d242:	b292      	uxth	r2, r2
 801d244:	b280      	uxth	r0, r0
 801d246:	fb02 f800 	mul.w	r8, r2, r0
 801d24a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d24e:	0112      	lsls	r2, r2, #4
 801d250:	eba2 0e08 	sub.w	lr, r2, r8
 801d254:	b280      	uxth	r0, r0
 801d256:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d25a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801d25c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d25e:	fa1f fe8e 	uxth.w	lr, lr
 801d262:	1a12      	subs	r2, r2, r0
 801d264:	b292      	uxth	r2, r2
 801d266:	fb0e f101 	mul.w	r1, lr, r1
 801d26a:	fb02 110c 	mla	r1, r2, ip, r1
 801d26e:	fb00 1105 	mla	r1, r0, r5, r1
 801d272:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d274:	fb08 1105 	mla	r1, r8, r5, r1
 801d278:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d27c:	2900      	cmp	r1, #0
 801d27e:	f000 80f5 	beq.w	801d46c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 801d282:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801d286:	d019      	beq.n	801d2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 801d288:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d28c:	fb0c fa0a 	mul.w	sl, ip, sl
 801d290:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d294:	fb0c fc03 	mul.w	ip, ip, r3
 801d298:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d29c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d2a0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d2a4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801d2a8:	4453      	add	r3, sl
 801d2aa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d2ae:	0a1b      	lsrs	r3, r3, #8
 801d2b0:	0a3f      	lsrs	r7, r7, #8
 801d2b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d2b6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801d2ba:	433b      	orrs	r3, r7
 801d2bc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d2be:	2dff      	cmp	r5, #255	; 0xff
 801d2c0:	d020      	beq.n	801d304 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801d2c2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d2c4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d2c8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d2ca:	436f      	muls	r7, r5
 801d2cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d2ce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d2d2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d2d4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d2d8:	fb05 fa0a 	mul.w	sl, r5, sl
 801d2dc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d2e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d2e4:	44bc      	add	ip, r7
 801d2e6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d2ea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d2ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d2f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d2f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d2fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d2fe:	ea4c 050a 	orr.w	r5, ip, sl
 801d302:	950e      	str	r5, [sp, #56]	; 0x38
 801d304:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d306:	2dff      	cmp	r5, #255	; 0xff
 801d308:	d020      	beq.n	801d34c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801d30a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d30c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d310:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d312:	436f      	muls	r7, r5
 801d314:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d316:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d31a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d31c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d320:	fb05 fa0a 	mul.w	sl, r5, sl
 801d324:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d328:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d32c:	44bc      	add	ip, r7
 801d32e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d332:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d336:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d33a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d33e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d342:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d346:	ea4c 050a 	orr.w	r5, ip, sl
 801d34a:	9509      	str	r5, [sp, #36]	; 0x24
 801d34c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d34e:	2dff      	cmp	r5, #255	; 0xff
 801d350:	d020      	beq.n	801d394 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 801d352:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d354:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d358:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d35a:	436f      	muls	r7, r5
 801d35c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d35e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d362:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d364:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d368:	fb05 fa0a 	mul.w	sl, r5, sl
 801d36c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d370:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d374:	44bc      	add	ip, r7
 801d376:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d37a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d37e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d382:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d386:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d38a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d38e:	ea4c 050a 	orr.w	r5, ip, sl
 801d392:	950f      	str	r5, [sp, #60]	; 0x3c
 801d394:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d396:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d39a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d39c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801d3a0:	fb0e f707 	mul.w	r7, lr, r7
 801d3a4:	fb02 770c 	mla	r7, r2, ip, r7
 801d3a8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d3ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d3ae:	fb00 770c 	mla	r7, r0, ip, r7
 801d3b2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d3b6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d3b8:	fb08 770c 	mla	r7, r8, ip, r7
 801d3bc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801d3c0:	fb0e fe0c 	mul.w	lr, lr, ip
 801d3c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d3c8:	fb02 e303 	mla	r3, r2, r3, lr
 801d3cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d3ce:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d3d0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801d3d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d3d6:	fb00 330a 	mla	r3, r0, sl, r3
 801d3da:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801d3de:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d3e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3e4:	f8b9 0000 	ldrh.w	r0, [r9]
 801d3e8:	4359      	muls	r1, r3
 801d3ea:	0a3f      	lsrs	r7, r7, #8
 801d3ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d3f0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d3f4:	1c4b      	adds	r3, r1, #1
 801d3f6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801d3fa:	ea47 070c 	orr.w	r7, r7, ip
 801d3fe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d402:	1202      	asrs	r2, r0, #8
 801d404:	0c3b      	lsrs	r3, r7, #16
 801d406:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801d40a:	b2c9      	uxtb	r1, r1
 801d40c:	fb13 f305 	smulbb	r3, r3, r5
 801d410:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d414:	fb02 3201 	mla	r2, r2, r1, r3
 801d418:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801d41c:	10c3      	asrs	r3, r0, #3
 801d41e:	b2ff      	uxtb	r7, r7
 801d420:	00c0      	lsls	r0, r0, #3
 801d422:	b2c0      	uxtb	r0, r0
 801d424:	fb17 f705 	smulbb	r7, r7, r5
 801d428:	fb00 7001 	mla	r0, r0, r1, r7
 801d42c:	b292      	uxth	r2, r2
 801d42e:	fb1c fc05 	smulbb	ip, ip, r5
 801d432:	b280      	uxth	r0, r0
 801d434:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d438:	fb03 c301 	mla	r3, r3, r1, ip
 801d43c:	1c51      	adds	r1, r2, #1
 801d43e:	f100 0c01 	add.w	ip, r0, #1
 801d442:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d446:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801d44a:	b29b      	uxth	r3, r3
 801d44c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d450:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801d454:	ea42 020c 	orr.w	r2, r2, ip
 801d458:	f103 0c01 	add.w	ip, r3, #1
 801d45c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801d460:	095b      	lsrs	r3, r3, #5
 801d462:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d466:	431a      	orrs	r2, r3
 801d468:	f8a9 2000 	strh.w	r2, [r9]
 801d46c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801d46e:	441c      	add	r4, r3
 801d470:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d472:	f109 0902 	add.w	r9, r9, #2
 801d476:	441e      	add	r6, r3
 801d478:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d47c:	e647      	b.n	801d10e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801d47e:	2800      	cmp	r0, #0
 801d480:	f43f aedf 	beq.w	801d242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801d484:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801d488:	9109      	str	r1, [sp, #36]	; 0x24
 801d48a:	0e09      	lsrs	r1, r1, #24
 801d48c:	9112      	str	r1, [sp, #72]	; 0x48
 801d48e:	e6d8      	b.n	801d242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801d490:	b01d      	add	sp, #116	; 0x74
 801d492:	ecbd 8b08 	vpop	{d8-d11}
 801d496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801d49c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801d49c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4a0:	880e      	ldrh	r6, [r1, #0]
 801d4a2:	b085      	sub	sp, #20
 801d4a4:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801d4a8:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801d4ac:	4690      	mov	r8, r2
 801d4ae:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801d4b2:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801d4b6:	9200      	str	r2, [sp, #0]
 801d4b8:	00f6      	lsls	r6, r6, #3
 801d4ba:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801d4be:	9201      	str	r2, [sp, #4]
 801d4c0:	2c00      	cmp	r4, #0
 801d4c2:	b2f2      	uxtb	r2, r6
 801d4c4:	fb04 5603 	mla	r6, r4, r3, r5
 801d4c8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801d4cc:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801d4d0:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801d4d4:	9202      	str	r2, [sp, #8]
 801d4d6:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801d4da:	db36      	blt.n	801d54a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801d4dc:	45a6      	cmp	lr, r4
 801d4de:	dd34      	ble.n	801d54a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801d4e0:	2d00      	cmp	r5, #0
 801d4e2:	db30      	blt.n	801d546 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 801d4e4:	42ab      	cmp	r3, r5
 801d4e6:	dd2e      	ble.n	801d546 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 801d4e8:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801d4ec:	1c6e      	adds	r6, r5, #1
 801d4ee:	d42f      	bmi.n	801d550 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 801d4f0:	42b3      	cmp	r3, r6
 801d4f2:	dd2d      	ble.n	801d550 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 801d4f4:	b370      	cbz	r0, 801d554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb8>
 801d4f6:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801d4fa:	3401      	adds	r4, #1
 801d4fc:	d42e      	bmi.n	801d55c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 801d4fe:	45a6      	cmp	lr, r4
 801d500:	dd2c      	ble.n	801d55c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 801d502:	b377      	cbz	r7, 801d562 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc6>
 801d504:	2d00      	cmp	r5, #0
 801d506:	db27      	blt.n	801d558 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 801d508:	42ab      	cmp	r3, r5
 801d50a:	dd25      	ble.n	801d558 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 801d50c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801d510:	3501      	adds	r5, #1
 801d512:	d429      	bmi.n	801d568 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801d514:	42ab      	cmp	r3, r5
 801d516:	dd27      	ble.n	801d568 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801d518:	b340      	cbz	r0, 801d56c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801d51a:	3301      	adds	r3, #1
 801d51c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801d520:	280f      	cmp	r0, #15
 801d522:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801d526:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801d52a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d52e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801d532:	d801      	bhi.n	801d538 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9c>
 801d534:	2f0f      	cmp	r7, #15
 801d536:	d91b      	bls.n	801d570 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 801d538:	4b7d      	ldr	r3, [pc, #500]	; (801d730 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 801d53a:	4a7e      	ldr	r2, [pc, #504]	; (801d734 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 801d53c:	487e      	ldr	r0, [pc, #504]	; (801d738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801d53e:	f240 210d 	movw	r1, #525	; 0x20d
 801d542:	f004 fde5 	bl	8022110 <__assert_func>
 801d546:	2200      	movs	r2, #0
 801d548:	e7d0      	b.n	801d4ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 801d54a:	2600      	movs	r6, #0
 801d54c:	4632      	mov	r2, r6
 801d54e:	e7d4      	b.n	801d4fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801d550:	2600      	movs	r6, #0
 801d552:	e7d2      	b.n	801d4fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801d554:	4606      	mov	r6, r0
 801d556:	e7d0      	b.n	801d4fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801d558:	2400      	movs	r4, #0
 801d55a:	e7d9      	b.n	801d510 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x74>
 801d55c:	2300      	movs	r3, #0
 801d55e:	461c      	mov	r4, r3
 801d560:	e7de      	b.n	801d520 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801d562:	463b      	mov	r3, r7
 801d564:	463c      	mov	r4, r7
 801d566:	e7db      	b.n	801d520 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801d568:	2300      	movs	r3, #0
 801d56a:	e7d9      	b.n	801d520 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801d56c:	4603      	mov	r3, r0
 801d56e:	e7d7      	b.n	801d520 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801d570:	b280      	uxth	r0, r0
 801d572:	b2bf      	uxth	r7, r7
 801d574:	fb00 fe07 	mul.w	lr, r0, r7
 801d578:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801d57c:	0100      	lsls	r0, r0, #4
 801d57e:	eba0 0c0e 	sub.w	ip, r0, lr
 801d582:	b2bf      	uxth	r7, r7
 801d584:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801d588:	fa1f fc8c 	uxth.w	ip, ip
 801d58c:	1bed      	subs	r5, r5, r7
 801d58e:	b2ad      	uxth	r5, r5
 801d590:	fb0c f00a 	mul.w	r0, ip, sl
 801d594:	fb05 000b 	mla	r0, r5, fp, r0
 801d598:	fb07 0009 	mla	r0, r7, r9, r0
 801d59c:	fb0e 0008 	mla	r0, lr, r8, r0
 801d5a0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d5a4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d5a8:	9003      	str	r0, [sp, #12]
 801d5aa:	d018      	beq.n	801d5de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 801d5ac:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801d5b0:	fb0b f000 	mul.w	r0, fp, r0
 801d5b4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d5b8:	fb0b fb02 	mul.w	fp, fp, r2
 801d5bc:	0a02      	lsrs	r2, r0, #8
 801d5be:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d5c2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801d5c6:	4402      	add	r2, r0
 801d5c8:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801d5cc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801d5d0:	0a12      	lsrs	r2, r2, #8
 801d5d2:	0a00      	lsrs	r0, r0, #8
 801d5d4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d5d8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d5dc:	4302      	orrs	r2, r0
 801d5de:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d5e2:	d019      	beq.n	801d618 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 801d5e4:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801d5e8:	fb0a fb0b 	mul.w	fp, sl, fp
 801d5ec:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d5f0:	fb0a fa06 	mul.w	sl, sl, r6
 801d5f4:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801d5f8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801d5fc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d600:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801d604:	445e      	add	r6, fp
 801d606:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d60a:	0a36      	lsrs	r6, r6, #8
 801d60c:	0a00      	lsrs	r0, r0, #8
 801d60e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801d612:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d616:	4306      	orrs	r6, r0
 801d618:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d61c:	d019      	beq.n	801d652 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 801d61e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801d622:	fb09 fa0a 	mul.w	sl, r9, sl
 801d626:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801d62a:	fb09 f904 	mul.w	r9, r9, r4
 801d62e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801d632:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d636:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d63a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801d63e:	4454      	add	r4, sl
 801d640:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801d644:	0a24      	lsrs	r4, r4, #8
 801d646:	0a00      	lsrs	r0, r0, #8
 801d648:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d64c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d650:	4304      	orrs	r4, r0
 801d652:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d656:	d019      	beq.n	801d68c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 801d658:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801d65c:	fb08 f909 	mul.w	r9, r8, r9
 801d660:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d664:	fb08 f803 	mul.w	r8, r8, r3
 801d668:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801d66c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d670:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801d674:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801d678:	444b      	add	r3, r9
 801d67a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d67e:	0a1b      	lsrs	r3, r3, #8
 801d680:	0a00      	lsrs	r0, r0, #8
 801d682:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d686:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d68a:	4303      	orrs	r3, r0
 801d68c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801d690:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801d694:	fb0c f808 	mul.w	r8, ip, r8
 801d698:	fb05 8800 	mla	r8, r5, r0, r8
 801d69c:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801d6a0:	fb07 8800 	mla	r8, r7, r0, r8
 801d6a4:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801d6a8:	fb0e 8000 	mla	r0, lr, r0, r8
 801d6ac:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d6b0:	0a00      	lsrs	r0, r0, #8
 801d6b2:	fb0c f606 	mul.w	r6, ip, r6
 801d6b6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d6ba:	fb05 6202 	mla	r2, r5, r2, r6
 801d6be:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801d6c2:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801d6c6:	fb07 2700 	mla	r7, r7, r0, r2
 801d6ca:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801d6ce:	9b03      	ldr	r3, [sp, #12]
 801d6d0:	9c02      	ldr	r4, [sp, #8]
 801d6d2:	9d01      	ldr	r5, [sp, #4]
 801d6d4:	fb0e 7000 	mla	r0, lr, r0, r7
 801d6d8:	43da      	mvns	r2, r3
 801d6da:	9b00      	ldr	r3, [sp, #0]
 801d6dc:	b2d2      	uxtb	r2, r2
 801d6de:	0a00      	lsrs	r0, r0, #8
 801d6e0:	4353      	muls	r3, r2
 801d6e2:	4354      	muls	r4, r2
 801d6e4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d6e8:	ea48 0000 	orr.w	r0, r8, r0
 801d6ec:	4355      	muls	r5, r2
 801d6ee:	4622      	mov	r2, r4
 801d6f0:	1c5c      	adds	r4, r3, #1
 801d6f2:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 801d6f6:	0c03      	lsrs	r3, r0, #16
 801d6f8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801d6fc:	4b0f      	ldr	r3, [pc, #60]	; (801d73c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801d6fe:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 801d702:	1c54      	adds	r4, r2, #1
 801d704:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801d708:	b2c2      	uxtb	r2, r0
 801d70a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801d70e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801d712:	1c6a      	adds	r2, r5, #1
 801d714:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801d718:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d71c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d720:	00c0      	lsls	r0, r0, #3
 801d722:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d726:	4318      	orrs	r0, r3
 801d728:	8008      	strh	r0, [r1, #0]
 801d72a:	b005      	add	sp, #20
 801d72c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d730:	08026c23 	.word	0x08026c23
 801d734:	080271e5 	.word	0x080271e5
 801d738:	08026d0c 	.word	0x08026d0c
 801d73c:	fffff800 	.word	0xfffff800

0801d740 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d744:	ed2d 8b08 	vpush	{d8-d11}
 801d748:	b09b      	sub	sp, #108	; 0x6c
 801d74a:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801d74e:	9218      	str	r2, [sp, #96]	; 0x60
 801d750:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801d752:	9116      	str	r1, [sp, #88]	; 0x58
 801d754:	9307      	str	r3, [sp, #28]
 801d756:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801d75a:	9019      	str	r0, [sp, #100]	; 0x64
 801d75c:	6850      	ldr	r0, [r2, #4]
 801d75e:	6812      	ldr	r2, [r2, #0]
 801d760:	fb00 1303 	mla	r3, r0, r3, r1
 801d764:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d768:	930a      	str	r3, [sp, #40]	; 0x28
 801d76a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801d76c:	681b      	ldr	r3, [r3, #0]
 801d76e:	930f      	str	r3, [sp, #60]	; 0x3c
 801d770:	eeb0 aa40 	vmov.f32	s20, s0
 801d774:	eef0 9a60 	vmov.f32	s19, s1
 801d778:	eeb0 9a41 	vmov.f32	s18, s2
 801d77c:	eeb0 8a62 	vmov.f32	s16, s5
 801d780:	eef0 8a43 	vmov.f32	s17, s6
 801d784:	eef0 ba44 	vmov.f32	s23, s8
 801d788:	eeb0 ba64 	vmov.f32	s22, s9
 801d78c:	eef0 aa45 	vmov.f32	s21, s10
 801d790:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801d792:	2b00      	cmp	r3, #0
 801d794:	dc03      	bgt.n	801d79e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801d796:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d798:	2b00      	cmp	r3, #0
 801d79a:	f340 838a 	ble.w	801deb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 801d79e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801d7a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d7a4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d7a8:	1e48      	subs	r0, r1, #1
 801d7aa:	1e57      	subs	r7, r2, #1
 801d7ac:	9b07      	ldr	r3, [sp, #28]
 801d7ae:	2b00      	cmp	r3, #0
 801d7b0:	f340 818b 	ble.w	801daca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d7b4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d7b8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d7bc:	d406      	bmi.n	801d7cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d7be:	4584      	cmp	ip, r0
 801d7c0:	da04      	bge.n	801d7cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d7c2:	2b00      	cmp	r3, #0
 801d7c4:	db02      	blt.n	801d7cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d7c6:	42bb      	cmp	r3, r7
 801d7c8:	f2c0 8180 	blt.w	801dacc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801d7cc:	f11c 0c01 	adds.w	ip, ip, #1
 801d7d0:	f100 8170 	bmi.w	801dab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d7d4:	4561      	cmp	r1, ip
 801d7d6:	f2c0 816d 	blt.w	801dab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d7da:	3301      	adds	r3, #1
 801d7dc:	f100 816a 	bmi.w	801dab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d7e0:	429a      	cmp	r2, r3
 801d7e2:	f2c0 8167 	blt.w	801dab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d7e6:	9b07      	ldr	r3, [sp, #28]
 801d7e8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d7ea:	9317      	str	r3, [sp, #92]	; 0x5c
 801d7ec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d7ee:	2b00      	cmp	r3, #0
 801d7f0:	f340 8189 	ble.w	801db06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801d7f4:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801d7f6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801d7f8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d7fc:	689b      	ldr	r3, [r3, #8]
 801d7fe:	1422      	asrs	r2, r4, #16
 801d800:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d804:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801d808:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d80c:	f100 81d8 	bmi.w	801dbc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801d810:	f103 38ff 	add.w	r8, r3, #4294967295
 801d814:	4542      	cmp	r2, r8
 801d816:	f280 81d3 	bge.w	801dbc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801d81a:	f1bc 0f00 	cmp.w	ip, #0
 801d81e:	f2c0 81cf 	blt.w	801dbc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801d822:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d826:	45c4      	cmp	ip, r8
 801d828:	f280 81ca 	bge.w	801dbc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801d82c:	b21b      	sxth	r3, r3
 801d82e:	fb0c 2203 	mla	r2, ip, r3, r2
 801d832:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d834:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801d838:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801d83c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801d840:	2900      	cmp	r1, #0
 801d842:	f000 81a6 	beq.w	801db92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d846:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801d84a:	950b      	str	r5, [sp, #44]	; 0x2c
 801d84c:	0e2d      	lsrs	r5, r5, #24
 801d84e:	9512      	str	r5, [sp, #72]	; 0x48
 801d850:	b180      	cbz	r0, 801d874 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801d852:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801d856:	3b01      	subs	r3, #1
 801d858:	009b      	lsls	r3, r3, #2
 801d85a:	3304      	adds	r3, #4
 801d85c:	eb08 0c03 	add.w	ip, r8, r3
 801d860:	f858 3003 	ldr.w	r3, [r8, r3]
 801d864:	9308      	str	r3, [sp, #32]
 801d866:	0e1b      	lsrs	r3, r3, #24
 801d868:	9310      	str	r3, [sp, #64]	; 0x40
 801d86a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801d86e:	930c      	str	r3, [sp, #48]	; 0x30
 801d870:	0e1b      	lsrs	r3, r3, #24
 801d872:	9313      	str	r3, [sp, #76]	; 0x4c
 801d874:	b289      	uxth	r1, r1
 801d876:	b280      	uxth	r0, r0
 801d878:	fb01 f900 	mul.w	r9, r1, r0
 801d87c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801d880:	0109      	lsls	r1, r1, #4
 801d882:	eba1 0809 	sub.w	r8, r1, r9
 801d886:	b280      	uxth	r0, r0
 801d888:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801d88c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d88e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d890:	fa1f f888 	uxth.w	r8, r8
 801d894:	1a09      	subs	r1, r1, r0
 801d896:	b289      	uxth	r1, r1
 801d898:	fb08 f303 	mul.w	r3, r8, r3
 801d89c:	fb01 330e 	mla	r3, r1, lr, r3
 801d8a0:	fb00 3305 	mla	r3, r0, r5, r3
 801d8a4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d8a6:	fb09 3305 	mla	r3, r9, r5, r3
 801d8aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d8ae:	2b00      	cmp	r3, #0
 801d8b0:	f000 80f7 	beq.w	801daa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d8b4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801d8b8:	d01b      	beq.n	801d8f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801d8ba:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801d8be:	fb0e fa0a 	mul.w	sl, lr, sl
 801d8c2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d8c6:	fb0e fe02 	mul.w	lr, lr, r2
 801d8ca:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801d8ce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d8d2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d8d6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d8da:	4452      	add	r2, sl
 801d8dc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d8e0:	0a12      	lsrs	r2, r2, #8
 801d8e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d8e6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d8ea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d8ee:	ea42 020c 	orr.w	r2, r2, ip
 801d8f2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d8f4:	2dff      	cmp	r5, #255	; 0xff
 801d8f6:	d021      	beq.n	801d93c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801d8f8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d8fa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d8fe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d900:	fb05 fb0b 	mul.w	fp, r5, fp
 801d904:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d906:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d90a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d90c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d910:	fb05 fa0a 	mul.w	sl, r5, sl
 801d914:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d918:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d91c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d920:	44de      	add	lr, fp
 801d922:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d926:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d92a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d92e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d932:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d936:	ea4e 050a 	orr.w	r5, lr, sl
 801d93a:	950b      	str	r5, [sp, #44]	; 0x2c
 801d93c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d93e:	2dff      	cmp	r5, #255	; 0xff
 801d940:	d021      	beq.n	801d986 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801d942:	9d08      	ldr	r5, [sp, #32]
 801d944:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d948:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d94a:	fb05 fb0b 	mul.w	fp, r5, fp
 801d94e:	9d08      	ldr	r5, [sp, #32]
 801d950:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801d954:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d956:	fb05 fa0e 	mul.w	sl, r5, lr
 801d95a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d95e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d962:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d966:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d96a:	44de      	add	lr, fp
 801d96c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d970:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d974:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d978:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d97c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d980:	ea4e 050a 	orr.w	r5, lr, sl
 801d984:	9508      	str	r5, [sp, #32]
 801d986:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d988:	2dff      	cmp	r5, #255	; 0xff
 801d98a:	d021      	beq.n	801d9d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801d98c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d98e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d992:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d994:	fb05 fb0b 	mul.w	fp, r5, fp
 801d998:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d99a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d99e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d9a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d9a4:	fb05 fa0a 	mul.w	sl, r5, sl
 801d9a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d9ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d9b0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d9b4:	44de      	add	lr, fp
 801d9b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d9ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d9be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d9c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d9c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d9ca:	ea4e 050a 	orr.w	r5, lr, sl
 801d9ce:	950c      	str	r5, [sp, #48]	; 0x30
 801d9d0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d9d2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d9d6:	9d08      	ldr	r5, [sp, #32]
 801d9d8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801d9dc:	fb08 fc0c 	mul.w	ip, r8, ip
 801d9e0:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d9e4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d9e8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d9ea:	fb00 cc0e 	mla	ip, r0, lr, ip
 801d9ee:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d9f2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d9f4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d9f8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801d9fc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801da00:	fb08 f80e 	mul.w	r8, r8, lr
 801da04:	fb01 8202 	mla	r2, r1, r2, r8
 801da08:	9908      	ldr	r1, [sp, #32]
 801da0a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801da0e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801da10:	fb00 220a 	mla	r2, r0, sl, r2
 801da14:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801da18:	fb09 2900 	mla	r9, r9, r0, r2
 801da1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801da20:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801da24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801da28:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801da2c:	ea4c 0c09 	orr.w	ip, ip, r9
 801da30:	2bff      	cmp	r3, #255	; 0xff
 801da32:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801da36:	f000 80b5 	beq.w	801dba4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801da3a:	8839      	ldrh	r1, [r7, #0]
 801da3c:	43db      	mvns	r3, r3
 801da3e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801da42:	fa5f f883 	uxtb.w	r8, r3
 801da46:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801da4a:	fb0e fe08 	mul.w	lr, lr, r8
 801da4e:	10c8      	asrs	r0, r1, #3
 801da50:	00cb      	lsls	r3, r1, #3
 801da52:	f10e 0101 	add.w	r1, lr, #1
 801da56:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801da5a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 801da5e:	eb0e 2e11 	add.w	lr, lr, r1, lsr #8
 801da62:	b2db      	uxtb	r3, r3
 801da64:	4964      	ldr	r1, [pc, #400]	; (801dbf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>)
 801da66:	fb03 f308 	mul.w	r3, r3, r8
 801da6a:	ea01 2e0e 	and.w	lr, r1, lr, lsl #8
 801da6e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801da72:	1c59      	adds	r1, r3, #1
 801da74:	fb00 f008 	mul.w	r0, r0, r8
 801da78:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801da7c:	fa5f fc8c 	uxtb.w	ip, ip
 801da80:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801da84:	1c43      	adds	r3, r0, #1
 801da86:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801da8a:	b2d3      	uxtb	r3, r2
 801da8c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801da90:	00db      	lsls	r3, r3, #3
 801da92:	ea4e 0cdc 	orr.w	ip, lr, ip, lsr #3
 801da96:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801da9a:	ea4c 0c03 	orr.w	ip, ip, r3
 801da9e:	f8a7 c000 	strh.w	ip, [r7]
 801daa2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801daa4:	441c      	add	r4, r3
 801daa6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801daa8:	441e      	add	r6, r3
 801daaa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801daac:	3b01      	subs	r3, #1
 801daae:	3702      	adds	r7, #2
 801dab0:	9317      	str	r3, [sp, #92]	; 0x5c
 801dab2:	e69b      	b.n	801d7ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801dab4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801dab6:	441c      	add	r4, r3
 801dab8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801daba:	441e      	add	r6, r3
 801dabc:	9b07      	ldr	r3, [sp, #28]
 801dabe:	3b01      	subs	r3, #1
 801dac0:	9307      	str	r3, [sp, #28]
 801dac2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dac4:	3302      	adds	r3, #2
 801dac6:	930a      	str	r3, [sp, #40]	; 0x28
 801dac8:	e670      	b.n	801d7ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801daca:	d023      	beq.n	801db14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801dacc:	9b07      	ldr	r3, [sp, #28]
 801dace:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801dad0:	3b01      	subs	r3, #1
 801dad2:	fb00 4003 	mla	r0, r0, r3, r4
 801dad6:	1400      	asrs	r0, r0, #16
 801dad8:	f53f ae85 	bmi.w	801d7e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801dadc:	3901      	subs	r1, #1
 801dade:	4288      	cmp	r0, r1
 801dae0:	f6bf ae81 	bge.w	801d7e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801dae4:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801dae6:	fb01 6303 	mla	r3, r1, r3, r6
 801daea:	141b      	asrs	r3, r3, #16
 801daec:	f53f ae7b 	bmi.w	801d7e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801daf0:	3a01      	subs	r2, #1
 801daf2:	4293      	cmp	r3, r2
 801daf4:	f6bf ae77 	bge.w	801d7e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801daf8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801dafc:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801db00:	f1bb 0f00 	cmp.w	fp, #0
 801db04:	dc7a      	bgt.n	801dbfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 801db06:	9b07      	ldr	r3, [sp, #28]
 801db08:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801db0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801db0e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801db12:	930a      	str	r3, [sp, #40]	; 0x28
 801db14:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801db16:	2b00      	cmp	r3, #0
 801db18:	f340 81cb 	ble.w	801deb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 801db1c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801db20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801db24:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801db28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801db2a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801db2e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801db32:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801db36:	eef0 6a48 	vmov.f32	s13, s16
 801db3a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801db3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db42:	ee37 8a48 	vsub.f32	s16, s14, s16
 801db46:	ee16 4a90 	vmov	r4, s13
 801db4a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801db4e:	eef0 6a68 	vmov.f32	s13, s17
 801db52:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801db56:	ee18 2a10 	vmov	r2, s16
 801db5a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801db5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801db62:	ee18 2a90 	vmov	r2, s17
 801db66:	932f      	str	r3, [sp, #188]	; 0xbc
 801db68:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801db6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801db6e:	9330      	str	r3, [sp, #192]	; 0xc0
 801db70:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801db72:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801db74:	3b01      	subs	r3, #1
 801db76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db7a:	9316      	str	r3, [sp, #88]	; 0x58
 801db7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801db7e:	bf08      	it	eq
 801db80:	4613      	moveq	r3, r2
 801db82:	ee16 6a90 	vmov	r6, s13
 801db86:	9307      	str	r3, [sp, #28]
 801db88:	eef0 8a67 	vmov.f32	s17, s15
 801db8c:	eeb0 8a47 	vmov.f32	s16, s14
 801db90:	e5fe      	b.n	801d790 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801db92:	2800      	cmp	r0, #0
 801db94:	f43f ae6e 	beq.w	801d874 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801db98:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801db9c:	9308      	str	r3, [sp, #32]
 801db9e:	0e1b      	lsrs	r3, r3, #24
 801dba0:	9310      	str	r3, [sp, #64]	; 0x40
 801dba2:	e667      	b.n	801d874 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801dba4:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801dba8:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801dbac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dbb0:	f022 0207 	bic.w	r2, r2, #7
 801dbb4:	431a      	orrs	r2, r3
 801dbb6:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801dbba:	ea42 0c0c 	orr.w	ip, r2, ip
 801dbbe:	e76e      	b.n	801da9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801dbc0:	f112 0801 	adds.w	r8, r2, #1
 801dbc4:	f53f af6d 	bmi.w	801daa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dbc8:	4543      	cmp	r3, r8
 801dbca:	f6ff af6a 	blt.w	801daa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dbce:	f11c 0801 	adds.w	r8, ip, #1
 801dbd2:	f53f af66 	bmi.w	801daa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dbd6:	45c6      	cmp	lr, r8
 801dbd8:	f6ff af63 	blt.w	801daa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dbdc:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801dbe0:	fa0f f28e 	sxth.w	r2, lr
 801dbe4:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801dbe8:	9200      	str	r2, [sp, #0]
 801dbea:	b21b      	sxth	r3, r3
 801dbec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dbee:	9819      	ldr	r0, [sp, #100]	; 0x64
 801dbf0:	4639      	mov	r1, r7
 801dbf2:	f7ff fc53 	bl	801d49c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801dbf6:	e754      	b.n	801daa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dbf8:	fffff800 	.word	0xfffff800
 801dbfc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801dbfe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801dc00:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801dc04:	1421      	asrs	r1, r4, #16
 801dc06:	1433      	asrs	r3, r6, #16
 801dc08:	fb07 1303 	mla	r3, r7, r3, r1
 801dc0c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801dc0e:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801dc12:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801dc16:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dc1a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801dc1e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801dc22:	2a00      	cmp	r2, #0
 801dc24:	f000 812e 	beq.w	801de84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801dc28:	684d      	ldr	r5, [r1, #4]
 801dc2a:	950d      	str	r5, [sp, #52]	; 0x34
 801dc2c:	0e2d      	lsrs	r5, r5, #24
 801dc2e:	9514      	str	r5, [sp, #80]	; 0x50
 801dc30:	b178      	cbz	r0, 801dc52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801dc32:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801dc36:	3f01      	subs	r7, #1
 801dc38:	00bf      	lsls	r7, r7, #2
 801dc3a:	3704      	adds	r7, #4
 801dc3c:	eb01 0e07 	add.w	lr, r1, r7
 801dc40:	59c9      	ldr	r1, [r1, r7]
 801dc42:	9109      	str	r1, [sp, #36]	; 0x24
 801dc44:	0e09      	lsrs	r1, r1, #24
 801dc46:	9111      	str	r1, [sp, #68]	; 0x44
 801dc48:	f8de 1004 	ldr.w	r1, [lr, #4]
 801dc4c:	910e      	str	r1, [sp, #56]	; 0x38
 801dc4e:	0e09      	lsrs	r1, r1, #24
 801dc50:	9115      	str	r1, [sp, #84]	; 0x54
 801dc52:	b292      	uxth	r2, r2
 801dc54:	b280      	uxth	r0, r0
 801dc56:	fb02 f900 	mul.w	r9, r2, r0
 801dc5a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801dc5e:	0112      	lsls	r2, r2, #4
 801dc60:	eba2 0e09 	sub.w	lr, r2, r9
 801dc64:	b280      	uxth	r0, r0
 801dc66:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801dc6a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dc6c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dc6e:	fa1f fe8e 	uxth.w	lr, lr
 801dc72:	1a09      	subs	r1, r1, r0
 801dc74:	b289      	uxth	r1, r1
 801dc76:	fb0e f202 	mul.w	r2, lr, r2
 801dc7a:	fb01 220c 	mla	r2, r1, ip, r2
 801dc7e:	fb00 2205 	mla	r2, r0, r5, r2
 801dc82:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dc84:	fb09 2205 	mla	r2, r9, r5, r2
 801dc88:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801dc8c:	2a00      	cmp	r2, #0
 801dc8e:	f000 80f0 	beq.w	801de72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 801dc92:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801dc96:	d019      	beq.n	801dccc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 801dc98:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801dc9c:	fb0c fa0a 	mul.w	sl, ip, sl
 801dca0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dca4:	fb0c fc03 	mul.w	ip, ip, r3
 801dca8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801dcac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dcb0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801dcb4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801dcb8:	4453      	add	r3, sl
 801dcba:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801dcbe:	0a1b      	lsrs	r3, r3, #8
 801dcc0:	0a3f      	lsrs	r7, r7, #8
 801dcc2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dcc6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801dcca:	433b      	orrs	r3, r7
 801dccc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dcce:	2dff      	cmp	r5, #255	; 0xff
 801dcd0:	d020      	beq.n	801dd14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801dcd2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dcd4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dcd8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dcda:	436f      	muls	r7, r5
 801dcdc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dcde:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dce2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dce4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dce8:	fb05 fa0a 	mul.w	sl, r5, sl
 801dcec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dcf0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dcf4:	44bc      	add	ip, r7
 801dcf6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dcfa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dcfe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd0e:	ea4c 050a 	orr.w	r5, ip, sl
 801dd12:	950d      	str	r5, [sp, #52]	; 0x34
 801dd14:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd16:	2dff      	cmp	r5, #255	; 0xff
 801dd18:	d020      	beq.n	801dd5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801dd1a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801dd1c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dd20:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd22:	436f      	muls	r7, r5
 801dd24:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801dd26:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801dd2a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd2c:	fb05 fa0c 	mul.w	sl, r5, ip
 801dd30:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dd34:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd38:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dd3c:	44bc      	add	ip, r7
 801dd3e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dd42:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dd46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd52:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd56:	ea4c 050a 	orr.w	r5, ip, sl
 801dd5a:	9509      	str	r5, [sp, #36]	; 0x24
 801dd5c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dd5e:	2dff      	cmp	r5, #255	; 0xff
 801dd60:	d020      	beq.n	801dda4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 801dd62:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dd64:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dd68:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dd6a:	436f      	muls	r7, r5
 801dd6c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dd6e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dd72:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dd74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dd78:	fb05 fa0a 	mul.w	sl, r5, sl
 801dd7c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dd80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd84:	44bc      	add	ip, r7
 801dd86:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dd8a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dd8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd96:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd9e:	ea4c 050a 	orr.w	r5, ip, sl
 801dda2:	950e      	str	r5, [sp, #56]	; 0x38
 801dda4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dda6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ddaa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ddac:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ddb0:	fb0e f707 	mul.w	r7, lr, r7
 801ddb4:	fb01 770c 	mla	r7, r1, ip, r7
 801ddb8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ddbc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ddbe:	fb00 770c 	mla	r7, r0, ip, r7
 801ddc2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ddc6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ddc8:	fb09 770c 	mla	r7, r9, ip, r7
 801ddcc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ddd0:	fb0e fe0c 	mul.w	lr, lr, ip
 801ddd4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ddd8:	fb01 e303 	mla	r3, r1, r3, lr
 801dddc:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ddde:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801dde2:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dde4:	fb00 330a 	mla	r3, r0, sl, r3
 801dde8:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ddec:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ddf0:	0a3f      	lsrs	r7, r7, #8
 801ddf2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ddf6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ddfa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ddfe:	ea47 070c 	orr.w	r7, r7, ip
 801de02:	2aff      	cmp	r2, #255	; 0xff
 801de04:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801de08:	d045      	beq.n	801de96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 801de0a:	f8b8 1000 	ldrh.w	r1, [r8]
 801de0e:	43d2      	mvns	r2, r2
 801de10:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801de14:	fa5f fe82 	uxtb.w	lr, r2
 801de18:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801de1c:	fb0c fc0e 	mul.w	ip, ip, lr
 801de20:	10c8      	asrs	r0, r1, #3
 801de22:	00ca      	lsls	r2, r1, #3
 801de24:	f10c 0101 	add.w	r1, ip, #1
 801de28:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801de2c:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801de30:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801de34:	b2d2      	uxtb	r2, r2
 801de36:	4921      	ldr	r1, [pc, #132]	; (801debc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 801de38:	fb02 f20e 	mul.w	r2, r2, lr
 801de3c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801de40:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801de44:	1c51      	adds	r1, r2, #1
 801de46:	fb00 f00e 	mul.w	r0, r0, lr
 801de4a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801de4e:	b2ff      	uxtb	r7, r7
 801de50:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801de54:	1c42      	adds	r2, r0, #1
 801de56:	ea4c 0cd7 	orr.w	ip, ip, r7, lsr #3
 801de5a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801de5e:	b2df      	uxtb	r7, r3
 801de60:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801de64:	00ff      	lsls	r7, r7, #3
 801de66:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801de6a:	ea4c 0c07 	orr.w	ip, ip, r7
 801de6e:	f8a8 c000 	strh.w	ip, [r8]
 801de72:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801de74:	441c      	add	r4, r3
 801de76:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801de78:	f108 0802 	add.w	r8, r8, #2
 801de7c:	441e      	add	r6, r3
 801de7e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801de82:	e63d      	b.n	801db00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801de84:	2800      	cmp	r0, #0
 801de86:	f43f aee4 	beq.w	801dc52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801de8a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801de8e:	9109      	str	r1, [sp, #36]	; 0x24
 801de90:	0e09      	lsrs	r1, r1, #24
 801de92:	9111      	str	r1, [sp, #68]	; 0x44
 801de94:	e6dd      	b.n	801dc52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801de96:	097a      	lsrs	r2, r7, #5
 801de98:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801de9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dea0:	f023 0307 	bic.w	r3, r3, #7
 801dea4:	4313      	orrs	r3, r2
 801dea6:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801deaa:	431f      	orrs	r7, r3
 801deac:	f8a8 7000 	strh.w	r7, [r8]
 801deb0:	e7df      	b.n	801de72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 801deb2:	b01b      	add	sp, #108	; 0x6c
 801deb4:	ecbd 8b08 	vpop	{d8-d11}
 801deb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801debc:	fffff800 	.word	0xfffff800

0801dec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801dec0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dec4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801dec8:	2c00      	cmp	r4, #0
 801deca:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801dece:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ded2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ded6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801deda:	fb04 ce03 	mla	lr, r4, r3, ip
 801dede:	db60      	blt.n	801dfa2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801dee0:	45a1      	cmp	r9, r4
 801dee2:	dd5e      	ble.n	801dfa2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801dee4:	f1bc 0f00 	cmp.w	ip, #0
 801dee8:	db59      	blt.n	801df9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801deea:	45e0      	cmp	r8, ip
 801deec:	dd57      	ble.n	801df9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801deee:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801def2:	f01e 0f01 	tst.w	lr, #1
 801def6:	5c16      	ldrb	r6, [r2, r0]
 801def8:	bf0c      	ite	eq
 801defa:	f006 060f 	andeq.w	r6, r6, #15
 801defe:	1136      	asrne	r6, r6, #4
 801df00:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801df04:	b2f6      	uxtb	r6, r6
 801df06:	f11c 0001 	adds.w	r0, ip, #1
 801df0a:	d44d      	bmi.n	801dfa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801df0c:	4580      	cmp	r8, r0
 801df0e:	dd4b      	ble.n	801dfa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801df10:	2d00      	cmp	r5, #0
 801df12:	d04b      	beq.n	801dfac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801df14:	f10e 0a01 	add.w	sl, lr, #1
 801df18:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801df1c:	f01a 0f01 	tst.w	sl, #1
 801df20:	5c10      	ldrb	r0, [r2, r0]
 801df22:	bf0c      	ite	eq
 801df24:	f000 000f 	andeq.w	r0, r0, #15
 801df28:	1100      	asrne	r0, r0, #4
 801df2a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801df2e:	b2c0      	uxtb	r0, r0
 801df30:	3401      	adds	r4, #1
 801df32:	d43f      	bmi.n	801dfb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801df34:	45a1      	cmp	r9, r4
 801df36:	dd3d      	ble.n	801dfb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801df38:	2f00      	cmp	r7, #0
 801df3a:	f000 809e 	beq.w	801e07a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801df3e:	f1bc 0f00 	cmp.w	ip, #0
 801df42:	db35      	blt.n	801dfb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801df44:	45e0      	cmp	r8, ip
 801df46:	dd33      	ble.n	801dfb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801df48:	eb03 090e 	add.w	r9, r3, lr
 801df4c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801df50:	f019 0f01 	tst.w	r9, #1
 801df54:	5d14      	ldrb	r4, [r2, r4]
 801df56:	bf0c      	ite	eq
 801df58:	f004 040f 	andeq.w	r4, r4, #15
 801df5c:	1124      	asrne	r4, r4, #4
 801df5e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801df62:	b2e4      	uxtb	r4, r4
 801df64:	f11c 0c01 	adds.w	ip, ip, #1
 801df68:	d427      	bmi.n	801dfba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801df6a:	45e0      	cmp	r8, ip
 801df6c:	dd25      	ble.n	801dfba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801df6e:	b335      	cbz	r5, 801dfbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801df70:	3301      	adds	r3, #1
 801df72:	449e      	add	lr, r3
 801df74:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801df78:	f01e 0f01 	tst.w	lr, #1
 801df7c:	5cd2      	ldrb	r2, [r2, r3]
 801df7e:	bf0c      	ite	eq
 801df80:	f002 020f 	andeq.w	r2, r2, #15
 801df84:	1112      	asrne	r2, r2, #4
 801df86:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801df8a:	b2d3      	uxtb	r3, r2
 801df8c:	2d0f      	cmp	r5, #15
 801df8e:	d917      	bls.n	801dfc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801df90:	4b3c      	ldr	r3, [pc, #240]	; (801e084 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801df92:	4a3d      	ldr	r2, [pc, #244]	; (801e088 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801df94:	483d      	ldr	r0, [pc, #244]	; (801e08c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801df96:	f240 210d 	movw	r1, #525	; 0x20d
 801df9a:	f004 f8b9 	bl	8022110 <__assert_func>
 801df9e:	2600      	movs	r6, #0
 801dfa0:	e7b1      	b.n	801df06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801dfa2:	2000      	movs	r0, #0
 801dfa4:	4606      	mov	r6, r0
 801dfa6:	e7c3      	b.n	801df30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801dfa8:	2000      	movs	r0, #0
 801dfaa:	e7c1      	b.n	801df30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801dfac:	4628      	mov	r0, r5
 801dfae:	e7bf      	b.n	801df30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801dfb0:	2400      	movs	r4, #0
 801dfb2:	e7d7      	b.n	801df64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801dfb4:	2300      	movs	r3, #0
 801dfb6:	461c      	mov	r4, r3
 801dfb8:	e7e8      	b.n	801df8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801dfba:	2300      	movs	r3, #0
 801dfbc:	e7e6      	b.n	801df8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801dfbe:	462b      	mov	r3, r5
 801dfc0:	2f0f      	cmp	r7, #15
 801dfc2:	d8e5      	bhi.n	801df90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801dfc4:	b2ad      	uxth	r5, r5
 801dfc6:	b2bf      	uxth	r7, r7
 801dfc8:	fb05 fc07 	mul.w	ip, r5, r7
 801dfcc:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801dfd0:	012d      	lsls	r5, r5, #4
 801dfd2:	b2bf      	uxth	r7, r7
 801dfd4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801dfd8:	eba5 050c 	sub.w	r5, r5, ip
 801dfdc:	1bd2      	subs	r2, r2, r7
 801dfde:	b2ad      	uxth	r5, r5
 801dfe0:	b292      	uxth	r2, r2
 801dfe2:	4368      	muls	r0, r5
 801dfe4:	fb06 0002 	mla	r0, r6, r2, r0
 801dfe8:	fb07 0404 	mla	r4, r7, r4, r0
 801dfec:	fb0c 4303 	mla	r3, ip, r3, r4
 801dff0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dff4:	2b00      	cmp	r3, #0
 801dff6:	d03e      	beq.n	801e076 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 801dff8:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801dffc:	4a24      	ldr	r2, [pc, #144]	; (801e090 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801dffe:	4343      	muls	r3, r0
 801e000:	1c58      	adds	r0, r3, #1
 801e002:	6816      	ldr	r6, [r2, #0]
 801e004:	880a      	ldrh	r2, [r1, #0]
 801e006:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e00a:	1200      	asrs	r0, r0, #8
 801e00c:	b284      	uxth	r4, r0
 801e00e:	1215      	asrs	r5, r2, #8
 801e010:	43c0      	mvns	r0, r0
 801e012:	b2c3      	uxtb	r3, r0
 801e014:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e018:	0a30      	lsrs	r0, r6, #8
 801e01a:	fb15 f503 	smulbb	r5, r5, r3
 801e01e:	10d7      	asrs	r7, r2, #3
 801e020:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e024:	fb00 5004 	mla	r0, r0, r4, r5
 801e028:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e02c:	08f5      	lsrs	r5, r6, #3
 801e02e:	00d2      	lsls	r2, r2, #3
 801e030:	fb17 f703 	smulbb	r7, r7, r3
 801e034:	b2d2      	uxtb	r2, r2
 801e036:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e03a:	00f6      	lsls	r6, r6, #3
 801e03c:	fb05 7504 	mla	r5, r5, r4, r7
 801e040:	fb12 f303 	smulbb	r3, r2, r3
 801e044:	b2f6      	uxtb	r6, r6
 801e046:	fb06 3304 	mla	r3, r6, r4, r3
 801e04a:	b2ad      	uxth	r5, r5
 801e04c:	b29a      	uxth	r2, r3
 801e04e:	b280      	uxth	r0, r0
 801e050:	1c6b      	adds	r3, r5, #1
 801e052:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801e056:	1c44      	adds	r4, r0, #1
 801e058:	095b      	lsrs	r3, r3, #5
 801e05a:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801e05e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e062:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e066:	4303      	orrs	r3, r0
 801e068:	1c50      	adds	r0, r2, #1
 801e06a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e06e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e072:	4313      	orrs	r3, r2
 801e074:	800b      	strh	r3, [r1, #0]
 801e076:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e07a:	2d0f      	cmp	r5, #15
 801e07c:	d888      	bhi.n	801df90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801e07e:	463b      	mov	r3, r7
 801e080:	463c      	mov	r4, r7
 801e082:	e79f      	b.n	801dfc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801e084:	08026c23 	.word	0x08026c23
 801e088:	080271e5 	.word	0x080271e5
 801e08c:	08026d0c 	.word	0x08026d0c
 801e090:	2000e408 	.word	0x2000e408

0801e094 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e098:	ed2d 8b08 	vpush	{d8-d11}
 801e09c:	b097      	sub	sp, #92	; 0x5c
 801e09e:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801e0a2:	9214      	str	r2, [sp, #80]	; 0x50
 801e0a4:	9309      	str	r3, [sp, #36]	; 0x24
 801e0a6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801e0a8:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801e0ac:	910d      	str	r1, [sp, #52]	; 0x34
 801e0ae:	930e      	str	r3, [sp, #56]	; 0x38
 801e0b0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801e0b4:	9015      	str	r0, [sp, #84]	; 0x54
 801e0b6:	6850      	ldr	r0, [r2, #4]
 801e0b8:	6812      	ldr	r2, [r2, #0]
 801e0ba:	fb00 1303 	mla	r3, r0, r3, r1
 801e0be:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801e0c2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e0c4:	689b      	ldr	r3, [r3, #8]
 801e0c6:	3301      	adds	r3, #1
 801e0c8:	f023 0301 	bic.w	r3, r3, #1
 801e0cc:	930a      	str	r3, [sp, #40]	; 0x28
 801e0ce:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e0d0:	681f      	ldr	r7, [r3, #0]
 801e0d2:	eeb0 aa40 	vmov.f32	s20, s0
 801e0d6:	eef0 9a60 	vmov.f32	s19, s1
 801e0da:	eeb0 9a41 	vmov.f32	s18, s2
 801e0de:	eeb0 8a62 	vmov.f32	s16, s5
 801e0e2:	eef0 8a43 	vmov.f32	s17, s6
 801e0e6:	eef0 ba44 	vmov.f32	s23, s8
 801e0ea:	eeb0 ba64 	vmov.f32	s22, s9
 801e0ee:	eef0 aa45 	vmov.f32	s21, s10
 801e0f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e0f4:	2b00      	cmp	r3, #0
 801e0f6:	dc03      	bgt.n	801e100 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e0f8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e0fa:	2b00      	cmp	r3, #0
 801e0fc:	f340 826a 	ble.w	801e5d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 801e100:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e102:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e106:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e10a:	1e48      	subs	r0, r1, #1
 801e10c:	f102 3cff 	add.w	ip, r2, #4294967295
 801e110:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e112:	2b00      	cmp	r3, #0
 801e114:	f340 80f3 	ble.w	801e2fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801e118:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e11c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e120:	d406      	bmi.n	801e130 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801e122:	4586      	cmp	lr, r0
 801e124:	da04      	bge.n	801e130 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801e126:	2b00      	cmp	r3, #0
 801e128:	db02      	blt.n	801e130 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801e12a:	4563      	cmp	r3, ip
 801e12c:	f2c0 80e8 	blt.w	801e300 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801e130:	f11e 0e01 	adds.w	lr, lr, #1
 801e134:	f100 80d9 	bmi.w	801e2ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801e138:	4571      	cmp	r1, lr
 801e13a:	f2c0 80d6 	blt.w	801e2ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801e13e:	3301      	adds	r3, #1
 801e140:	f100 80d3 	bmi.w	801e2ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801e144:	429a      	cmp	r2, r3
 801e146:	f2c0 80d0 	blt.w	801e2ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801e14a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e14e:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801e152:	930f      	str	r3, [sp, #60]	; 0x3c
 801e154:	46d0      	mov	r8, sl
 801e156:	f1b9 0f00 	cmp.w	r9, #0
 801e15a:	f340 80f0 	ble.w	801e33e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2aa>
 801e15e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801e160:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e164:	1423      	asrs	r3, r4, #16
 801e166:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e16a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e16e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e172:	f100 8139 	bmi.w	801e3e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801e176:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e17a:	455b      	cmp	r3, fp
 801e17c:	f280 8134 	bge.w	801e3e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801e180:	2800      	cmp	r0, #0
 801e182:	f2c0 8131 	blt.w	801e3e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801e186:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e18a:	4558      	cmp	r0, fp
 801e18c:	f280 812c 	bge.w	801e3e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801e190:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e192:	fb00 3305 	mla	r3, r0, r5, r3
 801e196:	0858      	lsrs	r0, r3, #1
 801e198:	07dd      	lsls	r5, r3, #31
 801e19a:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e19e:	bf54      	ite	pl
 801e1a0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e1a4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e1a8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e1ac:	fa5f fc8c 	uxtb.w	ip, ip
 801e1b0:	2a00      	cmp	r2, #0
 801e1b2:	f000 8108 	beq.w	801e3c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801e1b6:	1c58      	adds	r0, r3, #1
 801e1b8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e1bc:	07c0      	lsls	r0, r0, #31
 801e1be:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e1c2:	bf54      	ite	pl
 801e1c4:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e1c8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e1cc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e1d0:	fa5f f08e 	uxtb.w	r0, lr
 801e1d4:	9010      	str	r0, [sp, #64]	; 0x40
 801e1d6:	b1d1      	cbz	r1, 801e20e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801e1d8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e1da:	4403      	add	r3, r0
 801e1dc:	0858      	lsrs	r0, r3, #1
 801e1de:	07dd      	lsls	r5, r3, #31
 801e1e0:	5c38      	ldrb	r0, [r7, r0]
 801e1e2:	bf54      	ite	pl
 801e1e4:	f000 000f 	andpl.w	r0, r0, #15
 801e1e8:	1100      	asrmi	r0, r0, #4
 801e1ea:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e1ee:	3301      	adds	r3, #1
 801e1f0:	b2c0      	uxtb	r0, r0
 801e1f2:	900b      	str	r0, [sp, #44]	; 0x2c
 801e1f4:	0858      	lsrs	r0, r3, #1
 801e1f6:	07dd      	lsls	r5, r3, #31
 801e1f8:	f817 e000 	ldrb.w	lr, [r7, r0]
 801e1fc:	bf54      	ite	pl
 801e1fe:	f00e 030f 	andpl.w	r3, lr, #15
 801e202:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801e206:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e20a:	b2db      	uxtb	r3, r3
 801e20c:	9311      	str	r3, [sp, #68]	; 0x44
 801e20e:	b292      	uxth	r2, r2
 801e210:	b289      	uxth	r1, r1
 801e212:	fb02 f301 	mul.w	r3, r2, r1
 801e216:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e21a:	0112      	lsls	r2, r2, #4
 801e21c:	b289      	uxth	r1, r1
 801e21e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801e222:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e224:	1ad2      	subs	r2, r2, r3
 801e226:	1a40      	subs	r0, r0, r1
 801e228:	b292      	uxth	r2, r2
 801e22a:	436a      	muls	r2, r5
 801e22c:	b280      	uxth	r0, r0
 801e22e:	fb0c 2c00 	mla	ip, ip, r0, r2
 801e232:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e234:	fb01 c102 	mla	r1, r1, r2, ip
 801e238:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e23a:	fb03 1302 	mla	r3, r3, r2, r1
 801e23e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e242:	2b00      	cmp	r3, #0
 801e244:	d048      	beq.n	801e2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801e246:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e248:	4a78      	ldr	r2, [pc, #480]	; (801e42c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801e24a:	434b      	muls	r3, r1
 801e24c:	1c59      	adds	r1, r3, #1
 801e24e:	f8d2 e000 	ldr.w	lr, [r2]
 801e252:	f8b8 2000 	ldrh.w	r2, [r8]
 801e256:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e25a:	121b      	asrs	r3, r3, #8
 801e25c:	b299      	uxth	r1, r3
 801e25e:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e262:	43db      	mvns	r3, r3
 801e264:	b2db      	uxtb	r3, r3
 801e266:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801e26a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e26e:	fb1c fc03 	smulbb	ip, ip, r3
 801e272:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801e276:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e27a:	fb00 c001 	mla	r0, r0, r1, ip
 801e27e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e282:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801e286:	fb1b fb03 	smulbb	fp, fp, r3
 801e28a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e28e:	00d2      	lsls	r2, r2, #3
 801e290:	fb0c bc01 	mla	ip, ip, r1, fp
 801e294:	b2d2      	uxtb	r2, r2
 801e296:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e29a:	fb12 f303 	smulbb	r3, r2, r3
 801e29e:	fa1f fc8c 	uxth.w	ip, ip
 801e2a2:	fa5f fe8e 	uxtb.w	lr, lr
 801e2a6:	b280      	uxth	r0, r0
 801e2a8:	fb0e 3101 	mla	r1, lr, r1, r3
 801e2ac:	f10c 0201 	add.w	r2, ip, #1
 801e2b0:	b289      	uxth	r1, r1
 801e2b2:	1c43      	adds	r3, r0, #1
 801e2b4:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801e2b8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e2bc:	0952      	lsrs	r2, r2, #5
 801e2be:	1c4b      	adds	r3, r1, #1
 801e2c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e2c4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e2c8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e2cc:	4310      	orrs	r0, r2
 801e2ce:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801e2d2:	4308      	orrs	r0, r1
 801e2d4:	f8a8 0000 	strh.w	r0, [r8]
 801e2d8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801e2da:	441c      	add	r4, r3
 801e2dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e2de:	f108 0802 	add.w	r8, r8, #2
 801e2e2:	441e      	add	r6, r3
 801e2e4:	f109 39ff 	add.w	r9, r9, #4294967295
 801e2e8:	e735      	b.n	801e156 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 801e2ea:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801e2ec:	441c      	add	r4, r3
 801e2ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e2f0:	441e      	add	r6, r3
 801e2f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e2f4:	3b01      	subs	r3, #1
 801e2f6:	9309      	str	r3, [sp, #36]	; 0x24
 801e2f8:	f10a 0a02 	add.w	sl, sl, #2
 801e2fc:	e708      	b.n	801e110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e2fe:	d023      	beq.n	801e348 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801e300:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e302:	982b      	ldr	r0, [sp, #172]	; 0xac
 801e304:	3b01      	subs	r3, #1
 801e306:	fb00 4003 	mla	r0, r0, r3, r4
 801e30a:	1400      	asrs	r0, r0, #16
 801e30c:	f53f af1d 	bmi.w	801e14a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e310:	3901      	subs	r1, #1
 801e312:	4288      	cmp	r0, r1
 801e314:	f6bf af19 	bge.w	801e14a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e318:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801e31a:	fb01 6303 	mla	r3, r1, r3, r6
 801e31e:	141b      	asrs	r3, r3, #16
 801e320:	f53f af13 	bmi.w	801e14a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e324:	3a01      	subs	r2, #1
 801e326:	4293      	cmp	r3, r2
 801e328:	f6bf af0f 	bge.w	801e14a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e32c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e330:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e334:	930f      	str	r3, [sp, #60]	; 0x3c
 801e336:	46d1      	mov	r9, sl
 801e338:	f1bb 0f00 	cmp.w	fp, #0
 801e33c:	dc78      	bgt.n	801e430 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801e33e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e340:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e344:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801e348:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e34a:	2b00      	cmp	r3, #0
 801e34c:	f340 8142 	ble.w	801e5d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 801e350:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801e354:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e358:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801e35c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e35e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801e362:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801e366:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801e36a:	eef0 6a48 	vmov.f32	s13, s16
 801e36e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801e372:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e376:	ee37 8a48 	vsub.f32	s16, s14, s16
 801e37a:	ee16 4a90 	vmov	r4, s13
 801e37e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801e382:	eef0 6a68 	vmov.f32	s13, s17
 801e386:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801e38a:	ee18 2a10 	vmov	r2, s16
 801e38e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801e392:	fb92 f3f3 	sdiv	r3, r2, r3
 801e396:	ee18 2a90 	vmov	r2, s17
 801e39a:	932b      	str	r3, [sp, #172]	; 0xac
 801e39c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e39e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3a2:	932c      	str	r3, [sp, #176]	; 0xb0
 801e3a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e3a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e3a8:	3b01      	subs	r3, #1
 801e3aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e3ae:	930d      	str	r3, [sp, #52]	; 0x34
 801e3b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e3b2:	bf08      	it	eq
 801e3b4:	4613      	moveq	r3, r2
 801e3b6:	ee16 6a90 	vmov	r6, s13
 801e3ba:	9309      	str	r3, [sp, #36]	; 0x24
 801e3bc:	eef0 8a67 	vmov.f32	s17, s15
 801e3c0:	eeb0 8a47 	vmov.f32	s16, s14
 801e3c4:	e695      	b.n	801e0f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e3c6:	2900      	cmp	r1, #0
 801e3c8:	f43f af21 	beq.w	801e20e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801e3cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e3ce:	4418      	add	r0, r3
 801e3d0:	0843      	lsrs	r3, r0, #1
 801e3d2:	07c0      	lsls	r0, r0, #31
 801e3d4:	5cfb      	ldrb	r3, [r7, r3]
 801e3d6:	bf54      	ite	pl
 801e3d8:	f003 030f 	andpl.w	r3, r3, #15
 801e3dc:	111b      	asrmi	r3, r3, #4
 801e3de:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e3e2:	b2db      	uxtb	r3, r3
 801e3e4:	930b      	str	r3, [sp, #44]	; 0x2c
 801e3e6:	e712      	b.n	801e20e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801e3e8:	f113 0b01 	adds.w	fp, r3, #1
 801e3ec:	f53f af74 	bmi.w	801e2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801e3f0:	45dc      	cmp	ip, fp
 801e3f2:	f6ff af71 	blt.w	801e2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801e3f6:	f110 0b01 	adds.w	fp, r0, #1
 801e3fa:	f53f af6d 	bmi.w	801e2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801e3fe:	45de      	cmp	lr, fp
 801e400:	f6ff af6a 	blt.w	801e2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801e404:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e406:	9302      	str	r3, [sp, #8]
 801e408:	fa0f f38e 	sxth.w	r3, lr
 801e40c:	9301      	str	r3, [sp, #4]
 801e40e:	fa0f f38c 	sxth.w	r3, ip
 801e412:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801e416:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e41a:	9300      	str	r3, [sp, #0]
 801e41c:	463a      	mov	r2, r7
 801e41e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e420:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e422:	4641      	mov	r1, r8
 801e424:	f7ff fd4c 	bl	801dec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801e428:	e756      	b.n	801e2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801e42a:	bf00      	nop
 801e42c:	2000e408 	.word	0x2000e408
 801e430:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e432:	1422      	asrs	r2, r4, #16
 801e434:	1433      	asrs	r3, r6, #16
 801e436:	fb05 2303 	mla	r3, r5, r3, r2
 801e43a:	085a      	lsrs	r2, r3, #1
 801e43c:	07dd      	lsls	r5, r3, #31
 801e43e:	5cba      	ldrb	r2, [r7, r2]
 801e440:	bf54      	ite	pl
 801e442:	f002 020f 	andpl.w	r2, r2, #15
 801e446:	1112      	asrmi	r2, r2, #4
 801e448:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e44c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e450:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e454:	b2d2      	uxtb	r2, r2
 801e456:	2900      	cmp	r1, #0
 801e458:	f000 80a8 	beq.w	801e5ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801e45c:	f103 0e01 	add.w	lr, r3, #1
 801e460:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801e464:	f01e 0f01 	tst.w	lr, #1
 801e468:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e46c:	bf0c      	ite	eq
 801e46e:	f00c 0c0f 	andeq.w	ip, ip, #15
 801e472:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801e476:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e47a:	fa5f f58c 	uxtb.w	r5, ip
 801e47e:	9512      	str	r5, [sp, #72]	; 0x48
 801e480:	b300      	cbz	r0, 801e4c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801e482:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e484:	442b      	add	r3, r5
 801e486:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e48a:	07dd      	lsls	r5, r3, #31
 801e48c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e490:	bf54      	ite	pl
 801e492:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e496:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e49a:	3301      	adds	r3, #1
 801e49c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e4a0:	fa5f f58c 	uxtb.w	r5, ip
 801e4a4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e4a8:	950c      	str	r5, [sp, #48]	; 0x30
 801e4aa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e4ae:	07dd      	lsls	r5, r3, #31
 801e4b0:	bf54      	ite	pl
 801e4b2:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e4b6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e4ba:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e4be:	fa5f f38c 	uxtb.w	r3, ip
 801e4c2:	9313      	str	r3, [sp, #76]	; 0x4c
 801e4c4:	b289      	uxth	r1, r1
 801e4c6:	b280      	uxth	r0, r0
 801e4c8:	fb01 f300 	mul.w	r3, r1, r0
 801e4cc:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801e4d0:	0109      	lsls	r1, r1, #4
 801e4d2:	b280      	uxth	r0, r0
 801e4d4:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801e4d8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e4da:	1ac9      	subs	r1, r1, r3
 801e4dc:	ebac 0c00 	sub.w	ip, ip, r0
 801e4e0:	b289      	uxth	r1, r1
 801e4e2:	4369      	muls	r1, r5
 801e4e4:	fa1f fc8c 	uxth.w	ip, ip
 801e4e8:	fb02 120c 	mla	r2, r2, ip, r1
 801e4ec:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e4ee:	fb00 2001 	mla	r0, r0, r1, r2
 801e4f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e4f4:	fb03 0302 	mla	r3, r3, r2, r0
 801e4f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e4fc:	2b00      	cmp	r3, #0
 801e4fe:	d04c      	beq.n	801e59a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e500:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e502:	4a37      	ldr	r2, [pc, #220]	; (801e5e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>)
 801e504:	434b      	muls	r3, r1
 801e506:	1c59      	adds	r1, r3, #1
 801e508:	f8d2 e000 	ldr.w	lr, [r2]
 801e50c:	f8b9 2000 	ldrh.w	r2, [r9]
 801e510:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e514:	121b      	asrs	r3, r3, #8
 801e516:	b299      	uxth	r1, r3
 801e518:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e51c:	43db      	mvns	r3, r3
 801e51e:	b2db      	uxtb	r3, r3
 801e520:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801e524:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e528:	fb1c fc03 	smulbb	ip, ip, r3
 801e52c:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801e530:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e534:	fb00 c001 	mla	r0, r0, r1, ip
 801e538:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801e53c:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801e540:	fb18 f803 	smulbb	r8, r8, r3
 801e544:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e548:	00d2      	lsls	r2, r2, #3
 801e54a:	fb0c 8c01 	mla	ip, ip, r1, r8
 801e54e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e552:	b2d2      	uxtb	r2, r2
 801e554:	fa1f fc8c 	uxth.w	ip, ip
 801e558:	fa5f fe8e 	uxtb.w	lr, lr
 801e55c:	fb12 f203 	smulbb	r2, r2, r3
 801e560:	b280      	uxth	r0, r0
 801e562:	fb0e 2201 	mla	r2, lr, r1, r2
 801e566:	f10c 0801 	add.w	r8, ip, #1
 801e56a:	b292      	uxth	r2, r2
 801e56c:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801e570:	f100 0801 	add.w	r8, r0, #1
 801e574:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e578:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801e57c:	1c51      	adds	r1, r2, #1
 801e57e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e582:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e586:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e58a:	ea4c 0c00 	orr.w	ip, ip, r0
 801e58e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e592:	ea4c 0c02 	orr.w	ip, ip, r2
 801e596:	f8a9 c000 	strh.w	ip, [r9]
 801e59a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801e59c:	441c      	add	r4, r3
 801e59e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e5a0:	f109 0902 	add.w	r9, r9, #2
 801e5a4:	441e      	add	r6, r3
 801e5a6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e5aa:	e6c5      	b.n	801e338 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801e5ac:	2800      	cmp	r0, #0
 801e5ae:	d089      	beq.n	801e4c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801e5b0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e5b2:	442b      	add	r3, r5
 801e5b4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e5b8:	07db      	lsls	r3, r3, #31
 801e5ba:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e5be:	bf54      	ite	pl
 801e5c0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e5c4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e5c8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e5cc:	fa5f f38c 	uxtb.w	r3, ip
 801e5d0:	930c      	str	r3, [sp, #48]	; 0x30
 801e5d2:	e777      	b.n	801e4c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801e5d4:	b017      	add	sp, #92	; 0x5c
 801e5d6:	ecbd 8b08 	vpop	{d8-d11}
 801e5da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e5de:	bf00      	nop
 801e5e0:	2000e408 	.word	0x2000e408

0801e5e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801e5e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e5e8:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801e5ec:	2c00      	cmp	r4, #0
 801e5ee:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801e5f2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801e5f6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801e5fa:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801e5fe:	fb04 ce03 	mla	lr, r4, r3, ip
 801e602:	db60      	blt.n	801e6c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801e604:	45a1      	cmp	r9, r4
 801e606:	dd5e      	ble.n	801e6c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801e608:	f1bc 0f00 	cmp.w	ip, #0
 801e60c:	db59      	blt.n	801e6c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801e60e:	45e0      	cmp	r8, ip
 801e610:	dd57      	ble.n	801e6c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801e612:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801e616:	f01e 0f01 	tst.w	lr, #1
 801e61a:	5c16      	ldrb	r6, [r2, r0]
 801e61c:	bf0c      	ite	eq
 801e61e:	f006 060f 	andeq.w	r6, r6, #15
 801e622:	1136      	asrne	r6, r6, #4
 801e624:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801e628:	b2f6      	uxtb	r6, r6
 801e62a:	f11c 0001 	adds.w	r0, ip, #1
 801e62e:	d44d      	bmi.n	801e6cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801e630:	4580      	cmp	r8, r0
 801e632:	dd4b      	ble.n	801e6cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801e634:	2d00      	cmp	r5, #0
 801e636:	d04b      	beq.n	801e6d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801e638:	f10e 0a01 	add.w	sl, lr, #1
 801e63c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801e640:	f01a 0f01 	tst.w	sl, #1
 801e644:	5c10      	ldrb	r0, [r2, r0]
 801e646:	bf0c      	ite	eq
 801e648:	f000 000f 	andeq.w	r0, r0, #15
 801e64c:	1100      	asrne	r0, r0, #4
 801e64e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e652:	b2c0      	uxtb	r0, r0
 801e654:	3401      	adds	r4, #1
 801e656:	d43f      	bmi.n	801e6d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801e658:	45a1      	cmp	r9, r4
 801e65a:	dd3d      	ble.n	801e6d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801e65c:	2f00      	cmp	r7, #0
 801e65e:	f000 8097 	beq.w	801e790 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801e662:	f1bc 0f00 	cmp.w	ip, #0
 801e666:	db35      	blt.n	801e6d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801e668:	45e0      	cmp	r8, ip
 801e66a:	dd33      	ble.n	801e6d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801e66c:	eb03 090e 	add.w	r9, r3, lr
 801e670:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801e674:	f019 0f01 	tst.w	r9, #1
 801e678:	5d14      	ldrb	r4, [r2, r4]
 801e67a:	bf0c      	ite	eq
 801e67c:	f004 040f 	andeq.w	r4, r4, #15
 801e680:	1124      	asrne	r4, r4, #4
 801e682:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801e686:	b2e4      	uxtb	r4, r4
 801e688:	f11c 0c01 	adds.w	ip, ip, #1
 801e68c:	d427      	bmi.n	801e6de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801e68e:	45e0      	cmp	r8, ip
 801e690:	dd25      	ble.n	801e6de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801e692:	b335      	cbz	r5, 801e6e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801e694:	3301      	adds	r3, #1
 801e696:	449e      	add	lr, r3
 801e698:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801e69c:	f01e 0f01 	tst.w	lr, #1
 801e6a0:	5cd2      	ldrb	r2, [r2, r3]
 801e6a2:	bf0c      	ite	eq
 801e6a4:	f002 020f 	andeq.w	r2, r2, #15
 801e6a8:	1112      	asrne	r2, r2, #4
 801e6aa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e6ae:	b2d3      	uxtb	r3, r2
 801e6b0:	2d0f      	cmp	r5, #15
 801e6b2:	d917      	bls.n	801e6e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801e6b4:	4b39      	ldr	r3, [pc, #228]	; (801e79c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801e6b6:	4a3a      	ldr	r2, [pc, #232]	; (801e7a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801e6b8:	483a      	ldr	r0, [pc, #232]	; (801e7a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801e6ba:	f240 210d 	movw	r1, #525	; 0x20d
 801e6be:	f003 fd27 	bl	8022110 <__assert_func>
 801e6c2:	2600      	movs	r6, #0
 801e6c4:	e7b1      	b.n	801e62a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801e6c6:	2000      	movs	r0, #0
 801e6c8:	4606      	mov	r6, r0
 801e6ca:	e7c3      	b.n	801e654 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801e6cc:	2000      	movs	r0, #0
 801e6ce:	e7c1      	b.n	801e654 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801e6d0:	4628      	mov	r0, r5
 801e6d2:	e7bf      	b.n	801e654 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801e6d4:	2400      	movs	r4, #0
 801e6d6:	e7d7      	b.n	801e688 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801e6d8:	2300      	movs	r3, #0
 801e6da:	461c      	mov	r4, r3
 801e6dc:	e7e8      	b.n	801e6b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801e6de:	2300      	movs	r3, #0
 801e6e0:	e7e6      	b.n	801e6b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801e6e2:	462b      	mov	r3, r5
 801e6e4:	2f0f      	cmp	r7, #15
 801e6e6:	d8e5      	bhi.n	801e6b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801e6e8:	b2ad      	uxth	r5, r5
 801e6ea:	b2bf      	uxth	r7, r7
 801e6ec:	fb05 fc07 	mul.w	ip, r5, r7
 801e6f0:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801e6f4:	012d      	lsls	r5, r5, #4
 801e6f6:	b2bf      	uxth	r7, r7
 801e6f8:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801e6fc:	eba5 050c 	sub.w	r5, r5, ip
 801e700:	1bd2      	subs	r2, r2, r7
 801e702:	b2ad      	uxth	r5, r5
 801e704:	b292      	uxth	r2, r2
 801e706:	4368      	muls	r0, r5
 801e708:	fb06 0002 	mla	r0, r6, r2, r0
 801e70c:	fb07 0404 	mla	r4, r7, r4, r0
 801e710:	fb0c 4303 	mla	r3, ip, r3, r4
 801e714:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e718:	2b00      	cmp	r3, #0
 801e71a:	d037      	beq.n	801e78c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 801e71c:	4a22      	ldr	r2, [pc, #136]	; (801e7a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801e71e:	6816      	ldr	r6, [r2, #0]
 801e720:	880a      	ldrh	r2, [r1, #0]
 801e722:	b298      	uxth	r0, r3
 801e724:	1215      	asrs	r5, r2, #8
 801e726:	43db      	mvns	r3, r3
 801e728:	b2db      	uxtb	r3, r3
 801e72a:	0a34      	lsrs	r4, r6, #8
 801e72c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e730:	fb15 f503 	smulbb	r5, r5, r3
 801e734:	10d7      	asrs	r7, r2, #3
 801e736:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e73a:	fb04 5400 	mla	r4, r4, r0, r5
 801e73e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e742:	08f5      	lsrs	r5, r6, #3
 801e744:	fb17 f703 	smulbb	r7, r7, r3
 801e748:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e74c:	00d2      	lsls	r2, r2, #3
 801e74e:	fb05 7500 	mla	r5, r5, r0, r7
 801e752:	b2d2      	uxtb	r2, r2
 801e754:	00f6      	lsls	r6, r6, #3
 801e756:	fb12 f303 	smulbb	r3, r2, r3
 801e75a:	b2ad      	uxth	r5, r5
 801e75c:	b2f6      	uxtb	r6, r6
 801e75e:	b2a4      	uxth	r4, r4
 801e760:	fb06 3000 	mla	r0, r6, r0, r3
 801e764:	1c6b      	adds	r3, r5, #1
 801e766:	b280      	uxth	r0, r0
 801e768:	1c62      	adds	r2, r4, #1
 801e76a:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801e76e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801e772:	095b      	lsrs	r3, r3, #5
 801e774:	1c42      	adds	r2, r0, #1
 801e776:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e77a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e77e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e782:	4323      	orrs	r3, r4
 801e784:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e788:	4303      	orrs	r3, r0
 801e78a:	800b      	strh	r3, [r1, #0]
 801e78c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e790:	2d0f      	cmp	r5, #15
 801e792:	d88f      	bhi.n	801e6b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801e794:	463b      	mov	r3, r7
 801e796:	463c      	mov	r4, r7
 801e798:	e7a6      	b.n	801e6e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801e79a:	bf00      	nop
 801e79c:	08026c23 	.word	0x08026c23
 801e7a0:	080271e5 	.word	0x080271e5
 801e7a4:	08026d0c 	.word	0x08026d0c
 801e7a8:	2000e408 	.word	0x2000e408

0801e7ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7b0:	ed2d 8b08 	vpush	{d8-d11}
 801e7b4:	b093      	sub	sp, #76	; 0x4c
 801e7b6:	461d      	mov	r5, r3
 801e7b8:	920c      	str	r2, [sp, #48]	; 0x30
 801e7ba:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e7bc:	9107      	str	r1, [sp, #28]
 801e7be:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e7c2:	9011      	str	r0, [sp, #68]	; 0x44
 801e7c4:	6850      	ldr	r0, [r2, #4]
 801e7c6:	6812      	ldr	r2, [r2, #0]
 801e7c8:	fb00 1303 	mla	r3, r0, r3, r1
 801e7cc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e7d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e7d2:	689b      	ldr	r3, [r3, #8]
 801e7d4:	3301      	adds	r3, #1
 801e7d6:	f023 0301 	bic.w	r3, r3, #1
 801e7da:	9306      	str	r3, [sp, #24]
 801e7dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e7de:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e7e2:	681f      	ldr	r7, [r3, #0]
 801e7e4:	eeb0 aa40 	vmov.f32	s20, s0
 801e7e8:	eef0 9a60 	vmov.f32	s19, s1
 801e7ec:	eeb0 9a41 	vmov.f32	s18, s2
 801e7f0:	eeb0 8a62 	vmov.f32	s16, s5
 801e7f4:	eef0 8a43 	vmov.f32	s17, s6
 801e7f8:	eef0 ba44 	vmov.f32	s23, s8
 801e7fc:	eeb0 ba64 	vmov.f32	s22, s9
 801e800:	eef0 aa45 	vmov.f32	s21, s10
 801e804:	9b07      	ldr	r3, [sp, #28]
 801e806:	2b00      	cmp	r3, #0
 801e808:	dc03      	bgt.n	801e812 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e80a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e80c:	2b00      	cmp	r3, #0
 801e80e:	f340 8261 	ble.w	801ecd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 801e812:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e814:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e818:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e81c:	1e48      	subs	r0, r1, #1
 801e81e:	f102 3cff 	add.w	ip, r2, #4294967295
 801e822:	2d00      	cmp	r5, #0
 801e824:	f340 80ef 	ble.w	801ea06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801e828:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e82c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e830:	d406      	bmi.n	801e840 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e832:	4586      	cmp	lr, r0
 801e834:	da04      	bge.n	801e840 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e836:	2b00      	cmp	r3, #0
 801e838:	db02      	blt.n	801e840 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e83a:	4563      	cmp	r3, ip
 801e83c:	f2c0 80e4 	blt.w	801ea08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801e840:	f11e 0e01 	adds.w	lr, lr, #1
 801e844:	f100 80d7 	bmi.w	801e9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801e848:	4571      	cmp	r1, lr
 801e84a:	f2c0 80d4 	blt.w	801e9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801e84e:	3301      	adds	r3, #1
 801e850:	f100 80d1 	bmi.w	801e9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801e854:	429a      	cmp	r2, r3
 801e856:	f2c0 80ce 	blt.w	801e9f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801e85a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801e85e:	9509      	str	r5, [sp, #36]	; 0x24
 801e860:	46c8      	mov	r8, r9
 801e862:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e864:	2b00      	cmp	r3, #0
 801e866:	f340 80ec 	ble.w	801ea42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801e86a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801e86e:	9308      	str	r3, [sp, #32]
 801e870:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e872:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e876:	1423      	asrs	r3, r4, #16
 801e878:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e87c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e880:	f100 813b 	bmi.w	801eafa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e884:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e888:	455b      	cmp	r3, fp
 801e88a:	f280 8136 	bge.w	801eafa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e88e:	2800      	cmp	r0, #0
 801e890:	f2c0 8133 	blt.w	801eafa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e894:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e898:	4558      	cmp	r0, fp
 801e89a:	f280 812e 	bge.w	801eafa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e89e:	9a06      	ldr	r2, [sp, #24]
 801e8a0:	fb00 3302 	mla	r3, r0, r2, r3
 801e8a4:	0858      	lsrs	r0, r3, #1
 801e8a6:	07da      	lsls	r2, r3, #31
 801e8a8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e8ac:	9a08      	ldr	r2, [sp, #32]
 801e8ae:	bf54      	ite	pl
 801e8b0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e8b4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e8b8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e8bc:	fa5f fc8c 	uxtb.w	ip, ip
 801e8c0:	2a00      	cmp	r2, #0
 801e8c2:	f000 8101 	beq.w	801eac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e8c6:	1c58      	adds	r0, r3, #1
 801e8c8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e8cc:	07c0      	lsls	r0, r0, #31
 801e8ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e8d2:	bf54      	ite	pl
 801e8d4:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e8d8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e8dc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e8e0:	fa5f fe8e 	uxtb.w	lr, lr
 801e8e4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801e8e8:	b1b9      	cbz	r1, 801e91a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801e8ea:	4453      	add	r3, sl
 801e8ec:	0858      	lsrs	r0, r3, #1
 801e8ee:	07da      	lsls	r2, r3, #31
 801e8f0:	5c38      	ldrb	r0, [r7, r0]
 801e8f2:	bf54      	ite	pl
 801e8f4:	f000 000f 	andpl.w	r0, r0, #15
 801e8f8:	1100      	asrmi	r0, r0, #4
 801e8fa:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e8fe:	b2c0      	uxtb	r0, r0
 801e900:	900a      	str	r0, [sp, #40]	; 0x28
 801e902:	1c58      	adds	r0, r3, #1
 801e904:	0843      	lsrs	r3, r0, #1
 801e906:	07c2      	lsls	r2, r0, #31
 801e908:	5cfb      	ldrb	r3, [r7, r3]
 801e90a:	bf54      	ite	pl
 801e90c:	f003 030f 	andpl.w	r3, r3, #15
 801e910:	111b      	asrmi	r3, r3, #4
 801e912:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e916:	b2db      	uxtb	r3, r3
 801e918:	930e      	str	r3, [sp, #56]	; 0x38
 801e91a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801e91e:	b289      	uxth	r1, r1
 801e920:	fb02 f301 	mul.w	r3, r2, r1
 801e924:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e928:	0112      	lsls	r2, r2, #4
 801e92a:	b289      	uxth	r1, r1
 801e92c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801e930:	1a40      	subs	r0, r0, r1
 801e932:	fa1f fe80 	uxth.w	lr, r0
 801e936:	1ad2      	subs	r2, r2, r3
 801e938:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e93a:	b292      	uxth	r2, r2
 801e93c:	4342      	muls	r2, r0
 801e93e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801e942:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e944:	fb01 c102 	mla	r1, r1, r2, ip
 801e948:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e94a:	fb03 1302 	mla	r3, r3, r2, r1
 801e94e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e952:	2b00      	cmp	r3, #0
 801e954:	d045      	beq.n	801e9e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801e956:	4a79      	ldr	r2, [pc, #484]	; (801eb3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>)
 801e958:	6811      	ldr	r1, [r2, #0]
 801e95a:	2bff      	cmp	r3, #255	; 0xff
 801e95c:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801e960:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801e964:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801e968:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e96c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e970:	b2c9      	uxtb	r1, r1
 801e972:	f000 80ba 	beq.w	801eaea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801e976:	f8b8 c000 	ldrh.w	ip, [r8]
 801e97a:	fa1f fb83 	uxth.w	fp, r3
 801e97e:	ea4f 202c 	mov.w	r0, ip, asr #8
 801e982:	43db      	mvns	r3, r3
 801e984:	b2db      	uxtb	r3, r3
 801e986:	fb1e fe0b 	smulbb	lr, lr, fp
 801e98a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e98e:	fb00 e003 	mla	r0, r0, r3, lr
 801e992:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801e996:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e99a:	fb12 f20b 	smulbb	r2, r2, fp
 801e99e:	fb0e 2203 	mla	r2, lr, r3, r2
 801e9a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e9a6:	b292      	uxth	r2, r2
 801e9a8:	fb11 f10b 	smulbb	r1, r1, fp
 801e9ac:	fa5f fc8c 	uxtb.w	ip, ip
 801e9b0:	b280      	uxth	r0, r0
 801e9b2:	fb0c 1303 	mla	r3, ip, r3, r1
 801e9b6:	f102 0e01 	add.w	lr, r2, #1
 801e9ba:	b29b      	uxth	r3, r3
 801e9bc:	1c41      	adds	r1, r0, #1
 801e9be:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801e9c2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e9c6:	0952      	lsrs	r2, r2, #5
 801e9c8:	1c59      	adds	r1, r3, #1
 801e9ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e9ce:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e9d2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e9d6:	4310      	orrs	r0, r2
 801e9d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e9dc:	4318      	orrs	r0, r3
 801e9de:	f8a8 0000 	strh.w	r0, [r8]
 801e9e2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e9e4:	441c      	add	r4, r3
 801e9e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e9e8:	441e      	add	r6, r3
 801e9ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e9ec:	3b01      	subs	r3, #1
 801e9ee:	f108 0802 	add.w	r8, r8, #2
 801e9f2:	9309      	str	r3, [sp, #36]	; 0x24
 801e9f4:	e735      	b.n	801e862 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e9f6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e9f8:	441c      	add	r4, r3
 801e9fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e9fc:	3d01      	subs	r5, #1
 801e9fe:	441e      	add	r6, r3
 801ea00:	f109 0902 	add.w	r9, r9, #2
 801ea04:	e70d      	b.n	801e822 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ea06:	d020      	beq.n	801ea4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 801ea08:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ea0a:	1e6b      	subs	r3, r5, #1
 801ea0c:	fb00 4003 	mla	r0, r0, r3, r4
 801ea10:	1400      	asrs	r0, r0, #16
 801ea12:	f53f af22 	bmi.w	801e85a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801ea16:	3901      	subs	r1, #1
 801ea18:	4288      	cmp	r0, r1
 801ea1a:	f6bf af1e 	bge.w	801e85a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801ea1e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ea20:	fb01 6303 	mla	r3, r1, r3, r6
 801ea24:	141b      	asrs	r3, r3, #16
 801ea26:	f53f af18 	bmi.w	801e85a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801ea2a:	3a01      	subs	r2, #1
 801ea2c:	4293      	cmp	r3, r2
 801ea2e:	f6bf af14 	bge.w	801e85a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801ea32:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ea36:	9308      	str	r3, [sp, #32]
 801ea38:	46aa      	mov	sl, r5
 801ea3a:	46c8      	mov	r8, r9
 801ea3c:	f1ba 0f00 	cmp.w	sl, #0
 801ea40:	dc7e      	bgt.n	801eb40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801ea42:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ea46:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ea4a:	9b07      	ldr	r3, [sp, #28]
 801ea4c:	2b00      	cmp	r3, #0
 801ea4e:	f340 8141 	ble.w	801ecd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 801ea52:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ea56:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ea5a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ea5e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ea60:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ea64:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ea68:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ea6c:	eef0 6a48 	vmov.f32	s13, s16
 801ea70:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ea74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea78:	ee37 8a48 	vsub.f32	s16, s14, s16
 801ea7c:	ee16 4a90 	vmov	r4, s13
 801ea80:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801ea84:	eef0 6a68 	vmov.f32	s13, s17
 801ea88:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ea8c:	ee18 2a10 	vmov	r2, s16
 801ea90:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ea94:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea98:	ee18 2a90 	vmov	r2, s17
 801ea9c:	9327      	str	r3, [sp, #156]	; 0x9c
 801ea9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eaa0:	fb92 f3f3 	sdiv	r3, r2, r3
 801eaa4:	9328      	str	r3, [sp, #160]	; 0xa0
 801eaa6:	9b07      	ldr	r3, [sp, #28]
 801eaa8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801eaaa:	3b01      	subs	r3, #1
 801eaac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eab0:	9307      	str	r3, [sp, #28]
 801eab2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eab4:	ee16 6a90 	vmov	r6, s13
 801eab8:	bf14      	ite	ne
 801eaba:	461d      	movne	r5, r3
 801eabc:	4615      	moveq	r5, r2
 801eabe:	eef0 8a67 	vmov.f32	s17, s15
 801eac2:	eeb0 8a47 	vmov.f32	s16, s14
 801eac6:	e69d      	b.n	801e804 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801eac8:	2900      	cmp	r1, #0
 801eaca:	f43f af26 	beq.w	801e91a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801eace:	eb0a 0003 	add.w	r0, sl, r3
 801ead2:	0843      	lsrs	r3, r0, #1
 801ead4:	07c0      	lsls	r0, r0, #31
 801ead6:	5cfb      	ldrb	r3, [r7, r3]
 801ead8:	bf54      	ite	pl
 801eada:	f003 030f 	andpl.w	r3, r3, #15
 801eade:	111b      	asrmi	r3, r3, #4
 801eae0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801eae4:	b2db      	uxtb	r3, r3
 801eae6:	930a      	str	r3, [sp, #40]	; 0x28
 801eae8:	e717      	b.n	801e91a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801eaea:	00d2      	lsls	r2, r2, #3
 801eaec:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801eaf0:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801eaf4:	f8a8 1000 	strh.w	r1, [r8]
 801eaf8:	e773      	b.n	801e9e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801eafa:	f113 0b01 	adds.w	fp, r3, #1
 801eafe:	f53f af70 	bmi.w	801e9e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801eb02:	45dc      	cmp	ip, fp
 801eb04:	f6ff af6d 	blt.w	801e9e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801eb08:	f110 0b01 	adds.w	fp, r0, #1
 801eb0c:	f53f af69 	bmi.w	801e9e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801eb10:	45de      	cmp	lr, fp
 801eb12:	f6ff af66 	blt.w	801e9e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801eb16:	9a08      	ldr	r2, [sp, #32]
 801eb18:	9302      	str	r3, [sp, #8]
 801eb1a:	fa0f f38e 	sxth.w	r3, lr
 801eb1e:	9301      	str	r3, [sp, #4]
 801eb20:	fa0f f38c 	sxth.w	r3, ip
 801eb24:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801eb28:	9105      	str	r1, [sp, #20]
 801eb2a:	9300      	str	r3, [sp, #0]
 801eb2c:	463a      	mov	r2, r7
 801eb2e:	4653      	mov	r3, sl
 801eb30:	4641      	mov	r1, r8
 801eb32:	9811      	ldr	r0, [sp, #68]	; 0x44
 801eb34:	f7ff fd56 	bl	801e5e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801eb38:	e753      	b.n	801e9e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801eb3a:	bf00      	nop
 801eb3c:	2000e408 	.word	0x2000e408
 801eb40:	9906      	ldr	r1, [sp, #24]
 801eb42:	1422      	asrs	r2, r4, #16
 801eb44:	1433      	asrs	r3, r6, #16
 801eb46:	fb01 2303 	mla	r3, r1, r3, r2
 801eb4a:	085a      	lsrs	r2, r3, #1
 801eb4c:	07d9      	lsls	r1, r3, #31
 801eb4e:	5cba      	ldrb	r2, [r7, r2]
 801eb50:	bf54      	ite	pl
 801eb52:	f002 020f 	andpl.w	r2, r2, #15
 801eb56:	1112      	asrmi	r2, r2, #4
 801eb58:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801eb5c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801eb60:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801eb64:	b2d2      	uxtb	r2, r2
 801eb66:	2800      	cmp	r0, #0
 801eb68:	f000 809b 	beq.w	801eca2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 801eb6c:	f103 0e01 	add.w	lr, r3, #1
 801eb70:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801eb74:	f01e 0f01 	tst.w	lr, #1
 801eb78:	5c79      	ldrb	r1, [r7, r1]
 801eb7a:	bf0c      	ite	eq
 801eb7c:	f001 010f 	andeq.w	r1, r1, #15
 801eb80:	1109      	asrne	r1, r1, #4
 801eb82:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801eb86:	b2c9      	uxtb	r1, r1
 801eb88:	910f      	str	r1, [sp, #60]	; 0x3c
 801eb8a:	f1bc 0f00 	cmp.w	ip, #0
 801eb8e:	d019      	beq.n	801ebc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801eb90:	9908      	ldr	r1, [sp, #32]
 801eb92:	440b      	add	r3, r1
 801eb94:	0859      	lsrs	r1, r3, #1
 801eb96:	f013 0f01 	tst.w	r3, #1
 801eb9a:	5c79      	ldrb	r1, [r7, r1]
 801eb9c:	bf0c      	ite	eq
 801eb9e:	f001 010f 	andeq.w	r1, r1, #15
 801eba2:	1109      	asrne	r1, r1, #4
 801eba4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801eba8:	b2c9      	uxtb	r1, r1
 801ebaa:	3301      	adds	r3, #1
 801ebac:	910b      	str	r1, [sp, #44]	; 0x2c
 801ebae:	0859      	lsrs	r1, r3, #1
 801ebb0:	07db      	lsls	r3, r3, #31
 801ebb2:	5c79      	ldrb	r1, [r7, r1]
 801ebb4:	bf54      	ite	pl
 801ebb6:	f001 010f 	andpl.w	r1, r1, #15
 801ebba:	1109      	asrmi	r1, r1, #4
 801ebbc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ebc0:	b2c9      	uxtb	r1, r1
 801ebc2:	9110      	str	r1, [sp, #64]	; 0x40
 801ebc4:	b280      	uxth	r0, r0
 801ebc6:	fa1f fc8c 	uxth.w	ip, ip
 801ebca:	fb00 f30c 	mul.w	r3, r0, ip
 801ebce:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801ebd2:	0100      	lsls	r0, r0, #4
 801ebd4:	fa1f fc8c 	uxth.w	ip, ip
 801ebd8:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801ebdc:	eba1 010c 	sub.w	r1, r1, ip
 801ebe0:	fa1f fe81 	uxth.w	lr, r1
 801ebe4:	1ac0      	subs	r0, r0, r3
 801ebe6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ebe8:	b280      	uxth	r0, r0
 801ebea:	4348      	muls	r0, r1
 801ebec:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801ebee:	fb02 020e 	mla	r2, r2, lr, r0
 801ebf2:	fb0c 2c01 	mla	ip, ip, r1, r2
 801ebf6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ebf8:	fb03 c302 	mla	r3, r3, r2, ip
 801ebfc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ec00:	2b00      	cmp	r3, #0
 801ec02:	d045      	beq.n	801ec90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ec04:	4a36      	ldr	r2, [pc, #216]	; (801ece0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>)
 801ec06:	6811      	ldr	r1, [r2, #0]
 801ec08:	2bff      	cmp	r3, #255	; 0xff
 801ec0a:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801ec0e:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801ec12:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801ec16:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ec1a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ec1e:	b2c9      	uxtb	r1, r1
 801ec20:	d050      	beq.n	801ecc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801ec22:	f8b8 c000 	ldrh.w	ip, [r8]
 801ec26:	fa1f fb83 	uxth.w	fp, r3
 801ec2a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801ec2e:	43db      	mvns	r3, r3
 801ec30:	b2db      	uxtb	r3, r3
 801ec32:	fb1e fe0b 	smulbb	lr, lr, fp
 801ec36:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ec3a:	fb00 e003 	mla	r0, r0, r3, lr
 801ec3e:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801ec42:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ec46:	fb12 f20b 	smulbb	r2, r2, fp
 801ec4a:	fb0e 2203 	mla	r2, lr, r3, r2
 801ec4e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ec52:	b292      	uxth	r2, r2
 801ec54:	fa5f fc8c 	uxtb.w	ip, ip
 801ec58:	fb11 f10b 	smulbb	r1, r1, fp
 801ec5c:	b280      	uxth	r0, r0
 801ec5e:	fb0c 1103 	mla	r1, ip, r3, r1
 801ec62:	f102 0e01 	add.w	lr, r2, #1
 801ec66:	b289      	uxth	r1, r1
 801ec68:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801ec6c:	f100 0e01 	add.w	lr, r0, #1
 801ec70:	0952      	lsrs	r2, r2, #5
 801ec72:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ec76:	1c4b      	adds	r3, r1, #1
 801ec78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ec7c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ec80:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ec84:	4302      	orrs	r2, r0
 801ec86:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ec8a:	430a      	orrs	r2, r1
 801ec8c:	f8a8 2000 	strh.w	r2, [r8]
 801ec90:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ec92:	441c      	add	r4, r3
 801ec94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec96:	f108 0802 	add.w	r8, r8, #2
 801ec9a:	441e      	add	r6, r3
 801ec9c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801eca0:	e6cc      	b.n	801ea3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801eca2:	f1bc 0f00 	cmp.w	ip, #0
 801eca6:	d08d      	beq.n	801ebc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801eca8:	9908      	ldr	r1, [sp, #32]
 801ecaa:	440b      	add	r3, r1
 801ecac:	0859      	lsrs	r1, r3, #1
 801ecae:	07db      	lsls	r3, r3, #31
 801ecb0:	5c79      	ldrb	r1, [r7, r1]
 801ecb2:	bf54      	ite	pl
 801ecb4:	f001 010f 	andpl.w	r1, r1, #15
 801ecb8:	1109      	asrmi	r1, r1, #4
 801ecba:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ecbe:	b2c9      	uxtb	r1, r1
 801ecc0:	910b      	str	r1, [sp, #44]	; 0x2c
 801ecc2:	e77f      	b.n	801ebc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801ecc4:	00d2      	lsls	r2, r2, #3
 801ecc6:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801ecca:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801ecce:	f8a8 1000 	strh.w	r1, [r8]
 801ecd2:	e7dd      	b.n	801ec90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ecd4:	b013      	add	sp, #76	; 0x4c
 801ecd6:	ecbd 8b08 	vpop	{d8-d11}
 801ecda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ecde:	bf00      	nop
 801ece0:	2000e408 	.word	0x2000e408

0801ece4 <CRC_Lock>:
 801ece4:	b530      	push	{r4, r5, lr}
 801ece6:	4a1d      	ldr	r2, [pc, #116]	; (801ed5c <CRC_Lock+0x78>)
 801ece8:	6813      	ldr	r3, [r2, #0]
 801ecea:	f023 0301 	bic.w	r3, r3, #1
 801ecee:	6013      	str	r3, [r2, #0]
 801ecf0:	4b1b      	ldr	r3, [pc, #108]	; (801ed60 <CRC_Lock+0x7c>)
 801ecf2:	681a      	ldr	r2, [r3, #0]
 801ecf4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801ecf8:	4022      	ands	r2, r4
 801ecfa:	f24c 2540 	movw	r5, #49728	; 0xc240
 801ecfe:	42aa      	cmp	r2, r5
 801ed00:	d005      	beq.n	801ed0e <CRC_Lock+0x2a>
 801ed02:	681b      	ldr	r3, [r3, #0]
 801ed04:	f24c 2270 	movw	r2, #49776	; 0xc270
 801ed08:	4023      	ands	r3, r4
 801ed0a:	4293      	cmp	r3, r2
 801ed0c:	d11d      	bne.n	801ed4a <CRC_Lock+0x66>
 801ed0e:	4b15      	ldr	r3, [pc, #84]	; (801ed64 <CRC_Lock+0x80>)
 801ed10:	681b      	ldr	r3, [r3, #0]
 801ed12:	b9d3      	cbnz	r3, 801ed4a <CRC_Lock+0x66>
 801ed14:	4a14      	ldr	r2, [pc, #80]	; (801ed68 <CRC_Lock+0x84>)
 801ed16:	6813      	ldr	r3, [r2, #0]
 801ed18:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ed1c:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801ed20:	d006      	beq.n	801ed30 <CRC_Lock+0x4c>
 801ed22:	6813      	ldr	r3, [r2, #0]
 801ed24:	f240 4283 	movw	r2, #1155	; 0x483
 801ed28:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ed2c:	4293      	cmp	r3, r2
 801ed2e:	d10c      	bne.n	801ed4a <CRC_Lock+0x66>
 801ed30:	4b0e      	ldr	r3, [pc, #56]	; (801ed6c <CRC_Lock+0x88>)
 801ed32:	2201      	movs	r2, #1
 801ed34:	601a      	str	r2, [r3, #0]
 801ed36:	681a      	ldr	r2, [r3, #0]
 801ed38:	2a00      	cmp	r2, #0
 801ed3a:	d1fc      	bne.n	801ed36 <CRC_Lock+0x52>
 801ed3c:	4b0c      	ldr	r3, [pc, #48]	; (801ed70 <CRC_Lock+0x8c>)
 801ed3e:	6018      	str	r0, [r3, #0]
 801ed40:	6818      	ldr	r0, [r3, #0]
 801ed42:	1a43      	subs	r3, r0, r1
 801ed44:	4258      	negs	r0, r3
 801ed46:	4158      	adcs	r0, r3
 801ed48:	bd30      	pop	{r4, r5, pc}
 801ed4a:	4b0a      	ldr	r3, [pc, #40]	; (801ed74 <CRC_Lock+0x90>)
 801ed4c:	2201      	movs	r2, #1
 801ed4e:	601a      	str	r2, [r3, #0]
 801ed50:	681a      	ldr	r2, [r3, #0]
 801ed52:	2a00      	cmp	r2, #0
 801ed54:	d1fc      	bne.n	801ed50 <CRC_Lock+0x6c>
 801ed56:	4b08      	ldr	r3, [pc, #32]	; (801ed78 <CRC_Lock+0x94>)
 801ed58:	e7f1      	b.n	801ed3e <CRC_Lock+0x5a>
 801ed5a:	bf00      	nop
 801ed5c:	e0002000 	.word	0xe0002000
 801ed60:	e000ed00 	.word	0xe000ed00
 801ed64:	e0042000 	.word	0xe0042000
 801ed68:	5c001000 	.word	0x5c001000
 801ed6c:	58024c08 	.word	0x58024c08
 801ed70:	58024c00 	.word	0x58024c00
 801ed74:	40023008 	.word	0x40023008
 801ed78:	40023000 	.word	0x40023000

0801ed7c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801ed7c:	6101      	str	r1, [r0, #16]
 801ed7e:	4770      	bx	lr

0801ed80 <_ZN8touchgfx8Gestures4tickEv>:
 801ed80:	7b83      	ldrb	r3, [r0, #14]
 801ed82:	b14b      	cbz	r3, 801ed98 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801ed84:	8903      	ldrh	r3, [r0, #8]
 801ed86:	3301      	adds	r3, #1
 801ed88:	b29b      	uxth	r3, r3
 801ed8a:	2b07      	cmp	r3, #7
 801ed8c:	8103      	strh	r3, [r0, #8]
 801ed8e:	bf81      	itttt	hi
 801ed90:	2300      	movhi	r3, #0
 801ed92:	8143      	strhhi	r3, [r0, #10]
 801ed94:	8183      	strhhi	r3, [r0, #12]
 801ed96:	7383      	strbhi	r3, [r0, #14]
 801ed98:	4770      	bx	lr
	...

0801ed9c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801ed9c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801eda0:	4604      	mov	r4, r0
 801eda2:	8880      	ldrh	r0, [r0, #4]
 801eda4:	f8ad 0006 	strh.w	r0, [sp, #6]
 801eda8:	4698      	mov	r8, r3
 801edaa:	eba8 0000 	sub.w	r0, r8, r0
 801edae:	4b1c      	ldr	r3, [pc, #112]	; (801ee20 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801edb0:	9300      	str	r3, [sp, #0]
 801edb2:	b280      	uxth	r0, r0
 801edb4:	2300      	movs	r3, #0
 801edb6:	f88d 3004 	strb.w	r3, [sp, #4]
 801edba:	b203      	sxth	r3, r0
 801edbc:	2b00      	cmp	r3, #0
 801edbe:	bfb8      	it	lt
 801edc0:	4240      	neglt	r0, r0
 801edc2:	4617      	mov	r7, r2
 801edc4:	8aa2      	ldrh	r2, [r4, #20]
 801edc6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801edca:	f8ad 800a 	strh.w	r8, [sp, #10]
 801edce:	bfb8      	it	lt
 801edd0:	b203      	sxthlt	r3, r0
 801edd2:	460e      	mov	r6, r1
 801edd4:	4293      	cmp	r3, r2
 801edd6:	88e1      	ldrh	r1, [r4, #6]
 801edd8:	f8ad 1008 	strh.w	r1, [sp, #8]
 801eddc:	f8ad 500c 	strh.w	r5, [sp, #12]
 801ede0:	dc08      	bgt.n	801edf4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801ede2:	1a69      	subs	r1, r5, r1
 801ede4:	b289      	uxth	r1, r1
 801ede6:	b20b      	sxth	r3, r1
 801ede8:	2b00      	cmp	r3, #0
 801edea:	bfbc      	itt	lt
 801edec:	4249      	neglt	r1, r1
 801edee:	b20b      	sxthlt	r3, r1
 801edf0:	429a      	cmp	r2, r3
 801edf2:	da13      	bge.n	801ee1c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801edf4:	6920      	ldr	r0, [r4, #16]
 801edf6:	6803      	ldr	r3, [r0, #0]
 801edf8:	4669      	mov	r1, sp
 801edfa:	685b      	ldr	r3, [r3, #4]
 801edfc:	4798      	blx	r3
 801edfe:	eba8 0606 	sub.w	r6, r8, r6
 801ee02:	2300      	movs	r3, #0
 801ee04:	1bef      	subs	r7, r5, r7
 801ee06:	2001      	movs	r0, #1
 801ee08:	8123      	strh	r3, [r4, #8]
 801ee0a:	8166      	strh	r6, [r4, #10]
 801ee0c:	81a7      	strh	r7, [r4, #12]
 801ee0e:	f8a4 8004 	strh.w	r8, [r4, #4]
 801ee12:	80e5      	strh	r5, [r4, #6]
 801ee14:	73a0      	strb	r0, [r4, #14]
 801ee16:	b004      	add	sp, #16
 801ee18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ee1c:	2000      	movs	r0, #0
 801ee1e:	e7fa      	b.n	801ee16 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801ee20:	080260a8 	.word	0x080260a8

0801ee24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801ee24:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ee26:	461e      	mov	r6, r3
 801ee28:	1e4b      	subs	r3, r1, #1
 801ee2a:	2b01      	cmp	r3, #1
 801ee2c:	b085      	sub	sp, #20
 801ee2e:	4604      	mov	r4, r0
 801ee30:	460d      	mov	r5, r1
 801ee32:	4617      	mov	r7, r2
 801ee34:	d84b      	bhi.n	801eece <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801ee36:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801ee3a:	1cd3      	adds	r3, r2, #3
 801ee3c:	b29b      	uxth	r3, r3
 801ee3e:	2b06      	cmp	r3, #6
 801ee40:	d916      	bls.n	801ee70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801ee42:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801eee4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ee46:	f8cd c004 	str.w	ip, [sp, #4]
 801ee4a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ee4e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ee52:	6900      	ldr	r0, [r0, #16]
 801ee54:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ee58:	f04f 0c00 	mov.w	ip, #0
 801ee5c:	f88d c008 	strb.w	ip, [sp, #8]
 801ee60:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ee64:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ee68:	6803      	ldr	r3, [r0, #0]
 801ee6a:	a901      	add	r1, sp, #4
 801ee6c:	689b      	ldr	r3, [r3, #8]
 801ee6e:	4798      	blx	r3
 801ee70:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ee74:	1cd3      	adds	r3, r2, #3
 801ee76:	b29b      	uxth	r3, r3
 801ee78:	2b06      	cmp	r3, #6
 801ee7a:	d916      	bls.n	801eeaa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ee7c:	f8df c064 	ldr.w	ip, [pc, #100]	; 801eee4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ee80:	f8cd c004 	str.w	ip, [sp, #4]
 801ee84:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ee88:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ee8c:	6920      	ldr	r0, [r4, #16]
 801ee8e:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ee92:	f04f 0c01 	mov.w	ip, #1
 801ee96:	f88d c008 	strb.w	ip, [sp, #8]
 801ee9a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ee9e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801eea2:	6803      	ldr	r3, [r0, #0]
 801eea4:	a901      	add	r1, sp, #4
 801eea6:	689b      	ldr	r3, [r3, #8]
 801eea8:	4798      	blx	r3
 801eeaa:	4b0d      	ldr	r3, [pc, #52]	; (801eee0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801eeac:	9301      	str	r3, [sp, #4]
 801eeae:	6920      	ldr	r0, [r4, #16]
 801eeb0:	f88d 5008 	strb.w	r5, [sp, #8]
 801eeb4:	2300      	movs	r3, #0
 801eeb6:	f8ad 700a 	strh.w	r7, [sp, #10]
 801eeba:	f8ad 600c 	strh.w	r6, [sp, #12]
 801eebe:	f8ad 300e 	strh.w	r3, [sp, #14]
 801eec2:	6803      	ldr	r3, [r0, #0]
 801eec4:	a901      	add	r1, sp, #4
 801eec6:	681b      	ldr	r3, [r3, #0]
 801eec8:	4798      	blx	r3
 801eeca:	b005      	add	sp, #20
 801eecc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801eece:	2900      	cmp	r1, #0
 801eed0:	d1eb      	bne.n	801eeaa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801eed2:	80a2      	strh	r2, [r4, #4]
 801eed4:	80c6      	strh	r6, [r0, #6]
 801eed6:	60a1      	str	r1, [r4, #8]
 801eed8:	81a1      	strh	r1, [r4, #12]
 801eeda:	73a1      	strb	r1, [r4, #14]
 801eedc:	e7e5      	b.n	801eeaa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801eede:	bf00      	nop
 801eee0:	08026094 	.word	0x08026094
 801eee4:	080260bc 	.word	0x080260bc

0801eee8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>:
 801eee8:	10c9      	asrs	r1, r1, #3
 801eeea:	2900      	cmp	r1, #0
 801eeec:	bfb8      	it	lt
 801eeee:	4249      	neglt	r1, r1
 801eef0:	2801      	cmp	r0, #1
 801eef2:	d108      	bne.n	801ef06 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15+0x1e>
 801eef4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801eef8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801eefc:	4601      	mov	r1, r0
 801eefe:	dd02      	ble.n	801ef06 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15+0x1e>
 801ef00:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801ef04:	4770      	bx	lr
 801ef06:	29ff      	cmp	r1, #255	; 0xff
 801ef08:	bfa8      	it	ge
 801ef0a:	21ff      	movge	r1, #255	; 0xff
 801ef0c:	4608      	mov	r0, r1
 801ef0e:	4770      	bx	lr

0801ef10 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>:
 801ef10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef14:	688c      	ldr	r4, [r1, #8]
 801ef16:	2c00      	cmp	r4, #0
 801ef18:	b087      	sub	sp, #28
 801ef1a:	4607      	mov	r7, r0
 801ef1c:	db2b      	blt.n	801ef76 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801ef1e:	6803      	ldr	r3, [r0, #0]
 801ef20:	691a      	ldr	r2, [r3, #16]
 801ef22:	42a2      	cmp	r2, r4
 801ef24:	dd27      	ble.n	801ef76 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801ef26:	685a      	ldr	r2, [r3, #4]
 801ef28:	695e      	ldr	r6, [r3, #20]
 801ef2a:	68cd      	ldr	r5, [r1, #12]
 801ef2c:	f8d1 901c 	ldr.w	r9, [r1, #28]
 801ef30:	f893 a008 	ldrb.w	sl, [r3, #8]
 801ef34:	f8d1 8020 	ldr.w	r8, [r1, #32]
 801ef38:	fb06 2604 	mla	r6, r6, r4, r2
 801ef3c:	698a      	ldr	r2, [r1, #24]
 801ef3e:	9205      	str	r2, [sp, #20]
 801ef40:	f839 2f02 	ldrh.w	r2, [r9, #2]!
 801ef44:	9b05      	ldr	r3, [sp, #20]
 801ef46:	6839      	ldr	r1, [r7, #0]
 801ef48:	eb03 0c02 	add.w	ip, r3, r2
 801ef4c:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 801ef50:	68c9      	ldr	r1, [r1, #12]
 801ef52:	1898      	adds	r0, r3, r2
 801ef54:	4288      	cmp	r0, r1
 801ef56:	db02      	blt.n	801ef5e <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x4e>
 801ef58:	1a8b      	subs	r3, r1, r2
 801ef5a:	2b00      	cmp	r3, #0
 801ef5c:	dd09      	ble.n	801ef72 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x62>
 801ef5e:	6878      	ldr	r0, [r7, #4]
 801ef60:	6801      	ldr	r1, [r0, #0]
 801ef62:	9400      	str	r4, [sp, #0]
 801ef64:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 801ef68:	4653      	mov	r3, sl
 801ef6a:	f8d1 b008 	ldr.w	fp, [r1, #8]
 801ef6e:	4631      	mov	r1, r6
 801ef70:	47d8      	blx	fp
 801ef72:	3d01      	subs	r5, #1
 801ef74:	d1e4      	bne.n	801ef40 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x30>
 801ef76:	b007      	add	sp, #28
 801ef78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ef7c <_ZN8touchgfx10Rasterizer6lineToEii>:
 801ef7c:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 801ef80:	b90b      	cbnz	r3, 801ef86 <_ZN8touchgfx10Rasterizer6lineToEii+0xa>
 801ef82:	f001 bf16 	b.w	8020db2 <_ZN8touchgfx7Outline6lineToEii>
 801ef86:	4770      	bx	lr

0801ef88 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801ef88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ef8c:	4b8f      	ldr	r3, [pc, #572]	; (801f1cc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x244>)
 801ef8e:	4604      	mov	r4, r0
 801ef90:	2600      	movs	r6, #0
 801ef92:	f100 0518 	add.w	r5, r0, #24
 801ef96:	e9c0 3100 	strd	r3, r1, [r0]
 801ef9a:	b086      	sub	sp, #24
 801ef9c:	e9c0 6602 	strd	r6, r6, [r0, #8]
 801efa0:	e9c0 6604 	strd	r6, r6, [r0, #16]
 801efa4:	f104 0730 	add.w	r7, r4, #48	; 0x30
 801efa8:	4628      	mov	r0, r5
 801efaa:	4690      	mov	r8, r2
 801efac:	f002 f922 	bl	80211f4 <_ZN8touchgfx15RenderingBufferC1Ev>
 801efb0:	4638      	mov	r0, r7
 801efb2:	f001 f8d7 	bl	8020164 <_ZN8touchgfx7OutlineC1Ev>
 801efb6:	f104 0078 	add.w	r0, r4, #120	; 0x78
 801efba:	f002 f8c7 	bl	802114c <_ZN8touchgfx8ScanlineC1Ev>
 801efbe:	2301      	movs	r3, #1
 801efc0:	f884 609c 	strb.w	r6, [r4, #156]	; 0x9c
 801efc4:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 801efc8:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801efcc:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 801efd0:	e9c4 662a 	strd	r6, r6, [r4, #168]	; 0xa8
 801efd4:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801efd8:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
 801efdc:	f7ef fbba 	bl	800e754 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>
 801efe0:	b928      	cbnz	r0, 801efee <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x66>
 801efe2:	4b7b      	ldr	r3, [pc, #492]	; (801f1d0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x248>)
 801efe4:	4a7b      	ldr	r2, [pc, #492]	; (801f1d4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 801efe6:	2118      	movs	r1, #24
 801efe8:	487b      	ldr	r0, [pc, #492]	; (801f1d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 801efea:	f003 f891 	bl	8022110 <__assert_func>
 801efee:	f9b8 2000 	ldrsh.w	r2, [r8]
 801eff2:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801eff6:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801effa:	9602      	str	r6, [sp, #8]
 801effc:	4410      	add	r0, r2
 801effe:	b280      	uxth	r0, r0
 801f000:	fa0f fa80 	sxth.w	sl, r0
 801f004:	f1ba 0f00 	cmp.w	sl, #0
 801f008:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801f00c:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801f010:	dd70      	ble.n	801f0f4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801f012:	4591      	cmp	r9, r2
 801f014:	dd6e      	ble.n	801f0f4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801f016:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801f01a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801f01e:	440b      	add	r3, r1
 801f020:	b29b      	uxth	r3, r3
 801f022:	b21e      	sxth	r6, r3
 801f024:	2e00      	cmp	r6, #0
 801f026:	dd65      	ble.n	801f0f4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801f028:	458e      	cmp	lr, r1
 801f02a:	dd63      	ble.n	801f0f4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801f02c:	45d1      	cmp	r9, sl
 801f02e:	bfb8      	it	lt
 801f030:	fa1f f089 	uxthlt.w	r0, r9
 801f034:	45b6      	cmp	lr, r6
 801f036:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801f03a:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801f03e:	bfb8      	it	lt
 801f040:	fa1f f38e 	uxthlt.w	r3, lr
 801f044:	1a80      	subs	r0, r0, r2
 801f046:	1a5b      	subs	r3, r3, r1
 801f048:	f8ad 000c 	strh.w	r0, [sp, #12]
 801f04c:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f050:	f8ad 2008 	strh.w	r2, [sp, #8]
 801f054:	f8ad 100a 	strh.w	r1, [sp, #10]
 801f058:	f10d 0808 	add.w	r8, sp, #8
 801f05c:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f060:	ae04      	add	r6, sp, #16
 801f062:	e886 0003 	stmia.w	r6, {r0, r1}
 801f066:	f8dc 3000 	ldr.w	r3, [ip]
 801f06a:	4660      	mov	r0, ip
 801f06c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f06e:	4631      	mov	r1, r6
 801f070:	4798      	blx	r3
 801f072:	6861      	ldr	r1, [r4, #4]
 801f074:	4640      	mov	r0, r8
 801f076:	3104      	adds	r1, #4
 801f078:	f7f0 fe90 	bl	800fd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f07c:	4630      	mov	r0, r6
 801f07e:	f7f0 fea5 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f082:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 801f086:	f7ef faf5 	bl	800e674 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>
 801f08a:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 801f08e:	4638      	mov	r0, r7
 801f090:	f001 f844 	bl	802011c <_ZN8touchgfx7Outline5resetEv>
 801f094:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801f098:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
 801f09c:	015b      	lsls	r3, r3, #5
 801f09e:	60e3      	str	r3, [r4, #12]
 801f0a0:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f0a4:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801f0a8:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
 801f0ac:	015b      	lsls	r3, r3, #5
 801f0ae:	6123      	str	r3, [r4, #16]
 801f0b0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801f0b4:	015b      	lsls	r3, r3, #5
 801f0b6:	6163      	str	r3, [r4, #20]
 801f0b8:	4b48      	ldr	r3, [pc, #288]	; (801f1dc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x254>)
 801f0ba:	0152      	lsls	r2, r2, #5
 801f0bc:	6818      	ldr	r0, [r3, #0]
 801f0be:	60a2      	str	r2, [r4, #8]
 801f0c0:	6803      	ldr	r3, [r0, #0]
 801f0c2:	6a1b      	ldr	r3, [r3, #32]
 801f0c4:	4798      	blx	r3
 801f0c6:	4606      	mov	r6, r0
 801f0c8:	f7e3 fbec 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 801f0cc:	6803      	ldr	r3, [r0, #0]
 801f0ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801f0d0:	4798      	blx	r3
 801f0d2:	4607      	mov	r7, r0
 801f0d4:	f7e3 fbe6 	bl	80028a4 <_ZN8touchgfx3HAL3lcdEv>
 801f0d8:	6803      	ldr	r3, [r0, #0]
 801f0da:	6a1b      	ldr	r3, [r3, #32]
 801f0dc:	4798      	blx	r3
 801f0de:	280d      	cmp	r0, #13
 801f0e0:	d855      	bhi.n	801f18e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x206>
 801f0e2:	e8df f000 	tbb	[pc, r0]
 801f0e6:	564c      	.short	0x564c
 801f0e8:	2b6f0a67 	.word	0x2b6f0a67
 801f0ec:	6060603b 	.word	0x6060603b
 801f0f0:	6f6f6060 	.word	0x6f6f6060
 801f0f4:	2300      	movs	r3, #0
 801f0f6:	9303      	str	r3, [sp, #12]
 801f0f8:	e7ae      	b.n	801f058 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xd0>
 801f0fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f0fe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f102:	2108      	movs	r1, #8
 801f104:	fb92 f1f1 	sdiv	r1, r2, r1
 801f108:	fb07 1303 	mla	r3, r7, r3, r1
 801f10c:	441e      	add	r6, r3
 801f10e:	4253      	negs	r3, r2
 801f110:	f003 0307 	and.w	r3, r3, #7
 801f114:	f002 0207 	and.w	r2, r2, #7
 801f118:	bf58      	it	pl
 801f11a:	425a      	negpl	r2, r3
 801f11c:	b2d2      	uxtb	r2, r2
 801f11e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f122:	6721      	str	r1, [r4, #112]	; 0x70
 801f124:	e9cd 1700 	strd	r1, r7, [sp]
 801f128:	4628      	mov	r0, r5
 801f12a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801f12e:	4631      	mov	r1, r6
 801f130:	f002 f86c 	bl	802120c <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>
 801f134:	4620      	mov	r0, r4
 801f136:	b006      	add	sp, #24
 801f138:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f13c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f140:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f144:	2104      	movs	r1, #4
 801f146:	fb92 f1f1 	sdiv	r1, r2, r1
 801f14a:	fb07 1303 	mla	r3, r7, r3, r1
 801f14e:	441e      	add	r6, r3
 801f150:	4253      	negs	r3, r2
 801f152:	f003 0303 	and.w	r3, r3, #3
 801f156:	f002 0203 	and.w	r2, r2, #3
 801f15a:	e7dd      	b.n	801f118 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x190>
 801f15c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f160:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f164:	2a00      	cmp	r2, #0
 801f166:	f04f 0102 	mov.w	r1, #2
 801f16a:	fb92 f1f1 	sdiv	r1, r2, r1
 801f16e:	f002 0201 	and.w	r2, r2, #1
 801f172:	fb07 1303 	mla	r3, r7, r3, r1
 801f176:	441e      	add	r6, r3
 801f178:	bfb8      	it	lt
 801f17a:	4252      	neglt	r2, r2
 801f17c:	e7ce      	b.n	801f11c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x194>
 801f17e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f182:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f186:	437b      	muls	r3, r7
 801f188:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801f18c:	441e      	add	r6, r3
 801f18e:	2200      	movs	r2, #0
 801f190:	e7c5      	b.n	801f11e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x196>
 801f192:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f196:	fb07 f203 	mul.w	r2, r7, r3
 801f19a:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801f19e:	2103      	movs	r1, #3
 801f1a0:	fb13 2301 	smlabb	r3, r3, r1, r2
 801f1a4:	e7f2      	b.n	801f18c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x204>
 801f1a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f1aa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f1ae:	fb07 2303 	mla	r3, r7, r3, r2
 801f1b2:	e7eb      	b.n	801f18c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x204>
 801f1b4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f1b8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f1bc:	437b      	muls	r3, r7
 801f1be:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801f1c2:	e7e3      	b.n	801f18c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x204>
 801f1c4:	4b06      	ldr	r3, [pc, #24]	; (801f1e0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x258>)
 801f1c6:	4a03      	ldr	r2, [pc, #12]	; (801f1d4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 801f1c8:	2157      	movs	r1, #87	; 0x57
 801f1ca:	e70d      	b.n	801efe8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x60>
 801f1cc:	08027534 	.word	0x08027534
 801f1d0:	0802747f 	.word	0x0802747f
 801f1d4:	0802753c 	.word	0x0802753c
 801f1d8:	080274db 	.word	0x080274db
 801f1dc:	2000e3e0 	.word	0x2000e3e0
 801f1e0:	0802750f 	.word	0x0802750f

0801f1e4 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>:
 801f1e4:	6812      	ldr	r2, [r2, #0]
 801f1e6:	2a00      	cmp	r2, #0
 801f1e8:	db0b      	blt.n	801f202 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x1e>
 801f1ea:	9800      	ldr	r0, [sp, #0]
 801f1ec:	6800      	ldr	r0, [r0, #0]
 801f1ee:	4290      	cmp	r0, r2
 801f1f0:	bfd4      	ite	le
 801f1f2:	2002      	movle	r0, #2
 801f1f4:	2000      	movgt	r0, #0
 801f1f6:	680a      	ldr	r2, [r1, #0]
 801f1f8:	2a00      	cmp	r2, #0
 801f1fa:	da04      	bge.n	801f206 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x22>
 801f1fc:	f040 0004 	orr.w	r0, r0, #4
 801f200:	4770      	bx	lr
 801f202:	2001      	movs	r0, #1
 801f204:	e7f7      	b.n	801f1f6 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x12>
 801f206:	681b      	ldr	r3, [r3, #0]
 801f208:	4293      	cmp	r3, r2
 801f20a:	bfd8      	it	le
 801f20c:	f040 0008 	orrle.w	r0, r0, #8
 801f210:	4770      	bx	lr
	...

0801f214 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801f214:	b510      	push	{r4, lr}
 801f216:	4b07      	ldr	r3, [pc, #28]	; (801f234 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 801f218:	781b      	ldrb	r3, [r3, #0]
 801f21a:	2b01      	cmp	r3, #1
 801f21c:	d108      	bne.n	801f230 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 801f21e:	6843      	ldr	r3, [r0, #4]
 801f220:	6814      	ldr	r4, [r2, #0]
 801f222:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801f226:	680b      	ldr	r3, [r1, #0]
 801f228:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801f22c:	6013      	str	r3, [r2, #0]
 801f22e:	600c      	str	r4, [r1, #0]
 801f230:	bd10      	pop	{r4, pc}
 801f232:	bf00      	nop
 801f234:	2000e3d8 	.word	0x2000e3d8

0801f238 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 801f238:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f23a:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801f23e:	b085      	sub	sp, #20
 801f240:	4604      	mov	r4, r0
 801f242:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801f246:	b33b      	cbz	r3, 801f298 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x60>
 801f248:	aa02      	add	r2, sp, #8
 801f24a:	a903      	add	r1, sp, #12
 801f24c:	f7ff ffe2 	bl	801f214 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801f250:	68a3      	ldr	r3, [r4, #8]
 801f252:	9e03      	ldr	r6, [sp, #12]
 801f254:	9f02      	ldr	r7, [sp, #8]
 801f256:	1af6      	subs	r6, r6, r3
 801f258:	68e3      	ldr	r3, [r4, #12]
 801f25a:	9603      	str	r6, [sp, #12]
 801f25c:	1aff      	subs	r7, r7, r3
 801f25e:	f104 0314 	add.w	r3, r4, #20
 801f262:	9300      	str	r3, [sp, #0]
 801f264:	aa02      	add	r2, sp, #8
 801f266:	f104 0310 	add.w	r3, r4, #16
 801f26a:	a903      	add	r1, sp, #12
 801f26c:	4620      	mov	r0, r4
 801f26e:	9702      	str	r7, [sp, #8]
 801f270:	f7ff ffb8 	bl	801f1e4 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801f274:	f894 30b0 	ldrb.w	r3, [r4, #176]	; 0xb0
 801f278:	4605      	mov	r5, r0
 801f27a:	b97b      	cbnz	r3, 801f29c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x64>
 801f27c:	463a      	mov	r2, r7
 801f27e:	4631      	mov	r1, r6
 801f280:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801f284:	f7ff fe7a 	bl	801ef7c <_ZN8touchgfx10Rasterizer6lineToEii>
 801f288:	9b03      	ldr	r3, [sp, #12]
 801f28a:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 801f28e:	9b02      	ldr	r3, [sp, #8]
 801f290:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 801f294:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 801f298:	b005      	add	sp, #20
 801f29a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f29c:	b110      	cbz	r0, 801f2a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6c>
 801f29e:	ea13 0200 	ands.w	r2, r3, r0
 801f2a2:	d11c      	bne.n	801f2de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 801f2a4:	f894 00a5 	ldrb.w	r0, [r4, #165]	; 0xa5
 801f2a8:	f104 0630 	add.w	r6, r4, #48	; 0x30
 801f2ac:	e9d4 122a 	ldrd	r1, r2, [r4, #168]	; 0xa8
 801f2b0:	b188      	cbz	r0, 801f2d6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 801f2b2:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 801f2b6:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801f2ba:	b913      	cbnz	r3, 801f2c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x8a>
 801f2bc:	4630      	mov	r0, r6
 801f2be:	f001 fda8 	bl	8020e12 <_ZN8touchgfx7Outline6moveToEii>
 801f2c2:	2300      	movs	r3, #0
 801f2c4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801f2c8:	2301      	movs	r3, #1
 801f2ca:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801f2ce:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801f2d2:	4630      	mov	r0, r6
 801f2d4:	e7d6      	b.n	801f284 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4c>
 801f2d6:	4630      	mov	r0, r6
 801f2d8:	f7ff fe50 	bl	801ef7c <_ZN8touchgfx10Rasterizer6lineToEii>
 801f2dc:	e7f7      	b.n	801f2ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x96>
 801f2de:	4615      	mov	r5, r2
 801f2e0:	e7d2      	b.n	801f288 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x50>

0801f2e2 <_ZN8touchgfx6Canvas5closeEv>:
 801f2e2:	b538      	push	{r3, r4, r5, lr}
 801f2e4:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801f2e8:	4604      	mov	r4, r0
 801f2ea:	b993      	cbnz	r3, 801f312 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801f2ec:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 801f2f0:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 801f2f4:	4213      	tst	r3, r2
 801f2f6:	d10c      	bne.n	801f312 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801f2f8:	f100 0530 	add.w	r5, r0, #48	; 0x30
 801f2fc:	b123      	cbz	r3, 801f308 <_ZN8touchgfx6Canvas5closeEv+0x26>
 801f2fe:	e9d0 122a 	ldrd	r1, r2, [r0, #168]	; 0xa8
 801f302:	4628      	mov	r0, r5
 801f304:	f7ff fe3a 	bl	801ef7c <_ZN8touchgfx10Rasterizer6lineToEii>
 801f308:	e9d4 122d 	ldrd	r1, r2, [r4, #180]	; 0xb4
 801f30c:	4628      	mov	r0, r5
 801f30e:	f7ff fe35 	bl	801ef7c <_ZN8touchgfx10Rasterizer6lineToEii>
 801f312:	2300      	movs	r3, #0
 801f314:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801f318:	bd38      	pop	{r3, r4, r5, pc}

0801f31a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801f31a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f31c:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801f320:	b085      	sub	sp, #20
 801f322:	4604      	mov	r4, r0
 801f324:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801f328:	b353      	cbz	r3, 801f380 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>
 801f32a:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801f32e:	b90b      	cbnz	r3, 801f334 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x1a>
 801f330:	f7ff ffd7 	bl	801f2e2 <_ZN8touchgfx6Canvas5closeEv>
 801f334:	aa02      	add	r2, sp, #8
 801f336:	a903      	add	r1, sp, #12
 801f338:	4620      	mov	r0, r4
 801f33a:	f7ff ff6b 	bl	801f214 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801f33e:	68a3      	ldr	r3, [r4, #8]
 801f340:	9d03      	ldr	r5, [sp, #12]
 801f342:	9e02      	ldr	r6, [sp, #8]
 801f344:	1aed      	subs	r5, r5, r3
 801f346:	68e3      	ldr	r3, [r4, #12]
 801f348:	9503      	str	r5, [sp, #12]
 801f34a:	1af6      	subs	r6, r6, r3
 801f34c:	f104 0314 	add.w	r3, r4, #20
 801f350:	9300      	str	r3, [sp, #0]
 801f352:	aa02      	add	r2, sp, #8
 801f354:	f104 0310 	add.w	r3, r4, #16
 801f358:	a903      	add	r1, sp, #12
 801f35a:	4620      	mov	r0, r4
 801f35c:	9602      	str	r6, [sp, #8]
 801f35e:	f7ff ff41 	bl	801f1e4 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801f362:	4607      	mov	r7, r0
 801f364:	b170      	cbz	r0, 801f384 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x6a>
 801f366:	2301      	movs	r3, #1
 801f368:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801f36c:	9a03      	ldr	r2, [sp, #12]
 801f36e:	9b02      	ldr	r3, [sp, #8]
 801f370:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 801f374:	e9c4 232a 	strd	r2, r3, [r4, #168]	; 0xa8
 801f378:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801f37c:	f884 70b0 	strb.w	r7, [r4, #176]	; 0xb0
 801f380:	b005      	add	sp, #20
 801f382:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f384:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801f388:	f884 00b1 	strb.w	r0, [r4, #177]	; 0xb1
 801f38c:	b92b      	cbnz	r3, 801f39a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x80>
 801f38e:	4632      	mov	r2, r6
 801f390:	4629      	mov	r1, r5
 801f392:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801f396:	f001 fd3c 	bl	8020e12 <_ZN8touchgfx7Outline6moveToEii>
 801f39a:	2300      	movs	r3, #0
 801f39c:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801f3a0:	2301      	movs	r3, #1
 801f3a2:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801f3a6:	e7e1      	b.n	801f36c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x52>

0801f3a8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>:
 801f3a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3ac:	b087      	sub	sp, #28
 801f3ae:	4604      	mov	r4, r0
 801f3b0:	9105      	str	r1, [sp, #20]
 801f3b2:	f001 fe74 	bl	802109e <_ZN8touchgfx7Outline8getCellsEv>
 801f3b6:	f8d4 9008 	ldr.w	r9, [r4, #8]
 801f3ba:	4605      	mov	r5, r0
 801f3bc:	f1b9 0f00 	cmp.w	r9, #0
 801f3c0:	d103      	bne.n	801f3ca <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x22>
 801f3c2:	2001      	movs	r0, #1
 801f3c4:	b007      	add	sp, #28
 801f3c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f3ca:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
 801f3ce:	2e00      	cmp	r6, #0
 801f3d0:	d139      	bne.n	801f446 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x9e>
 801f3d2:	f104 0848 	add.w	r8, r4, #72	; 0x48
 801f3d6:	4640      	mov	r0, r8
 801f3d8:	f001 fea3 	bl	8021122 <_ZN8touchgfx8Scanline5resetEv>
 801f3dc:	f109 33ff 	add.w	r3, r9, #4294967295
 801f3e0:	f105 0708 	add.w	r7, r5, #8
 801f3e4:	9303      	str	r3, [sp, #12]
 801f3e6:	f9b5 b000 	ldrsh.w	fp, [r5]
 801f3ea:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 801f3ee:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801f3f2:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801f3f6:	46da      	mov	sl, fp
 801f3f8:	eb0b 4009 	add.w	r0, fp, r9, lsl #16
 801f3fc:	9b03      	ldr	r3, [sp, #12]
 801f3fe:	9504      	str	r5, [sp, #16]
 801f400:	3b01      	subs	r3, #1
 801f402:	9303      	str	r3, [sp, #12]
 801f404:	3301      	adds	r3, #1
 801f406:	4416      	add	r6, r2
 801f408:	463d      	mov	r5, r7
 801f40a:	d01e      	beq.n	801f44a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa2>
 801f40c:	3708      	adds	r7, #8
 801f40e:	f937 cc06 	ldrsh.w	ip, [r7, #-6]
 801f412:	f937 2c08 	ldrsh.w	r2, [r7, #-8]
 801f416:	eb02 420c 	add.w	r2, r2, ip, lsl #16
 801f41a:	4290      	cmp	r0, r2
 801f41c:	d11e      	bne.n	801f45c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xb4>
 801f41e:	f937 2c02 	ldrsh.w	r2, [r7, #-2]
 801f422:	4411      	add	r1, r2
 801f424:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 801f428:	e7e8      	b.n	801f3fc <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x54>
 801f42a:	1c91      	adds	r1, r2, #2
 801f42c:	f04f 0301 	mov.w	r3, #1
 801f430:	65e1      	str	r1, [r4, #92]	; 0x5c
 801f432:	8053      	strh	r3, [r2, #2]
 801f434:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801f436:	1c91      	adds	r1, r2, #2
 801f438:	65a1      	str	r1, [r4, #88]	; 0x58
 801f43a:	f8a2 b002 	strh.w	fp, [r2, #2]
 801f43e:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801f440:	3201      	adds	r2, #1
 801f442:	6562      	str	r2, [r4, #84]	; 0x54
 801f444:	e03a      	b.n	801f4bc <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x114>
 801f446:	2000      	movs	r0, #0
 801f448:	e7bc      	b.n	801f3c4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1c>
 801f44a:	b951      	cbnz	r1, 801f462 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xba>
 801f44c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801f44e:	2b00      	cmp	r3, #0
 801f450:	d0b7      	beq.n	801f3c2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801f452:	4641      	mov	r1, r8
 801f454:	9805      	ldr	r0, [sp, #20]
 801f456:	f7ff fd5b 	bl	801ef10 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801f45a:	e7b2      	b.n	801f3c2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801f45c:	2900      	cmp	r1, #0
 801f45e:	d035      	beq.n	801f4cc <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x124>
 801f460:	9504      	str	r5, [sp, #16]
 801f462:	ebc1 1186 	rsb	r1, r1, r6, lsl #6
 801f466:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801f46a:	f7ff fd3d 	bl	801eee8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>
 801f46e:	4605      	mov	r5, r0
 801f470:	b330      	cbz	r0, 801f4c0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801f472:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801f474:	b182      	cbz	r2, 801f498 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801f476:	6d22      	ldr	r2, [r4, #80]	; 0x50
 801f478:	454a      	cmp	r2, r9
 801f47a:	d00d      	beq.n	801f498 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801f47c:	4641      	mov	r1, r8
 801f47e:	9805      	ldr	r0, [sp, #20]
 801f480:	f7ff fd46 	bl	801ef10 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801f484:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801f488:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 801f48a:	65e2      	str	r2, [r4, #92]	; 0x5c
 801f48c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801f490:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801f492:	65a2      	str	r2, [r4, #88]	; 0x58
 801f494:	2300      	movs	r3, #0
 801f496:	6563      	str	r3, [r4, #84]	; 0x54
 801f498:	f1bb 0f00 	cmp.w	fp, #0
 801f49c:	db10      	blt.n	801f4c0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801f49e:	f7ef f967 	bl	800e770 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801f4a2:	4583      	cmp	fp, r0
 801f4a4:	d20c      	bcs.n	801f4c0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801f4a6:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801f4a8:	f802 500b 	strb.w	r5, [r2, fp]
 801f4ac:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 801f4ae:	3201      	adds	r2, #1
 801f4b0:	455a      	cmp	r2, fp
 801f4b2:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801f4b4:	d1b9      	bne.n	801f42a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x82>
 801f4b6:	8811      	ldrh	r1, [r2, #0]
 801f4b8:	3101      	adds	r1, #1
 801f4ba:	8011      	strh	r1, [r2, #0]
 801f4bc:	e9c4 b913 	strd	fp, r9, [r4, #76]	; 0x4c
 801f4c0:	9b03      	ldr	r3, [sp, #12]
 801f4c2:	3301      	adds	r3, #1
 801f4c4:	d0c2      	beq.n	801f44c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa4>
 801f4c6:	9d04      	ldr	r5, [sp, #16]
 801f4c8:	f10b 0a01 	add.w	sl, fp, #1
 801f4cc:	f9b5 3000 	ldrsh.w	r3, [r5]
 801f4d0:	4553      	cmp	r3, sl
 801f4d2:	dd88      	ble.n	801f3e6 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801f4d4:	01b1      	lsls	r1, r6, #6
 801f4d6:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801f4da:	f7ff fd05 	bl	801eee8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>
 801f4de:	4683      	mov	fp, r0
 801f4e0:	2800      	cmp	r0, #0
 801f4e2:	d080      	beq.n	801f3e6 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801f4e4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801f4e6:	b183      	cbz	r3, 801f50a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801f4e8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 801f4ea:	454b      	cmp	r3, r9
 801f4ec:	d00d      	beq.n	801f50a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801f4ee:	4641      	mov	r1, r8
 801f4f0:	9805      	ldr	r0, [sp, #20]
 801f4f2:	f7ff fd0d 	bl	801ef10 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801f4f6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801f4fa:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801f4fe:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 801f500:	65e3      	str	r3, [r4, #92]	; 0x5c
 801f502:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801f504:	65a3      	str	r3, [r4, #88]	; 0x58
 801f506:	2300      	movs	r3, #0
 801f508:	6563      	str	r3, [r4, #84]	; 0x54
 801f50a:	f9b5 3000 	ldrsh.w	r3, [r5]
 801f50e:	f8cd b000 	str.w	fp, [sp]
 801f512:	eba3 030a 	sub.w	r3, r3, sl
 801f516:	464a      	mov	r2, r9
 801f518:	4651      	mov	r1, sl
 801f51a:	4640      	mov	r0, r8
 801f51c:	f001 fe28 	bl	8021170 <_ZN8touchgfx8Scanline7addSpanEiijj>
 801f520:	e761      	b.n	801f3e6 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>

0801f522 <_ZN8touchgfx6Canvas6renderEh>:
 801f522:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801f524:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801f528:	4604      	mov	r4, r0
 801f52a:	460d      	mov	r5, r1
 801f52c:	b913      	cbnz	r3, 801f534 <_ZN8touchgfx6Canvas6renderEh+0x12>
 801f52e:	2001      	movs	r0, #1
 801f530:	b003      	add	sp, #12
 801f532:	bd30      	pop	{r4, r5, pc}
 801f534:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 801f538:	2b00      	cmp	r3, #0
 801f53a:	d12f      	bne.n	801f59c <_ZN8touchgfx6Canvas6renderEh+0x7a>
 801f53c:	f890 30a6 	ldrb.w	r3, [r0, #166]	; 0xa6
 801f540:	2b00      	cmp	r3, #0
 801f542:	d0f4      	beq.n	801f52e <_ZN8touchgfx6Canvas6renderEh+0xc>
 801f544:	6840      	ldr	r0, [r0, #4]
 801f546:	6803      	ldr	r3, [r0, #0]
 801f548:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801f54a:	4798      	blx	r3
 801f54c:	fb10 f105 	smulbb	r1, r0, r5
 801f550:	b288      	uxth	r0, r1
 801f552:	1c41      	adds	r1, r0, #1
 801f554:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801f558:	120d      	asrs	r5, r1, #8
 801f55a:	d0e8      	beq.n	801f52e <_ZN8touchgfx6Canvas6renderEh+0xc>
 801f55c:	4620      	mov	r0, r4
 801f55e:	f7ff fec0 	bl	801f2e2 <_ZN8touchgfx6Canvas5closeEv>
 801f562:	6860      	ldr	r0, [r4, #4]
 801f564:	6803      	ldr	r3, [r0, #0]
 801f566:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801f568:	4798      	blx	r3
 801f56a:	f9b4 20a0 	ldrsh.w	r2, [r4, #160]	; 0xa0
 801f56e:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 801f572:	80c3      	strh	r3, [r0, #6]
 801f574:	8082      	strh	r2, [r0, #4]
 801f576:	6860      	ldr	r0, [r4, #4]
 801f578:	6803      	ldr	r3, [r0, #0]
 801f57a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801f57c:	4798      	blx	r3
 801f57e:	7205      	strb	r5, [r0, #8]
 801f580:	6860      	ldr	r0, [r4, #4]
 801f582:	6803      	ldr	r3, [r0, #0]
 801f584:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801f586:	4798      	blx	r3
 801f588:	f104 0318 	add.w	r3, r4, #24
 801f58c:	e9cd 3000 	strd	r3, r0, [sp]
 801f590:	4669      	mov	r1, sp
 801f592:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801f596:	f7ff ff07 	bl	801f3a8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>
 801f59a:	e7c9      	b.n	801f530 <_ZN8touchgfx6Canvas6renderEh+0xe>
 801f59c:	2000      	movs	r0, #0
 801f59e:	e7c7      	b.n	801f530 <_ZN8touchgfx6Canvas6renderEh+0xe>

0801f5a0 <_ZN8touchgfx6CanvasD1Ev>:
 801f5a0:	b538      	push	{r3, r4, r5, lr}
 801f5a2:	4605      	mov	r5, r0
 801f5a4:	4b08      	ldr	r3, [pc, #32]	; (801f5c8 <_ZN8touchgfx6CanvasD1Ev+0x28>)
 801f5a6:	f845 3b30 	str.w	r3, [r5], #48
 801f5aa:	4b08      	ldr	r3, [pc, #32]	; (801f5cc <_ZN8touchgfx6CanvasD1Ev+0x2c>)
 801f5ac:	4604      	mov	r4, r0
 801f5ae:	6818      	ldr	r0, [r3, #0]
 801f5b0:	6803      	ldr	r3, [r0, #0]
 801f5b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801f5b4:	4798      	blx	r3
 801f5b6:	4628      	mov	r0, r5
 801f5b8:	f000 fda8 	bl	802010c <_ZN8touchgfx7OutlineD1Ev>
 801f5bc:	f104 0018 	add.w	r0, r4, #24
 801f5c0:	f001 fe0f 	bl	80211e2 <_ZN8touchgfx15RenderingBufferD1Ev>
 801f5c4:	4620      	mov	r0, r4
 801f5c6:	bd38      	pop	{r3, r4, r5, pc}
 801f5c8:	08027534 	.word	0x08027534
 801f5cc:	2000e3e0 	.word	0x2000e3e0

0801f5d0 <_ZN8touchgfx6CanvasD0Ev>:
 801f5d0:	b510      	push	{r4, lr}
 801f5d2:	4604      	mov	r4, r0
 801f5d4:	f7ff ffe4 	bl	801f5a0 <_ZN8touchgfx6CanvasD1Ev>
 801f5d8:	4620      	mov	r0, r4
 801f5da:	21bc      	movs	r1, #188	; 0xbc
 801f5dc:	f001 ff79 	bl	80214d2 <_ZdlPvj>
 801f5e0:	4620      	mov	r0, r4
 801f5e2:	bd10      	pop	{r4, pc}

0801f5e4 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 801f5e4:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801f5e8:	4770      	bx	lr

0801f5ea <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 801f5ea:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 801f5ee:	4770      	bx	lr

0801f5f0 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 801f5f0:	6802      	ldr	r2, [r0, #0]
 801f5f2:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801f5f6:	6e92      	ldr	r2, [r2, #104]	; 0x68
 801f5f8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801f5fc:	4710      	bx	r2

0801f5fe <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 801f5fe:	6802      	ldr	r2, [r0, #0]
 801f600:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 801f604:	6e92      	ldr	r2, [r2, #104]	; 0x68
 801f606:	eef0 0a40 	vmov.f32	s1, s0
 801f60a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801f60e:	4710      	bx	r2

0801f610 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 801f610:	6802      	ldr	r2, [r0, #0]
 801f612:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 801f616:	6e92      	ldr	r2, [r2, #104]	; 0x68
 801f618:	eeb0 1a40 	vmov.f32	s2, s0
 801f61c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801f620:	4710      	bx	r2

0801f622 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 801f622:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 801f626:	4770      	bx	lr

0801f628 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 801f628:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 801f62c:	4770      	bx	lr

0801f62e <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 801f62e:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 801f632:	4770      	bx	lr

0801f634 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 801f634:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 801f638:	4770      	bx	lr

0801f63a <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 801f63a:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 801f63e:	4770      	bx	lr

0801f640 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 801f640:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 801f644:	4770      	bx	lr

0801f646 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 801f646:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 801f64a:	4770      	bx	lr

0801f64c <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 801f64c:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 801f650:	4770      	bx	lr

0801f652 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 801f652:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 801f656:	4770      	bx	lr

0801f658 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 801f658:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 801f65c:	4770      	bx	lr

0801f65e <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 801f65e:	ee07 2a90 	vmov	s15, r2
 801f662:	6803      	ldr	r3, [r0, #0]
 801f664:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801f668:	ee07 1a90 	vmov	s15, r1
 801f66c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801f670:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801f674:	4718      	bx	r3

0801f676 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 801f676:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 801f67a:	4770      	bx	lr

0801f67c <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 801f67c:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 801f680:	4770      	bx	lr

0801f682 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 801f682:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 801f686:	4770      	bx	lr

0801f688 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 801f688:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 801f68c:	4770      	bx	lr

0801f68e <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 801f68e:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 801f692:	4770      	bx	lr

0801f694 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 801f694:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 801f698:	4770      	bx	lr

0801f69a <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 801f69a:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 801f69e:	4770      	bx	lr

0801f6a0 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 801f6a0:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 801f6a4:	4770      	bx	lr

0801f6a6 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 801f6a6:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 801f6aa:	4770      	bx	lr

0801f6ac <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 801f6ac:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 801f6b0:	4770      	bx	lr

0801f6b2 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 801f6b2:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 801f6b6:	4770      	bx	lr

0801f6b8 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 801f6b8:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 801f6bc:	4770      	bx	lr

0801f6be <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 801f6be:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 801f6c2:	4770      	bx	lr

0801f6c4 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 801f6c4:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 801f6c8:	4770      	bx	lr

0801f6ca <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 801f6ca:	2200      	movs	r2, #0
 801f6cc:	8002      	strh	r2, [r0, #0]
 801f6ce:	8042      	strh	r2, [r0, #2]
 801f6d0:	8082      	strh	r2, [r0, #4]
 801f6d2:	80c2      	strh	r2, [r0, #6]
 801f6d4:	4770      	bx	lr

0801f6d6 <_ZN8touchgfx13TextureMapperD1Ev>:
 801f6d6:	4770      	bx	lr

0801f6d8 <_ZN8touchgfx13TextureMapperD0Ev>:
 801f6d8:	b510      	push	{r4, lr}
 801f6da:	2190      	movs	r1, #144	; 0x90
 801f6dc:	4604      	mov	r4, r0
 801f6de:	f001 fef8 	bl	80214d2 <_ZdlPvj>
 801f6e2:	4620      	mov	r0, r4
 801f6e4:	bd10      	pop	{r4, pc}
	...

0801f6e8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 801f6e8:	b538      	push	{r3, r4, r5, lr}
 801f6ea:	2301      	movs	r3, #1
 801f6ec:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 801f6f0:	4b1f      	ldr	r3, [pc, #124]	; (801f770 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x88>)
 801f6f2:	6003      	str	r3, [r0, #0]
 801f6f4:	2500      	movs	r5, #0
 801f6f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801f6fa:	4604      	mov	r4, r0
 801f6fc:	8085      	strh	r5, [r0, #4]
 801f6fe:	80c5      	strh	r5, [r0, #6]
 801f700:	8105      	strh	r5, [r0, #8]
 801f702:	8145      	strh	r5, [r0, #10]
 801f704:	8185      	strh	r5, [r0, #12]
 801f706:	81c5      	strh	r5, [r0, #14]
 801f708:	8205      	strh	r5, [r0, #16]
 801f70a:	8245      	strh	r5, [r0, #18]
 801f70c:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801f710:	61c5      	str	r5, [r0, #28]
 801f712:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 801f716:	84c3      	strh	r3, [r0, #38]	; 0x26
 801f718:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801f71c:	f7ee ff2c 	bl	800e578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801f720:	4b14      	ldr	r3, [pc, #80]	; (801f774 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 801f722:	6023      	str	r3, [r4, #0]
 801f724:	2300      	movs	r3, #0
 801f726:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 801f72a:	4913      	ldr	r1, [pc, #76]	; (801f778 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 801f72c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801f72e:	6323      	str	r3, [r4, #48]	; 0x30
 801f730:	6363      	str	r3, [r4, #52]	; 0x34
 801f732:	63a3      	str	r3, [r4, #56]	; 0x38
 801f734:	63e3      	str	r3, [r4, #60]	; 0x3c
 801f736:	6463      	str	r3, [r4, #68]	; 0x44
 801f738:	64a3      	str	r3, [r4, #72]	; 0x48
 801f73a:	6523      	str	r3, [r4, #80]	; 0x50
 801f73c:	6563      	str	r3, [r4, #84]	; 0x54
 801f73e:	65e3      	str	r3, [r4, #92]	; 0x5c
 801f740:	6623      	str	r3, [r4, #96]	; 0x60
 801f742:	66a3      	str	r3, [r4, #104]	; 0x68
 801f744:	66e3      	str	r3, [r4, #108]	; 0x6c
 801f746:	6763      	str	r3, [r4, #116]	; 0x74
 801f748:	67a3      	str	r3, [r4, #120]	; 0x78
 801f74a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 801f74e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 801f752:	230c      	movs	r3, #12
 801f754:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 801f758:	6422      	str	r2, [r4, #64]	; 0x40
 801f75a:	64e1      	str	r1, [r4, #76]	; 0x4c
 801f75c:	65a1      	str	r1, [r4, #88]	; 0x58
 801f75e:	6662      	str	r2, [r4, #100]	; 0x64
 801f760:	6722      	str	r2, [r4, #112]	; 0x70
 801f762:	67e2      	str	r2, [r4, #124]	; 0x7c
 801f764:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 801f768:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 801f76c:	4620      	mov	r0, r4
 801f76e:	bd38      	pop	{r3, r4, r5, pc}
 801f770:	08025c78 	.word	0x08025c78
 801f774:	08027594 	.word	0x08027594
 801f778:	447a0000 	.word	0x447a0000

0801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 801f77c:	b570      	push	{r4, r5, r6, lr}
 801f77e:	ed2d 8b04 	vpush	{d8-d9}
 801f782:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 801f786:	add0      	add	r5, sp, #832	; 0x340
 801f788:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 801f78a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 801f78e:	4604      	mov	r4, r0
 801f790:	4628      	mov	r0, r5
 801f792:	f7f3 fdbd 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f796:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 801f798:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 801f79c:	4606      	mov	r6, r0
 801f79e:	4628      	mov	r0, r5
 801f7a0:	f7f3 fdf0 	bl	8013384 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f7a4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801f7a8:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 801f7ac:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801f7ae:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 801f7b2:	9312      	str	r3, [sp, #72]	; 0x48
 801f7b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f7b8:	1c72      	adds	r2, r6, #1
 801f7ba:	3001      	adds	r0, #1
 801f7bc:	ee76 5ac7 	vsub.f32	s11, s13, s14
 801f7c0:	ee07 2a90 	vmov	s15, r2
 801f7c4:	ee06 0a90 	vmov	s13, r0
 801f7c8:	ee36 6a47 	vsub.f32	s12, s12, s14
 801f7cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801f7d0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801f7d4:	ee77 7a86 	vadd.f32	s15, s15, s12
 801f7d8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801f7dc:	9316      	str	r3, [sp, #88]	; 0x58
 801f7de:	931a      	str	r3, [sp, #104]	; 0x68
 801f7e0:	931e      	str	r3, [sp, #120]	; 0x78
 801f7e2:	2300      	movs	r3, #0
 801f7e4:	9320      	str	r3, [sp, #128]	; 0x80
 801f7e6:	9321      	str	r3, [sp, #132]	; 0x84
 801f7e8:	9322      	str	r3, [sp, #136]	; 0x88
 801f7ea:	9324      	str	r3, [sp, #144]	; 0x90
 801f7ec:	9325      	str	r3, [sp, #148]	; 0x94
 801f7ee:	9326      	str	r3, [sp, #152]	; 0x98
 801f7f0:	9328      	str	r3, [sp, #160]	; 0xa0
 801f7f2:	9329      	str	r3, [sp, #164]	; 0xa4
 801f7f4:	932a      	str	r3, [sp, #168]	; 0xa8
 801f7f6:	932c      	str	r3, [sp, #176]	; 0xb0
 801f7f8:	932d      	str	r3, [sp, #180]	; 0xb4
 801f7fa:	932e      	str	r3, [sp, #184]	; 0xb8
 801f7fc:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801f800:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 801f804:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 801f808:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 801f80c:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 801f810:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 801f814:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 801f818:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 801f81c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 801f820:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 801f824:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801f828:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 801f82c:	a830      	add	r0, sp, #192	; 0xc0
 801f82e:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 801f832:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 801f836:	f001 fd21 	bl	802127c <_ZN8touchgfx9Matrix4x4C1Ev>
 801f83a:	eeb1 0a49 	vneg.f32	s0, s18
 801f83e:	a830      	add	r0, sp, #192	; 0xc0
 801f840:	f001 fdf0 	bl	8021424 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801f844:	eeb1 0a68 	vneg.f32	s0, s17
 801f848:	f001 fdfa 	bl	8021440 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801f84c:	eeb1 0a48 	vneg.f32	s0, s16
 801f850:	f001 fe05 	bl	802145e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 801f854:	a840      	add	r0, sp, #256	; 0x100
 801f856:	f001 fd11 	bl	802127c <_ZN8touchgfx9Matrix4x4C1Ev>
 801f85a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 801f85e:	a840      	add	r0, sp, #256	; 0x100
 801f860:	f001 fd64 	bl	802132c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 801f864:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 801f868:	f001 fd8a 	bl	8021380 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 801f86c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 801f870:	f001 fdaf 	bl	80213d2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 801f874:	a850      	add	r0, sp, #320	; 0x140
 801f876:	f001 fd01 	bl	802127c <_ZN8touchgfx9Matrix4x4C1Ev>
 801f87a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801f87e:	a850      	add	r0, sp, #320	; 0x140
 801f880:	f001 fdfc 	bl	802147c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 801f884:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801f888:	f001 fe04 	bl	8021494 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 801f88c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 801f890:	f001 fe0d 	bl	80214ae <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 801f894:	a860      	add	r0, sp, #384	; 0x180
 801f896:	f001 fcf1 	bl	802127c <_ZN8touchgfx9Matrix4x4C1Ev>
 801f89a:	eeb0 0a49 	vmov.f32	s0, s18
 801f89e:	a860      	add	r0, sp, #384	; 0x180
 801f8a0:	f001 fdc0 	bl	8021424 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801f8a4:	eeb0 0a68 	vmov.f32	s0, s17
 801f8a8:	f001 fdca 	bl	8021440 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801f8ac:	eeb0 0a48 	vmov.f32	s0, s16
 801f8b0:	f001 fdd5 	bl	802145e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 801f8b4:	aa50      	add	r2, sp, #320	; 0x140
 801f8b6:	a960      	add	r1, sp, #384	; 0x180
 801f8b8:	a8b0      	add	r0, sp, #704	; 0x2c0
 801f8ba:	f001 fcf9 	bl	80212b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801f8be:	4628      	mov	r0, r5
 801f8c0:	aa40      	add	r2, sp, #256	; 0x100
 801f8c2:	a9b0      	add	r1, sp, #704	; 0x2c0
 801f8c4:	f001 fcf4 	bl	80212b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801f8c8:	4629      	mov	r1, r5
 801f8ca:	aa30      	add	r2, sp, #192	; 0xc0
 801f8cc:	a870      	add	r0, sp, #448	; 0x1c0
 801f8ce:	f001 fcef 	bl	80212b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801f8d2:	a880      	add	r0, sp, #512	; 0x200
 801f8d4:	f001 fcd2 	bl	802127c <_ZN8touchgfx9Matrix4x4C1Ev>
 801f8d8:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801f8dc:	a880      	add	r0, sp, #512	; 0x200
 801f8de:	eeb1 0a40 	vneg.f32	s0, s0
 801f8e2:	f001 fd9f 	bl	8021424 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801f8e6:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 801f8ea:	a880      	add	r0, sp, #512	; 0x200
 801f8ec:	eeb1 0a40 	vneg.f32	s0, s0
 801f8f0:	f001 fda6 	bl	8021440 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801f8f4:	a890      	add	r0, sp, #576	; 0x240
 801f8f6:	f001 fcc1 	bl	802127c <_ZN8touchgfx9Matrix4x4C1Ev>
 801f8fa:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 801f8fe:	a890      	add	r0, sp, #576	; 0x240
 801f900:	f001 fd04 	bl	802130c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 801f904:	a8a0      	add	r0, sp, #640	; 0x280
 801f906:	f001 fcb9 	bl	802127c <_ZN8touchgfx9Matrix4x4C1Ev>
 801f90a:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 801f90e:	a8a0      	add	r0, sp, #640	; 0x280
 801f910:	f001 fd88 	bl	8021424 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 801f914:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 801f918:	f001 fd92 	bl	8021440 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 801f91c:	aa90      	add	r2, sp, #576	; 0x240
 801f91e:	a9a0      	add	r1, sp, #640	; 0x280
 801f920:	a8b0      	add	r0, sp, #704	; 0x2c0
 801f922:	f001 fcc5 	bl	80212b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801f926:	4628      	mov	r0, r5
 801f928:	aa80      	add	r2, sp, #512	; 0x200
 801f92a:	a9b0      	add	r1, sp, #704	; 0x2c0
 801f92c:	f001 fcc0 	bl	80212b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801f930:	4629      	mov	r1, r5
 801f932:	aa70      	add	r2, sp, #448	; 0x1c0
 801f934:	4668      	mov	r0, sp
 801f936:	466d      	mov	r5, sp
 801f938:	f001 fcba 	bl	80212b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 801f93c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801f93e:	ae70      	add	r6, sp, #448	; 0x1c0
 801f940:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801f942:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801f944:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801f946:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801f948:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 801f94a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 801f94e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 801f952:	2500      	movs	r5, #0
 801f954:	0129      	lsls	r1, r5, #4
 801f956:	ab20      	add	r3, sp, #128	; 0x80
 801f958:	185e      	adds	r6, r3, r1
 801f95a:	ab10      	add	r3, sp, #64	; 0x40
 801f95c:	4419      	add	r1, r3
 801f95e:	a870      	add	r0, sp, #448	; 0x1c0
 801f960:	f001 fc5c 	bl	802121c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 801f964:	3501      	adds	r5, #1
 801f966:	2d04      	cmp	r5, #4
 801f968:	ed86 0a00 	vstr	s0, [r6]
 801f96c:	edc6 0a01 	vstr	s1, [r6, #4]
 801f970:	ed86 1a02 	vstr	s2, [r6, #8]
 801f974:	edc6 1a03 	vstr	s3, [r6, #12]
 801f978:	d1ec      	bne.n	801f954 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 801f97a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 801f97e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 801f982:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 801f986:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801f98a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 801f98e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801f992:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 801f996:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 801f99a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801f99e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801f9a2:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 801f9a6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801f9aa:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 801f9ae:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801f9b2:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 801f9b6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801f9ba:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 801f9be:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 801f9c2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801f9c6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801f9ca:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 801f9ce:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 801f9d2:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 801f9d6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801f9da:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 801f9de:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801f9e2:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 801f9e6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 801f9ea:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801f9ee:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801f9f2:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 801f9f6:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 801f9fa:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 801f9fe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 801fa02:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 801fa06:	ee86 6a87 	vdiv.f32	s12, s13, s14
 801fa0a:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 801fa0e:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 801fa12:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801fa16:	eec7 6a87 	vdiv.f32	s13, s15, s14
 801fa1a:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 801fa1e:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 801fa22:	ecbd 8b04 	vpop	{d8-d9}
 801fa26:	bd70      	pop	{r4, r5, r6, pc}

0801fa28 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 801fa28:	b510      	push	{r4, lr}
 801fa2a:	4604      	mov	r4, r0
 801fa2c:	f7ee fda4 	bl	800e578 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801fa30:	4620      	mov	r0, r4
 801fa32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fa36:	f7ff bea1 	b.w	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801fa3a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 801fa3a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 801fa3e:	f7ff be9d 	b.w	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801fa42 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 801fa42:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 801fa46:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 801fa4a:	f7ff be97 	b.w	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801fa4e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 801fa4e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801fa52:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801fa56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fa5a:	bfd8      	it	le
 801fa5c:	eeb0 0a67 	vmovle.f32	s0, s15
 801fa60:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 801fa64:	f7ff be8a 	b.w	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801fa68 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 801fa68:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 801fa6c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 801fa70:	f7ff be84 	b.w	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801fa74 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 801fa74:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 801fa78:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 801fa7c:	f7ff be7e 	b.w	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801fa80 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 801fa80:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 801fa84:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 801fa88:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 801fa8c:	f7ff be76 	b.w	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0801fa90 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 801fa90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fa94:	ed2d 8b04 	vpush	{d8-d9}
 801fa98:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 801fa9c:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 801faa0:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 801faa4:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 801faa8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 801faac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fab0:	bf54      	ite	pl
 801fab2:	eeb0 0a69 	vmovpl.f32	s0, s19
 801fab6:	eeb0 0a48 	vmovmi.f32	s0, s16
 801faba:	eeb4 9ac0 	vcmpe.f32	s18, s0
 801fabe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fac2:	bfd8      	it	le
 801fac4:	eeb0 0a49 	vmovle.f32	s0, s18
 801fac8:	eef4 8ac0 	vcmpe.f32	s17, s0
 801facc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fad0:	bfd8      	it	le
 801fad2:	eeb0 0a68 	vmovle.f32	s0, s17
 801fad6:	460c      	mov	r4, r1
 801fad8:	4607      	mov	r7, r0
 801fada:	f001 fda5 	bl	8021628 <floorf>
 801fade:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801fae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fae6:	bf58      	it	pl
 801fae8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 801faec:	eeb4 8ae9 	vcmpe.f32	s16, s19
 801faf0:	bf56      	itet	pl
 801faf2:	ee10 3a10 	vmovpl	r3, s0
 801faf6:	2600      	movmi	r6, #0
 801faf8:	b21e      	sxthpl	r6, r3
 801fafa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fafe:	bfd8      	it	le
 801fb00:	eeb0 8a69 	vmovle.f32	s16, s19
 801fb04:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801fb08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb0c:	bf58      	it	pl
 801fb0e:	eeb0 8a49 	vmovpl.f32	s16, s18
 801fb12:	eef4 8ac8 	vcmpe.f32	s17, s16
 801fb16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb1a:	bf54      	ite	pl
 801fb1c:	eeb0 0a68 	vmovpl.f32	s0, s17
 801fb20:	eeb0 0a48 	vmovmi.f32	s0, s16
 801fb24:	f001 fcfe 	bl	8021524 <ceilf>
 801fb28:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 801fb2c:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 801fb30:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 801fb34:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 801fb38:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 801fb3c:	ee07 8a90 	vmov	s15, r8
 801fb40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801fb44:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801fb48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb4c:	bfd8      	it	le
 801fb4e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 801fb52:	eeb4 8ae9 	vcmpe.f32	s16, s19
 801fb56:	bfdc      	itt	le
 801fb58:	ee10 3a10 	vmovle	r3, s0
 801fb5c:	fa0f f883 	sxthle.w	r8, r3
 801fb60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb64:	bf54      	ite	pl
 801fb66:	eeb0 0a69 	vmovpl.f32	s0, s19
 801fb6a:	eeb0 0a48 	vmovmi.f32	s0, s16
 801fb6e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 801fb72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb76:	bfd8      	it	le
 801fb78:	eeb0 0a49 	vmovle.f32	s0, s18
 801fb7c:	eef4 8ac0 	vcmpe.f32	s17, s0
 801fb80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb84:	bfd8      	it	le
 801fb86:	eeb0 0a68 	vmovle.f32	s0, s17
 801fb8a:	f001 fd4d 	bl	8021628 <floorf>
 801fb8e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801fb92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fb96:	bf58      	it	pl
 801fb98:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 801fb9c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 801fba0:	bf56      	itet	pl
 801fba2:	ee10 3a10 	vmovpl	r3, s0
 801fba6:	2500      	movmi	r5, #0
 801fba8:	b21d      	sxthpl	r5, r3
 801fbaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fbae:	bfd8      	it	le
 801fbb0:	eeb0 8a69 	vmovle.f32	s16, s19
 801fbb4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 801fbb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fbbc:	bf58      	it	pl
 801fbbe:	eeb0 8a49 	vmovpl.f32	s16, s18
 801fbc2:	eef4 8ac8 	vcmpe.f32	s17, s16
 801fbc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fbca:	bf54      	ite	pl
 801fbcc:	eeb0 0a68 	vmovpl.f32	s0, s17
 801fbd0:	eeb0 0a48 	vmovmi.f32	s0, s16
 801fbd4:	f001 fca6 	bl	8021524 <ceilf>
 801fbd8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801fbdc:	803e      	strh	r6, [r7, #0]
 801fbde:	ee07 3a90 	vmov	s15, r3
 801fbe2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801fbe6:	807d      	strh	r5, [r7, #2]
 801fbe8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 801fbec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801fbf0:	bfd8      	it	le
 801fbf2:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 801fbf6:	eba8 0606 	sub.w	r6, r8, r6
 801fbfa:	bfdc      	itt	le
 801fbfc:	ee10 3a10 	vmovle	r3, s0
 801fc00:	b21b      	sxthle	r3, r3
 801fc02:	1b5d      	subs	r5, r3, r5
 801fc04:	80be      	strh	r6, [r7, #4]
 801fc06:	80fd      	strh	r5, [r7, #6]
 801fc08:	ecbd 8b04 	vpop	{d8-d9}
 801fc0c:	4638      	mov	r0, r7
 801fc0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801fc12 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 801fc12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fc16:	ed2d 8b04 	vpush	{d8-d9}
 801fc1a:	b084      	sub	sp, #16
 801fc1c:	4604      	mov	r4, r0
 801fc1e:	eeb0 9a40 	vmov.f32	s18, s0
 801fc22:	eef0 8a60 	vmov.f32	s17, s1
 801fc26:	eeb0 8a41 	vmov.f32	s16, s2
 801fc2a:	4601      	mov	r1, r0
 801fc2c:	4668      	mov	r0, sp
 801fc2e:	f7ff ff2f 	bl	801fa90 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 801fc32:	4620      	mov	r0, r4
 801fc34:	ed84 9a0d 	vstr	s18, [r4, #52]	; 0x34
 801fc38:	edc4 8a0e 	vstr	s17, [r4, #56]	; 0x38
 801fc3c:	ed84 8a0f 	vstr	s16, [r4, #60]	; 0x3c
 801fc40:	f9bd 8000 	ldrsh.w	r8, [sp]
 801fc44:	f9bd 6002 	ldrsh.w	r6, [sp, #2]
 801fc48:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 801fc4c:	f7ff fd96 	bl	801f77c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 801fc50:	4621      	mov	r1, r4
 801fc52:	a802      	add	r0, sp, #8
 801fc54:	f7ff ff1c 	bl	801fa90 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 801fc58:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801fc5c:	2b00      	cmp	r3, #0
 801fc5e:	dd33      	ble.n	801fcc8 <_ZN8touchgfx13TextureMapper12updateAnglesEfff+0xb6>
 801fc60:	2d00      	cmp	r5, #0
 801fc62:	dd31      	ble.n	801fcc8 <_ZN8touchgfx13TextureMapper12updateAnglesEfff+0xb6>
 801fc64:	f9bd e00c 	ldrsh.w	lr, [sp, #12]
 801fc68:	f1be 0f00 	cmp.w	lr, #0
 801fc6c:	dd36      	ble.n	801fcdc <_ZN8touchgfx13TextureMapper12updateAnglesEfff+0xca>
 801fc6e:	f9bd c00e 	ldrsh.w	ip, [sp, #14]
 801fc72:	f1bc 0f00 	cmp.w	ip, #0
 801fc76:	dd31      	ble.n	801fcdc <_ZN8touchgfx13TextureMapper12updateAnglesEfff+0xca>
 801fc78:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801fc7c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801fc80:	4541      	cmp	r1, r8
 801fc82:	460f      	mov	r7, r1
 801fc84:	4610      	mov	r0, r2
 801fc86:	bfa8      	it	ge
 801fc88:	4647      	movge	r7, r8
 801fc8a:	4471      	add	r1, lr
 801fc8c:	42b2      	cmp	r2, r6
 801fc8e:	4443      	add	r3, r8
 801fc90:	4462      	add	r2, ip
 801fc92:	4435      	add	r5, r6
 801fc94:	bfa8      	it	ge
 801fc96:	4630      	movge	r0, r6
 801fc98:	b209      	sxth	r1, r1
 801fc9a:	b21b      	sxth	r3, r3
 801fc9c:	b212      	sxth	r2, r2
 801fc9e:	b22d      	sxth	r5, r5
 801fca0:	4299      	cmp	r1, r3
 801fca2:	bfac      	ite	ge
 801fca4:	ebc7 0301 	rsbge	r3, r7, r1
 801fca8:	ebc7 0303 	rsblt	r3, r7, r3
 801fcac:	42aa      	cmp	r2, r5
 801fcae:	bfac      	ite	ge
 801fcb0:	ebc0 0202 	rsbge	r2, r0, r2
 801fcb4:	ebc0 0205 	rsblt	r2, r0, r5
 801fcb8:	f8ad 7008 	strh.w	r7, [sp, #8]
 801fcbc:	f8ad 000a 	strh.w	r0, [sp, #10]
 801fcc0:	f8ad 300c 	strh.w	r3, [sp, #12]
 801fcc4:	f8ad 200e 	strh.w	r2, [sp, #14]
 801fcc8:	6823      	ldr	r3, [r4, #0]
 801fcca:	a902      	add	r1, sp, #8
 801fccc:	691b      	ldr	r3, [r3, #16]
 801fcce:	4620      	mov	r0, r4
 801fcd0:	4798      	blx	r3
 801fcd2:	b004      	add	sp, #16
 801fcd4:	ecbd 8b04 	vpop	{d8-d9}
 801fcd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fcdc:	f8ad 8008 	strh.w	r8, [sp, #8]
 801fce0:	f8ad 600a 	strh.w	r6, [sp, #10]
 801fce4:	f8ad 300c 	strh.w	r3, [sp, #12]
 801fce8:	f8ad 500e 	strh.w	r5, [sp, #14]
 801fcec:	e7ec      	b.n	801fcc8 <_ZN8touchgfx13TextureMapper12updateAnglesEfff+0xb6>

0801fcee <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 801fcee:	4603      	mov	r3, r0
 801fcf0:	3026      	adds	r0, #38	; 0x26
 801fcf2:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 801fcf6:	b90b      	cbnz	r3, 801fcfc <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 801fcf8:	f7f1 baad 	b.w	8011256 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 801fcfc:	f7f1 babb 	b.w	8011276 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0801fd00 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 801fd00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd04:	ed2d 8b04 	vpush	{d8-d9}
 801fd08:	4604      	mov	r4, r0
 801fd0a:	469b      	mov	fp, r3
 801fd0c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 801fd10:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801fd14:	f9b1 6000 	ldrsh.w	r6, [r1]
 801fd18:	8888      	ldrh	r0, [r1, #4]
 801fd1a:	b0b3      	sub	sp, #204	; 0xcc
 801fd1c:	4430      	add	r0, r6
 801fd1e:	b280      	uxth	r0, r0
 801fd20:	9206      	str	r2, [sp, #24]
 801fd22:	fa0f fe80 	sxth.w	lr, r0
 801fd26:	2200      	movs	r2, #0
 801fd28:	4596      	cmp	lr, r2
 801fd2a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 801fd2e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 801fd32:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 801fd36:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 801fd38:	9211      	str	r2, [sp, #68]	; 0x44
 801fd3a:	f340 8129 	ble.w	801ff90 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801fd3e:	45b4      	cmp	ip, r6
 801fd40:	f340 8126 	ble.w	801ff90 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801fd44:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 801fd48:	88ca      	ldrh	r2, [r1, #6]
 801fd4a:	442a      	add	r2, r5
 801fd4c:	b292      	uxth	r2, r2
 801fd4e:	b211      	sxth	r1, r2
 801fd50:	2900      	cmp	r1, #0
 801fd52:	f340 811d 	ble.w	801ff90 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801fd56:	42ab      	cmp	r3, r5
 801fd58:	f340 811a 	ble.w	801ff90 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 801fd5c:	45f4      	cmp	ip, lr
 801fd5e:	bfb8      	it	lt
 801fd60:	fa1f f08c 	uxthlt.w	r0, ip
 801fd64:	428b      	cmp	r3, r1
 801fd66:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801fd6a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fd6e:	bfb8      	it	lt
 801fd70:	b29a      	uxthlt	r2, r3
 801fd72:	1b80      	subs	r0, r0, r6
 801fd74:	1b52      	subs	r2, r2, r5
 801fd76:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 801fd7a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 801fd7e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801fd82:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 801fd86:	ab11      	add	r3, sp, #68	; 0x44
 801fd88:	e893 0003 	ldmia.w	r3, {r0, r1}
 801fd8c:	6822      	ldr	r2, [r4, #0]
 801fd8e:	9307      	str	r3, [sp, #28]
 801fd90:	ad13      	add	r5, sp, #76	; 0x4c
 801fd92:	6a92      	ldr	r2, [r2, #40]	; 0x28
 801fd94:	e885 0003 	stmia.w	r5, {r0, r1}
 801fd98:	4629      	mov	r1, r5
 801fd9a:	4620      	mov	r0, r4
 801fd9c:	4790      	blx	r2
 801fd9e:	4621      	mov	r1, r4
 801fda0:	a815      	add	r0, sp, #84	; 0x54
 801fda2:	f7f1 f9b2 	bl	801110a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801fda6:	a815      	add	r0, sp, #84	; 0x54
 801fda8:	f7f0 f810 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fdac:	9b07      	ldr	r3, [sp, #28]
 801fdae:	1d26      	adds	r6, r4, #4
 801fdb0:	4618      	mov	r0, r3
 801fdb2:	4631      	mov	r1, r6
 801fdb4:	f7ef fff2 	bl	800fd9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fdb8:	4628      	mov	r0, r5
 801fdba:	f104 0526 	add.w	r5, r4, #38	; 0x26
 801fdbe:	f7f0 f805 	bl	800fdcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fdc2:	4628      	mov	r0, r5
 801fdc4:	f7f3 fbac 	bl	8013520 <_ZNK8touchgfx6Bitmap7getDataEv>
 801fdc8:	9007      	str	r0, [sp, #28]
 801fdca:	2800      	cmp	r0, #0
 801fdcc:	f000 80db 	beq.w	801ff86 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 801fdd0:	f8db 2000 	ldr.w	r2, [fp]
 801fdd4:	9209      	str	r2, [sp, #36]	; 0x24
 801fdd6:	f8db 2004 	ldr.w	r2, [fp, #4]
 801fdda:	920a      	str	r2, [sp, #40]	; 0x28
 801fddc:	f8db 2008 	ldr.w	r2, [fp, #8]
 801fde0:	920b      	str	r2, [sp, #44]	; 0x2c
 801fde2:	f8db 200c 	ldr.w	r2, [fp, #12]
 801fde6:	920c      	str	r2, [sp, #48]	; 0x30
 801fde8:	f8da 2000 	ldr.w	r2, [sl]
 801fdec:	920d      	str	r2, [sp, #52]	; 0x34
 801fdee:	f8da 2004 	ldr.w	r2, [sl, #4]
 801fdf2:	920e      	str	r2, [sp, #56]	; 0x38
 801fdf4:	f8da 2008 	ldr.w	r2, [sl, #8]
 801fdf8:	920f      	str	r2, [sp, #60]	; 0x3c
 801fdfa:	f8da 200c 	ldr.w	r2, [sl, #12]
 801fdfe:	9210      	str	r2, [sp, #64]	; 0x40
 801fe00:	a90d      	add	r1, sp, #52	; 0x34
 801fe02:	4632      	mov	r2, r6
 801fe04:	a809      	add	r0, sp, #36	; 0x24
 801fe06:	f7ef ffad 	bl	800fd64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801fe0a:	4632      	mov	r2, r6
 801fe0c:	a90e      	add	r1, sp, #56	; 0x38
 801fe0e:	a80a      	add	r0, sp, #40	; 0x28
 801fe10:	f7ef ffa8 	bl	800fd64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801fe14:	4632      	mov	r2, r6
 801fe16:	a90f      	add	r1, sp, #60	; 0x3c
 801fe18:	a80b      	add	r0, sp, #44	; 0x2c
 801fe1a:	f7ef ffa3 	bl	800fd64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801fe1e:	4632      	mov	r2, r6
 801fe20:	a910      	add	r1, sp, #64	; 0x40
 801fe22:	a80c      	add	r0, sp, #48	; 0x30
 801fe24:	f7ef ff9e 	bl	800fd64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801fe28:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 801fe2c:	edd7 4a00 	vldr	s9, [r7]
 801fe30:	edd7 5a01 	vldr	s11, [r7, #4]
 801fe34:	ed98 4a00 	vldr	s8, [r8]
 801fe38:	ed98 5a01 	vldr	s10, [r8, #4]
 801fe3c:	ed99 9a00 	vldr	s18, [r9]
 801fe40:	ed99 8a01 	vldr	s16, [r9, #4]
 801fe44:	edd9 8a02 	vldr	s17, [r9, #8]
 801fe48:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 801fe4c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 801fe50:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 801fe54:	eef0 6a67 	vmov.f32	s13, s15
 801fe58:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 801fe5c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 801fe60:	eeb0 7a67 	vmov.f32	s14, s15
 801fe64:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 801fe68:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 801fe6c:	eeb0 6a67 	vmov.f32	s12, s15
 801fe70:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801fe74:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 801fe78:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 801fe7c:	ee16 6a10 	vmov	r6, s12
 801fe80:	eeb0 6a67 	vmov.f32	s12, s15
 801fe84:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801fe88:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 801fe8c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 801fe90:	f8d8 b008 	ldr.w	fp, [r8, #8]
 801fe94:	68ff      	ldr	r7, [r7, #12]
 801fe96:	9624      	str	r6, [sp, #144]	; 0x90
 801fe98:	ee16 0a10 	vmov	r0, s12
 801fe9c:	eeb0 6a67 	vmov.f32	s12, s15
 801fea0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801fea4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 801fea8:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 801feac:	ee16 1a10 	vmov	r1, s12
 801feb0:	eeb0 6a67 	vmov.f32	s12, s15
 801feb4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801feb8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 801febc:	ee16 2a10 	vmov	r2, s12
 801fec0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 801fec4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 801fec8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801fecc:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 801fed0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801fed4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 801fed8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 801fedc:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 801fee0:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 801fee4:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 801fee8:	922d      	str	r2, [sp, #180]	; 0xb4
 801feea:	4a2b      	ldr	r2, [pc, #172]	; (801ff98 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 801feec:	9b06      	ldr	r3, [sp, #24]
 801feee:	8812      	ldrh	r2, [r2, #0]
 801fef0:	9317      	str	r3, [sp, #92]	; 0x5c
 801fef2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 801fef6:	9b07      	ldr	r3, [sp, #28]
 801fef8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 801fefc:	4628      	mov	r0, r5
 801fefe:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 801ff02:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 801ff06:	9218      	str	r2, [sp, #96]	; 0x60
 801ff08:	9319      	str	r3, [sp, #100]	; 0x64
 801ff0a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 801ff0e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 801ff12:	9731      	str	r7, [sp, #196]	; 0xc4
 801ff14:	f7f3 fb36 	bl	8013584 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801ff18:	901a      	str	r0, [sp, #104]	; 0x68
 801ff1a:	4628      	mov	r0, r5
 801ff1c:	f7f3 f9f8 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ff20:	901b      	str	r0, [sp, #108]	; 0x6c
 801ff22:	4628      	mov	r0, r5
 801ff24:	f7f3 fa2e 	bl	8013384 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ff28:	901c      	str	r0, [sp, #112]	; 0x70
 801ff2a:	4628      	mov	r0, r5
 801ff2c:	f7f3 f9f0 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ff30:	eeb4 9a48 	vcmp.f32	s18, s16
 801ff34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff38:	901d      	str	r0, [sp, #116]	; 0x74
 801ff3a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 801ff3e:	d107      	bne.n	801ff50 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 801ff40:	eeb4 8a68 	vcmp.f32	s16, s17
 801ff44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ff48:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801ff4c:	bf08      	it	eq
 801ff4e:	461e      	moveq	r6, r3
 801ff50:	4b12      	ldr	r3, [pc, #72]	; (801ff9c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 801ff52:	681b      	ldr	r3, [r3, #0]
 801ff54:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801ff58:	b10a      	cbz	r2, 801ff5e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 801ff5a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 801ff5c:	b905      	cbnz	r5, 801ff60 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 801ff5e:	689d      	ldr	r5, [r3, #8]
 801ff60:	682b      	ldr	r3, [r5, #0]
 801ff62:	4620      	mov	r0, r4
 801ff64:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 801ff66:	f7ff fec2 	bl	801fcee <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 801ff6a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801ff6e:	9604      	str	r6, [sp, #16]
 801ff70:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801ff74:	ab13      	add	r3, sp, #76	; 0x4c
 801ff76:	9301      	str	r3, [sp, #4]
 801ff78:	ab15      	add	r3, sp, #84	; 0x54
 801ff7a:	9300      	str	r3, [sp, #0]
 801ff7c:	aa1e      	add	r2, sp, #120	; 0x78
 801ff7e:	ab19      	add	r3, sp, #100	; 0x64
 801ff80:	a917      	add	r1, sp, #92	; 0x5c
 801ff82:	4628      	mov	r0, r5
 801ff84:	47b8      	blx	r7
 801ff86:	b033      	add	sp, #204	; 0xcc
 801ff88:	ecbd 8b04 	vpop	{d8-d9}
 801ff8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff90:	2300      	movs	r3, #0
 801ff92:	9312      	str	r3, [sp, #72]	; 0x48
 801ff94:	e6f7      	b.n	801fd86 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 801ff96:	bf00      	nop
 801ff98:	2000e3da 	.word	0x2000e3da
 801ff9c:	2000e3e0 	.word	0x2000e3e0

0801ffa0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 801ffa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ffa4:	ed2d 8b02 	vpush	{d8}
 801ffa8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801ffac:	b098      	sub	sp, #96	; 0x60
 801ffae:	4604      	mov	r4, r0
 801ffb0:	4688      	mov	r8, r1
 801ffb2:	2b00      	cmp	r3, #0
 801ffb4:	d077      	beq.n	80200a6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 801ffb6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801ffba:	4628      	mov	r0, r5
 801ffbc:	f7f3 f9a8 	bl	8013310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ffc0:	ee07 0a90 	vmov	s15, r0
 801ffc4:	4628      	mov	r0, r5
 801ffc6:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 801ffca:	f7f3 f9db 	bl	8013384 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ffce:	4b4e      	ldr	r3, [pc, #312]	; (8020108 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 801ffd0:	781b      	ldrb	r3, [r3, #0]
 801ffd2:	ee07 0a90 	vmov	s15, r0
 801ffd6:	2b01      	cmp	r3, #1
 801ffd8:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 801ffdc:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 801ffe0:	d066      	beq.n	80200b0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 801ffe2:	eeb0 6a47 	vmov.f32	s12, s14
 801ffe6:	ee17 3a10 	vmov	r3, s14
 801ffea:	eeb0 4a48 	vmov.f32	s8, s16
 801ffee:	eeb0 7a48 	vmov.f32	s14, s16
 801fff2:	eef0 4a67 	vmov.f32	s9, s15
 801fff6:	eeb0 8a67 	vmov.f32	s16, s15
 801fffa:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 801fffe:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8020002:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8020006:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802000a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802000e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8020012:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8020014:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8020016:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8020018:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802001c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8020020:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8020024:	ee73 1a65 	vsub.f32	s3, s6, s11
 8020028:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802002c:	ee32 1a45 	vsub.f32	s2, s4, s10
 8020030:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8020034:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8020038:	eee1 6a21 	vfma.f32	s13, s2, s3
 802003c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8020040:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020044:	dd3d      	ble.n	80200c2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8020046:	ed8d 5a04 	vstr	s10, [sp, #16]
 802004a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802004e:	edcd 2a06 	vstr	s5, [sp, #24]
 8020052:	f8cd c01c 	str.w	ip, [sp, #28]
 8020056:	edcd 5a08 	vstr	s11, [sp, #32]
 802005a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802005e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8020062:	970b      	str	r7, [sp, #44]	; 0x2c
 8020064:	960c      	str	r6, [sp, #48]	; 0x30
 8020066:	950d      	str	r5, [sp, #52]	; 0x34
 8020068:	920e      	str	r2, [sp, #56]	; 0x38
 802006a:	900f      	str	r0, [sp, #60]	; 0x3c
 802006c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8020070:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8020074:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8020078:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802007c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8020080:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8020084:	9316      	str	r3, [sp, #88]	; 0x58
 8020086:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802008a:	ab14      	add	r3, sp, #80	; 0x50
 802008c:	9303      	str	r3, [sp, #12]
 802008e:	ab10      	add	r3, sp, #64	; 0x40
 8020090:	9302      	str	r3, [sp, #8]
 8020092:	ab0c      	add	r3, sp, #48	; 0x30
 8020094:	9301      	str	r3, [sp, #4]
 8020096:	ab08      	add	r3, sp, #32
 8020098:	9300      	str	r3, [sp, #0]
 802009a:	2200      	movs	r2, #0
 802009c:	ab04      	add	r3, sp, #16
 802009e:	4641      	mov	r1, r8
 80200a0:	4620      	mov	r0, r4
 80200a2:	f7ff fe2d 	bl	801fd00 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80200a6:	b018      	add	sp, #96	; 0x60
 80200a8:	ecbd 8b02 	vpop	{d8}
 80200ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80200b0:	eeb0 6a48 	vmov.f32	s12, s16
 80200b4:	eef0 4a47 	vmov.f32	s9, s14
 80200b8:	ee17 3a90 	vmov	r3, s15
 80200bc:	eeb0 4a67 	vmov.f32	s8, s15
 80200c0:	e79b      	b.n	801fffa <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80200c2:	ed8d 5a05 	vstr	s10, [sp, #20]
 80200c6:	ed8d 2a04 	vstr	s4, [sp, #16]
 80200ca:	f8cd c018 	str.w	ip, [sp, #24]
 80200ce:	edcd 2a07 	vstr	s5, [sp, #28]
 80200d2:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80200d6:	ed8d 3a08 	vstr	s6, [sp, #32]
 80200da:	970a      	str	r7, [sp, #40]	; 0x28
 80200dc:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80200e0:	960d      	str	r6, [sp, #52]	; 0x34
 80200e2:	950c      	str	r5, [sp, #48]	; 0x30
 80200e4:	900e      	str	r0, [sp, #56]	; 0x38
 80200e6:	920f      	str	r2, [sp, #60]	; 0x3c
 80200e8:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80200ec:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80200f0:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80200f4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80200f8:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 80200fc:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8020100:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8020104:	9317      	str	r3, [sp, #92]	; 0x5c
 8020106:	e7c0      	b.n	802008a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8020108:	2000e3d8 	.word	0x2000e3d8

0802010c <_ZN8touchgfx7OutlineD1Ev>:
 802010c:	4770      	bx	lr

0802010e <_ZN8touchgfx7OutlineD0Ev>:
 802010e:	b510      	push	{r4, lr}
 8020110:	2148      	movs	r1, #72	; 0x48
 8020112:	4604      	mov	r4, r0
 8020114:	f001 f9dd 	bl	80214d2 <_ZdlPvj>
 8020118:	4620      	mov	r0, r4
 802011a:	bd10      	pop	{r4, pc}

0802011c <_ZN8touchgfx7Outline5resetEv>:
 802011c:	b510      	push	{r4, lr}
 802011e:	4604      	mov	r4, r0
 8020120:	f7ee fb3e 	bl	800e7a0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8020124:	60e0      	str	r0, [r4, #12]
 8020126:	f7ee fb41 	bl	800e7ac <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 802012a:	68e3      	ldr	r3, [r4, #12]
 802012c:	6123      	str	r3, [r4, #16]
 802012e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8020132:	82a3      	strh	r3, [r4, #20]
 8020134:	82e3      	strh	r3, [r4, #22]
 8020136:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8020138:	f023 0301 	bic.w	r3, r3, #1
 802013c:	f043 0302 	orr.w	r3, r3, #2
 8020140:	63e3      	str	r3, [r4, #60]	; 0x3c
 8020142:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8020146:	2200      	movs	r2, #0
 8020148:	08c0      	lsrs	r0, r0, #3
 802014a:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802014e:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8020152:	6060      	str	r0, [r4, #4]
 8020154:	60a2      	str	r2, [r4, #8]
 8020156:	8322      	strh	r2, [r4, #24]
 8020158:	8362      	strh	r2, [r4, #26]
 802015a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802015e:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8020162:	bd10      	pop	{r4, pc}

08020164 <_ZN8touchgfx7OutlineC1Ev>:
 8020164:	b510      	push	{r4, lr}
 8020166:	4b0f      	ldr	r3, [pc, #60]	; (80201a4 <_ZN8touchgfx7OutlineC1Ev+0x40>)
 8020168:	6003      	str	r3, [r0, #0]
 802016a:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 802016e:	2300      	movs	r3, #0
 8020170:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8020174:	4604      	mov	r4, r0
 8020176:	e9c0 3301 	strd	r3, r3, [r0, #4]
 802017a:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802017e:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8020182:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8020186:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 802018a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 802018e:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 8020192:	e9c0 320f 	strd	r3, r2, [r0, #60]	; 0x3c
 8020196:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
 802019a:	f7ff ffbf 	bl	802011c <_ZN8touchgfx7Outline5resetEv>
 802019e:	4620      	mov	r0, r4
 80201a0:	bd10      	pop	{r4, pc}
 80201a2:	bf00      	nop
 80201a4:	08027690 	.word	0x08027690

080201a8 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80201a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80201ac:	b093      	sub	sp, #76	; 0x4c
 80201ae:	4604      	mov	r4, r0
 80201b0:	981c      	ldr	r0, [sp, #112]	; 0x70
 80201b2:	9305      	str	r3, [sp, #20]
 80201b4:	1143      	asrs	r3, r0, #5
 80201b6:	930c      	str	r3, [sp, #48]	; 0x30
 80201b8:	f000 031f 	and.w	r3, r0, #31
 80201bc:	9303      	str	r3, [sp, #12]
 80201be:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80201c0:	1156      	asrs	r6, r2, #5
 80201c2:	42b3      	cmp	r3, r6
 80201c4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80201c6:	bfc8      	it	gt
 80201c8:	6326      	strgt	r6, [r4, #48]	; 0x30
 80201ca:	42b3      	cmp	r3, r6
 80201cc:	bfdc      	itt	le
 80201ce:	1c73      	addle	r3, r6, #1
 80201d0:	63a3      	strle	r3, [r4, #56]	; 0x38
 80201d2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80201d4:	1145      	asrs	r5, r0, #5
 80201d6:	42ab      	cmp	r3, r5
 80201d8:	bfc4      	itt	gt
 80201da:	462b      	movgt	r3, r5
 80201dc:	6323      	strgt	r3, [r4, #48]	; 0x30
 80201de:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80201e0:	1145      	asrs	r5, r0, #5
 80201e2:	42ab      	cmp	r3, r5
 80201e4:	bfde      	ittt	le
 80201e6:	462b      	movle	r3, r5
 80201e8:	3301      	addle	r3, #1
 80201ea:	63a3      	strle	r3, [r4, #56]	; 0x38
 80201ec:	9b05      	ldr	r3, [sp, #20]
 80201ee:	eba3 0a01 	sub.w	sl, r3, r1
 80201f2:	1143      	asrs	r3, r0, #5
 80201f4:	429e      	cmp	r6, r3
 80201f6:	f002 0e1f 	and.w	lr, r2, #31
 80201fa:	ea4f 1561 	mov.w	r5, r1, asr #5
 80201fe:	f040 811e 	bne.w	802043e <_ZN8touchgfx7Outline10renderLineEiiii+0x296>
 8020202:	9b05      	ldr	r3, [sp, #20]
 8020204:	ea4f 1c63 	mov.w	ip, r3, asr #5
 8020208:	9b03      	ldr	r3, [sp, #12]
 802020a:	459e      	cmp	lr, r3
 802020c:	d12c      	bne.n	8020268 <_ZN8touchgfx7Outline10renderLineEiiii+0xc0>
 802020e:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 8020212:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 8020216:	eb0c 4106 	add.w	r1, ip, r6, lsl #16
 802021a:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 802021e:	4291      	cmp	r1, r2
 8020220:	d037      	beq.n	8020292 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 8020222:	8b61      	ldrh	r1, [r4, #26]
 8020224:	8b22      	ldrh	r2, [r4, #24]
 8020226:	430a      	orrs	r2, r1
 8020228:	d00b      	beq.n	8020242 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 802022a:	2b00      	cmp	r3, #0
 802022c:	db09      	blt.n	8020242 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 802022e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8020230:	429a      	cmp	r2, r3
 8020232:	dd06      	ble.n	8020242 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 8020234:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8020238:	429a      	cmp	r2, r3
 802023a:	d308      	bcc.n	802024e <_ZN8touchgfx7Outline10renderLineEiiii+0xa6>
 802023c:	2301      	movs	r3, #1
 802023e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8020242:	f8a4 c014 	strh.w	ip, [r4, #20]
 8020246:	82e6      	strh	r6, [r4, #22]
 8020248:	2300      	movs	r3, #0
 802024a:	8323      	strh	r3, [r4, #24]
 802024c:	e0cb      	b.n	80203e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x23e>
 802024e:	f104 0314 	add.w	r3, r4, #20
 8020252:	cb03      	ldmia	r3!, {r0, r1}
 8020254:	6922      	ldr	r2, [r4, #16]
 8020256:	6010      	str	r0, [r2, #0]
 8020258:	6051      	str	r1, [r2, #4]
 802025a:	6923      	ldr	r3, [r4, #16]
 802025c:	3308      	adds	r3, #8
 802025e:	6123      	str	r3, [r4, #16]
 8020260:	68a3      	ldr	r3, [r4, #8]
 8020262:	3301      	adds	r3, #1
 8020264:	60a3      	str	r3, [r4, #8]
 8020266:	e7ec      	b.n	8020242 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 8020268:	9b05      	ldr	r3, [sp, #20]
 802026a:	8b20      	ldrh	r0, [r4, #24]
 802026c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8020270:	f003 031f 	and.w	r3, r3, #31
 8020274:	9304      	str	r3, [sp, #16]
 8020276:	9b03      	ldr	r3, [sp, #12]
 8020278:	45ac      	cmp	ip, r5
 802027a:	f001 011f 	and.w	r1, r1, #31
 802027e:	eba3 020e 	sub.w	r2, r3, lr
 8020282:	d109      	bne.n	8020298 <_ZN8touchgfx7Outline10renderLineEiiii+0xf0>
 8020284:	9b04      	ldr	r3, [sp, #16]
 8020286:	4419      	add	r1, r3
 8020288:	4410      	add	r0, r2
 802028a:	fb02 8201 	mla	r2, r2, r1, r8
 802028e:	8320      	strh	r0, [r4, #24]
 8020290:	8362      	strh	r2, [r4, #26]
 8020292:	b013      	add	sp, #76	; 0x4c
 8020294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020298:	f1ba 0f00 	cmp.w	sl, #0
 802029c:	f2c0 80a5 	blt.w	80203ea <_ZN8touchgfx7Outline10renderLineEiiii+0x242>
 80202a0:	f1c1 0320 	rsb	r3, r1, #32
 80202a4:	435a      	muls	r2, r3
 80202a6:	2301      	movs	r3, #1
 80202a8:	9302      	str	r3, [sp, #8]
 80202aa:	f04f 0b20 	mov.w	fp, #32
 80202ae:	fb92 f7fa 	sdiv	r7, r2, sl
 80202b2:	fb0a 2217 	mls	r2, sl, r7, r2
 80202b6:	2a00      	cmp	r2, #0
 80202b8:	bfb8      	it	lt
 80202ba:	f107 37ff 	addlt.w	r7, r7, #4294967295
 80202be:	4459      	add	r1, fp
 80202c0:	fb07 8101 	mla	r1, r7, r1, r8
 80202c4:	b20b      	sxth	r3, r1
 80202c6:	9902      	ldr	r1, [sp, #8]
 80202c8:	9301      	str	r3, [sp, #4]
 80202ca:	8363      	strh	r3, [r4, #26]
 80202cc:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 80202d0:	eb05 0301 	add.w	r3, r5, r1
 80202d4:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 80202d8:	9300      	str	r3, [sp, #0]
 80202da:	ea4f 4506 	mov.w	r5, r6, lsl #16
 80202de:	4438      	add	r0, r7
 80202e0:	eb03 0905 	add.w	r9, r3, r5
 80202e4:	eb08 4801 	add.w	r8, r8, r1, lsl #16
 80202e8:	bfb8      	it	lt
 80202ea:	4452      	addlt	r2, sl
 80202ec:	b200      	sxth	r0, r0
 80202ee:	45c1      	cmp	r9, r8
 80202f0:	8320      	strh	r0, [r4, #24]
 80202f2:	9505      	str	r5, [sp, #20]
 80202f4:	d014      	beq.n	8020320 <_ZN8touchgfx7Outline10renderLineEiiii+0x178>
 80202f6:	9b01      	ldr	r3, [sp, #4]
 80202f8:	4303      	orrs	r3, r0
 80202fa:	d00b      	beq.n	8020314 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 80202fc:	2900      	cmp	r1, #0
 80202fe:	db09      	blt.n	8020314 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 8020300:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8020302:	428b      	cmp	r3, r1
 8020304:	dd06      	ble.n	8020314 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 8020306:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802030a:	4299      	cmp	r1, r3
 802030c:	d376      	bcc.n	80203fc <_ZN8touchgfx7Outline10renderLineEiiii+0x254>
 802030e:	2301      	movs	r3, #1
 8020310:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8020314:	9b00      	ldr	r3, [sp, #0]
 8020316:	82a3      	strh	r3, [r4, #20]
 8020318:	2300      	movs	r3, #0
 802031a:	82e6      	strh	r6, [r4, #22]
 802031c:	8323      	strh	r3, [r4, #24]
 802031e:	8363      	strh	r3, [r4, #26]
 8020320:	9900      	ldr	r1, [sp, #0]
 8020322:	458c      	cmp	ip, r1
 8020324:	eb0e 0307 	add.w	r3, lr, r7
 8020328:	d050      	beq.n	80203cc <_ZN8touchgfx7Outline10renderLineEiiii+0x224>
 802032a:	9903      	ldr	r1, [sp, #12]
 802032c:	1ac9      	subs	r1, r1, r3
 802032e:	440f      	add	r7, r1
 8020330:	017f      	lsls	r7, r7, #5
 8020332:	fb97 fefa 	sdiv	lr, r7, sl
 8020336:	fb0a 771e 	mls	r7, sl, lr, r7
 802033a:	2f00      	cmp	r7, #0
 802033c:	bfb8      	it	lt
 802033e:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8020342:	eba2 020a 	sub.w	r2, r2, sl
 8020346:	f10e 0101 	add.w	r1, lr, #1
 802034a:	bfb8      	it	lt
 802034c:	4457      	addlt	r7, sl
 802034e:	9201      	str	r2, [sp, #4]
 8020350:	9106      	str	r1, [sp, #24]
 8020352:	9a01      	ldr	r2, [sp, #4]
 8020354:	8b20      	ldrh	r0, [r4, #24]
 8020356:	8b61      	ldrh	r1, [r4, #26]
 8020358:	9d02      	ldr	r5, [sp, #8]
 802035a:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 802035e:	19d2      	adds	r2, r2, r7
 8020360:	9201      	str	r2, [sp, #4]
 8020362:	bf5e      	ittt	pl
 8020364:	eba2 020a 	subpl.w	r2, r2, sl
 8020368:	f8dd 8018 	ldrpl.w	r8, [sp, #24]
 802036c:	9201      	strpl	r2, [sp, #4]
 802036e:	9a00      	ldr	r2, [sp, #0]
 8020370:	bf48      	it	mi
 8020372:	46f0      	movmi	r8, lr
 8020374:	442a      	add	r2, r5
 8020376:	4440      	add	r0, r8
 8020378:	eb01 1148 	add.w	r1, r1, r8, lsl #5
 802037c:	4443      	add	r3, r8
 802037e:	9d05      	ldr	r5, [sp, #20]
 8020380:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 8020384:	9200      	str	r2, [sp, #0]
 8020386:	4415      	add	r5, r2
 8020388:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 802038c:	b200      	sxth	r0, r0
 802038e:	b209      	sxth	r1, r1
 8020390:	454d      	cmp	r5, r9
 8020392:	8320      	strh	r0, [r4, #24]
 8020394:	8361      	strh	r1, [r4, #26]
 8020396:	d016      	beq.n	80203c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x21e>
 8020398:	4301      	orrs	r1, r0
 802039a:	d00d      	beq.n	80203b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 802039c:	f1b8 0f00 	cmp.w	r8, #0
 80203a0:	db0a      	blt.n	80203b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 80203a2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80203a4:	4541      	cmp	r1, r8
 80203a6:	dd07      	ble.n	80203b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 80203a8:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80203ac:	4288      	cmp	r0, r1
 80203ae:	d335      	bcc.n	802041c <_ZN8touchgfx7Outline10renderLineEiiii+0x274>
 80203b0:	f04f 0101 	mov.w	r1, #1
 80203b4:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 80203b8:	9900      	ldr	r1, [sp, #0]
 80203ba:	82a1      	strh	r1, [r4, #20]
 80203bc:	f04f 0100 	mov.w	r1, #0
 80203c0:	82e6      	strh	r6, [r4, #22]
 80203c2:	8321      	strh	r1, [r4, #24]
 80203c4:	8361      	strh	r1, [r4, #26]
 80203c6:	9a00      	ldr	r2, [sp, #0]
 80203c8:	4594      	cmp	ip, r2
 80203ca:	d1c2      	bne.n	8020352 <_ZN8touchgfx7Outline10renderLineEiiii+0x1aa>
 80203cc:	9a03      	ldr	r2, [sp, #12]
 80203ce:	f8b4 c01a 	ldrh.w	ip, [r4, #26]
 80203d2:	1ad3      	subs	r3, r2, r3
 80203d4:	8b22      	ldrh	r2, [r4, #24]
 80203d6:	441a      	add	r2, r3
 80203d8:	8322      	strh	r2, [r4, #24]
 80203da:	9a04      	ldr	r2, [sp, #16]
 80203dc:	3220      	adds	r2, #32
 80203de:	eba2 020b 	sub.w	r2, r2, fp
 80203e2:	fb03 c302 	mla	r3, r3, r2, ip
 80203e6:	8363      	strh	r3, [r4, #26]
 80203e8:	e753      	b.n	8020292 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 80203ea:	f04f 33ff 	mov.w	r3, #4294967295
 80203ee:	434a      	muls	r2, r1
 80203f0:	f1ca 0a00 	rsb	sl, sl, #0
 80203f4:	9302      	str	r3, [sp, #8]
 80203f6:	f04f 0b00 	mov.w	fp, #0
 80203fa:	e758      	b.n	80202ae <_ZN8touchgfx7Outline10renderLineEiiii+0x106>
 80203fc:	f104 0314 	add.w	r3, r4, #20
 8020400:	cb03      	ldmia	r3!, {r0, r1}
 8020402:	f8d4 8010 	ldr.w	r8, [r4, #16]
 8020406:	f8c8 0000 	str.w	r0, [r8]
 802040a:	f8c8 1004 	str.w	r1, [r8, #4]
 802040e:	6923      	ldr	r3, [r4, #16]
 8020410:	3308      	adds	r3, #8
 8020412:	6123      	str	r3, [r4, #16]
 8020414:	68a3      	ldr	r3, [r4, #8]
 8020416:	3301      	adds	r3, #1
 8020418:	60a3      	str	r3, [r4, #8]
 802041a:	e77b      	b.n	8020314 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 802041c:	f104 0814 	add.w	r8, r4, #20
 8020420:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 8020424:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8020428:	f8c9 0000 	str.w	r0, [r9]
 802042c:	f8c9 1004 	str.w	r1, [r9, #4]
 8020430:	6921      	ldr	r1, [r4, #16]
 8020432:	3108      	adds	r1, #8
 8020434:	6121      	str	r1, [r4, #16]
 8020436:	68a1      	ldr	r1, [r4, #8]
 8020438:	3101      	adds	r1, #1
 802043a:	60a1      	str	r1, [r4, #8]
 802043c:	e7bc      	b.n	80203b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 802043e:	1a83      	subs	r3, r0, r2
 8020440:	9301      	str	r3, [sp, #4]
 8020442:	f1ba 0f00 	cmp.w	sl, #0
 8020446:	f040 8096 	bne.w	8020576 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 802044a:	9a01      	ldr	r2, [sp, #4]
 802044c:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 8020450:	2a00      	cmp	r2, #0
 8020452:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8020456:	8b62      	ldrh	r2, [r4, #26]
 8020458:	f001 033e 	and.w	r3, r1, #62	; 0x3e
 802045c:	bfa8      	it	ge
 802045e:	f04f 0a20 	movge.w	sl, #32
 8020462:	8b21      	ldrh	r1, [r4, #24]
 8020464:	bfb4      	ite	lt
 8020466:	f04f 38ff 	movlt.w	r8, #4294967295
 802046a:	f04f 0801 	movge.w	r8, #1
 802046e:	ebaa 0e0e 	sub.w	lr, sl, lr
 8020472:	4471      	add	r1, lr
 8020474:	fb0e 2e03 	mla	lr, lr, r3, r2
 8020478:	eb08 0206 	add.w	r2, r8, r6
 802047c:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8020480:	eb05 4702 	add.w	r7, r5, r2, lsl #16
 8020484:	eb06 4600 	add.w	r6, r6, r0, lsl #16
 8020488:	b209      	sxth	r1, r1
 802048a:	fa0f fe8e 	sxth.w	lr, lr
 802048e:	42b7      	cmp	r7, r6
 8020490:	8321      	strh	r1, [r4, #24]
 8020492:	f8a4 e01a 	strh.w	lr, [r4, #26]
 8020496:	d013      	beq.n	80204c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x318>
 8020498:	ea51 010e 	orrs.w	r1, r1, lr
 802049c:	d00b      	beq.n	80204b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 802049e:	2800      	cmp	r0, #0
 80204a0:	db09      	blt.n	80204b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 80204a2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80204a4:	4281      	cmp	r1, r0
 80204a6:	dd06      	ble.n	80204b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 80204a8:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 80204ac:	4288      	cmp	r0, r1
 80204ae:	d339      	bcc.n	8020524 <_ZN8touchgfx7Outline10renderLineEiiii+0x37c>
 80204b0:	2101      	movs	r1, #1
 80204b2:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 80204b6:	2100      	movs	r1, #0
 80204b8:	82a5      	strh	r5, [r4, #20]
 80204ba:	82e2      	strh	r2, [r4, #22]
 80204bc:	8321      	strh	r1, [r4, #24]
 80204be:	8361      	strh	r1, [r4, #26]
 80204c0:	f1aa 0610 	sub.w	r6, sl, #16
 80204c4:	0076      	lsls	r6, r6, #1
 80204c6:	fb06 f703 	mul.w	r7, r6, r3
 80204ca:	b23f      	sxth	r7, r7
 80204cc:	b236      	sxth	r6, r6
 80204ce:	ea46 0107 	orr.w	r1, r6, r7
 80204d2:	9100      	str	r1, [sp, #0]
 80204d4:	f04f 0e00 	mov.w	lr, #0
 80204d8:	f04f 0b01 	mov.w	fp, #1
 80204dc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80204de:	428a      	cmp	r2, r1
 80204e0:	d03e      	beq.n	8020560 <_ZN8touchgfx7Outline10renderLineEiiii+0x3b8>
 80204e2:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 80204e6:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 80204ea:	8326      	strh	r6, [r4, #24]
 80204ec:	4442      	add	r2, r8
 80204ee:	eb05 4c02 	add.w	ip, r5, r2, lsl #16
 80204f2:	eb00 4001 	add.w	r0, r0, r1, lsl #16
 80204f6:	4584      	cmp	ip, r0
 80204f8:	8367      	strh	r7, [r4, #26]
 80204fa:	d0ef      	beq.n	80204dc <_ZN8touchgfx7Outline10renderLineEiiii+0x334>
 80204fc:	9800      	ldr	r0, [sp, #0]
 80204fe:	b150      	cbz	r0, 8020516 <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 8020500:	2900      	cmp	r1, #0
 8020502:	db08      	blt.n	8020516 <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 8020504:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8020506:	4288      	cmp	r0, r1
 8020508:	dd05      	ble.n	8020516 <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 802050a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802050e:	4288      	cmp	r0, r1
 8020510:	d315      	bcc.n	802053e <_ZN8touchgfx7Outline10renderLineEiiii+0x396>
 8020512:	f884 b044 	strb.w	fp, [r4, #68]	; 0x44
 8020516:	82a5      	strh	r5, [r4, #20]
 8020518:	82e2      	strh	r2, [r4, #22]
 802051a:	f8a4 e018 	strh.w	lr, [r4, #24]
 802051e:	f8a4 e01a 	strh.w	lr, [r4, #26]
 8020522:	e7db      	b.n	80204dc <_ZN8touchgfx7Outline10renderLineEiiii+0x334>
 8020524:	f104 0614 	add.w	r6, r4, #20
 8020528:	ce03      	ldmia	r6!, {r0, r1}
 802052a:	6927      	ldr	r7, [r4, #16]
 802052c:	6038      	str	r0, [r7, #0]
 802052e:	6079      	str	r1, [r7, #4]
 8020530:	6921      	ldr	r1, [r4, #16]
 8020532:	3108      	adds	r1, #8
 8020534:	6121      	str	r1, [r4, #16]
 8020536:	68a1      	ldr	r1, [r4, #8]
 8020538:	3101      	adds	r1, #1
 802053a:	60a1      	str	r1, [r4, #8]
 802053c:	e7bb      	b.n	80204b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 802053e:	f104 0c14 	add.w	ip, r4, #20
 8020542:	e8bc 0003 	ldmia.w	ip!, {r0, r1}
 8020546:	f8d4 9010 	ldr.w	r9, [r4, #16]
 802054a:	f8c9 0000 	str.w	r0, [r9]
 802054e:	f8c9 1004 	str.w	r1, [r9, #4]
 8020552:	6921      	ldr	r1, [r4, #16]
 8020554:	3108      	adds	r1, #8
 8020556:	6121      	str	r1, [r4, #16]
 8020558:	68a1      	ldr	r1, [r4, #8]
 802055a:	3101      	adds	r1, #1
 802055c:	60a1      	str	r1, [r4, #8]
 802055e:	e7da      	b.n	8020516 <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 8020560:	9a03      	ldr	r2, [sp, #12]
 8020562:	8b61      	ldrh	r1, [r4, #26]
 8020564:	f1a2 0c20 	sub.w	ip, r2, #32
 8020568:	8b22      	ldrh	r2, [r4, #24]
 802056a:	44d4      	add	ip, sl
 802056c:	4462      	add	r2, ip
 802056e:	8322      	strh	r2, [r4, #24]
 8020570:	fb0c 1303 	mla	r3, ip, r3, r1
 8020574:	e737      	b.n	80203e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x23e>
 8020576:	9b01      	ldr	r3, [sp, #4]
 8020578:	2b00      	cmp	r3, #0
 802057a:	db3f      	blt.n	80205fc <_ZN8touchgfx7Outline10renderLineEiiii+0x454>
 802057c:	2201      	movs	r2, #1
 802057e:	f1ce 0320 	rsb	r3, lr, #32
 8020582:	920b      	str	r2, [sp, #44]	; 0x2c
 8020584:	fb0a f303 	mul.w	r3, sl, r3
 8020588:	2220      	movs	r2, #32
 802058a:	9202      	str	r2, [sp, #8]
 802058c:	9a01      	ldr	r2, [sp, #4]
 802058e:	fb93 f7f2 	sdiv	r7, r3, r2
 8020592:	fb02 3317 	mls	r3, r2, r7, r3
 8020596:	2b00      	cmp	r3, #0
 8020598:	bfb8      	it	lt
 802059a:	f107 37ff 	addlt.w	r7, r7, #4294967295
 802059e:	9308      	str	r3, [sp, #32]
 80205a0:	eb07 0b01 	add.w	fp, r7, r1
 80205a4:	bfbc      	itt	lt
 80205a6:	189b      	addlt	r3, r3, r2
 80205a8:	9308      	strlt	r3, [sp, #32]
 80205aa:	ea4f 136b 	mov.w	r3, fp, asr #5
 80205ae:	9304      	str	r3, [sp, #16]
 80205b0:	9b02      	ldr	r3, [sp, #8]
 80205b2:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 80205b6:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 80205ba:	4573      	cmp	r3, lr
 80205bc:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 80205c0:	d133      	bne.n	802062a <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 80205c2:	9b04      	ldr	r3, [sp, #16]
 80205c4:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 80205c8:	454b      	cmp	r3, r9
 80205ca:	d045      	beq.n	8020658 <_ZN8touchgfx7Outline10renderLineEiiii+0x4b0>
 80205cc:	8b62      	ldrh	r2, [r4, #26]
 80205ce:	8b23      	ldrh	r3, [r4, #24]
 80205d0:	4313      	orrs	r3, r2
 80205d2:	d00c      	beq.n	80205ee <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80205d4:	f1b8 0f00 	cmp.w	r8, #0
 80205d8:	db09      	blt.n	80205ee <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80205da:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80205dc:	4543      	cmp	r3, r8
 80205de:	dd06      	ble.n	80205ee <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80205e0:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 80205e4:	429a      	cmp	r2, r3
 80205e6:	d313      	bcc.n	8020610 <_ZN8touchgfx7Outline10renderLineEiiii+0x468>
 80205e8:	2301      	movs	r3, #1
 80205ea:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80205ee:	9b04      	ldr	r3, [sp, #16]
 80205f0:	82a3      	strh	r3, [r4, #20]
 80205f2:	2300      	movs	r3, #0
 80205f4:	82e6      	strh	r6, [r4, #22]
 80205f6:	8323      	strh	r3, [r4, #24]
 80205f8:	8363      	strh	r3, [r4, #26]
 80205fa:	e02d      	b.n	8020658 <_ZN8touchgfx7Outline10renderLineEiiii+0x4b0>
 80205fc:	9a01      	ldr	r2, [sp, #4]
 80205fe:	4252      	negs	r2, r2
 8020600:	9201      	str	r2, [sp, #4]
 8020602:	f04f 32ff 	mov.w	r2, #4294967295
 8020606:	920b      	str	r2, [sp, #44]	; 0x2c
 8020608:	fb0a f30e 	mul.w	r3, sl, lr
 802060c:	2200      	movs	r2, #0
 802060e:	e7bc      	b.n	802058a <_ZN8touchgfx7Outline10renderLineEiiii+0x3e2>
 8020610:	f104 0314 	add.w	r3, r4, #20
 8020614:	cb03      	ldmia	r3!, {r0, r1}
 8020616:	6922      	ldr	r2, [r4, #16]
 8020618:	6010      	str	r0, [r2, #0]
 802061a:	6051      	str	r1, [r2, #4]
 802061c:	6923      	ldr	r3, [r4, #16]
 802061e:	3308      	adds	r3, #8
 8020620:	6123      	str	r3, [r4, #16]
 8020622:	68a3      	ldr	r3, [r4, #8]
 8020624:	3301      	adds	r3, #1
 8020626:	60a3      	str	r3, [r4, #8]
 8020628:	e7e1      	b.n	80205ee <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 802062a:	f00b 031f 	and.w	r3, fp, #31
 802062e:	9309      	str	r3, [sp, #36]	; 0x24
 8020630:	9b02      	ldr	r3, [sp, #8]
 8020632:	8b20      	ldrh	r0, [r4, #24]
 8020634:	eba3 020e 	sub.w	r2, r3, lr
 8020638:	8b63      	ldrh	r3, [r4, #26]
 802063a:	9300      	str	r3, [sp, #0]
 802063c:	9b04      	ldr	r3, [sp, #16]
 802063e:	42ab      	cmp	r3, r5
 8020640:	f001 011f 	and.w	r1, r1, #31
 8020644:	f040 80ef 	bne.w	8020826 <_ZN8touchgfx7Outline10renderLineEiiii+0x67e>
 8020648:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802064a:	4419      	add	r1, r3
 802064c:	9b00      	ldr	r3, [sp, #0]
 802064e:	4410      	add	r0, r2
 8020650:	fb02 3101 	mla	r1, r2, r1, r3
 8020654:	8320      	strh	r0, [r4, #24]
 8020656:	8361      	strh	r1, [r4, #26]
 8020658:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802065a:	9904      	ldr	r1, [sp, #16]
 802065c:	4433      	add	r3, r6
 802065e:	9300      	str	r3, [sp, #0]
 8020660:	9a00      	ldr	r2, [sp, #0]
 8020662:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 8020666:	eb01 4002 	add.w	r0, r1, r2, lsl #16
 802066a:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 802066e:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8020672:	4288      	cmp	r0, r1
 8020674:	d018      	beq.n	80206a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x500>
 8020676:	8b60      	ldrh	r0, [r4, #26]
 8020678:	8b21      	ldrh	r1, [r4, #24]
 802067a:	ea50 0201 	orrs.w	r2, r0, r1
 802067e:	d00c      	beq.n	802069a <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 8020680:	2b00      	cmp	r3, #0
 8020682:	db0a      	blt.n	802069a <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 8020684:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020686:	4299      	cmp	r1, r3
 8020688:	dd07      	ble.n	802069a <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 802068a:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802068e:	4299      	cmp	r1, r3
 8020690:	f0c0 8190 	bcc.w	80209b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x80c>
 8020694:	2301      	movs	r3, #1
 8020696:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802069a:	9b04      	ldr	r3, [sp, #16]
 802069c:	82a3      	strh	r3, [r4, #20]
 802069e:	9b00      	ldr	r3, [sp, #0]
 80206a0:	82e3      	strh	r3, [r4, #22]
 80206a2:	2300      	movs	r3, #0
 80206a4:	8323      	strh	r3, [r4, #24]
 80206a6:	8363      	strh	r3, [r4, #26]
 80206a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206aa:	9a00      	ldr	r2, [sp, #0]
 80206ac:	4293      	cmp	r3, r2
 80206ae:	f000 808d 	beq.w	80207cc <_ZN8touchgfx7Outline10renderLineEiiii+0x624>
 80206b2:	9801      	ldr	r0, [sp, #4]
 80206b4:	9901      	ldr	r1, [sp, #4]
 80206b6:	ea4f 134a 	mov.w	r3, sl, lsl #5
 80206ba:	fb93 f1f1 	sdiv	r1, r3, r1
 80206be:	fb00 3311 	mls	r3, r0, r1, r3
 80206c2:	2b00      	cmp	r3, #0
 80206c4:	9106      	str	r1, [sp, #24]
 80206c6:	9307      	str	r3, [sp, #28]
 80206c8:	da04      	bge.n	80206d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x52c>
 80206ca:	1e4b      	subs	r3, r1, #1
 80206cc:	9306      	str	r3, [sp, #24]
 80206ce:	9b07      	ldr	r3, [sp, #28]
 80206d0:	4403      	add	r3, r0
 80206d2:	9307      	str	r3, [sp, #28]
 80206d4:	9b08      	ldr	r3, [sp, #32]
 80206d6:	9901      	ldr	r1, [sp, #4]
 80206d8:	1a5b      	subs	r3, r3, r1
 80206da:	9308      	str	r3, [sp, #32]
 80206dc:	9b02      	ldr	r3, [sp, #8]
 80206de:	f1c3 0320 	rsb	r3, r3, #32
 80206e2:	930a      	str	r3, [sp, #40]	; 0x28
 80206e4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80206e6:	9b02      	ldr	r3, [sp, #8]
 80206e8:	1a1b      	subs	r3, r3, r0
 80206ea:	4659      	mov	r1, fp
 80206ec:	9309      	str	r3, [sp, #36]	; 0x24
 80206ee:	f04f 0c00 	mov.w	ip, #0
 80206f2:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 80206f6:	181b      	adds	r3, r3, r0
 80206f8:	bf58      	it	pl
 80206fa:	9801      	ldrpl	r0, [sp, #4]
 80206fc:	9308      	str	r3, [sp, #32]
 80206fe:	bf5d      	ittte	pl
 8020700:	1a1b      	subpl	r3, r3, r0
 8020702:	9308      	strpl	r3, [sp, #32]
 8020704:	9b06      	ldrpl	r3, [sp, #24]
 8020706:	9d06      	ldrmi	r5, [sp, #24]
 8020708:	9802      	ldr	r0, [sp, #8]
 802070a:	f9b4 e016 	ldrsh.w	lr, [r4, #22]
 802070e:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 8020712:	bf58      	it	pl
 8020714:	1c5d      	addpl	r5, r3, #1
 8020716:	44ab      	add	fp, r5
 8020718:	ea4f 136b 	mov.w	r3, fp, asr #5
 802071c:	9304      	str	r3, [sp, #16]
 802071e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020720:	4283      	cmp	r3, r0
 8020722:	eb08 480e 	add.w	r8, r8, lr, lsl #16
 8020726:	f040 815f 	bne.w	80209e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x840>
 802072a:	9b04      	ldr	r3, [sp, #16]
 802072c:	9a00      	ldr	r2, [sp, #0]
 802072e:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 8020732:	4543      	cmp	r3, r8
 8020734:	d01a      	beq.n	802076c <_ZN8touchgfx7Outline10renderLineEiiii+0x5c4>
 8020736:	8b61      	ldrh	r1, [r4, #26]
 8020738:	8b23      	ldrh	r3, [r4, #24]
 802073a:	430b      	orrs	r3, r1
 802073c:	d00e      	beq.n	802075c <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 802073e:	f1be 0f00 	cmp.w	lr, #0
 8020742:	db0b      	blt.n	802075c <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 8020744:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8020746:	4573      	cmp	r3, lr
 8020748:	dd08      	ble.n	802075c <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 802074a:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802074e:	4299      	cmp	r1, r3
 8020750:	f0c0 813d 	bcc.w	80209ce <_ZN8touchgfx7Outline10renderLineEiiii+0x826>
 8020754:	f04f 0301 	mov.w	r3, #1
 8020758:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802075c:	9b04      	ldr	r3, [sp, #16]
 802075e:	82a3      	strh	r3, [r4, #20]
 8020760:	9b00      	ldr	r3, [sp, #0]
 8020762:	82e3      	strh	r3, [r4, #22]
 8020764:	f8a4 c018 	strh.w	ip, [r4, #24]
 8020768:	f8a4 c01a 	strh.w	ip, [r4, #26]
 802076c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802076e:	9a00      	ldr	r2, [sp, #0]
 8020770:	441a      	add	r2, r3
 8020772:	9200      	str	r2, [sp, #0]
 8020774:	9900      	ldr	r1, [sp, #0]
 8020776:	9a04      	ldr	r2, [sp, #16]
 8020778:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802077c:	eb02 4001 	add.w	r0, r2, r1, lsl #16
 8020780:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 8020784:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8020788:	4288      	cmp	r0, r1
 802078a:	d01a      	beq.n	80207c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x61a>
 802078c:	8b60      	ldrh	r0, [r4, #26]
 802078e:	8b21      	ldrh	r1, [r4, #24]
 8020790:	ea50 0201 	orrs.w	r2, r0, r1
 8020794:	d00d      	beq.n	80207b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8020796:	2b00      	cmp	r3, #0
 8020798:	db0b      	blt.n	80207b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 802079a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802079c:	4299      	cmp	r1, r3
 802079e:	dd08      	ble.n	80207b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80207a0:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 80207a4:	4299      	cmp	r1, r3
 80207a6:	f0c0 8202 	bcc.w	8020bae <_ZN8touchgfx7Outline10renderLineEiiii+0xa06>
 80207aa:	f04f 0301 	mov.w	r3, #1
 80207ae:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80207b2:	9b04      	ldr	r3, [sp, #16]
 80207b4:	82a3      	strh	r3, [r4, #20]
 80207b6:	9b00      	ldr	r3, [sp, #0]
 80207b8:	82e3      	strh	r3, [r4, #22]
 80207ba:	f8a4 c018 	strh.w	ip, [r4, #24]
 80207be:	f8a4 c01a 	strh.w	ip, [r4, #26]
 80207c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80207c4:	9a00      	ldr	r2, [sp, #0]
 80207c6:	4293      	cmp	r3, r2
 80207c8:	4659      	mov	r1, fp
 80207ca:	d192      	bne.n	80206f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x54a>
 80207cc:	9b02      	ldr	r3, [sp, #8]
 80207ce:	f1c3 0c20 	rsb	ip, r3, #32
 80207d2:	9b05      	ldr	r3, [sp, #20]
 80207d4:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80207d8:	9b03      	ldr	r3, [sp, #12]
 80207da:	459c      	cmp	ip, r3
 80207dc:	f040 8201 	bne.w	8020be2 <_ZN8touchgfx7Outline10renderLineEiiii+0xa3a>
 80207e0:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 80207e4:	9a00      	ldr	r2, [sp, #0]
 80207e6:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 80207ea:	eb0e 4002 	add.w	r0, lr, r2, lsl #16
 80207ee:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80207f2:	4288      	cmp	r0, r1
 80207f4:	f43f ad4d 	beq.w	8020292 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 80207f8:	8b60      	ldrh	r0, [r4, #26]
 80207fa:	8b21      	ldrh	r1, [r4, #24]
 80207fc:	ea50 0201 	orrs.w	r2, r0, r1
 8020800:	d00c      	beq.n	802081c <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 8020802:	2b00      	cmp	r3, #0
 8020804:	db0a      	blt.n	802081c <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 8020806:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020808:	4299      	cmp	r1, r3
 802080a:	dd07      	ble.n	802081c <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 802080c:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8020810:	4299      	cmp	r1, r3
 8020812:	f0c0 81d9 	bcc.w	8020bc8 <_ZN8touchgfx7Outline10renderLineEiiii+0xa20>
 8020816:	2301      	movs	r3, #1
 8020818:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802081c:	9b00      	ldr	r3, [sp, #0]
 802081e:	f8a4 e014 	strh.w	lr, [r4, #20]
 8020822:	82e3      	strh	r3, [r4, #22]
 8020824:	e510      	b.n	8020248 <_ZN8touchgfx7Outline10renderLineEiiii+0xa0>
 8020826:	2f00      	cmp	r7, #0
 8020828:	f2c0 809c 	blt.w	8020964 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 802082c:	2301      	movs	r3, #1
 802082e:	f1c1 0c20 	rsb	ip, r1, #32
 8020832:	9307      	str	r3, [sp, #28]
 8020834:	fb02 f20c 	mul.w	r2, r2, ip
 8020838:	2320      	movs	r3, #32
 802083a:	9306      	str	r3, [sp, #24]
 802083c:	9b06      	ldr	r3, [sp, #24]
 802083e:	fb92 fcf7 	sdiv	ip, r2, r7
 8020842:	fb07 221c 	mls	r2, r7, ip, r2
 8020846:	2a00      	cmp	r2, #0
 8020848:	4419      	add	r1, r3
 802084a:	9b00      	ldr	r3, [sp, #0]
 802084c:	bfb8      	it	lt
 802084e:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8020852:	fb0c 3101 	mla	r1, ip, r1, r3
 8020856:	9b07      	ldr	r3, [sp, #28]
 8020858:	441d      	add	r5, r3
 802085a:	ea4f 4306 	mov.w	r3, r6, lsl #16
 802085e:	4460      	add	r0, ip
 8020860:	930a      	str	r3, [sp, #40]	; 0x28
 8020862:	442b      	add	r3, r5
 8020864:	bfb8      	it	lt
 8020866:	19d2      	addlt	r2, r2, r7
 8020868:	b200      	sxth	r0, r0
 802086a:	b209      	sxth	r1, r1
 802086c:	454b      	cmp	r3, r9
 802086e:	8320      	strh	r0, [r4, #24]
 8020870:	8361      	strh	r1, [r4, #26]
 8020872:	d014      	beq.n	802089e <_ZN8touchgfx7Outline10renderLineEiiii+0x6f6>
 8020874:	ea50 0301 	orrs.w	r3, r0, r1
 8020878:	d00c      	beq.n	8020894 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 802087a:	f1b8 0f00 	cmp.w	r8, #0
 802087e:	db09      	blt.n	8020894 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 8020880:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8020882:	4543      	cmp	r3, r8
 8020884:	dd06      	ble.n	8020894 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 8020886:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802088a:	4299      	cmp	r1, r3
 802088c:	d371      	bcc.n	8020972 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ca>
 802088e:	2301      	movs	r3, #1
 8020890:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8020894:	2300      	movs	r3, #0
 8020896:	82a5      	strh	r5, [r4, #20]
 8020898:	82e6      	strh	r6, [r4, #22]
 802089a:	8323      	strh	r3, [r4, #24]
 802089c:	8363      	strh	r3, [r4, #26]
 802089e:	9904      	ldr	r1, [sp, #16]
 80208a0:	42a9      	cmp	r1, r5
 80208a2:	eb0e 030c 	add.w	r3, lr, ip
 80208a6:	d050      	beq.n	802094a <_ZN8touchgfx7Outline10renderLineEiiii+0x7a2>
 80208a8:	9902      	ldr	r1, [sp, #8]
 80208aa:	1ac9      	subs	r1, r1, r3
 80208ac:	448c      	add	ip, r1
 80208ae:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 80208b2:	fb9c fef7 	sdiv	lr, ip, r7
 80208b6:	fb07 cc1e 	mls	ip, r7, lr, ip
 80208ba:	f1bc 0f00 	cmp.w	ip, #0
 80208be:	bfb8      	it	lt
 80208c0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80208c4:	eba2 0207 	sub.w	r2, r2, r7
 80208c8:	f10e 0101 	add.w	r1, lr, #1
 80208cc:	bfb8      	it	lt
 80208ce:	44bc      	addlt	ip, r7
 80208d0:	9200      	str	r2, [sp, #0]
 80208d2:	910d      	str	r1, [sp, #52]	; 0x34
 80208d4:	9a00      	ldr	r2, [sp, #0]
 80208d6:	8b20      	ldrh	r0, [r4, #24]
 80208d8:	8b61      	ldrh	r1, [r4, #26]
 80208da:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 80208de:	eb12 020c 	adds.w	r2, r2, ip
 80208e2:	9200      	str	r2, [sp, #0]
 80208e4:	bf5e      	ittt	pl
 80208e6:	1bd2      	subpl	r2, r2, r7
 80208e8:	f8dd 8034 	ldrpl.w	r8, [sp, #52]	; 0x34
 80208ec:	9200      	strpl	r2, [sp, #0]
 80208ee:	9a07      	ldr	r2, [sp, #28]
 80208f0:	bf48      	it	mi
 80208f2:	46f0      	movmi	r8, lr
 80208f4:	4440      	add	r0, r8
 80208f6:	eb01 1148 	add.w	r1, r1, r8, lsl #5
 80208fa:	4415      	add	r5, r2
 80208fc:	4443      	add	r3, r8
 80208fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020900:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 8020904:	442a      	add	r2, r5
 8020906:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 802090a:	b200      	sxth	r0, r0
 802090c:	b209      	sxth	r1, r1
 802090e:	454a      	cmp	r2, r9
 8020910:	8320      	strh	r0, [r4, #24]
 8020912:	8361      	strh	r1, [r4, #26]
 8020914:	d016      	beq.n	8020944 <_ZN8touchgfx7Outline10renderLineEiiii+0x79c>
 8020916:	ea50 0201 	orrs.w	r2, r0, r1
 802091a:	d00d      	beq.n	8020938 <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 802091c:	f1b8 0f00 	cmp.w	r8, #0
 8020920:	db0a      	blt.n	8020938 <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 8020922:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020924:	4541      	cmp	r1, r8
 8020926:	dd07      	ble.n	8020938 <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 8020928:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802092c:	4288      	cmp	r0, r1
 802092e:	d330      	bcc.n	8020992 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ea>
 8020930:	f04f 0201 	mov.w	r2, #1
 8020934:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8020938:	f04f 0200 	mov.w	r2, #0
 802093c:	82a5      	strh	r5, [r4, #20]
 802093e:	82e6      	strh	r6, [r4, #22]
 8020940:	8322      	strh	r2, [r4, #24]
 8020942:	8362      	strh	r2, [r4, #26]
 8020944:	9904      	ldr	r1, [sp, #16]
 8020946:	42a9      	cmp	r1, r5
 8020948:	d1c4      	bne.n	80208d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x72c>
 802094a:	9a02      	ldr	r2, [sp, #8]
 802094c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802094e:	1ad3      	subs	r3, r2, r3
 8020950:	8b22      	ldrh	r2, [r4, #24]
 8020952:	441a      	add	r2, r3
 8020954:	8322      	strh	r2, [r4, #24]
 8020956:	9a06      	ldr	r2, [sp, #24]
 8020958:	3120      	adds	r1, #32
 802095a:	1a89      	subs	r1, r1, r2
 802095c:	8b62      	ldrh	r2, [r4, #26]
 802095e:	fb03 2301 	mla	r3, r3, r1, r2
 8020962:	e649      	b.n	80205f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x450>
 8020964:	f04f 33ff 	mov.w	r3, #4294967295
 8020968:	9307      	str	r3, [sp, #28]
 802096a:	434a      	muls	r2, r1
 802096c:	427f      	negs	r7, r7
 802096e:	2300      	movs	r3, #0
 8020970:	e763      	b.n	802083a <_ZN8touchgfx7Outline10renderLineEiiii+0x692>
 8020972:	f104 0314 	add.w	r3, r4, #20
 8020976:	cb03      	ldmia	r3!, {r0, r1}
 8020978:	f8d4 8010 	ldr.w	r8, [r4, #16]
 802097c:	f8c8 0000 	str.w	r0, [r8]
 8020980:	f8c8 1004 	str.w	r1, [r8, #4]
 8020984:	6923      	ldr	r3, [r4, #16]
 8020986:	3308      	adds	r3, #8
 8020988:	6123      	str	r3, [r4, #16]
 802098a:	68a3      	ldr	r3, [r4, #8]
 802098c:	3301      	adds	r3, #1
 802098e:	60a3      	str	r3, [r4, #8]
 8020990:	e780      	b.n	8020894 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 8020992:	f104 0814 	add.w	r8, r4, #20
 8020996:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 802099a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 802099e:	f8c9 0000 	str.w	r0, [r9]
 80209a2:	f8c9 1004 	str.w	r1, [r9, #4]
 80209a6:	6921      	ldr	r1, [r4, #16]
 80209a8:	3108      	adds	r1, #8
 80209aa:	6121      	str	r1, [r4, #16]
 80209ac:	68a1      	ldr	r1, [r4, #8]
 80209ae:	3101      	adds	r1, #1
 80209b0:	60a1      	str	r1, [r4, #8]
 80209b2:	e7c1      	b.n	8020938 <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 80209b4:	f104 0314 	add.w	r3, r4, #20
 80209b8:	cb03      	ldmia	r3!, {r0, r1}
 80209ba:	6925      	ldr	r5, [r4, #16]
 80209bc:	6028      	str	r0, [r5, #0]
 80209be:	6069      	str	r1, [r5, #4]
 80209c0:	6923      	ldr	r3, [r4, #16]
 80209c2:	3308      	adds	r3, #8
 80209c4:	6123      	str	r3, [r4, #16]
 80209c6:	68a3      	ldr	r3, [r4, #8]
 80209c8:	3301      	adds	r3, #1
 80209ca:	60a3      	str	r3, [r4, #8]
 80209cc:	e665      	b.n	802069a <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 80209ce:	f104 0314 	add.w	r3, r4, #20
 80209d2:	cb03      	ldmia	r3!, {r0, r1}
 80209d4:	6925      	ldr	r5, [r4, #16]
 80209d6:	6028      	str	r0, [r5, #0]
 80209d8:	6069      	str	r1, [r5, #4]
 80209da:	6923      	ldr	r3, [r4, #16]
 80209dc:	3308      	adds	r3, #8
 80209de:	6123      	str	r3, [r4, #16]
 80209e0:	68a3      	ldr	r3, [r4, #8]
 80209e2:	3301      	adds	r3, #1
 80209e4:	60a3      	str	r3, [r4, #8]
 80209e6:	e6b9      	b.n	802075c <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 80209e8:	f00b 031f 	and.w	r3, fp, #31
 80209ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80209ee:	9b04      	ldr	r3, [sp, #16]
 80209f0:	8b20      	ldrh	r0, [r4, #24]
 80209f2:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 80209f6:	114f      	asrs	r7, r1, #5
 80209f8:	429f      	cmp	r7, r3
 80209fa:	f001 011f 	and.w	r1, r1, #31
 80209fe:	d10a      	bne.n	8020a16 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 8020a00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a02:	4418      	add	r0, r3
 8020a04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020a06:	8320      	strh	r0, [r4, #24]
 8020a08:	4419      	add	r1, r3
 8020a0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a0c:	fb03 9901 	mla	r9, r3, r1, r9
 8020a10:	f8a4 901a 	strh.w	r9, [r4, #26]
 8020a14:	e6aa      	b.n	802076c <_ZN8touchgfx7Outline10renderLineEiiii+0x5c4>
 8020a16:	2d00      	cmp	r5, #0
 8020a18:	f2c0 809f 	blt.w	8020b5a <_ZN8touchgfx7Outline10renderLineEiiii+0x9b2>
 8020a1c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8020a1e:	f1c1 0320 	rsb	r3, r1, #32
 8020a22:	4373      	muls	r3, r6
 8020a24:	2601      	movs	r6, #1
 8020a26:	960e      	str	r6, [sp, #56]	; 0x38
 8020a28:	2620      	movs	r6, #32
 8020a2a:	960d      	str	r6, [sp, #52]	; 0x34
 8020a2c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020a2e:	fb93 f6f5 	sdiv	r6, r3, r5
 8020a32:	4411      	add	r1, r2
 8020a34:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020a36:	fb05 3316 	mls	r3, r5, r6, r3
 8020a3a:	4417      	add	r7, r2
 8020a3c:	9a00      	ldr	r2, [sp, #0]
 8020a3e:	2b00      	cmp	r3, #0
 8020a40:	bfb8      	it	lt
 8020a42:	f106 36ff 	addlt.w	r6, r6, #4294967295
 8020a46:	ea4f 4202 	mov.w	r2, r2, lsl #16
 8020a4a:	fb06 9101 	mla	r1, r6, r1, r9
 8020a4e:	4430      	add	r0, r6
 8020a50:	eb07 0902 	add.w	r9, r7, r2
 8020a54:	bfb8      	it	lt
 8020a56:	195b      	addlt	r3, r3, r5
 8020a58:	b200      	sxth	r0, r0
 8020a5a:	b209      	sxth	r1, r1
 8020a5c:	45c1      	cmp	r9, r8
 8020a5e:	8320      	strh	r0, [r4, #24]
 8020a60:	8361      	strh	r1, [r4, #26]
 8020a62:	9210      	str	r2, [sp, #64]	; 0x40
 8020a64:	d017      	beq.n	8020a96 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ee>
 8020a66:	ea50 0201 	orrs.w	r2, r0, r1
 8020a6a:	d00d      	beq.n	8020a88 <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 8020a6c:	f1be 0f00 	cmp.w	lr, #0
 8020a70:	db0a      	blt.n	8020a88 <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 8020a72:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020a74:	4571      	cmp	r1, lr
 8020a76:	dd07      	ble.n	8020a88 <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 8020a78:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8020a7c:	4288      	cmp	r0, r1
 8020a7e:	d374      	bcc.n	8020b6a <_ZN8touchgfx7Outline10renderLineEiiii+0x9c2>
 8020a80:	f04f 0201 	mov.w	r2, #1
 8020a84:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8020a88:	9a00      	ldr	r2, [sp, #0]
 8020a8a:	82a7      	strh	r7, [r4, #20]
 8020a8c:	82e2      	strh	r2, [r4, #22]
 8020a8e:	f8a4 c018 	strh.w	ip, [r4, #24]
 8020a92:	f8a4 c01a 	strh.w	ip, [r4, #26]
 8020a96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020a98:	eb02 0e06 	add.w	lr, r2, r6
 8020a9c:	9a04      	ldr	r2, [sp, #16]
 8020a9e:	42ba      	cmp	r2, r7
 8020aa0:	d04b      	beq.n	8020b3a <_ZN8touchgfx7Outline10renderLineEiiii+0x992>
 8020aa2:	9a02      	ldr	r2, [sp, #8]
 8020aa4:	eba2 010e 	sub.w	r1, r2, lr
 8020aa8:	440e      	add	r6, r1
 8020aaa:	0176      	lsls	r6, r6, #5
 8020aac:	fb96 f8f5 	sdiv	r8, r6, r5
 8020ab0:	fb05 6618 	mls	r6, r5, r8, r6
 8020ab4:	2e00      	cmp	r6, #0
 8020ab6:	bfb8      	it	lt
 8020ab8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8020abc:	f108 0201 	add.w	r2, r8, #1
 8020ac0:	bfb8      	it	lt
 8020ac2:	1976      	addlt	r6, r6, r5
 8020ac4:	1b5b      	subs	r3, r3, r5
 8020ac6:	9211      	str	r2, [sp, #68]	; 0x44
 8020ac8:	199b      	adds	r3, r3, r6
 8020aca:	bf58      	it	pl
 8020acc:	f8dd 9044 	ldrpl.w	r9, [sp, #68]	; 0x44
 8020ad0:	8b20      	ldrh	r0, [r4, #24]
 8020ad2:	8b61      	ldrh	r1, [r4, #26]
 8020ad4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020ad6:	f9b4 a014 	ldrsh.w	sl, [r4, #20]
 8020ada:	bf48      	it	mi
 8020adc:	46c1      	movmi	r9, r8
 8020ade:	4448      	add	r0, r9
 8020ae0:	eb01 1149 	add.w	r1, r1, r9, lsl #5
 8020ae4:	4417      	add	r7, r2
 8020ae6:	44ce      	add	lr, r9
 8020ae8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020aea:	f9b4 9016 	ldrsh.w	r9, [r4, #22]
 8020aee:	443a      	add	r2, r7
 8020af0:	eb0a 4a09 	add.w	sl, sl, r9, lsl #16
 8020af4:	bf58      	it	pl
 8020af6:	1b5b      	subpl	r3, r3, r5
 8020af8:	b200      	sxth	r0, r0
 8020afa:	b209      	sxth	r1, r1
 8020afc:	4552      	cmp	r2, sl
 8020afe:	8320      	strh	r0, [r4, #24]
 8020b00:	8361      	strh	r1, [r4, #26]
 8020b02:	d017      	beq.n	8020b34 <_ZN8touchgfx7Outline10renderLineEiiii+0x98c>
 8020b04:	ea50 0201 	orrs.w	r2, r0, r1
 8020b08:	d00d      	beq.n	8020b26 <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 8020b0a:	f1b9 0f00 	cmp.w	r9, #0
 8020b0e:	db0a      	blt.n	8020b26 <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 8020b10:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020b12:	4549      	cmp	r1, r9
 8020b14:	dd07      	ble.n	8020b26 <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 8020b16:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8020b1a:	4288      	cmp	r0, r1
 8020b1c:	d336      	bcc.n	8020b8c <_ZN8touchgfx7Outline10renderLineEiiii+0x9e4>
 8020b1e:	f04f 0201 	mov.w	r2, #1
 8020b22:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8020b26:	9a00      	ldr	r2, [sp, #0]
 8020b28:	82a7      	strh	r7, [r4, #20]
 8020b2a:	82e2      	strh	r2, [r4, #22]
 8020b2c:	f8a4 c018 	strh.w	ip, [r4, #24]
 8020b30:	f8a4 c01a 	strh.w	ip, [r4, #26]
 8020b34:	9a04      	ldr	r2, [sp, #16]
 8020b36:	42ba      	cmp	r2, r7
 8020b38:	d1c6      	bne.n	8020ac8 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
 8020b3a:	9b02      	ldr	r3, [sp, #8]
 8020b3c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8020b3e:	eba3 0e0e 	sub.w	lr, r3, lr
 8020b42:	8b23      	ldrh	r3, [r4, #24]
 8020b44:	4473      	add	r3, lr
 8020b46:	8323      	strh	r3, [r4, #24]
 8020b48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020b4a:	3120      	adds	r1, #32
 8020b4c:	1ac9      	subs	r1, r1, r3
 8020b4e:	8b63      	ldrh	r3, [r4, #26]
 8020b50:	fb0e 3e01 	mla	lr, lr, r1, r3
 8020b54:	f8a4 e01a 	strh.w	lr, [r4, #26]
 8020b58:	e608      	b.n	802076c <_ZN8touchgfx7Outline10renderLineEiiii+0x5c4>
 8020b5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020b5c:	f04f 36ff 	mov.w	r6, #4294967295
 8020b60:	960e      	str	r6, [sp, #56]	; 0x38
 8020b62:	434b      	muls	r3, r1
 8020b64:	426d      	negs	r5, r5
 8020b66:	2600      	movs	r6, #0
 8020b68:	e75f      	b.n	8020a2a <_ZN8touchgfx7Outline10renderLineEiiii+0x882>
 8020b6a:	f104 0e14 	add.w	lr, r4, #20
 8020b6e:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 8020b72:	f8d4 8010 	ldr.w	r8, [r4, #16]
 8020b76:	f8c8 0000 	str.w	r0, [r8]
 8020b7a:	f8c8 1004 	str.w	r1, [r8, #4]
 8020b7e:	6921      	ldr	r1, [r4, #16]
 8020b80:	3108      	adds	r1, #8
 8020b82:	6121      	str	r1, [r4, #16]
 8020b84:	68a1      	ldr	r1, [r4, #8]
 8020b86:	3101      	adds	r1, #1
 8020b88:	60a1      	str	r1, [r4, #8]
 8020b8a:	e77d      	b.n	8020a88 <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 8020b8c:	f104 0914 	add.w	r9, r4, #20
 8020b90:	e8b9 0003 	ldmia.w	r9!, {r0, r1}
 8020b94:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8020b98:	f8ca 0000 	str.w	r0, [sl]
 8020b9c:	f8ca 1004 	str.w	r1, [sl, #4]
 8020ba0:	6921      	ldr	r1, [r4, #16]
 8020ba2:	3108      	adds	r1, #8
 8020ba4:	6121      	str	r1, [r4, #16]
 8020ba6:	68a1      	ldr	r1, [r4, #8]
 8020ba8:	3101      	adds	r1, #1
 8020baa:	60a1      	str	r1, [r4, #8]
 8020bac:	e7bb      	b.n	8020b26 <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 8020bae:	f104 0314 	add.w	r3, r4, #20
 8020bb2:	cb03      	ldmia	r3!, {r0, r1}
 8020bb4:	6925      	ldr	r5, [r4, #16]
 8020bb6:	6028      	str	r0, [r5, #0]
 8020bb8:	6069      	str	r1, [r5, #4]
 8020bba:	6923      	ldr	r3, [r4, #16]
 8020bbc:	3308      	adds	r3, #8
 8020bbe:	6123      	str	r3, [r4, #16]
 8020bc0:	68a3      	ldr	r3, [r4, #8]
 8020bc2:	3301      	adds	r3, #1
 8020bc4:	60a3      	str	r3, [r4, #8]
 8020bc6:	e5f4      	b.n	80207b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8020bc8:	f104 0314 	add.w	r3, r4, #20
 8020bcc:	cb03      	ldmia	r3!, {r0, r1}
 8020bce:	6925      	ldr	r5, [r4, #16]
 8020bd0:	6028      	str	r0, [r5, #0]
 8020bd2:	6069      	str	r1, [r5, #4]
 8020bd4:	6923      	ldr	r3, [r4, #16]
 8020bd6:	3308      	adds	r3, #8
 8020bd8:	6123      	str	r3, [r4, #16]
 8020bda:	68a3      	ldr	r3, [r4, #8]
 8020bdc:	3301      	adds	r3, #1
 8020bde:	60a3      	str	r3, [r4, #8]
 8020be0:	e61c      	b.n	802081c <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 8020be2:	9b05      	ldr	r3, [sp, #20]
 8020be4:	8b20      	ldrh	r0, [r4, #24]
 8020be6:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 8020bea:	f003 031f 	and.w	r3, r3, #31
 8020bee:	ea4f 176b 	mov.w	r7, fp, asr #5
 8020bf2:	9302      	str	r3, [sp, #8]
 8020bf4:	9b03      	ldr	r3, [sp, #12]
 8020bf6:	4577      	cmp	r7, lr
 8020bf8:	f00b 081f 	and.w	r8, fp, #31
 8020bfc:	eba3 050c 	sub.w	r5, r3, ip
 8020c00:	d108      	bne.n	8020c14 <_ZN8touchgfx7Outline10renderLineEiiii+0xa6c>
 8020c02:	9b02      	ldr	r3, [sp, #8]
 8020c04:	4498      	add	r8, r3
 8020c06:	4428      	add	r0, r5
 8020c08:	fb05 9508 	mla	r5, r5, r8, r9
 8020c0c:	8320      	strh	r0, [r4, #24]
 8020c0e:	8365      	strh	r5, [r4, #26]
 8020c10:	f7ff bb3f 	b.w	8020292 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 8020c14:	9b05      	ldr	r3, [sp, #20]
 8020c16:	ebb3 030b 	subs.w	r3, r3, fp
 8020c1a:	f100 809f 	bmi.w	8020d5c <_ZN8touchgfx7Outline10renderLineEiiii+0xbb4>
 8020c1e:	f1c8 0120 	rsb	r1, r8, #32
 8020c22:	2201      	movs	r2, #1
 8020c24:	434d      	muls	r5, r1
 8020c26:	9201      	str	r2, [sp, #4]
 8020c28:	f04f 0b20 	mov.w	fp, #32
 8020c2c:	fb95 f6f3 	sdiv	r6, r5, r3
 8020c30:	fb03 5516 	mls	r5, r3, r6, r5
 8020c34:	2d00      	cmp	r5, #0
 8020c36:	9a01      	ldr	r2, [sp, #4]
 8020c38:	bfb8      	it	lt
 8020c3a:	f106 36ff 	addlt.w	r6, r6, #4294967295
 8020c3e:	44d8      	add	r8, fp
 8020c40:	fb06 9808 	mla	r8, r6, r8, r9
 8020c44:	4417      	add	r7, r2
 8020c46:	9a00      	ldr	r2, [sp, #0]
 8020c48:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 8020c4c:	fa0f f188 	sxth.w	r1, r8
 8020c50:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 8020c54:	8361      	strh	r1, [r4, #26]
 8020c56:	ea4f 4202 	mov.w	r2, r2, lsl #16
 8020c5a:	4430      	add	r0, r6
 8020c5c:	eb07 0a02 	add.w	sl, r7, r2
 8020c60:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 8020c64:	bfb8      	it	lt
 8020c66:	18ed      	addlt	r5, r5, r3
 8020c68:	b200      	sxth	r0, r0
 8020c6a:	45ca      	cmp	sl, r9
 8020c6c:	8320      	strh	r0, [r4, #24]
 8020c6e:	9204      	str	r2, [sp, #16]
 8020c70:	d015      	beq.n	8020c9e <_ZN8touchgfx7Outline10renderLineEiiii+0xaf6>
 8020c72:	ea50 0201 	orrs.w	r2, r0, r1
 8020c76:	d00c      	beq.n	8020c92 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 8020c78:	f1b8 0f00 	cmp.w	r8, #0
 8020c7c:	db09      	blt.n	8020c92 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 8020c7e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020c80:	4541      	cmp	r1, r8
 8020c82:	dd06      	ble.n	8020c92 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 8020c84:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8020c88:	4288      	cmp	r0, r1
 8020c8a:	d370      	bcc.n	8020d6e <_ZN8touchgfx7Outline10renderLineEiiii+0xbc6>
 8020c8c:	2101      	movs	r1, #1
 8020c8e:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 8020c92:	2100      	movs	r1, #0
 8020c94:	9a00      	ldr	r2, [sp, #0]
 8020c96:	82a7      	strh	r7, [r4, #20]
 8020c98:	82e2      	strh	r2, [r4, #22]
 8020c9a:	8321      	strh	r1, [r4, #24]
 8020c9c:	8361      	strh	r1, [r4, #26]
 8020c9e:	45be      	cmp	lr, r7
 8020ca0:	44b4      	add	ip, r6
 8020ca2:	d04a      	beq.n	8020d3a <_ZN8touchgfx7Outline10renderLineEiiii+0xb92>
 8020ca4:	9a03      	ldr	r2, [sp, #12]
 8020ca6:	eba2 010c 	sub.w	r1, r2, ip
 8020caa:	440e      	add	r6, r1
 8020cac:	0176      	lsls	r6, r6, #5
 8020cae:	fb96 f8f3 	sdiv	r8, r6, r3
 8020cb2:	fb03 6618 	mls	r6, r3, r8, r6
 8020cb6:	2e00      	cmp	r6, #0
 8020cb8:	bfb8      	it	lt
 8020cba:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8020cbe:	f108 0201 	add.w	r2, r8, #1
 8020cc2:	bfb8      	it	lt
 8020cc4:	18f6      	addlt	r6, r6, r3
 8020cc6:	1aed      	subs	r5, r5, r3
 8020cc8:	9205      	str	r2, [sp, #20]
 8020cca:	19ad      	adds	r5, r5, r6
 8020ccc:	bf58      	it	pl
 8020cce:	f8dd 9014 	ldrpl.w	r9, [sp, #20]
 8020cd2:	8b20      	ldrh	r0, [r4, #24]
 8020cd4:	8b61      	ldrh	r1, [r4, #26]
 8020cd6:	9a01      	ldr	r2, [sp, #4]
 8020cd8:	f9b4 a014 	ldrsh.w	sl, [r4, #20]
 8020cdc:	bf48      	it	mi
 8020cde:	46c1      	movmi	r9, r8
 8020ce0:	4448      	add	r0, r9
 8020ce2:	eb01 1149 	add.w	r1, r1, r9, lsl #5
 8020ce6:	4417      	add	r7, r2
 8020ce8:	44cc      	add	ip, r9
 8020cea:	9a04      	ldr	r2, [sp, #16]
 8020cec:	f9b4 9016 	ldrsh.w	r9, [r4, #22]
 8020cf0:	443a      	add	r2, r7
 8020cf2:	eb0a 4a09 	add.w	sl, sl, r9, lsl #16
 8020cf6:	bf58      	it	pl
 8020cf8:	1aed      	subpl	r5, r5, r3
 8020cfa:	b200      	sxth	r0, r0
 8020cfc:	b209      	sxth	r1, r1
 8020cfe:	4552      	cmp	r2, sl
 8020d00:	8320      	strh	r0, [r4, #24]
 8020d02:	8361      	strh	r1, [r4, #26]
 8020d04:	d017      	beq.n	8020d36 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8e>
 8020d06:	ea50 0201 	orrs.w	r2, r0, r1
 8020d0a:	d00d      	beq.n	8020d28 <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>
 8020d0c:	f1b9 0f00 	cmp.w	r9, #0
 8020d10:	db0a      	blt.n	8020d28 <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>
 8020d12:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020d14:	4549      	cmp	r1, r9
 8020d16:	dd07      	ble.n	8020d28 <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>
 8020d18:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 8020d1c:	4288      	cmp	r0, r1
 8020d1e:	d337      	bcc.n	8020d90 <_ZN8touchgfx7Outline10renderLineEiiii+0xbe8>
 8020d20:	f04f 0201 	mov.w	r2, #1
 8020d24:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 8020d28:	9a00      	ldr	r2, [sp, #0]
 8020d2a:	82e2      	strh	r2, [r4, #22]
 8020d2c:	f04f 0200 	mov.w	r2, #0
 8020d30:	82a7      	strh	r7, [r4, #20]
 8020d32:	8322      	strh	r2, [r4, #24]
 8020d34:	8362      	strh	r2, [r4, #26]
 8020d36:	45be      	cmp	lr, r7
 8020d38:	d1c7      	bne.n	8020cca <_ZN8touchgfx7Outline10renderLineEiiii+0xb22>
 8020d3a:	9b03      	ldr	r3, [sp, #12]
 8020d3c:	8b62      	ldrh	r2, [r4, #26]
 8020d3e:	eba3 0c0c 	sub.w	ip, r3, ip
 8020d42:	8b23      	ldrh	r3, [r4, #24]
 8020d44:	4463      	add	r3, ip
 8020d46:	8323      	strh	r3, [r4, #24]
 8020d48:	9b02      	ldr	r3, [sp, #8]
 8020d4a:	3320      	adds	r3, #32
 8020d4c:	eba3 030b 	sub.w	r3, r3, fp
 8020d50:	fb0c 2c03 	mla	ip, ip, r3, r2
 8020d54:	f8a4 c01a 	strh.w	ip, [r4, #26]
 8020d58:	f7ff ba9b 	b.w	8020292 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 8020d5c:	f04f 32ff 	mov.w	r2, #4294967295
 8020d60:	fb05 f508 	mul.w	r5, r5, r8
 8020d64:	425b      	negs	r3, r3
 8020d66:	9201      	str	r2, [sp, #4]
 8020d68:	f04f 0b00 	mov.w	fp, #0
 8020d6c:	e75e      	b.n	8020c2c <_ZN8touchgfx7Outline10renderLineEiiii+0xa84>
 8020d6e:	f104 0814 	add.w	r8, r4, #20
 8020d72:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 8020d76:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8020d7a:	f8c9 0000 	str.w	r0, [r9]
 8020d7e:	f8c9 1004 	str.w	r1, [r9, #4]
 8020d82:	6921      	ldr	r1, [r4, #16]
 8020d84:	3108      	adds	r1, #8
 8020d86:	6121      	str	r1, [r4, #16]
 8020d88:	68a1      	ldr	r1, [r4, #8]
 8020d8a:	3101      	adds	r1, #1
 8020d8c:	60a1      	str	r1, [r4, #8]
 8020d8e:	e780      	b.n	8020c92 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 8020d90:	f104 0914 	add.w	r9, r4, #20
 8020d94:	e8b9 0003 	ldmia.w	r9!, {r0, r1}
 8020d98:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8020d9c:	f8ca 0000 	str.w	r0, [sl]
 8020da0:	f8ca 1004 	str.w	r1, [sl, #4]
 8020da4:	6921      	ldr	r1, [r4, #16]
 8020da6:	3108      	adds	r1, #8
 8020da8:	6121      	str	r1, [r4, #16]
 8020daa:	68a1      	ldr	r1, [r4, #8]
 8020dac:	3101      	adds	r1, #1
 8020dae:	60a1      	str	r1, [r4, #8]
 8020db0:	e7ba      	b.n	8020d28 <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>

08020db2 <_ZN8touchgfx7Outline6lineToEii>:
 8020db2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020db4:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8020db6:	079b      	lsls	r3, r3, #30
 8020db8:	4604      	mov	r4, r0
 8020dba:	460d      	mov	r5, r1
 8020dbc:	4616      	mov	r6, r2
 8020dbe:	d526      	bpl.n	8020e0e <_ZN8touchgfx7Outline6lineToEii+0x5c>
 8020dc0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8020dc4:	ea85 0001 	eor.w	r0, r5, r1
 8020dc8:	ea86 0302 	eor.w	r3, r6, r2
 8020dcc:	4303      	orrs	r3, r0
 8020dce:	d01e      	beq.n	8020e0e <_ZN8touchgfx7Outline6lineToEii+0x5c>
 8020dd0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8020dd2:	9600      	str	r6, [sp, #0]
 8020dd4:	114b      	asrs	r3, r1, #5
 8020dd6:	4283      	cmp	r3, r0
 8020dd8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8020dda:	bfb8      	it	lt
 8020ddc:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 8020dde:	3301      	adds	r3, #1
 8020de0:	4283      	cmp	r3, r0
 8020de2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8020de4:	bfc8      	it	gt
 8020de6:	6363      	strgt	r3, [r4, #52]	; 0x34
 8020de8:	116b      	asrs	r3, r5, #5
 8020dea:	4283      	cmp	r3, r0
 8020dec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8020dee:	bfb8      	it	lt
 8020df0:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 8020df2:	3301      	adds	r3, #1
 8020df4:	4283      	cmp	r3, r0
 8020df6:	bfc8      	it	gt
 8020df8:	6363      	strgt	r3, [r4, #52]	; 0x34
 8020dfa:	4620      	mov	r0, r4
 8020dfc:	462b      	mov	r3, r5
 8020dfe:	f7ff f9d3 	bl	80201a8 <_ZN8touchgfx7Outline10renderLineEiiii>
 8020e02:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8020e04:	e9c4 5607 	strd	r5, r6, [r4, #28]
 8020e08:	f043 0301 	orr.w	r3, r3, #1
 8020e0c:	63e3      	str	r3, [r4, #60]	; 0x3c
 8020e0e:	b002      	add	sp, #8
 8020e10:	bd70      	pop	{r4, r5, r6, pc}

08020e12 <_ZN8touchgfx7Outline6moveToEii>:
 8020e12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020e14:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8020e16:	4615      	mov	r5, r2
 8020e18:	079a      	lsls	r2, r3, #30
 8020e1a:	4604      	mov	r4, r0
 8020e1c:	460e      	mov	r6, r1
 8020e1e:	d401      	bmi.n	8020e24 <_ZN8touchgfx7Outline6moveToEii+0x12>
 8020e20:	f7ff f97c 	bl	802011c <_ZN8touchgfx7Outline5resetEv>
 8020e24:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8020e26:	07db      	lsls	r3, r3, #31
 8020e28:	d504      	bpl.n	8020e34 <_ZN8touchgfx7Outline6moveToEii+0x22>
 8020e2a:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	; 0x24
 8020e2e:	4620      	mov	r0, r4
 8020e30:	f7ff ffbf 	bl	8020db2 <_ZN8touchgfx7Outline6lineToEii>
 8020e34:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 8020e38:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 8020e3c:	ea4f 1c66 	mov.w	ip, r6, asr #5
 8020e40:	116f      	asrs	r7, r5, #5
 8020e42:	eb0c 4107 	add.w	r1, ip, r7, lsl #16
 8020e46:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 8020e4a:	4291      	cmp	r1, r2
 8020e4c:	d015      	beq.n	8020e7a <_ZN8touchgfx7Outline6moveToEii+0x68>
 8020e4e:	8b61      	ldrh	r1, [r4, #26]
 8020e50:	8b22      	ldrh	r2, [r4, #24]
 8020e52:	430a      	orrs	r2, r1
 8020e54:	d00b      	beq.n	8020e6e <_ZN8touchgfx7Outline6moveToEii+0x5c>
 8020e56:	2b00      	cmp	r3, #0
 8020e58:	db09      	blt.n	8020e6e <_ZN8touchgfx7Outline6moveToEii+0x5c>
 8020e5a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8020e5c:	429a      	cmp	r2, r3
 8020e5e:	dd06      	ble.n	8020e6e <_ZN8touchgfx7Outline6moveToEii+0x5c>
 8020e60:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 8020e64:	429a      	cmp	r2, r3
 8020e66:	d30d      	bcc.n	8020e84 <_ZN8touchgfx7Outline6moveToEii+0x72>
 8020e68:	2301      	movs	r3, #1
 8020e6a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8020e6e:	2300      	movs	r3, #0
 8020e70:	f8a4 c014 	strh.w	ip, [r4, #20]
 8020e74:	82e7      	strh	r7, [r4, #22]
 8020e76:	8323      	strh	r3, [r4, #24]
 8020e78:	8363      	strh	r3, [r4, #26]
 8020e7a:	61e6      	str	r6, [r4, #28]
 8020e7c:	e9c4 5608 	strd	r5, r6, [r4, #32]
 8020e80:	62a5      	str	r5, [r4, #40]	; 0x28
 8020e82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020e84:	f104 0314 	add.w	r3, r4, #20
 8020e88:	cb03      	ldmia	r3!, {r0, r1}
 8020e8a:	6922      	ldr	r2, [r4, #16]
 8020e8c:	6010      	str	r0, [r2, #0]
 8020e8e:	6051      	str	r1, [r2, #4]
 8020e90:	6923      	ldr	r3, [r4, #16]
 8020e92:	3308      	adds	r3, #8
 8020e94:	6123      	str	r3, [r4, #16]
 8020e96:	68a3      	ldr	r3, [r4, #8]
 8020e98:	3301      	adds	r3, #1
 8020e9a:	60a3      	str	r3, [r4, #8]
 8020e9c:	e7e7      	b.n	8020e6e <_ZN8touchgfx7Outline6moveToEii+0x5c>

08020e9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8020e9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ea2:	b0d1      	sub	sp, #324	; 0x144
 8020ea4:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8020ea8:	466c      	mov	r4, sp
 8020eaa:	1a0d      	subs	r5, r1, r0
 8020eac:	2d48      	cmp	r5, #72	; 0x48
 8020eae:	f100 0208 	add.w	r2, r0, #8
 8020eb2:	f340 80bb 	ble.w	802102c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 8020eb6:	112d      	asrs	r5, r5, #4
 8020eb8:	eb00 03c5 	add.w	r3, r0, r5, lsl #3
 8020ebc:	f9b0 e002 	ldrsh.w	lr, [r0, #2]
 8020ec0:	681e      	ldr	r6, [r3, #0]
 8020ec2:	f9b0 8000 	ldrsh.w	r8, [r0]
 8020ec6:	6006      	str	r6, [r0, #0]
 8020ec8:	685e      	ldr	r6, [r3, #4]
 8020eca:	f9b0 c004 	ldrsh.w	ip, [r0, #4]
 8020ece:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 8020ed2:	6046      	str	r6, [r0, #4]
 8020ed4:	f820 8035 	strh.w	r8, [r0, r5, lsl #3]
 8020ed8:	f8a3 c004 	strh.w	ip, [r3, #4]
 8020edc:	f8a3 e002 	strh.w	lr, [r3, #2]
 8020ee0:	80df      	strh	r7, [r3, #6]
 8020ee2:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 8020ee6:	f9b0 600a 	ldrsh.w	r6, [r0, #10]
 8020eea:	f931 ec06 	ldrsh.w	lr, [r1, #-6]
 8020eee:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8020ef2:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8020ef6:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 8020efa:	45ac      	cmp	ip, r5
 8020efc:	f1a1 0308 	sub.w	r3, r1, #8
 8020f00:	dd0f      	ble.n	8020f22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x84>
 8020f02:	681d      	ldr	r5, [r3, #0]
 8020f04:	f9b0 e00c 	ldrsh.w	lr, [r0, #12]
 8020f08:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 8020f0c:	6015      	str	r5, [r2, #0]
 8020f0e:	685d      	ldr	r5, [r3, #4]
 8020f10:	6055      	str	r5, [r2, #4]
 8020f12:	f821 7c08 	strh.w	r7, [r1, #-8]
 8020f16:	f821 6c06 	strh.w	r6, [r1, #-6]
 8020f1a:	f821 ec04 	strh.w	lr, [r1, #-4]
 8020f1e:	f821 cc02 	strh.w	ip, [r1, #-2]
 8020f22:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8020f26:	f9b0 7000 	ldrsh.w	r7, [r0]
 8020f2a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8020f2e:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8020f32:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 8020f36:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8020f3a:	4565      	cmp	r5, ip
 8020f3c:	dd0d      	ble.n	8020f5a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xbc>
 8020f3e:	6815      	ldr	r5, [r2, #0]
 8020f40:	6005      	str	r5, [r0, #0]
 8020f42:	6855      	ldr	r5, [r2, #4]
 8020f44:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8020f48:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8020f4c:	8107      	strh	r7, [r0, #8]
 8020f4e:	6045      	str	r5, [r0, #4]
 8020f50:	8146      	strh	r6, [r0, #10]
 8020f52:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8020f56:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8020f5a:	f9b0 7000 	ldrsh.w	r7, [r0]
 8020f5e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8020f62:	f931 ec06 	ldrsh.w	lr, [r1, #-6]
 8020f66:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8020f6a:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 8020f6e:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 8020f72:	45ac      	cmp	ip, r5
 8020f74:	dd0f      	ble.n	8020f96 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 8020f76:	681d      	ldr	r5, [r3, #0]
 8020f78:	6005      	str	r5, [r0, #0]
 8020f7a:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8020f7e:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8020f82:	685d      	ldr	r5, [r3, #4]
 8020f84:	6045      	str	r5, [r0, #4]
 8020f86:	f821 7c08 	strh.w	r7, [r1, #-8]
 8020f8a:	f821 6c06 	strh.w	r6, [r1, #-6]
 8020f8e:	f821 ec04 	strh.w	lr, [r1, #-4]
 8020f92:	f821 cc02 	strh.w	ip, [r1, #-2]
 8020f96:	f9b2 9008 	ldrsh.w	r9, [r2, #8]
 8020f9a:	f9b2 800a 	ldrsh.w	r8, [r2, #10]
 8020f9e:	f9b0 e000 	ldrsh.w	lr, [r0]
 8020fa2:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8020fa6:	eb09 4608 	add.w	r6, r9, r8, lsl #16
 8020faa:	eb0e 4a0c 	add.w	sl, lr, ip, lsl #16
 8020fae:	f102 0508 	add.w	r5, r2, #8
 8020fb2:	45b2      	cmp	sl, r6
 8020fb4:	462f      	mov	r7, r5
 8020fb6:	dc18      	bgt.n	8020fea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x14c>
 8020fb8:	3b08      	subs	r3, #8
 8020fba:	f9b3 b002 	ldrsh.w	fp, [r3, #2]
 8020fbe:	f9b3 6000 	ldrsh.w	r6, [r3]
 8020fc2:	eb06 460b 	add.w	r6, r6, fp, lsl #16
 8020fc6:	45b2      	cmp	sl, r6
 8020fc8:	dbf6      	blt.n	8020fb8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x11a>
 8020fca:	42ab      	cmp	r3, r5
 8020fcc:	681e      	ldr	r6, [r3, #0]
 8020fce:	d30e      	bcc.n	8020fee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x150>
 8020fd0:	f9b2 700c 	ldrsh.w	r7, [r2, #12]
 8020fd4:	f9b2 200e 	ldrsh.w	r2, [r2, #14]
 8020fd8:	602e      	str	r6, [r5, #0]
 8020fda:	685e      	ldr	r6, [r3, #4]
 8020fdc:	606e      	str	r6, [r5, #4]
 8020fde:	f8a3 9000 	strh.w	r9, [r3]
 8020fe2:	f8a3 8002 	strh.w	r8, [r3, #2]
 8020fe6:	809f      	strh	r7, [r3, #4]
 8020fe8:	80da      	strh	r2, [r3, #6]
 8020fea:	462a      	mov	r2, r5
 8020fec:	e7d3      	b.n	8020f96 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 8020fee:	6006      	str	r6, [r0, #0]
 8020ff0:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8020ff4:	685e      	ldr	r6, [r3, #4]
 8020ff6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8020ffa:	6046      	str	r6, [r0, #4]
 8020ffc:	80da      	strh	r2, [r3, #6]
 8020ffe:	1b4a      	subs	r2, r1, r5
 8021000:	1a1e      	subs	r6, r3, r0
 8021002:	10d2      	asrs	r2, r2, #3
 8021004:	ebb2 0fe6 	cmp.w	r2, r6, asr #3
 8021008:	bfb8      	it	lt
 802100a:	e9c4 0300 	strdlt	r0, r3, [r4]
 802100e:	f8a3 e000 	strh.w	lr, [r3]
 8021012:	f8a3 c002 	strh.w	ip, [r3, #2]
 8021016:	f8a3 8004 	strh.w	r8, [r3, #4]
 802101a:	bfaa      	itet	ge
 802101c:	4607      	movge	r7, r0
 802101e:	460b      	movlt	r3, r1
 8021020:	e9c4 5100 	strdge	r5, r1, [r4]
 8021024:	4638      	mov	r0, r7
 8021026:	3408      	adds	r4, #8
 8021028:	4619      	mov	r1, r3
 802102a:	e73e      	b.n	8020eaa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 802102c:	4291      	cmp	r1, r2
 802102e:	d926      	bls.n	802107e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e0>
 8021030:	f1a2 0310 	sub.w	r3, r2, #16
 8021034:	f9b3 600a 	ldrsh.w	r6, [r3, #10]
 8021038:	f9b3 c010 	ldrsh.w	ip, [r3, #16]
 802103c:	f9b3 7012 	ldrsh.w	r7, [r3, #18]
 8021040:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 8021044:	eb05 4506 	add.w	r5, r5, r6, lsl #16
 8021048:	eb0c 4607 	add.w	r6, ip, r7, lsl #16
 802104c:	42b5      	cmp	r5, r6
 802104e:	dd14      	ble.n	802107a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1dc>
 8021050:	461d      	mov	r5, r3
 8021052:	f9b3 8014 	ldrsh.w	r8, [r3, #20]
 8021056:	f855 6f08 	ldr.w	r6, [r5, #8]!
 802105a:	611e      	str	r6, [r3, #16]
 802105c:	686e      	ldr	r6, [r5, #4]
 802105e:	f9b3 e016 	ldrsh.w	lr, [r3, #22]
 8021062:	f8a3 c008 	strh.w	ip, [r3, #8]
 8021066:	42a8      	cmp	r0, r5
 8021068:	615e      	str	r6, [r3, #20]
 802106a:	815f      	strh	r7, [r3, #10]
 802106c:	f8a3 800c 	strh.w	r8, [r3, #12]
 8021070:	f8a3 e00e 	strh.w	lr, [r3, #14]
 8021074:	f1a3 0308 	sub.w	r3, r3, #8
 8021078:	d1dc      	bne.n	8021034 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x196>
 802107a:	3208      	adds	r2, #8
 802107c:	e7d6      	b.n	802102c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 802107e:	466b      	mov	r3, sp
 8021080:	429c      	cmp	r4, r3
 8021082:	d903      	bls.n	802108c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1ee>
 8021084:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8021088:	3c08      	subs	r4, #8
 802108a:	e70e      	b.n	8020eaa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 802108c:	b051      	add	sp, #324	; 0x144
 802108e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021092 <_ZN8touchgfx7Outline9sortCellsEv>:
 8021092:	6881      	ldr	r1, [r0, #8]
 8021094:	b111      	cbz	r1, 802109c <_ZN8touchgfx7Outline9sortCellsEv+0xa>
 8021096:	68c0      	ldr	r0, [r0, #12]
 8021098:	f7ff bf01 	b.w	8020e9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 802109c:	4770      	bx	lr

0802109e <_ZN8touchgfx7Outline8getCellsEv>:
 802109e:	b510      	push	{r4, lr}
 80210a0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80210a2:	07da      	lsls	r2, r3, #31
 80210a4:	4604      	mov	r4, r0
 80210a6:	d507      	bpl.n	80210b8 <_ZN8touchgfx7Outline8getCellsEv+0x1a>
 80210a8:	e9d0 1209 	ldrd	r1, r2, [r0, #36]	; 0x24
 80210ac:	f7ff fe81 	bl	8020db2 <_ZN8touchgfx7Outline6lineToEii>
 80210b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80210b2:	f023 0301 	bic.w	r3, r3, #1
 80210b6:	63e3      	str	r3, [r4, #60]	; 0x3c
 80210b8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80210ba:	079b      	lsls	r3, r3, #30
 80210bc:	d51a      	bpl.n	80210f4 <_ZN8touchgfx7Outline8getCellsEv+0x56>
 80210be:	8b62      	ldrh	r2, [r4, #26]
 80210c0:	8b23      	ldrh	r3, [r4, #24]
 80210c2:	4313      	orrs	r3, r2
 80210c4:	d00d      	beq.n	80210e2 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 80210c6:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 80210ca:	2b00      	cmp	r3, #0
 80210cc:	db09      	blt.n	80210e2 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 80210ce:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80210d0:	4293      	cmp	r3, r2
 80210d2:	da06      	bge.n	80210e2 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 80210d4:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 80210d8:	429a      	cmp	r2, r3
 80210da:	d80d      	bhi.n	80210f8 <_ZN8touchgfx7Outline8getCellsEv+0x5a>
 80210dc:	2301      	movs	r3, #1
 80210de:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80210e2:	68a0      	ldr	r0, [r4, #8]
 80210e4:	b138      	cbz	r0, 80210f6 <_ZN8touchgfx7Outline8getCellsEv+0x58>
 80210e6:	4620      	mov	r0, r4
 80210e8:	f7ff ffd3 	bl	8021092 <_ZN8touchgfx7Outline9sortCellsEv>
 80210ec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80210ee:	f023 0302 	bic.w	r3, r3, #2
 80210f2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80210f4:	68e0      	ldr	r0, [r4, #12]
 80210f6:	bd10      	pop	{r4, pc}
 80210f8:	f104 0314 	add.w	r3, r4, #20
 80210fc:	cb03      	ldmia	r3!, {r0, r1}
 80210fe:	6922      	ldr	r2, [r4, #16]
 8021100:	6010      	str	r0, [r2, #0]
 8021102:	6051      	str	r1, [r2, #4]
 8021104:	6923      	ldr	r3, [r4, #16]
 8021106:	3308      	adds	r3, #8
 8021108:	6123      	str	r3, [r4, #16]
 802110a:	68a3      	ldr	r3, [r4, #8]
 802110c:	3301      	adds	r3, #1
 802110e:	60a3      	str	r3, [r4, #8]
 8021110:	e7e7      	b.n	80210e2 <_ZN8touchgfx7Outline8getCellsEv+0x44>

08021112 <_ZN8touchgfx8ScanlineD1Ev>:
 8021112:	4770      	bx	lr

08021114 <_ZN8touchgfx8ScanlineD0Ev>:
 8021114:	b510      	push	{r4, lr}
 8021116:	2124      	movs	r1, #36	; 0x24
 8021118:	4604      	mov	r4, r0
 802111a:	f000 f9da 	bl	80214d2 <_ZdlPvj>
 802111e:	4620      	mov	r0, r4
 8021120:	bd10      	pop	{r4, pc}

08021122 <_ZN8touchgfx8Scanline5resetEv>:
 8021122:	b510      	push	{r4, lr}
 8021124:	4604      	mov	r4, r0
 8021126:	f7ed fb29 	bl	800e77c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>
 802112a:	61a0      	str	r0, [r4, #24]
 802112c:	f7ed fb2c 	bl	800e788 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>
 8021130:	61e0      	str	r0, [r4, #28]
 8021132:	f7ed fb2f 	bl	800e794 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>
 8021136:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802113a:	e9c4 3301 	strd	r3, r3, [r4, #4]
 802113e:	69e3      	ldr	r3, [r4, #28]
 8021140:	6123      	str	r3, [r4, #16]
 8021142:	2300      	movs	r3, #0
 8021144:	6220      	str	r0, [r4, #32]
 8021146:	6160      	str	r0, [r4, #20]
 8021148:	60e3      	str	r3, [r4, #12]
 802114a:	bd10      	pop	{r4, pc}

0802114c <_ZN8touchgfx8ScanlineC1Ev>:
 802114c:	b510      	push	{r4, lr}
 802114e:	4b07      	ldr	r3, [pc, #28]	; (802116c <_ZN8touchgfx8ScanlineC1Ev+0x20>)
 8021150:	6003      	str	r3, [r0, #0]
 8021152:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8021156:	e9c0 3301 	strd	r3, r3, [r0, #4]
 802115a:	2300      	movs	r3, #0
 802115c:	4604      	mov	r4, r0
 802115e:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8021162:	6143      	str	r3, [r0, #20]
 8021164:	f7ff ffdd 	bl	8021122 <_ZN8touchgfx8Scanline5resetEv>
 8021168:	4620      	mov	r0, r4
 802116a:	bd10      	pop	{r4, pc}
 802116c:	080276a0 	.word	0x080276a0

08021170 <_ZN8touchgfx8Scanline7addSpanEiijj>:
 8021170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021174:	1e0c      	subs	r4, r1, #0
 8021176:	4605      	mov	r5, r0
 8021178:	4617      	mov	r7, r2
 802117a:	461e      	mov	r6, r3
 802117c:	da03      	bge.n	8021186 <_ZN8touchgfx8Scanline7addSpanEiijj+0x16>
 802117e:	4426      	add	r6, r4
 8021180:	2e01      	cmp	r6, #1
 8021182:	d421      	bmi.n	80211c8 <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 8021184:	2400      	movs	r4, #0
 8021186:	f7ed faf3 	bl	800e770 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802118a:	42a0      	cmp	r0, r4
 802118c:	d91c      	bls.n	80211c8 <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 802118e:	f7ed faef 	bl	800e770 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 8021192:	eb04 0806 	add.w	r8, r4, r6
 8021196:	4580      	cmp	r8, r0
 8021198:	d902      	bls.n	80211a0 <_ZN8touchgfx8Scanline7addSpanEiijj+0x30>
 802119a:	f7ed fae9 	bl	800e770 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802119e:	1b06      	subs	r6, r0, r4
 80211a0:	69a8      	ldr	r0, [r5, #24]
 80211a2:	f89d 1018 	ldrb.w	r1, [sp, #24]
 80211a6:	4632      	mov	r2, r6
 80211a8:	4420      	add	r0, r4
 80211aa:	f7f0 f84d 	bl	8011248 <_ZN8touchgfx6memsetEPvhm>
 80211ae:	686b      	ldr	r3, [r5, #4]
 80211b0:	3301      	adds	r3, #1
 80211b2:	42a3      	cmp	r3, r4
 80211b4:	b2b2      	uxth	r2, r6
 80211b6:	696b      	ldr	r3, [r5, #20]
 80211b8:	d108      	bne.n	80211cc <_ZN8touchgfx8Scanline7addSpanEiijj+0x5c>
 80211ba:	8819      	ldrh	r1, [r3, #0]
 80211bc:	440a      	add	r2, r1
 80211be:	801a      	strh	r2, [r3, #0]
 80211c0:	3c01      	subs	r4, #1
 80211c2:	4434      	add	r4, r6
 80211c4:	e9c5 4701 	strd	r4, r7, [r5, #4]
 80211c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80211cc:	1c99      	adds	r1, r3, #2
 80211ce:	6169      	str	r1, [r5, #20]
 80211d0:	805a      	strh	r2, [r3, #2]
 80211d2:	692b      	ldr	r3, [r5, #16]
 80211d4:	1c9a      	adds	r2, r3, #2
 80211d6:	612a      	str	r2, [r5, #16]
 80211d8:	805c      	strh	r4, [r3, #2]
 80211da:	68eb      	ldr	r3, [r5, #12]
 80211dc:	3301      	adds	r3, #1
 80211de:	60eb      	str	r3, [r5, #12]
 80211e0:	e7ee      	b.n	80211c0 <_ZN8touchgfx8Scanline7addSpanEiijj+0x50>

080211e2 <_ZN8touchgfx15RenderingBufferD1Ev>:
 80211e2:	4770      	bx	lr

080211e4 <_ZN8touchgfx15RenderingBufferD0Ev>:
 80211e4:	b510      	push	{r4, lr}
 80211e6:	2118      	movs	r1, #24
 80211e8:	4604      	mov	r4, r0
 80211ea:	f000 f972 	bl	80214d2 <_ZdlPvj>
 80211ee:	4620      	mov	r0, r4
 80211f0:	bd10      	pop	{r4, pc}
	...

080211f4 <_ZN8touchgfx15RenderingBufferC1Ev>:
 80211f4:	4a04      	ldr	r2, [pc, #16]	; (8021208 <_ZN8touchgfx15RenderingBufferC1Ev+0x14>)
 80211f6:	6002      	str	r2, [r0, #0]
 80211f8:	2200      	movs	r2, #0
 80211fa:	6042      	str	r2, [r0, #4]
 80211fc:	7202      	strb	r2, [r0, #8]
 80211fe:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8021202:	6142      	str	r2, [r0, #20]
 8021204:	4770      	bx	lr
 8021206:	bf00      	nop
 8021208:	080276b0 	.word	0x080276b0

0802120c <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>:
 802120c:	60c3      	str	r3, [r0, #12]
 802120e:	9b00      	ldr	r3, [sp, #0]
 8021210:	6103      	str	r3, [r0, #16]
 8021212:	9b01      	ldr	r3, [sp, #4]
 8021214:	6041      	str	r1, [r0, #4]
 8021216:	7202      	strb	r2, [r0, #8]
 8021218:	6143      	str	r3, [r0, #20]
 802121a:	4770      	bx	lr

0802121c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802121c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802121e:	b08d      	sub	sp, #52	; 0x34
 8021220:	2300      	movs	r3, #0
 8021222:	9304      	str	r3, [sp, #16]
 8021224:	9305      	str	r3, [sp, #20]
 8021226:	9306      	str	r3, [sp, #24]
 8021228:	aa04      	add	r2, sp, #16
 802122a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802122e:	9307      	str	r3, [sp, #28]
 8021230:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8021234:	4613      	mov	r3, r2
 8021236:	f101 0710 	add.w	r7, r1, #16
 802123a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8021278 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802123e:	460c      	mov	r4, r1
 8021240:	4605      	mov	r5, r0
 8021242:	ecb4 7a01 	vldmia	r4!, {s14}
 8021246:	ecf5 6a01 	vldmia	r5!, {s13}
 802124a:	42bc      	cmp	r4, r7
 802124c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8021250:	d1f7      	bne.n	8021242 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8021252:	3010      	adds	r0, #16
 8021254:	42b0      	cmp	r0, r6
 8021256:	ece2 7a01 	vstmia	r2!, {s15}
 802125a:	d1ee      	bne.n	802123a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802125c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802125e:	ac0c      	add	r4, sp, #48	; 0x30
 8021260:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8021264:	ed9d 0a08 	vldr	s0, [sp, #32]
 8021268:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802126c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8021270:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8021274:	b00d      	add	sp, #52	; 0x34
 8021276:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021278:	00000000 	.word	0x00000000

0802127c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802127c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 80212ac <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8021280:	2300      	movs	r3, #0
 8021282:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8021286:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802128a:	2200      	movs	r2, #0
 802128c:	4293      	cmp	r3, r2
 802128e:	f102 0201 	add.w	r2, r2, #1
 8021292:	bf14      	ite	ne
 8021294:	eef0 6a47 	vmovne.f32	s13, s14
 8021298:	eef0 6a67 	vmoveq.f32	s13, s15
 802129c:	2a04      	cmp	r2, #4
 802129e:	ece1 6a01 	vstmia	r1!, {s13}
 80212a2:	d1f3      	bne.n	802128c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80212a4:	3301      	adds	r3, #1
 80212a6:	2b04      	cmp	r3, #4
 80212a8:	d1ed      	bne.n	8021286 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80212aa:	4770      	bx	lr
 80212ac:	00000000 	.word	0x00000000

080212b0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80212b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80212b4:	460c      	mov	r4, r1
 80212b6:	4605      	mov	r5, r0
 80212b8:	4690      	mov	r8, r2
 80212ba:	f7ff ffdf 	bl	802127c <_ZN8touchgfx9Matrix4x4C1Ev>
 80212be:	4628      	mov	r0, r5
 80212c0:	4621      	mov	r1, r4
 80212c2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80212c6:	2300      	movs	r3, #0
 80212c8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8021308 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80212cc:	eb08 0603 	add.w	r6, r8, r3
 80212d0:	460f      	mov	r7, r1
 80212d2:	2400      	movs	r4, #0
 80212d4:	4632      	mov	r2, r6
 80212d6:	ecf7 6a01 	vldmia	r7!, {s13}
 80212da:	ed92 7a00 	vldr	s14, [r2]
 80212de:	3401      	adds	r4, #1
 80212e0:	2c04      	cmp	r4, #4
 80212e2:	f106 0610 	add.w	r6, r6, #16
 80212e6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80212ea:	d1f3      	bne.n	80212d4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80212ec:	18c2      	adds	r2, r0, r3
 80212ee:	3304      	adds	r3, #4
 80212f0:	2b10      	cmp	r3, #16
 80212f2:	edc2 7a00 	vstr	s15, [r2]
 80212f6:	d1e7      	bne.n	80212c8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80212f8:	3110      	adds	r1, #16
 80212fa:	4561      	cmp	r1, ip
 80212fc:	f100 0010 	add.w	r0, r0, #16
 8021300:	d1e1      	bne.n	80212c6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8021302:	4628      	mov	r0, r5
 8021304:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021308:	00000000 	.word	0x00000000

0802130c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802130c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8021310:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8021314:	f100 0320 	add.w	r3, r0, #32
 8021318:	3030      	adds	r0, #48	; 0x30
 802131a:	ecf3 7a01 	vldmia	r3!, {s15}
 802131e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8021322:	4283      	cmp	r3, r0
 8021324:	edc3 7a03 	vstr	s15, [r3, #12]
 8021328:	d1f7      	bne.n	802131a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802132a:	4770      	bx	lr

0802132c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802132c:	b510      	push	{r4, lr}
 802132e:	ed2d 8b02 	vpush	{d8}
 8021332:	4604      	mov	r4, r0
 8021334:	eef0 8a40 	vmov.f32	s17, s0
 8021338:	f000 f9b8 	bl	80216ac <sinf>
 802133c:	eeb0 8a40 	vmov.f32	s16, s0
 8021340:	eeb0 0a68 	vmov.f32	s0, s17
 8021344:	f000 f930 	bl	80215a8 <cosf>
 8021348:	f104 0310 	add.w	r3, r4, #16
 802134c:	f104 0220 	add.w	r2, r4, #32
 8021350:	eeb1 6a48 	vneg.f32	s12, s16
 8021354:	edd3 7a04 	vldr	s15, [r3, #16]
 8021358:	edd3 6a00 	vldr	s13, [r3]
 802135c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8021360:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021364:	eea6 7a80 	vfma.f32	s14, s13, s0
 8021368:	eee6 7a88 	vfma.f32	s15, s13, s16
 802136c:	eca3 7a01 	vstmia	r3!, {s14}
 8021370:	429a      	cmp	r2, r3
 8021372:	edc3 7a03 	vstr	s15, [r3, #12]
 8021376:	d1ed      	bne.n	8021354 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8021378:	ecbd 8b02 	vpop	{d8}
 802137c:	4620      	mov	r0, r4
 802137e:	bd10      	pop	{r4, pc}

08021380 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8021380:	b510      	push	{r4, lr}
 8021382:	ed2d 8b02 	vpush	{d8}
 8021386:	4604      	mov	r4, r0
 8021388:	eef0 8a40 	vmov.f32	s17, s0
 802138c:	f000 f98e 	bl	80216ac <sinf>
 8021390:	eeb0 8a40 	vmov.f32	s16, s0
 8021394:	eeb0 0a68 	vmov.f32	s0, s17
 8021398:	f000 f906 	bl	80215a8 <cosf>
 802139c:	4623      	mov	r3, r4
 802139e:	f104 0210 	add.w	r2, r4, #16
 80213a2:	eeb1 6a48 	vneg.f32	s12, s16
 80213a6:	edd3 7a08 	vldr	s15, [r3, #32]
 80213aa:	edd3 6a00 	vldr	s13, [r3]
 80213ae:	ee27 7a88 	vmul.f32	s14, s15, s16
 80213b2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80213b6:	eea6 7a80 	vfma.f32	s14, s13, s0
 80213ba:	eee6 7a26 	vfma.f32	s15, s12, s13
 80213be:	eca3 7a01 	vstmia	r3!, {s14}
 80213c2:	429a      	cmp	r2, r3
 80213c4:	edc3 7a07 	vstr	s15, [r3, #28]
 80213c8:	d1ed      	bne.n	80213a6 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 80213ca:	ecbd 8b02 	vpop	{d8}
 80213ce:	4620      	mov	r0, r4
 80213d0:	bd10      	pop	{r4, pc}

080213d2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 80213d2:	b510      	push	{r4, lr}
 80213d4:	ed2d 8b02 	vpush	{d8}
 80213d8:	4604      	mov	r4, r0
 80213da:	eef0 8a40 	vmov.f32	s17, s0
 80213de:	f000 f965 	bl	80216ac <sinf>
 80213e2:	eeb0 8a40 	vmov.f32	s16, s0
 80213e6:	eeb0 0a68 	vmov.f32	s0, s17
 80213ea:	f000 f8dd 	bl	80215a8 <cosf>
 80213ee:	4623      	mov	r3, r4
 80213f0:	f104 0210 	add.w	r2, r4, #16
 80213f4:	eeb1 6a48 	vneg.f32	s12, s16
 80213f8:	edd3 7a04 	vldr	s15, [r3, #16]
 80213fc:	edd3 6a00 	vldr	s13, [r3]
 8021400:	ee26 7a27 	vmul.f32	s14, s12, s15
 8021404:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021408:	eea6 7a80 	vfma.f32	s14, s13, s0
 802140c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8021410:	eca3 7a01 	vstmia	r3!, {s14}
 8021414:	429a      	cmp	r2, r3
 8021416:	edc3 7a03 	vstr	s15, [r3, #12]
 802141a:	d1ed      	bne.n	80213f8 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802141c:	ecbd 8b02 	vpop	{d8}
 8021420:	4620      	mov	r0, r4
 8021422:	bd10      	pop	{r4, pc}

08021424 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8021424:	4603      	mov	r3, r0
 8021426:	f100 0210 	add.w	r2, r0, #16
 802142a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802142e:	edd3 7a00 	vldr	s15, [r3]
 8021432:	eee7 7a00 	vfma.f32	s15, s14, s0
 8021436:	ece3 7a01 	vstmia	r3!, {s15}
 802143a:	4293      	cmp	r3, r2
 802143c:	d1f5      	bne.n	802142a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802143e:	4770      	bx	lr

08021440 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8021440:	f100 0310 	add.w	r3, r0, #16
 8021444:	f100 0220 	add.w	r2, r0, #32
 8021448:	ed93 7a08 	vldr	s14, [r3, #32]
 802144c:	edd3 7a00 	vldr	s15, [r3]
 8021450:	eee7 7a00 	vfma.f32	s15, s14, s0
 8021454:	ece3 7a01 	vstmia	r3!, {s15}
 8021458:	4293      	cmp	r3, r2
 802145a:	d1f5      	bne.n	8021448 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802145c:	4770      	bx	lr

0802145e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802145e:	f100 0320 	add.w	r3, r0, #32
 8021462:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8021466:	ed93 7a04 	vldr	s14, [r3, #16]
 802146a:	edd3 7a00 	vldr	s15, [r3]
 802146e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8021472:	ece3 7a01 	vstmia	r3!, {s15}
 8021476:	4293      	cmp	r3, r2
 8021478:	d1f5      	bne.n	8021466 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802147a:	4770      	bx	lr

0802147c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802147c:	4603      	mov	r3, r0
 802147e:	f100 0210 	add.w	r2, r0, #16
 8021482:	edd3 7a00 	vldr	s15, [r3]
 8021486:	ee67 7a80 	vmul.f32	s15, s15, s0
 802148a:	ece3 7a01 	vstmia	r3!, {s15}
 802148e:	4293      	cmp	r3, r2
 8021490:	d1f7      	bne.n	8021482 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8021492:	4770      	bx	lr

08021494 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8021494:	f100 0310 	add.w	r3, r0, #16
 8021498:	f100 0220 	add.w	r2, r0, #32
 802149c:	edd3 7a00 	vldr	s15, [r3]
 80214a0:	ee67 7a80 	vmul.f32	s15, s15, s0
 80214a4:	ece3 7a01 	vstmia	r3!, {s15}
 80214a8:	4293      	cmp	r3, r2
 80214aa:	d1f7      	bne.n	802149c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 80214ac:	4770      	bx	lr

080214ae <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 80214ae:	f100 0320 	add.w	r3, r0, #32
 80214b2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80214b6:	edd3 7a00 	vldr	s15, [r3]
 80214ba:	ee67 7a80 	vmul.f32	s15, s15, s0
 80214be:	ece3 7a01 	vstmia	r3!, {s15}
 80214c2:	4293      	cmp	r3, r2
 80214c4:	d1f7      	bne.n	80214b6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 80214c6:	4770      	bx	lr

080214c8 <__aeabi_atexit>:
 80214c8:	460b      	mov	r3, r1
 80214ca:	4601      	mov	r1, r0
 80214cc:	4618      	mov	r0, r3
 80214ce:	f000 be43 	b.w	8022158 <__cxa_atexit>

080214d2 <_ZdlPvj>:
 80214d2:	f000 b812 	b.w	80214fa <_ZdlPv>

080214d6 <__cxa_guard_acquire>:
 80214d6:	6803      	ldr	r3, [r0, #0]
 80214d8:	07db      	lsls	r3, r3, #31
 80214da:	d406      	bmi.n	80214ea <__cxa_guard_acquire+0x14>
 80214dc:	7843      	ldrb	r3, [r0, #1]
 80214de:	b103      	cbz	r3, 80214e2 <__cxa_guard_acquire+0xc>
 80214e0:	deff      	udf	#255	; 0xff
 80214e2:	2301      	movs	r3, #1
 80214e4:	7043      	strb	r3, [r0, #1]
 80214e6:	4618      	mov	r0, r3
 80214e8:	4770      	bx	lr
 80214ea:	2000      	movs	r0, #0
 80214ec:	4770      	bx	lr

080214ee <__cxa_guard_release>:
 80214ee:	2301      	movs	r3, #1
 80214f0:	6003      	str	r3, [r0, #0]
 80214f2:	4770      	bx	lr

080214f4 <__cxa_pure_virtual>:
 80214f4:	b508      	push	{r3, lr}
 80214f6:	f000 f80f 	bl	8021518 <_ZSt9terminatev>

080214fa <_ZdlPv>:
 80214fa:	f000 be7f 	b.w	80221fc <free>

080214fe <_ZN10__cxxabiv111__terminateEPFvvE>:
 80214fe:	b508      	push	{r3, lr}
 8021500:	4780      	blx	r0
 8021502:	f000 fdfd 	bl	8022100 <abort>
	...

08021508 <_ZSt13get_terminatev>:
 8021508:	4b02      	ldr	r3, [pc, #8]	; (8021514 <_ZSt13get_terminatev+0xc>)
 802150a:	6818      	ldr	r0, [r3, #0]
 802150c:	f3bf 8f5b 	dmb	ish
 8021510:	4770      	bx	lr
 8021512:	bf00      	nop
 8021514:	200000d4 	.word	0x200000d4

08021518 <_ZSt9terminatev>:
 8021518:	b508      	push	{r3, lr}
 802151a:	f7ff fff5 	bl	8021508 <_ZSt13get_terminatev>
 802151e:	f7ff ffee 	bl	80214fe <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08021524 <ceilf>:
 8021524:	ee10 3a10 	vmov	r3, s0
 8021528:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802152c:	3a7f      	subs	r2, #127	; 0x7f
 802152e:	2a16      	cmp	r2, #22
 8021530:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8021534:	dc2a      	bgt.n	802158c <ceilf+0x68>
 8021536:	2a00      	cmp	r2, #0
 8021538:	da11      	bge.n	802155e <ceilf+0x3a>
 802153a:	eddf 7a19 	vldr	s15, [pc, #100]	; 80215a0 <ceilf+0x7c>
 802153e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8021542:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021546:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802154a:	dd05      	ble.n	8021558 <ceilf+0x34>
 802154c:	2b00      	cmp	r3, #0
 802154e:	db23      	blt.n	8021598 <ceilf+0x74>
 8021550:	2900      	cmp	r1, #0
 8021552:	bf18      	it	ne
 8021554:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8021558:	ee00 3a10 	vmov	s0, r3
 802155c:	4770      	bx	lr
 802155e:	4911      	ldr	r1, [pc, #68]	; (80215a4 <ceilf+0x80>)
 8021560:	4111      	asrs	r1, r2
 8021562:	420b      	tst	r3, r1
 8021564:	d0fa      	beq.n	802155c <ceilf+0x38>
 8021566:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80215a0 <ceilf+0x7c>
 802156a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802156e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021576:	ddef      	ble.n	8021558 <ceilf+0x34>
 8021578:	2b00      	cmp	r3, #0
 802157a:	bfc2      	ittt	gt
 802157c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8021580:	fa40 f202 	asrgt.w	r2, r0, r2
 8021584:	189b      	addgt	r3, r3, r2
 8021586:	ea23 0301 	bic.w	r3, r3, r1
 802158a:	e7e5      	b.n	8021558 <ceilf+0x34>
 802158c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8021590:	d3e4      	bcc.n	802155c <ceilf+0x38>
 8021592:	ee30 0a00 	vadd.f32	s0, s0, s0
 8021596:	4770      	bx	lr
 8021598:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802159c:	e7dc      	b.n	8021558 <ceilf+0x34>
 802159e:	bf00      	nop
 80215a0:	7149f2ca 	.word	0x7149f2ca
 80215a4:	007fffff 	.word	0x007fffff

080215a8 <cosf>:
 80215a8:	ee10 3a10 	vmov	r3, s0
 80215ac:	b507      	push	{r0, r1, r2, lr}
 80215ae:	4a1c      	ldr	r2, [pc, #112]	; (8021620 <cosf+0x78>)
 80215b0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80215b4:	4293      	cmp	r3, r2
 80215b6:	dc04      	bgt.n	80215c2 <cosf+0x1a>
 80215b8:	eddf 0a1a 	vldr	s1, [pc, #104]	; 8021624 <cosf+0x7c>
 80215bc:	f000 f9f4 	bl	80219a8 <__kernel_cosf>
 80215c0:	e004      	b.n	80215cc <cosf+0x24>
 80215c2:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80215c6:	db04      	blt.n	80215d2 <cosf+0x2a>
 80215c8:	ee30 0a40 	vsub.f32	s0, s0, s0
 80215cc:	b003      	add	sp, #12
 80215ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80215d2:	4668      	mov	r0, sp
 80215d4:	f000 f8ac 	bl	8021730 <__ieee754_rem_pio2f>
 80215d8:	f000 0003 	and.w	r0, r0, #3
 80215dc:	2801      	cmp	r0, #1
 80215de:	d007      	beq.n	80215f0 <cosf+0x48>
 80215e0:	2802      	cmp	r0, #2
 80215e2:	d00e      	beq.n	8021602 <cosf+0x5a>
 80215e4:	b9a0      	cbnz	r0, 8021610 <cosf+0x68>
 80215e6:	eddd 0a01 	vldr	s1, [sp, #4]
 80215ea:	ed9d 0a00 	vldr	s0, [sp]
 80215ee:	e7e5      	b.n	80215bc <cosf+0x14>
 80215f0:	eddd 0a01 	vldr	s1, [sp, #4]
 80215f4:	ed9d 0a00 	vldr	s0, [sp]
 80215f8:	f000 fcc0 	bl	8021f7c <__kernel_sinf>
 80215fc:	eeb1 0a40 	vneg.f32	s0, s0
 8021600:	e7e4      	b.n	80215cc <cosf+0x24>
 8021602:	eddd 0a01 	vldr	s1, [sp, #4]
 8021606:	ed9d 0a00 	vldr	s0, [sp]
 802160a:	f000 f9cd 	bl	80219a8 <__kernel_cosf>
 802160e:	e7f5      	b.n	80215fc <cosf+0x54>
 8021610:	eddd 0a01 	vldr	s1, [sp, #4]
 8021614:	ed9d 0a00 	vldr	s0, [sp]
 8021618:	2001      	movs	r0, #1
 802161a:	f000 fcaf 	bl	8021f7c <__kernel_sinf>
 802161e:	e7d5      	b.n	80215cc <cosf+0x24>
 8021620:	3f490fd8 	.word	0x3f490fd8
 8021624:	00000000 	.word	0x00000000

08021628 <floorf>:
 8021628:	ee10 3a10 	vmov	r3, s0
 802162c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8021630:	3a7f      	subs	r2, #127	; 0x7f
 8021632:	2a16      	cmp	r2, #22
 8021634:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8021638:	dc2a      	bgt.n	8021690 <floorf+0x68>
 802163a:	2a00      	cmp	r2, #0
 802163c:	da11      	bge.n	8021662 <floorf+0x3a>
 802163e:	eddf 7a18 	vldr	s15, [pc, #96]	; 80216a0 <floorf+0x78>
 8021642:	ee30 0a27 	vadd.f32	s0, s0, s15
 8021646:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802164a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802164e:	dd05      	ble.n	802165c <floorf+0x34>
 8021650:	2b00      	cmp	r3, #0
 8021652:	da23      	bge.n	802169c <floorf+0x74>
 8021654:	4a13      	ldr	r2, [pc, #76]	; (80216a4 <floorf+0x7c>)
 8021656:	2900      	cmp	r1, #0
 8021658:	bf18      	it	ne
 802165a:	4613      	movne	r3, r2
 802165c:	ee00 3a10 	vmov	s0, r3
 8021660:	4770      	bx	lr
 8021662:	4911      	ldr	r1, [pc, #68]	; (80216a8 <floorf+0x80>)
 8021664:	4111      	asrs	r1, r2
 8021666:	420b      	tst	r3, r1
 8021668:	d0fa      	beq.n	8021660 <floorf+0x38>
 802166a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80216a0 <floorf+0x78>
 802166e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8021672:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021676:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802167a:	ddef      	ble.n	802165c <floorf+0x34>
 802167c:	2b00      	cmp	r3, #0
 802167e:	bfbe      	ittt	lt
 8021680:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8021684:	fa40 f202 	asrlt.w	r2, r0, r2
 8021688:	189b      	addlt	r3, r3, r2
 802168a:	ea23 0301 	bic.w	r3, r3, r1
 802168e:	e7e5      	b.n	802165c <floorf+0x34>
 8021690:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8021694:	d3e4      	bcc.n	8021660 <floorf+0x38>
 8021696:	ee30 0a00 	vadd.f32	s0, s0, s0
 802169a:	4770      	bx	lr
 802169c:	2300      	movs	r3, #0
 802169e:	e7dd      	b.n	802165c <floorf+0x34>
 80216a0:	7149f2ca 	.word	0x7149f2ca
 80216a4:	bf800000 	.word	0xbf800000
 80216a8:	007fffff 	.word	0x007fffff

080216ac <sinf>:
 80216ac:	ee10 3a10 	vmov	r3, s0
 80216b0:	b507      	push	{r0, r1, r2, lr}
 80216b2:	4a1d      	ldr	r2, [pc, #116]	; (8021728 <sinf+0x7c>)
 80216b4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80216b8:	4293      	cmp	r3, r2
 80216ba:	dc05      	bgt.n	80216c8 <sinf+0x1c>
 80216bc:	eddf 0a1b 	vldr	s1, [pc, #108]	; 802172c <sinf+0x80>
 80216c0:	2000      	movs	r0, #0
 80216c2:	f000 fc5b 	bl	8021f7c <__kernel_sinf>
 80216c6:	e004      	b.n	80216d2 <sinf+0x26>
 80216c8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80216cc:	db04      	blt.n	80216d8 <sinf+0x2c>
 80216ce:	ee30 0a40 	vsub.f32	s0, s0, s0
 80216d2:	b003      	add	sp, #12
 80216d4:	f85d fb04 	ldr.w	pc, [sp], #4
 80216d8:	4668      	mov	r0, sp
 80216da:	f000 f829 	bl	8021730 <__ieee754_rem_pio2f>
 80216de:	f000 0003 	and.w	r0, r0, #3
 80216e2:	2801      	cmp	r0, #1
 80216e4:	d008      	beq.n	80216f8 <sinf+0x4c>
 80216e6:	2802      	cmp	r0, #2
 80216e8:	d00d      	beq.n	8021706 <sinf+0x5a>
 80216ea:	b9b0      	cbnz	r0, 802171a <sinf+0x6e>
 80216ec:	eddd 0a01 	vldr	s1, [sp, #4]
 80216f0:	ed9d 0a00 	vldr	s0, [sp]
 80216f4:	2001      	movs	r0, #1
 80216f6:	e7e4      	b.n	80216c2 <sinf+0x16>
 80216f8:	eddd 0a01 	vldr	s1, [sp, #4]
 80216fc:	ed9d 0a00 	vldr	s0, [sp]
 8021700:	f000 f952 	bl	80219a8 <__kernel_cosf>
 8021704:	e7e5      	b.n	80216d2 <sinf+0x26>
 8021706:	eddd 0a01 	vldr	s1, [sp, #4]
 802170a:	ed9d 0a00 	vldr	s0, [sp]
 802170e:	2001      	movs	r0, #1
 8021710:	f000 fc34 	bl	8021f7c <__kernel_sinf>
 8021714:	eeb1 0a40 	vneg.f32	s0, s0
 8021718:	e7db      	b.n	80216d2 <sinf+0x26>
 802171a:	eddd 0a01 	vldr	s1, [sp, #4]
 802171e:	ed9d 0a00 	vldr	s0, [sp]
 8021722:	f000 f941 	bl	80219a8 <__kernel_cosf>
 8021726:	e7f5      	b.n	8021714 <sinf+0x68>
 8021728:	3f490fd8 	.word	0x3f490fd8
 802172c:	00000000 	.word	0x00000000

08021730 <__ieee754_rem_pio2f>:
 8021730:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021732:	ee10 6a10 	vmov	r6, s0
 8021736:	4b8e      	ldr	r3, [pc, #568]	; (8021970 <__ieee754_rem_pio2f+0x240>)
 8021738:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802173c:	429d      	cmp	r5, r3
 802173e:	b087      	sub	sp, #28
 8021740:	eef0 7a40 	vmov.f32	s15, s0
 8021744:	4604      	mov	r4, r0
 8021746:	dc05      	bgt.n	8021754 <__ieee754_rem_pio2f+0x24>
 8021748:	2300      	movs	r3, #0
 802174a:	ed80 0a00 	vstr	s0, [r0]
 802174e:	6043      	str	r3, [r0, #4]
 8021750:	2000      	movs	r0, #0
 8021752:	e01a      	b.n	802178a <__ieee754_rem_pio2f+0x5a>
 8021754:	4b87      	ldr	r3, [pc, #540]	; (8021974 <__ieee754_rem_pio2f+0x244>)
 8021756:	429d      	cmp	r5, r3
 8021758:	dc46      	bgt.n	80217e8 <__ieee754_rem_pio2f+0xb8>
 802175a:	2e00      	cmp	r6, #0
 802175c:	ed9f 0a86 	vldr	s0, [pc, #536]	; 8021978 <__ieee754_rem_pio2f+0x248>
 8021760:	4b86      	ldr	r3, [pc, #536]	; (802197c <__ieee754_rem_pio2f+0x24c>)
 8021762:	f025 050f 	bic.w	r5, r5, #15
 8021766:	dd1f      	ble.n	80217a8 <__ieee754_rem_pio2f+0x78>
 8021768:	429d      	cmp	r5, r3
 802176a:	ee77 7ac0 	vsub.f32	s15, s15, s0
 802176e:	d00e      	beq.n	802178e <__ieee754_rem_pio2f+0x5e>
 8021770:	ed9f 7a83 	vldr	s14, [pc, #524]	; 8021980 <__ieee754_rem_pio2f+0x250>
 8021774:	ee37 0ac7 	vsub.f32	s0, s15, s14
 8021778:	ee77 7ac0 	vsub.f32	s15, s15, s0
 802177c:	ed80 0a00 	vstr	s0, [r0]
 8021780:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021784:	2001      	movs	r0, #1
 8021786:	edc4 7a01 	vstr	s15, [r4, #4]
 802178a:	b007      	add	sp, #28
 802178c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802178e:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 8021984 <__ieee754_rem_pio2f+0x254>
 8021792:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 8021988 <__ieee754_rem_pio2f+0x258>
 8021796:	ee77 7ac0 	vsub.f32	s15, s15, s0
 802179a:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802179e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80217a2:	edc0 6a00 	vstr	s13, [r0]
 80217a6:	e7eb      	b.n	8021780 <__ieee754_rem_pio2f+0x50>
 80217a8:	429d      	cmp	r5, r3
 80217aa:	ee77 7a80 	vadd.f32	s15, s15, s0
 80217ae:	d00e      	beq.n	80217ce <__ieee754_rem_pio2f+0x9e>
 80217b0:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8021980 <__ieee754_rem_pio2f+0x250>
 80217b4:	ee37 0a87 	vadd.f32	s0, s15, s14
 80217b8:	ee77 7ac0 	vsub.f32	s15, s15, s0
 80217bc:	ed80 0a00 	vstr	s0, [r0]
 80217c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80217c4:	f04f 30ff 	mov.w	r0, #4294967295
 80217c8:	edc4 7a01 	vstr	s15, [r4, #4]
 80217cc:	e7dd      	b.n	802178a <__ieee754_rem_pio2f+0x5a>
 80217ce:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 8021984 <__ieee754_rem_pio2f+0x254>
 80217d2:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 8021988 <__ieee754_rem_pio2f+0x258>
 80217d6:	ee77 7a80 	vadd.f32	s15, s15, s0
 80217da:	ee77 6a87 	vadd.f32	s13, s15, s14
 80217de:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80217e2:	edc0 6a00 	vstr	s13, [r0]
 80217e6:	e7eb      	b.n	80217c0 <__ieee754_rem_pio2f+0x90>
 80217e8:	4b68      	ldr	r3, [pc, #416]	; (802198c <__ieee754_rem_pio2f+0x25c>)
 80217ea:	429d      	cmp	r5, r3
 80217ec:	dc72      	bgt.n	80218d4 <__ieee754_rem_pio2f+0x1a4>
 80217ee:	f000 fc0d 	bl	802200c <fabsf>
 80217f2:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8021990 <__ieee754_rem_pio2f+0x260>
 80217f6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80217fa:	eee0 7a07 	vfma.f32	s15, s0, s14
 80217fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021802:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8021806:	ee17 0a90 	vmov	r0, s15
 802180a:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8021978 <__ieee754_rem_pio2f+0x248>
 802180e:	eea7 0a67 	vfms.f32	s0, s14, s15
 8021812:	281f      	cmp	r0, #31
 8021814:	eddf 7a5a 	vldr	s15, [pc, #360]	; 8021980 <__ieee754_rem_pio2f+0x250>
 8021818:	ee67 7a27 	vmul.f32	s15, s14, s15
 802181c:	eeb1 6a47 	vneg.f32	s12, s14
 8021820:	ee70 6a67 	vsub.f32	s13, s0, s15
 8021824:	ee16 2a90 	vmov	r2, s13
 8021828:	dc1c      	bgt.n	8021864 <__ieee754_rem_pio2f+0x134>
 802182a:	495a      	ldr	r1, [pc, #360]	; (8021994 <__ieee754_rem_pio2f+0x264>)
 802182c:	1e47      	subs	r7, r0, #1
 802182e:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8021832:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8021836:	428b      	cmp	r3, r1
 8021838:	d014      	beq.n	8021864 <__ieee754_rem_pio2f+0x134>
 802183a:	6022      	str	r2, [r4, #0]
 802183c:	ed94 7a00 	vldr	s14, [r4]
 8021840:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021844:	2e00      	cmp	r6, #0
 8021846:	ee30 0a67 	vsub.f32	s0, s0, s15
 802184a:	ed84 0a01 	vstr	s0, [r4, #4]
 802184e:	da9c      	bge.n	802178a <__ieee754_rem_pio2f+0x5a>
 8021850:	eeb1 7a47 	vneg.f32	s14, s14
 8021854:	eeb1 0a40 	vneg.f32	s0, s0
 8021858:	ed84 7a00 	vstr	s14, [r4]
 802185c:	ed84 0a01 	vstr	s0, [r4, #4]
 8021860:	4240      	negs	r0, r0
 8021862:	e792      	b.n	802178a <__ieee754_rem_pio2f+0x5a>
 8021864:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8021868:	15eb      	asrs	r3, r5, #23
 802186a:	ebc1 55d5 	rsb	r5, r1, r5, lsr #23
 802186e:	2d08      	cmp	r5, #8
 8021870:	dde3      	ble.n	802183a <__ieee754_rem_pio2f+0x10a>
 8021872:	eddf 7a44 	vldr	s15, [pc, #272]	; 8021984 <__ieee754_rem_pio2f+0x254>
 8021876:	eef0 6a40 	vmov.f32	s13, s0
 802187a:	eee6 6a27 	vfma.f32	s13, s12, s15
 802187e:	ee30 0a66 	vsub.f32	s0, s0, s13
 8021882:	eea6 0a27 	vfma.f32	s0, s12, s15
 8021886:	eddf 7a40 	vldr	s15, [pc, #256]	; 8021988 <__ieee754_rem_pio2f+0x258>
 802188a:	ee97 0a27 	vfnms.f32	s0, s14, s15
 802188e:	ee76 5ac0 	vsub.f32	s11, s13, s0
 8021892:	eef0 7a40 	vmov.f32	s15, s0
 8021896:	ee15 2a90 	vmov	r2, s11
 802189a:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802189e:	1a5b      	subs	r3, r3, r1
 80218a0:	2b19      	cmp	r3, #25
 80218a2:	dc04      	bgt.n	80218ae <__ieee754_rem_pio2f+0x17e>
 80218a4:	edc4 5a00 	vstr	s11, [r4]
 80218a8:	eeb0 0a66 	vmov.f32	s0, s13
 80218ac:	e7c6      	b.n	802183c <__ieee754_rem_pio2f+0x10c>
 80218ae:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8021998 <__ieee754_rem_pio2f+0x268>
 80218b2:	eeb0 0a66 	vmov.f32	s0, s13
 80218b6:	eea6 0a25 	vfma.f32	s0, s12, s11
 80218ba:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80218be:	eddf 6a37 	vldr	s13, [pc, #220]	; 802199c <__ieee754_rem_pio2f+0x26c>
 80218c2:	eee6 7a25 	vfma.f32	s15, s12, s11
 80218c6:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80218ca:	ee30 7a67 	vsub.f32	s14, s0, s15
 80218ce:	ed84 7a00 	vstr	s14, [r4]
 80218d2:	e7b3      	b.n	802183c <__ieee754_rem_pio2f+0x10c>
 80218d4:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 80218d8:	db06      	blt.n	80218e8 <__ieee754_rem_pio2f+0x1b8>
 80218da:	ee70 7a40 	vsub.f32	s15, s0, s0
 80218de:	edc0 7a01 	vstr	s15, [r0, #4]
 80218e2:	edc0 7a00 	vstr	s15, [r0]
 80218e6:	e733      	b.n	8021750 <__ieee754_rem_pio2f+0x20>
 80218e8:	15ea      	asrs	r2, r5, #23
 80218ea:	3a86      	subs	r2, #134	; 0x86
 80218ec:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80218f0:	ee07 3a90 	vmov	s15, r3
 80218f4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80218f8:	eddf 6a29 	vldr	s13, [pc, #164]	; 80219a0 <__ieee754_rem_pio2f+0x270>
 80218fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021900:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021904:	ed8d 7a03 	vstr	s14, [sp, #12]
 8021908:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802190c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8021910:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021914:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021918:	ed8d 7a04 	vstr	s14, [sp, #16]
 802191c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8021920:	eef5 7a40 	vcmp.f32	s15, #0.0
 8021924:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021928:	edcd 7a05 	vstr	s15, [sp, #20]
 802192c:	d11e      	bne.n	802196c <__ieee754_rem_pio2f+0x23c>
 802192e:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8021932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021936:	bf14      	ite	ne
 8021938:	2302      	movne	r3, #2
 802193a:	2301      	moveq	r3, #1
 802193c:	4919      	ldr	r1, [pc, #100]	; (80219a4 <__ieee754_rem_pio2f+0x274>)
 802193e:	9101      	str	r1, [sp, #4]
 8021940:	2102      	movs	r1, #2
 8021942:	9100      	str	r1, [sp, #0]
 8021944:	a803      	add	r0, sp, #12
 8021946:	4621      	mov	r1, r4
 8021948:	f000 f88e 	bl	8021a68 <__kernel_rem_pio2f>
 802194c:	2e00      	cmp	r6, #0
 802194e:	f6bf af1c 	bge.w	802178a <__ieee754_rem_pio2f+0x5a>
 8021952:	edd4 7a00 	vldr	s15, [r4]
 8021956:	eef1 7a67 	vneg.f32	s15, s15
 802195a:	edc4 7a00 	vstr	s15, [r4]
 802195e:	edd4 7a01 	vldr	s15, [r4, #4]
 8021962:	eef1 7a67 	vneg.f32	s15, s15
 8021966:	edc4 7a01 	vstr	s15, [r4, #4]
 802196a:	e779      	b.n	8021860 <__ieee754_rem_pio2f+0x130>
 802196c:	2303      	movs	r3, #3
 802196e:	e7e5      	b.n	802193c <__ieee754_rem_pio2f+0x20c>
 8021970:	3f490fd8 	.word	0x3f490fd8
 8021974:	4016cbe3 	.word	0x4016cbe3
 8021978:	3fc90f80 	.word	0x3fc90f80
 802197c:	3fc90fd0 	.word	0x3fc90fd0
 8021980:	37354443 	.word	0x37354443
 8021984:	37354400 	.word	0x37354400
 8021988:	2e85a308 	.word	0x2e85a308
 802198c:	43490f80 	.word	0x43490f80
 8021990:	3f22f984 	.word	0x3f22f984
 8021994:	080276b8 	.word	0x080276b8
 8021998:	2e85a300 	.word	0x2e85a300
 802199c:	248d3132 	.word	0x248d3132
 80219a0:	43800000 	.word	0x43800000
 80219a4:	08027738 	.word	0x08027738

080219a8 <__kernel_cosf>:
 80219a8:	ee10 3a10 	vmov	r3, s0
 80219ac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80219b0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80219b4:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 80219b8:	da05      	bge.n	80219c6 <__kernel_cosf+0x1e>
 80219ba:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80219be:	ee17 2a90 	vmov	r2, s15
 80219c2:	2a00      	cmp	r2, #0
 80219c4:	d03d      	beq.n	8021a42 <__kernel_cosf+0x9a>
 80219c6:	ee60 5a00 	vmul.f32	s11, s0, s0
 80219ca:	eddf 7a1f 	vldr	s15, [pc, #124]	; 8021a48 <__kernel_cosf+0xa0>
 80219ce:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 8021a4c <__kernel_cosf+0xa4>
 80219d2:	eddf 6a1f 	vldr	s13, [pc, #124]	; 8021a50 <__kernel_cosf+0xa8>
 80219d6:	4a1f      	ldr	r2, [pc, #124]	; (8021a54 <__kernel_cosf+0xac>)
 80219d8:	eea5 7aa7 	vfma.f32	s14, s11, s15
 80219dc:	4293      	cmp	r3, r2
 80219de:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8021a58 <__kernel_cosf+0xb0>
 80219e2:	eee7 7a25 	vfma.f32	s15, s14, s11
 80219e6:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8021a5c <__kernel_cosf+0xb4>
 80219ea:	eea7 7aa5 	vfma.f32	s14, s15, s11
 80219ee:	eddf 7a1c 	vldr	s15, [pc, #112]	; 8021a60 <__kernel_cosf+0xb8>
 80219f2:	eee7 7a25 	vfma.f32	s15, s14, s11
 80219f6:	eeb0 7a66 	vmov.f32	s14, s13
 80219fa:	eea7 7aa5 	vfma.f32	s14, s15, s11
 80219fe:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8021a02:	ee65 7aa6 	vmul.f32	s15, s11, s13
 8021a06:	ee67 6a25 	vmul.f32	s13, s14, s11
 8021a0a:	ee20 7ac0 	vnmul.f32	s14, s1, s0
 8021a0e:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8021a12:	dc04      	bgt.n	8021a1e <__kernel_cosf+0x76>
 8021a14:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8021a18:	ee36 0a47 	vsub.f32	s0, s12, s14
 8021a1c:	4770      	bx	lr
 8021a1e:	4a11      	ldr	r2, [pc, #68]	; (8021a64 <__kernel_cosf+0xbc>)
 8021a20:	4293      	cmp	r3, r2
 8021a22:	bfda      	itte	le
 8021a24:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8021a28:	ee06 3a90 	vmovle	s13, r3
 8021a2c:	eef5 6a02 	vmovgt.f32	s13, #82	; 0x3e900000  0.2812500
 8021a30:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8021a34:	ee36 0a66 	vsub.f32	s0, s12, s13
 8021a38:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021a3c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8021a40:	4770      	bx	lr
 8021a42:	eeb0 0a46 	vmov.f32	s0, s12
 8021a46:	4770      	bx	lr
 8021a48:	ad47d74e 	.word	0xad47d74e
 8021a4c:	310f74f6 	.word	0x310f74f6
 8021a50:	3d2aaaab 	.word	0x3d2aaaab
 8021a54:	3e999999 	.word	0x3e999999
 8021a58:	b493f27c 	.word	0xb493f27c
 8021a5c:	37d00d01 	.word	0x37d00d01
 8021a60:	bab60b61 	.word	0xbab60b61
 8021a64:	3f480000 	.word	0x3f480000

08021a68 <__kernel_rem_pio2f>:
 8021a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a6c:	ed2d 8b04 	vpush	{d8-d9}
 8021a70:	b0d7      	sub	sp, #348	; 0x15c
 8021a72:	4616      	mov	r6, r2
 8021a74:	4698      	mov	r8, r3
 8021a76:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8021a78:	4bbb      	ldr	r3, [pc, #748]	; (8021d68 <__kernel_rem_pio2f+0x300>)
 8021a7a:	9001      	str	r0, [sp, #4]
 8021a7c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8021a80:	1d33      	adds	r3, r6, #4
 8021a82:	460d      	mov	r5, r1
 8021a84:	f108 39ff 	add.w	r9, r8, #4294967295
 8021a88:	db29      	blt.n	8021ade <__kernel_rem_pio2f+0x76>
 8021a8a:	1ef1      	subs	r1, r6, #3
 8021a8c:	bf48      	it	mi
 8021a8e:	1d31      	addmi	r1, r6, #4
 8021a90:	10c9      	asrs	r1, r1, #3
 8021a92:	1c4c      	adds	r4, r1, #1
 8021a94:	00e3      	lsls	r3, r4, #3
 8021a96:	9302      	str	r3, [sp, #8]
 8021a98:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8021a9a:	ed9f 7ab7 	vldr	s14, [pc, #732]	; 8021d78 <__kernel_rem_pio2f+0x310>
 8021a9e:	eba1 0009 	sub.w	r0, r1, r9
 8021aa2:	eb03 0e80 	add.w	lr, r3, r0, lsl #2
 8021aa6:	eba6 04c4 	sub.w	r4, r6, r4, lsl #3
 8021aaa:	eb07 0c09 	add.w	ip, r7, r9
 8021aae:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
 8021ab2:	2300      	movs	r3, #0
 8021ab4:	4563      	cmp	r3, ip
 8021ab6:	dd14      	ble.n	8021ae2 <__kernel_rem_pio2f+0x7a>
 8021ab8:	ab1a      	add	r3, sp, #104	; 0x68
 8021aba:	eb03 0388 	add.w	r3, r3, r8, lsl #2
 8021abe:	46cc      	mov	ip, r9
 8021ac0:	f50d 7a84 	add.w	sl, sp, #264	; 0x108
 8021ac4:	f1c8 0b01 	rsb	fp, r8, #1
 8021ac8:	eb0b 020c 	add.w	r2, fp, ip
 8021acc:	4297      	cmp	r7, r2
 8021ace:	db27      	blt.n	8021b20 <__kernel_rem_pio2f+0xb8>
 8021ad0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8021ad4:	eddf 7aa8 	vldr	s15, [pc, #672]	; 8021d78 <__kernel_rem_pio2f+0x310>
 8021ad8:	4618      	mov	r0, r3
 8021ada:	2200      	movs	r2, #0
 8021adc:	e016      	b.n	8021b0c <__kernel_rem_pio2f+0xa4>
 8021ade:	2100      	movs	r1, #0
 8021ae0:	e7d7      	b.n	8021a92 <__kernel_rem_pio2f+0x2a>
 8021ae2:	42d8      	cmn	r0, r3
 8021ae4:	bf5d      	ittte	pl
 8021ae6:	f85e 2023 	ldrpl.w	r2, [lr, r3, lsl #2]
 8021aea:	ee07 2a90 	vmovpl	s15, r2
 8021aee:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8021af2:	eef0 7a47 	vmovmi.f32	s15, s14
 8021af6:	ecea 7a01 	vstmia	sl!, {s15}
 8021afa:	3301      	adds	r3, #1
 8021afc:	e7da      	b.n	8021ab4 <__kernel_rem_pio2f+0x4c>
 8021afe:	ecfe 6a01 	vldmia	lr!, {s13}
 8021b02:	ed90 7a00 	vldr	s14, [r0]
 8021b06:	eee6 7a87 	vfma.f32	s15, s13, s14
 8021b0a:	3201      	adds	r2, #1
 8021b0c:	454a      	cmp	r2, r9
 8021b0e:	f1a0 0004 	sub.w	r0, r0, #4
 8021b12:	ddf4      	ble.n	8021afe <__kernel_rem_pio2f+0x96>
 8021b14:	ecea 7a01 	vstmia	sl!, {s15}
 8021b18:	3304      	adds	r3, #4
 8021b1a:	f10c 0c01 	add.w	ip, ip, #1
 8021b1e:	e7d3      	b.n	8021ac8 <__kernel_rem_pio2f+0x60>
 8021b20:	ab06      	add	r3, sp, #24
 8021b22:	eb03 0387 	add.w	r3, r3, r7, lsl #2
 8021b26:	9304      	str	r3, [sp, #16]
 8021b28:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8021b2a:	eddf 8a92 	vldr	s17, [pc, #584]	; 8021d74 <__kernel_rem_pio2f+0x30c>
 8021b2e:	ed9f 9a90 	vldr	s18, [pc, #576]	; 8021d70 <__kernel_rem_pio2f+0x308>
 8021b32:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8021b36:	9303      	str	r3, [sp, #12]
 8021b38:	46ba      	mov	sl, r7
 8021b3a:	ab56      	add	r3, sp, #344	; 0x158
 8021b3c:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8021b40:	ed13 0a14 	vldr	s0, [r3, #-80]	; 0xffffffb0
 8021b44:	ab06      	add	r3, sp, #24
 8021b46:	4618      	mov	r0, r3
 8021b48:	4652      	mov	r2, sl
 8021b4a:	2a00      	cmp	r2, #0
 8021b4c:	dc51      	bgt.n	8021bf2 <__kernel_rem_pio2f+0x18a>
 8021b4e:	4620      	mov	r0, r4
 8021b50:	9305      	str	r3, [sp, #20]
 8021b52:	f000 fa63 	bl	802201c <scalbnf>
 8021b56:	eeb0 8a40 	vmov.f32	s16, s0
 8021b5a:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8021b5e:	ee28 0a00 	vmul.f32	s0, s16, s0
 8021b62:	f7ff fd61 	bl	8021628 <floorf>
 8021b66:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8021b6a:	eea0 8a67 	vfms.f32	s16, s0, s15
 8021b6e:	2c00      	cmp	r4, #0
 8021b70:	9b05      	ldr	r3, [sp, #20]
 8021b72:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8021b76:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8021b7a:	edcd 7a00 	vstr	s15, [sp]
 8021b7e:	ee38 8a40 	vsub.f32	s16, s16, s0
 8021b82:	dd4b      	ble.n	8021c1c <__kernel_rem_pio2f+0x1b4>
 8021b84:	f10a 3cff 	add.w	ip, sl, #4294967295
 8021b88:	aa06      	add	r2, sp, #24
 8021b8a:	f1c4 0e08 	rsb	lr, r4, #8
 8021b8e:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8021b92:	ee17 1a90 	vmov	r1, s15
 8021b96:	fa42 f00e 	asr.w	r0, r2, lr
 8021b9a:	4401      	add	r1, r0
 8021b9c:	9100      	str	r1, [sp, #0]
 8021b9e:	fa00 f00e 	lsl.w	r0, r0, lr
 8021ba2:	a906      	add	r1, sp, #24
 8021ba4:	1a12      	subs	r2, r2, r0
 8021ba6:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8021baa:	f1c4 0007 	rsb	r0, r4, #7
 8021bae:	fa42 fb00 	asr.w	fp, r2, r0
 8021bb2:	f1bb 0f00 	cmp.w	fp, #0
 8021bb6:	dd43      	ble.n	8021c40 <__kernel_rem_pio2f+0x1d8>
 8021bb8:	9a00      	ldr	r2, [sp, #0]
 8021bba:	f04f 0e00 	mov.w	lr, #0
 8021bbe:	3201      	adds	r2, #1
 8021bc0:	9200      	str	r2, [sp, #0]
 8021bc2:	4670      	mov	r0, lr
 8021bc4:	45f2      	cmp	sl, lr
 8021bc6:	dc6c      	bgt.n	8021ca2 <__kernel_rem_pio2f+0x23a>
 8021bc8:	2c00      	cmp	r4, #0
 8021bca:	dd04      	ble.n	8021bd6 <__kernel_rem_pio2f+0x16e>
 8021bcc:	2c01      	cmp	r4, #1
 8021bce:	d079      	beq.n	8021cc4 <__kernel_rem_pio2f+0x25c>
 8021bd0:	2c02      	cmp	r4, #2
 8021bd2:	f000 8082 	beq.w	8021cda <__kernel_rem_pio2f+0x272>
 8021bd6:	f1bb 0f02 	cmp.w	fp, #2
 8021bda:	d131      	bne.n	8021c40 <__kernel_rem_pio2f+0x1d8>
 8021bdc:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8021be0:	ee30 8a48 	vsub.f32	s16, s0, s16
 8021be4:	b360      	cbz	r0, 8021c40 <__kernel_rem_pio2f+0x1d8>
 8021be6:	4620      	mov	r0, r4
 8021be8:	f000 fa18 	bl	802201c <scalbnf>
 8021bec:	ee38 8a40 	vsub.f32	s16, s16, s0
 8021bf0:	e026      	b.n	8021c40 <__kernel_rem_pio2f+0x1d8>
 8021bf2:	ee60 7a28 	vmul.f32	s15, s0, s17
 8021bf6:	3a01      	subs	r2, #1
 8021bf8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021bfc:	a942      	add	r1, sp, #264	; 0x108
 8021bfe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021c02:	eb01 0c82 	add.w	ip, r1, r2, lsl #2
 8021c06:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8021c0a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8021c0e:	eca0 0a01 	vstmia	r0!, {s0}
 8021c12:	ed9c 0a00 	vldr	s0, [ip]
 8021c16:	ee37 0a80 	vadd.f32	s0, s15, s0
 8021c1a:	e796      	b.n	8021b4a <__kernel_rem_pio2f+0xe2>
 8021c1c:	d107      	bne.n	8021c2e <__kernel_rem_pio2f+0x1c6>
 8021c1e:	f10a 32ff 	add.w	r2, sl, #4294967295
 8021c22:	a906      	add	r1, sp, #24
 8021c24:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8021c28:	ea4f 2b22 	mov.w	fp, r2, asr #8
 8021c2c:	e7c1      	b.n	8021bb2 <__kernel_rem_pio2f+0x14a>
 8021c2e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8021c32:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8021c36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021c3a:	da2f      	bge.n	8021c9c <__kernel_rem_pio2f+0x234>
 8021c3c:	f04f 0b00 	mov.w	fp, #0
 8021c40:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8021c44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021c48:	f040 8098 	bne.w	8021d7c <__kernel_rem_pio2f+0x314>
 8021c4c:	f10a 33ff 	add.w	r3, sl, #4294967295
 8021c50:	469c      	mov	ip, r3
 8021c52:	2200      	movs	r2, #0
 8021c54:	45bc      	cmp	ip, r7
 8021c56:	da48      	bge.n	8021cea <__kernel_rem_pio2f+0x282>
 8021c58:	2a00      	cmp	r2, #0
 8021c5a:	d05f      	beq.n	8021d1c <__kernel_rem_pio2f+0x2b4>
 8021c5c:	aa06      	add	r2, sp, #24
 8021c5e:	3c08      	subs	r4, #8
 8021c60:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8021c64:	2900      	cmp	r1, #0
 8021c66:	d07d      	beq.n	8021d64 <__kernel_rem_pio2f+0x2fc>
 8021c68:	4620      	mov	r0, r4
 8021c6a:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8021c6e:	9301      	str	r3, [sp, #4]
 8021c70:	f000 f9d4 	bl	802201c <scalbnf>
 8021c74:	9b01      	ldr	r3, [sp, #4]
 8021c76:	ed9f 7a3f 	vldr	s14, [pc, #252]	; 8021d74 <__kernel_rem_pio2f+0x30c>
 8021c7a:	4619      	mov	r1, r3
 8021c7c:	2900      	cmp	r1, #0
 8021c7e:	f280 80af 	bge.w	8021de0 <__kernel_rem_pio2f+0x378>
 8021c82:	4618      	mov	r0, r3
 8021c84:	2400      	movs	r4, #0
 8021c86:	2800      	cmp	r0, #0
 8021c88:	f2c0 80d0 	blt.w	8021e2c <__kernel_rem_pio2f+0x3c4>
 8021c8c:	a942      	add	r1, sp, #264	; 0x108
 8021c8e:	eb01 0680 	add.w	r6, r1, r0, lsl #2
 8021c92:	4a36      	ldr	r2, [pc, #216]	; (8021d6c <__kernel_rem_pio2f+0x304>)
 8021c94:	eddf 7a38 	vldr	s15, [pc, #224]	; 8021d78 <__kernel_rem_pio2f+0x310>
 8021c98:	2100      	movs	r1, #0
 8021c9a:	e0bb      	b.n	8021e14 <__kernel_rem_pio2f+0x3ac>
 8021c9c:	f04f 0b02 	mov.w	fp, #2
 8021ca0:	e78a      	b.n	8021bb8 <__kernel_rem_pio2f+0x150>
 8021ca2:	681a      	ldr	r2, [r3, #0]
 8021ca4:	b948      	cbnz	r0, 8021cba <__kernel_rem_pio2f+0x252>
 8021ca6:	b11a      	cbz	r2, 8021cb0 <__kernel_rem_pio2f+0x248>
 8021ca8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021cac:	601a      	str	r2, [r3, #0]
 8021cae:	2201      	movs	r2, #1
 8021cb0:	f10e 0e01 	add.w	lr, lr, #1
 8021cb4:	3304      	adds	r3, #4
 8021cb6:	4610      	mov	r0, r2
 8021cb8:	e784      	b.n	8021bc4 <__kernel_rem_pio2f+0x15c>
 8021cba:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 8021cbe:	601a      	str	r2, [r3, #0]
 8021cc0:	4602      	mov	r2, r0
 8021cc2:	e7f5      	b.n	8021cb0 <__kernel_rem_pio2f+0x248>
 8021cc4:	f10a 3cff 	add.w	ip, sl, #4294967295
 8021cc8:	ab06      	add	r3, sp, #24
 8021cca:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8021cce:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8021cd2:	aa06      	add	r2, sp, #24
 8021cd4:	f842 302c 	str.w	r3, [r2, ip, lsl #2]
 8021cd8:	e77d      	b.n	8021bd6 <__kernel_rem_pio2f+0x16e>
 8021cda:	f10a 3cff 	add.w	ip, sl, #4294967295
 8021cde:	ab06      	add	r3, sp, #24
 8021ce0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8021ce4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8021ce8:	e7f3      	b.n	8021cd2 <__kernel_rem_pio2f+0x26a>
 8021cea:	a906      	add	r1, sp, #24
 8021cec:	f851 002c 	ldr.w	r0, [r1, ip, lsl #2]
 8021cf0:	f10c 3cff 	add.w	ip, ip, #4294967295
 8021cf4:	4302      	orrs	r2, r0
 8021cf6:	e7ad      	b.n	8021c54 <__kernel_rem_pio2f+0x1ec>
 8021cf8:	3001      	adds	r0, #1
 8021cfa:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8021cfe:	2a00      	cmp	r2, #0
 8021d00:	d0fa      	beq.n	8021cf8 <__kernel_rem_pio2f+0x290>
 8021d02:	a91a      	add	r1, sp, #104	; 0x68
 8021d04:	eb0a 0208 	add.w	r2, sl, r8
 8021d08:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8021d0c:	f10a 0301 	add.w	r3, sl, #1
 8021d10:	eb0a 0100 	add.w	r1, sl, r0
 8021d14:	4299      	cmp	r1, r3
 8021d16:	da04      	bge.n	8021d22 <__kernel_rem_pio2f+0x2ba>
 8021d18:	468a      	mov	sl, r1
 8021d1a:	e70e      	b.n	8021b3a <__kernel_rem_pio2f+0xd2>
 8021d1c:	9b04      	ldr	r3, [sp, #16]
 8021d1e:	2001      	movs	r0, #1
 8021d20:	e7eb      	b.n	8021cfa <__kernel_rem_pio2f+0x292>
 8021d22:	9803      	ldr	r0, [sp, #12]
 8021d24:	f8dd c004 	ldr.w	ip, [sp, #4]
 8021d28:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8021d2c:	9000      	str	r0, [sp, #0]
 8021d2e:	ee07 0a90 	vmov	s15, r0
 8021d32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021d36:	2000      	movs	r0, #0
 8021d38:	ece2 7a01 	vstmia	r2!, {s15}
 8021d3c:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8021d78 <__kernel_rem_pio2f+0x310>
 8021d40:	4696      	mov	lr, r2
 8021d42:	4548      	cmp	r0, r9
 8021d44:	dd06      	ble.n	8021d54 <__kernel_rem_pio2f+0x2ec>
 8021d46:	a842      	add	r0, sp, #264	; 0x108
 8021d48:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8021d4c:	edc0 7a00 	vstr	s15, [r0]
 8021d50:	3301      	adds	r3, #1
 8021d52:	e7df      	b.n	8021d14 <__kernel_rem_pio2f+0x2ac>
 8021d54:	ecfc 6a01 	vldmia	ip!, {s13}
 8021d58:	ed3e 7a01 	vldmdb	lr!, {s14}
 8021d5c:	3001      	adds	r0, #1
 8021d5e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8021d62:	e7ee      	b.n	8021d42 <__kernel_rem_pio2f+0x2da>
 8021d64:	3b01      	subs	r3, #1
 8021d66:	e779      	b.n	8021c5c <__kernel_rem_pio2f+0x1f4>
 8021d68:	08027a7c 	.word	0x08027a7c
 8021d6c:	08027a50 	.word	0x08027a50
 8021d70:	43800000 	.word	0x43800000
 8021d74:	3b800000 	.word	0x3b800000
 8021d78:	00000000 	.word	0x00000000
 8021d7c:	9b02      	ldr	r3, [sp, #8]
 8021d7e:	eeb0 0a48 	vmov.f32	s0, s16
 8021d82:	1b98      	subs	r0, r3, r6
 8021d84:	f000 f94a 	bl	802201c <scalbnf>
 8021d88:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8021d70 <__kernel_rem_pio2f+0x308>
 8021d8c:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8021d90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021d94:	db1b      	blt.n	8021dce <__kernel_rem_pio2f+0x366>
 8021d96:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8021d74 <__kernel_rem_pio2f+0x30c>
 8021d9a:	ee60 7a27 	vmul.f32	s15, s0, s15
 8021d9e:	aa06      	add	r2, sp, #24
 8021da0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021da4:	a906      	add	r1, sp, #24
 8021da6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021daa:	3408      	adds	r4, #8
 8021dac:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8021db0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021db4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8021db8:	ee10 3a10 	vmov	r3, s0
 8021dbc:	f842 302a 	str.w	r3, [r2, sl, lsl #2]
 8021dc0:	ee17 2a90 	vmov	r2, s15
 8021dc4:	f10a 0301 	add.w	r3, sl, #1
 8021dc8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8021dcc:	e74c      	b.n	8021c68 <__kernel_rem_pio2f+0x200>
 8021dce:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8021dd2:	aa06      	add	r2, sp, #24
 8021dd4:	ee10 3a10 	vmov	r3, s0
 8021dd8:	f842 302a 	str.w	r3, [r2, sl, lsl #2]
 8021ddc:	4653      	mov	r3, sl
 8021dde:	e743      	b.n	8021c68 <__kernel_rem_pio2f+0x200>
 8021de0:	aa42      	add	r2, sp, #264	; 0x108
 8021de2:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 8021de6:	aa06      	add	r2, sp, #24
 8021de8:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8021dec:	9201      	str	r2, [sp, #4]
 8021dee:	ee07 2a90 	vmov	s15, r2
 8021df2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021df6:	3901      	subs	r1, #1
 8021df8:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021dfc:	ee20 0a07 	vmul.f32	s0, s0, s14
 8021e00:	edc0 7a00 	vstr	s15, [r0]
 8021e04:	e73a      	b.n	8021c7c <__kernel_rem_pio2f+0x214>
 8021e06:	ecf2 6a01 	vldmia	r2!, {s13}
 8021e0a:	ecb6 7a01 	vldmia	r6!, {s14}
 8021e0e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8021e12:	3101      	adds	r1, #1
 8021e14:	42b9      	cmp	r1, r7
 8021e16:	dc01      	bgt.n	8021e1c <__kernel_rem_pio2f+0x3b4>
 8021e18:	428c      	cmp	r4, r1
 8021e1a:	daf4      	bge.n	8021e06 <__kernel_rem_pio2f+0x39e>
 8021e1c:	aa56      	add	r2, sp, #344	; 0x158
 8021e1e:	eb02 0184 	add.w	r1, r2, r4, lsl #2
 8021e22:	ed41 7a28 	vstr	s15, [r1, #-160]	; 0xffffff60
 8021e26:	3801      	subs	r0, #1
 8021e28:	3401      	adds	r4, #1
 8021e2a:	e72c      	b.n	8021c86 <__kernel_rem_pio2f+0x21e>
 8021e2c:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8021e2e:	2a02      	cmp	r2, #2
 8021e30:	dc0a      	bgt.n	8021e48 <__kernel_rem_pio2f+0x3e0>
 8021e32:	2a00      	cmp	r2, #0
 8021e34:	dc61      	bgt.n	8021efa <__kernel_rem_pio2f+0x492>
 8021e36:	d03c      	beq.n	8021eb2 <__kernel_rem_pio2f+0x44a>
 8021e38:	9b00      	ldr	r3, [sp, #0]
 8021e3a:	f003 0007 	and.w	r0, r3, #7
 8021e3e:	b057      	add	sp, #348	; 0x15c
 8021e40:	ecbd 8b04 	vpop	{d8-d9}
 8021e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021e48:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8021e4a:	2a03      	cmp	r2, #3
 8021e4c:	d1f4      	bne.n	8021e38 <__kernel_rem_pio2f+0x3d0>
 8021e4e:	aa2e      	add	r2, sp, #184	; 0xb8
 8021e50:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8021e54:	4608      	mov	r0, r1
 8021e56:	461c      	mov	r4, r3
 8021e58:	2c00      	cmp	r4, #0
 8021e5a:	f1a0 0004 	sub.w	r0, r0, #4
 8021e5e:	dc59      	bgt.n	8021f14 <__kernel_rem_pio2f+0x4ac>
 8021e60:	4618      	mov	r0, r3
 8021e62:	2801      	cmp	r0, #1
 8021e64:	f1a1 0104 	sub.w	r1, r1, #4
 8021e68:	dc64      	bgt.n	8021f34 <__kernel_rem_pio2f+0x4cc>
 8021e6a:	ed5f 7a3d 	vldr	s15, [pc, #-244]	; 8021d78 <__kernel_rem_pio2f+0x310>
 8021e6e:	2b01      	cmp	r3, #1
 8021e70:	dc70      	bgt.n	8021f54 <__kernel_rem_pio2f+0x4ec>
 8021e72:	eddd 6a2e 	vldr	s13, [sp, #184]	; 0xb8
 8021e76:	ed9d 7a2f 	vldr	s14, [sp, #188]	; 0xbc
 8021e7a:	f1bb 0f00 	cmp.w	fp, #0
 8021e7e:	d172      	bne.n	8021f66 <__kernel_rem_pio2f+0x4fe>
 8021e80:	edc5 6a00 	vstr	s13, [r5]
 8021e84:	ed85 7a01 	vstr	s14, [r5, #4]
 8021e88:	edc5 7a02 	vstr	s15, [r5, #8]
 8021e8c:	e7d4      	b.n	8021e38 <__kernel_rem_pio2f+0x3d0>
 8021e8e:	aa2e      	add	r2, sp, #184	; 0xb8
 8021e90:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8021e94:	ed91 7a00 	vldr	s14, [r1]
 8021e98:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021e9c:	3b01      	subs	r3, #1
 8021e9e:	2b00      	cmp	r3, #0
 8021ea0:	daf5      	bge.n	8021e8e <__kernel_rem_pio2f+0x426>
 8021ea2:	f1bb 0f00 	cmp.w	fp, #0
 8021ea6:	d001      	beq.n	8021eac <__kernel_rem_pio2f+0x444>
 8021ea8:	eef1 7a67 	vneg.f32	s15, s15
 8021eac:	edc5 7a00 	vstr	s15, [r5]
 8021eb0:	e7c2      	b.n	8021e38 <__kernel_rem_pio2f+0x3d0>
 8021eb2:	ed5f 7a4f 	vldr	s15, [pc, #-316]	; 8021d78 <__kernel_rem_pio2f+0x310>
 8021eb6:	e7f2      	b.n	8021e9e <__kernel_rem_pio2f+0x436>
 8021eb8:	aa2e      	add	r2, sp, #184	; 0xb8
 8021eba:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 8021ebe:	edd0 7a00 	vldr	s15, [r0]
 8021ec2:	ee37 7a27 	vadd.f32	s14, s14, s15
 8021ec6:	3901      	subs	r1, #1
 8021ec8:	2900      	cmp	r1, #0
 8021eca:	daf5      	bge.n	8021eb8 <__kernel_rem_pio2f+0x450>
 8021ecc:	f1bb 0f00 	cmp.w	fp, #0
 8021ed0:	d017      	beq.n	8021f02 <__kernel_rem_pio2f+0x49a>
 8021ed2:	eef1 7a47 	vneg.f32	s15, s14
 8021ed6:	edc5 7a00 	vstr	s15, [r5]
 8021eda:	eddd 7a2e 	vldr	s15, [sp, #184]	; 0xb8
 8021ede:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021ee2:	a82f      	add	r0, sp, #188	; 0xbc
 8021ee4:	2101      	movs	r1, #1
 8021ee6:	428b      	cmp	r3, r1
 8021ee8:	da0e      	bge.n	8021f08 <__kernel_rem_pio2f+0x4a0>
 8021eea:	f1bb 0f00 	cmp.w	fp, #0
 8021eee:	d001      	beq.n	8021ef4 <__kernel_rem_pio2f+0x48c>
 8021ef0:	eef1 7a67 	vneg.f32	s15, s15
 8021ef4:	edc5 7a01 	vstr	s15, [r5, #4]
 8021ef8:	e79e      	b.n	8021e38 <__kernel_rem_pio2f+0x3d0>
 8021efa:	ed1f 7a61 	vldr	s14, [pc, #-388]	; 8021d78 <__kernel_rem_pio2f+0x310>
 8021efe:	4619      	mov	r1, r3
 8021f00:	e7e2      	b.n	8021ec8 <__kernel_rem_pio2f+0x460>
 8021f02:	eef0 7a47 	vmov.f32	s15, s14
 8021f06:	e7e6      	b.n	8021ed6 <__kernel_rem_pio2f+0x46e>
 8021f08:	ecb0 7a01 	vldmia	r0!, {s14}
 8021f0c:	3101      	adds	r1, #1
 8021f0e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021f12:	e7e8      	b.n	8021ee6 <__kernel_rem_pio2f+0x47e>
 8021f14:	edd0 7a00 	vldr	s15, [r0]
 8021f18:	edd0 6a01 	vldr	s13, [r0, #4]
 8021f1c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8021f20:	3c01      	subs	r4, #1
 8021f22:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021f26:	ed80 7a00 	vstr	s14, [r0]
 8021f2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8021f2e:	edc0 7a01 	vstr	s15, [r0, #4]
 8021f32:	e791      	b.n	8021e58 <__kernel_rem_pio2f+0x3f0>
 8021f34:	edd1 7a00 	vldr	s15, [r1]
 8021f38:	edd1 6a01 	vldr	s13, [r1, #4]
 8021f3c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8021f40:	3801      	subs	r0, #1
 8021f42:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021f46:	ed81 7a00 	vstr	s14, [r1]
 8021f4a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8021f4e:	edc1 7a01 	vstr	s15, [r1, #4]
 8021f52:	e786      	b.n	8021e62 <__kernel_rem_pio2f+0x3fa>
 8021f54:	aa2e      	add	r2, sp, #184	; 0xb8
 8021f56:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8021f5a:	ed91 7a00 	vldr	s14, [r1]
 8021f5e:	3b01      	subs	r3, #1
 8021f60:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021f64:	e783      	b.n	8021e6e <__kernel_rem_pio2f+0x406>
 8021f66:	eef1 6a66 	vneg.f32	s13, s13
 8021f6a:	eeb1 7a47 	vneg.f32	s14, s14
 8021f6e:	edc5 6a00 	vstr	s13, [r5]
 8021f72:	ed85 7a01 	vstr	s14, [r5, #4]
 8021f76:	eef1 7a67 	vneg.f32	s15, s15
 8021f7a:	e785      	b.n	8021e88 <__kernel_rem_pio2f+0x420>

08021f7c <__kernel_sinf>:
 8021f7c:	ee10 3a10 	vmov	r3, s0
 8021f80:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8021f84:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8021f88:	da04      	bge.n	8021f94 <__kernel_sinf+0x18>
 8021f8a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8021f8e:	ee17 3a90 	vmov	r3, s15
 8021f92:	b35b      	cbz	r3, 8021fec <__kernel_sinf+0x70>
 8021f94:	ee20 7a00 	vmul.f32	s14, s0, s0
 8021f98:	eddf 7a15 	vldr	s15, [pc, #84]	; 8021ff0 <__kernel_sinf+0x74>
 8021f9c:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8021ff4 <__kernel_sinf+0x78>
 8021fa0:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021fa4:	eddf 7a14 	vldr	s15, [pc, #80]	; 8021ff8 <__kernel_sinf+0x7c>
 8021fa8:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021fac:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8021ffc <__kernel_sinf+0x80>
 8021fb0:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021fb4:	eddf 7a12 	vldr	s15, [pc, #72]	; 8022000 <__kernel_sinf+0x84>
 8021fb8:	ee60 6a07 	vmul.f32	s13, s0, s14
 8021fbc:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021fc0:	b930      	cbnz	r0, 8021fd0 <__kernel_sinf+0x54>
 8021fc2:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8022004 <__kernel_sinf+0x88>
 8021fc6:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021fca:	eea6 0a26 	vfma.f32	s0, s12, s13
 8021fce:	4770      	bx	lr
 8021fd0:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8021fd4:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8021fd8:	eee0 7a86 	vfma.f32	s15, s1, s12
 8021fdc:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8021fe0:	eddf 7a09 	vldr	s15, [pc, #36]	; 8022008 <__kernel_sinf+0x8c>
 8021fe4:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8021fe8:	ee30 0a60 	vsub.f32	s0, s0, s1
 8021fec:	4770      	bx	lr
 8021fee:	bf00      	nop
 8021ff0:	2f2ec9d3 	.word	0x2f2ec9d3
 8021ff4:	b2d72f34 	.word	0xb2d72f34
 8021ff8:	3638ef1b 	.word	0x3638ef1b
 8021ffc:	b9500d01 	.word	0xb9500d01
 8022000:	3c088889 	.word	0x3c088889
 8022004:	be2aaaab 	.word	0xbe2aaaab
 8022008:	3e2aaaab 	.word	0x3e2aaaab

0802200c <fabsf>:
 802200c:	ee10 3a10 	vmov	r3, s0
 8022010:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8022014:	ee00 3a10 	vmov	s0, r3
 8022018:	4770      	bx	lr
	...

0802201c <scalbnf>:
 802201c:	ee10 3a10 	vmov	r3, s0
 8022020:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8022024:	d025      	beq.n	8022072 <scalbnf+0x56>
 8022026:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802202a:	d302      	bcc.n	8022032 <scalbnf+0x16>
 802202c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8022030:	4770      	bx	lr
 8022032:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8022036:	d122      	bne.n	802207e <scalbnf+0x62>
 8022038:	4b2a      	ldr	r3, [pc, #168]	; (80220e4 <scalbnf+0xc8>)
 802203a:	eddf 7a2b 	vldr	s15, [pc, #172]	; 80220e8 <scalbnf+0xcc>
 802203e:	4298      	cmp	r0, r3
 8022040:	ee20 0a27 	vmul.f32	s0, s0, s15
 8022044:	db16      	blt.n	8022074 <scalbnf+0x58>
 8022046:	ee10 3a10 	vmov	r3, s0
 802204a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802204e:	3a19      	subs	r2, #25
 8022050:	4402      	add	r2, r0
 8022052:	2afe      	cmp	r2, #254	; 0xfe
 8022054:	dd15      	ble.n	8022082 <scalbnf+0x66>
 8022056:	ee10 3a10 	vmov	r3, s0
 802205a:	eddf 7a24 	vldr	s15, [pc, #144]	; 80220ec <scalbnf+0xd0>
 802205e:	eddf 6a24 	vldr	s13, [pc, #144]	; 80220f0 <scalbnf+0xd4>
 8022062:	2b00      	cmp	r3, #0
 8022064:	eeb0 7a67 	vmov.f32	s14, s15
 8022068:	bfb8      	it	lt
 802206a:	eef0 7a66 	vmovlt.f32	s15, s13
 802206e:	ee27 0a27 	vmul.f32	s0, s14, s15
 8022072:	4770      	bx	lr
 8022074:	eddf 7a1f 	vldr	s15, [pc, #124]	; 80220f4 <scalbnf+0xd8>
 8022078:	ee20 0a27 	vmul.f32	s0, s0, s15
 802207c:	4770      	bx	lr
 802207e:	0dd2      	lsrs	r2, r2, #23
 8022080:	e7e6      	b.n	8022050 <scalbnf+0x34>
 8022082:	2a00      	cmp	r2, #0
 8022084:	dd06      	ble.n	8022094 <scalbnf+0x78>
 8022086:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802208a:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 802208e:	ee00 3a10 	vmov	s0, r3
 8022092:	4770      	bx	lr
 8022094:	f112 0f16 	cmn.w	r2, #22
 8022098:	da1a      	bge.n	80220d0 <scalbnf+0xb4>
 802209a:	f24c 3350 	movw	r3, #50000	; 0xc350
 802209e:	4298      	cmp	r0, r3
 80220a0:	ee10 3a10 	vmov	r3, s0
 80220a4:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80220a8:	dd0a      	ble.n	80220c0 <scalbnf+0xa4>
 80220aa:	ed9f 0a10 	vldr	s0, [pc, #64]	; 80220ec <scalbnf+0xd0>
 80220ae:	ed9f 7a10 	vldr	s14, [pc, #64]	; 80220f0 <scalbnf+0xd4>
 80220b2:	eef0 7a40 	vmov.f32	s15, s0
 80220b6:	2b00      	cmp	r3, #0
 80220b8:	bf18      	it	ne
 80220ba:	eeb0 0a47 	vmovne.f32	s0, s14
 80220be:	e7db      	b.n	8022078 <scalbnf+0x5c>
 80220c0:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 80220f4 <scalbnf+0xd8>
 80220c4:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 80220f8 <scalbnf+0xdc>
 80220c8:	eef0 7a40 	vmov.f32	s15, s0
 80220cc:	2b00      	cmp	r3, #0
 80220ce:	e7f3      	b.n	80220b8 <scalbnf+0x9c>
 80220d0:	3219      	adds	r2, #25
 80220d2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80220d6:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 80220da:	eddf 7a08 	vldr	s15, [pc, #32]	; 80220fc <scalbnf+0xe0>
 80220de:	ee07 3a10 	vmov	s14, r3
 80220e2:	e7c4      	b.n	802206e <scalbnf+0x52>
 80220e4:	ffff3cb0 	.word	0xffff3cb0
 80220e8:	4c000000 	.word	0x4c000000
 80220ec:	7149f2ca 	.word	0x7149f2ca
 80220f0:	f149f2ca 	.word	0xf149f2ca
 80220f4:	0da24260 	.word	0x0da24260
 80220f8:	8da24260 	.word	0x8da24260
 80220fc:	33000000 	.word	0x33000000

08022100 <abort>:
 8022100:	b508      	push	{r3, lr}
 8022102:	2006      	movs	r0, #6
 8022104:	f000 fc68 	bl	80229d8 <raise>
 8022108:	2001      	movs	r0, #1
 802210a:	f7e0 f827 	bl	800215c <_exit>
	...

08022110 <__assert_func>:
 8022110:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022112:	4614      	mov	r4, r2
 8022114:	461a      	mov	r2, r3
 8022116:	4b09      	ldr	r3, [pc, #36]	; (802213c <__assert_func+0x2c>)
 8022118:	681b      	ldr	r3, [r3, #0]
 802211a:	4605      	mov	r5, r0
 802211c:	68d8      	ldr	r0, [r3, #12]
 802211e:	b14c      	cbz	r4, 8022134 <__assert_func+0x24>
 8022120:	4b07      	ldr	r3, [pc, #28]	; (8022140 <__assert_func+0x30>)
 8022122:	9100      	str	r1, [sp, #0]
 8022124:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8022128:	4906      	ldr	r1, [pc, #24]	; (8022144 <__assert_func+0x34>)
 802212a:	462b      	mov	r3, r5
 802212c:	f000 f828 	bl	8022180 <fiprintf>
 8022130:	f7ff ffe6 	bl	8022100 <abort>
 8022134:	4b04      	ldr	r3, [pc, #16]	; (8022148 <__assert_func+0x38>)
 8022136:	461c      	mov	r4, r3
 8022138:	e7f3      	b.n	8022122 <__assert_func+0x12>
 802213a:	bf00      	nop
 802213c:	200000d8 	.word	0x200000d8
 8022140:	08027a88 	.word	0x08027a88
 8022144:	08027a95 	.word	0x08027a95
 8022148:	08027ac3 	.word	0x08027ac3

0802214c <atexit>:
 802214c:	2300      	movs	r3, #0
 802214e:	4601      	mov	r1, r0
 8022150:	461a      	mov	r2, r3
 8022152:	4618      	mov	r0, r3
 8022154:	f000 bd1c 	b.w	8022b90 <__register_exitproc>

08022158 <__cxa_atexit>:
 8022158:	b510      	push	{r4, lr}
 802215a:	4c05      	ldr	r4, [pc, #20]	; (8022170 <__cxa_atexit+0x18>)
 802215c:	4613      	mov	r3, r2
 802215e:	b12c      	cbz	r4, 802216c <__cxa_atexit+0x14>
 8022160:	460a      	mov	r2, r1
 8022162:	4601      	mov	r1, r0
 8022164:	2002      	movs	r0, #2
 8022166:	f000 fd13 	bl	8022b90 <__register_exitproc>
 802216a:	bd10      	pop	{r4, pc}
 802216c:	4620      	mov	r0, r4
 802216e:	e7fc      	b.n	802216a <__cxa_atexit+0x12>
 8022170:	08022b91 	.word	0x08022b91

08022174 <__errno>:
 8022174:	4b01      	ldr	r3, [pc, #4]	; (802217c <__errno+0x8>)
 8022176:	6818      	ldr	r0, [r3, #0]
 8022178:	4770      	bx	lr
 802217a:	bf00      	nop
 802217c:	200000d8 	.word	0x200000d8

08022180 <fiprintf>:
 8022180:	b40e      	push	{r1, r2, r3}
 8022182:	b503      	push	{r0, r1, lr}
 8022184:	4601      	mov	r1, r0
 8022186:	ab03      	add	r3, sp, #12
 8022188:	4805      	ldr	r0, [pc, #20]	; (80221a0 <fiprintf+0x20>)
 802218a:	f853 2b04 	ldr.w	r2, [r3], #4
 802218e:	6800      	ldr	r0, [r0, #0]
 8022190:	9301      	str	r3, [sp, #4]
 8022192:	f000 f925 	bl	80223e0 <_vfiprintf_r>
 8022196:	b002      	add	sp, #8
 8022198:	f85d eb04 	ldr.w	lr, [sp], #4
 802219c:	b003      	add	sp, #12
 802219e:	4770      	bx	lr
 80221a0:	200000d8 	.word	0x200000d8

080221a4 <__libc_init_array>:
 80221a4:	b570      	push	{r4, r5, r6, lr}
 80221a6:	4d0d      	ldr	r5, [pc, #52]	; (80221dc <__libc_init_array+0x38>)
 80221a8:	4c0d      	ldr	r4, [pc, #52]	; (80221e0 <__libc_init_array+0x3c>)
 80221aa:	1b64      	subs	r4, r4, r5
 80221ac:	10a4      	asrs	r4, r4, #2
 80221ae:	2600      	movs	r6, #0
 80221b0:	42a6      	cmp	r6, r4
 80221b2:	d109      	bne.n	80221c8 <__libc_init_array+0x24>
 80221b4:	4d0b      	ldr	r5, [pc, #44]	; (80221e4 <__libc_init_array+0x40>)
 80221b6:	4c0c      	ldr	r4, [pc, #48]	; (80221e8 <__libc_init_array+0x44>)
 80221b8:	f001 f824 	bl	8023204 <_init>
 80221bc:	1b64      	subs	r4, r4, r5
 80221be:	10a4      	asrs	r4, r4, #2
 80221c0:	2600      	movs	r6, #0
 80221c2:	42a6      	cmp	r6, r4
 80221c4:	d105      	bne.n	80221d2 <__libc_init_array+0x2e>
 80221c6:	bd70      	pop	{r4, r5, r6, pc}
 80221c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80221cc:	4798      	blx	r3
 80221ce:	3601      	adds	r6, #1
 80221d0:	e7ee      	b.n	80221b0 <__libc_init_array+0xc>
 80221d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80221d6:	4798      	blx	r3
 80221d8:	3601      	adds	r6, #1
 80221da:	e7f2      	b.n	80221c2 <__libc_init_array+0x1e>
 80221dc:	08027bf0 	.word	0x08027bf0
 80221e0:	08027bf0 	.word	0x08027bf0
 80221e4:	08027bf0 	.word	0x08027bf0
 80221e8:	08027c08 	.word	0x08027c08

080221ec <malloc>:
 80221ec:	4b02      	ldr	r3, [pc, #8]	; (80221f8 <malloc+0xc>)
 80221ee:	4601      	mov	r1, r0
 80221f0:	6818      	ldr	r0, [r3, #0]
 80221f2:	f000 b871 	b.w	80222d8 <_malloc_r>
 80221f6:	bf00      	nop
 80221f8:	200000d8 	.word	0x200000d8

080221fc <free>:
 80221fc:	4b02      	ldr	r3, [pc, #8]	; (8022208 <free+0xc>)
 80221fe:	4601      	mov	r1, r0
 8022200:	6818      	ldr	r0, [r3, #0]
 8022202:	f000 b819 	b.w	8022238 <_free_r>
 8022206:	bf00      	nop
 8022208:	200000d8 	.word	0x200000d8

0802220c <memcpy>:
 802220c:	440a      	add	r2, r1
 802220e:	4291      	cmp	r1, r2
 8022210:	f100 33ff 	add.w	r3, r0, #4294967295
 8022214:	d100      	bne.n	8022218 <memcpy+0xc>
 8022216:	4770      	bx	lr
 8022218:	b510      	push	{r4, lr}
 802221a:	f811 4b01 	ldrb.w	r4, [r1], #1
 802221e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8022222:	4291      	cmp	r1, r2
 8022224:	d1f9      	bne.n	802221a <memcpy+0xe>
 8022226:	bd10      	pop	{r4, pc}

08022228 <memset>:
 8022228:	4402      	add	r2, r0
 802222a:	4603      	mov	r3, r0
 802222c:	4293      	cmp	r3, r2
 802222e:	d100      	bne.n	8022232 <memset+0xa>
 8022230:	4770      	bx	lr
 8022232:	f803 1b01 	strb.w	r1, [r3], #1
 8022236:	e7f9      	b.n	802222c <memset+0x4>

08022238 <_free_r>:
 8022238:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802223a:	2900      	cmp	r1, #0
 802223c:	d048      	beq.n	80222d0 <_free_r+0x98>
 802223e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8022242:	9001      	str	r0, [sp, #4]
 8022244:	2b00      	cmp	r3, #0
 8022246:	f1a1 0404 	sub.w	r4, r1, #4
 802224a:	bfb8      	it	lt
 802224c:	18e4      	addlt	r4, r4, r3
 802224e:	f000 ff21 	bl	8023094 <__malloc_lock>
 8022252:	4a20      	ldr	r2, [pc, #128]	; (80222d4 <_free_r+0x9c>)
 8022254:	9801      	ldr	r0, [sp, #4]
 8022256:	6813      	ldr	r3, [r2, #0]
 8022258:	4615      	mov	r5, r2
 802225a:	b933      	cbnz	r3, 802226a <_free_r+0x32>
 802225c:	6063      	str	r3, [r4, #4]
 802225e:	6014      	str	r4, [r2, #0]
 8022260:	b003      	add	sp, #12
 8022262:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8022266:	f000 bf1b 	b.w	80230a0 <__malloc_unlock>
 802226a:	42a3      	cmp	r3, r4
 802226c:	d90b      	bls.n	8022286 <_free_r+0x4e>
 802226e:	6821      	ldr	r1, [r4, #0]
 8022270:	1862      	adds	r2, r4, r1
 8022272:	4293      	cmp	r3, r2
 8022274:	bf04      	itt	eq
 8022276:	681a      	ldreq	r2, [r3, #0]
 8022278:	685b      	ldreq	r3, [r3, #4]
 802227a:	6063      	str	r3, [r4, #4]
 802227c:	bf04      	itt	eq
 802227e:	1852      	addeq	r2, r2, r1
 8022280:	6022      	streq	r2, [r4, #0]
 8022282:	602c      	str	r4, [r5, #0]
 8022284:	e7ec      	b.n	8022260 <_free_r+0x28>
 8022286:	461a      	mov	r2, r3
 8022288:	685b      	ldr	r3, [r3, #4]
 802228a:	b10b      	cbz	r3, 8022290 <_free_r+0x58>
 802228c:	42a3      	cmp	r3, r4
 802228e:	d9fa      	bls.n	8022286 <_free_r+0x4e>
 8022290:	6811      	ldr	r1, [r2, #0]
 8022292:	1855      	adds	r5, r2, r1
 8022294:	42a5      	cmp	r5, r4
 8022296:	d10b      	bne.n	80222b0 <_free_r+0x78>
 8022298:	6824      	ldr	r4, [r4, #0]
 802229a:	4421      	add	r1, r4
 802229c:	1854      	adds	r4, r2, r1
 802229e:	42a3      	cmp	r3, r4
 80222a0:	6011      	str	r1, [r2, #0]
 80222a2:	d1dd      	bne.n	8022260 <_free_r+0x28>
 80222a4:	681c      	ldr	r4, [r3, #0]
 80222a6:	685b      	ldr	r3, [r3, #4]
 80222a8:	6053      	str	r3, [r2, #4]
 80222aa:	4421      	add	r1, r4
 80222ac:	6011      	str	r1, [r2, #0]
 80222ae:	e7d7      	b.n	8022260 <_free_r+0x28>
 80222b0:	d902      	bls.n	80222b8 <_free_r+0x80>
 80222b2:	230c      	movs	r3, #12
 80222b4:	6003      	str	r3, [r0, #0]
 80222b6:	e7d3      	b.n	8022260 <_free_r+0x28>
 80222b8:	6825      	ldr	r5, [r4, #0]
 80222ba:	1961      	adds	r1, r4, r5
 80222bc:	428b      	cmp	r3, r1
 80222be:	bf04      	itt	eq
 80222c0:	6819      	ldreq	r1, [r3, #0]
 80222c2:	685b      	ldreq	r3, [r3, #4]
 80222c4:	6063      	str	r3, [r4, #4]
 80222c6:	bf04      	itt	eq
 80222c8:	1949      	addeq	r1, r1, r5
 80222ca:	6021      	streq	r1, [r4, #0]
 80222cc:	6054      	str	r4, [r2, #4]
 80222ce:	e7c7      	b.n	8022260 <_free_r+0x28>
 80222d0:	b003      	add	sp, #12
 80222d2:	bd30      	pop	{r4, r5, pc}
 80222d4:	2000e4fc 	.word	0x2000e4fc

080222d8 <_malloc_r>:
 80222d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80222da:	1ccd      	adds	r5, r1, #3
 80222dc:	f025 0503 	bic.w	r5, r5, #3
 80222e0:	3508      	adds	r5, #8
 80222e2:	2d0c      	cmp	r5, #12
 80222e4:	bf38      	it	cc
 80222e6:	250c      	movcc	r5, #12
 80222e8:	2d00      	cmp	r5, #0
 80222ea:	4606      	mov	r6, r0
 80222ec:	db01      	blt.n	80222f2 <_malloc_r+0x1a>
 80222ee:	42a9      	cmp	r1, r5
 80222f0:	d903      	bls.n	80222fa <_malloc_r+0x22>
 80222f2:	230c      	movs	r3, #12
 80222f4:	6033      	str	r3, [r6, #0]
 80222f6:	2000      	movs	r0, #0
 80222f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80222fa:	f000 fecb 	bl	8023094 <__malloc_lock>
 80222fe:	4921      	ldr	r1, [pc, #132]	; (8022384 <_malloc_r+0xac>)
 8022300:	680a      	ldr	r2, [r1, #0]
 8022302:	4614      	mov	r4, r2
 8022304:	b99c      	cbnz	r4, 802232e <_malloc_r+0x56>
 8022306:	4f20      	ldr	r7, [pc, #128]	; (8022388 <_malloc_r+0xb0>)
 8022308:	683b      	ldr	r3, [r7, #0]
 802230a:	b923      	cbnz	r3, 8022316 <_malloc_r+0x3e>
 802230c:	4621      	mov	r1, r4
 802230e:	4630      	mov	r0, r6
 8022310:	f000 fb2a 	bl	8022968 <_sbrk_r>
 8022314:	6038      	str	r0, [r7, #0]
 8022316:	4629      	mov	r1, r5
 8022318:	4630      	mov	r0, r6
 802231a:	f000 fb25 	bl	8022968 <_sbrk_r>
 802231e:	1c43      	adds	r3, r0, #1
 8022320:	d123      	bne.n	802236a <_malloc_r+0x92>
 8022322:	230c      	movs	r3, #12
 8022324:	6033      	str	r3, [r6, #0]
 8022326:	4630      	mov	r0, r6
 8022328:	f000 feba 	bl	80230a0 <__malloc_unlock>
 802232c:	e7e3      	b.n	80222f6 <_malloc_r+0x1e>
 802232e:	6823      	ldr	r3, [r4, #0]
 8022330:	1b5b      	subs	r3, r3, r5
 8022332:	d417      	bmi.n	8022364 <_malloc_r+0x8c>
 8022334:	2b0b      	cmp	r3, #11
 8022336:	d903      	bls.n	8022340 <_malloc_r+0x68>
 8022338:	6023      	str	r3, [r4, #0]
 802233a:	441c      	add	r4, r3
 802233c:	6025      	str	r5, [r4, #0]
 802233e:	e004      	b.n	802234a <_malloc_r+0x72>
 8022340:	6863      	ldr	r3, [r4, #4]
 8022342:	42a2      	cmp	r2, r4
 8022344:	bf0c      	ite	eq
 8022346:	600b      	streq	r3, [r1, #0]
 8022348:	6053      	strne	r3, [r2, #4]
 802234a:	4630      	mov	r0, r6
 802234c:	f000 fea8 	bl	80230a0 <__malloc_unlock>
 8022350:	f104 000b 	add.w	r0, r4, #11
 8022354:	1d23      	adds	r3, r4, #4
 8022356:	f020 0007 	bic.w	r0, r0, #7
 802235a:	1ac2      	subs	r2, r0, r3
 802235c:	d0cc      	beq.n	80222f8 <_malloc_r+0x20>
 802235e:	1a1b      	subs	r3, r3, r0
 8022360:	50a3      	str	r3, [r4, r2]
 8022362:	e7c9      	b.n	80222f8 <_malloc_r+0x20>
 8022364:	4622      	mov	r2, r4
 8022366:	6864      	ldr	r4, [r4, #4]
 8022368:	e7cc      	b.n	8022304 <_malloc_r+0x2c>
 802236a:	1cc4      	adds	r4, r0, #3
 802236c:	f024 0403 	bic.w	r4, r4, #3
 8022370:	42a0      	cmp	r0, r4
 8022372:	d0e3      	beq.n	802233c <_malloc_r+0x64>
 8022374:	1a21      	subs	r1, r4, r0
 8022376:	4630      	mov	r0, r6
 8022378:	f000 faf6 	bl	8022968 <_sbrk_r>
 802237c:	3001      	adds	r0, #1
 802237e:	d1dd      	bne.n	802233c <_malloc_r+0x64>
 8022380:	e7cf      	b.n	8022322 <_malloc_r+0x4a>
 8022382:	bf00      	nop
 8022384:	2000e4fc 	.word	0x2000e4fc
 8022388:	2000e500 	.word	0x2000e500

0802238c <__sfputc_r>:
 802238c:	6893      	ldr	r3, [r2, #8]
 802238e:	3b01      	subs	r3, #1
 8022390:	2b00      	cmp	r3, #0
 8022392:	b410      	push	{r4}
 8022394:	6093      	str	r3, [r2, #8]
 8022396:	da08      	bge.n	80223aa <__sfputc_r+0x1e>
 8022398:	6994      	ldr	r4, [r2, #24]
 802239a:	42a3      	cmp	r3, r4
 802239c:	db01      	blt.n	80223a2 <__sfputc_r+0x16>
 802239e:	290a      	cmp	r1, #10
 80223a0:	d103      	bne.n	80223aa <__sfputc_r+0x1e>
 80223a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80223a6:	f000 bb33 	b.w	8022a10 <__swbuf_r>
 80223aa:	6813      	ldr	r3, [r2, #0]
 80223ac:	1c58      	adds	r0, r3, #1
 80223ae:	6010      	str	r0, [r2, #0]
 80223b0:	7019      	strb	r1, [r3, #0]
 80223b2:	4608      	mov	r0, r1
 80223b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80223b8:	4770      	bx	lr

080223ba <__sfputs_r>:
 80223ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80223bc:	4606      	mov	r6, r0
 80223be:	460f      	mov	r7, r1
 80223c0:	4614      	mov	r4, r2
 80223c2:	18d5      	adds	r5, r2, r3
 80223c4:	42ac      	cmp	r4, r5
 80223c6:	d101      	bne.n	80223cc <__sfputs_r+0x12>
 80223c8:	2000      	movs	r0, #0
 80223ca:	e007      	b.n	80223dc <__sfputs_r+0x22>
 80223cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80223d0:	463a      	mov	r2, r7
 80223d2:	4630      	mov	r0, r6
 80223d4:	f7ff ffda 	bl	802238c <__sfputc_r>
 80223d8:	1c43      	adds	r3, r0, #1
 80223da:	d1f3      	bne.n	80223c4 <__sfputs_r+0xa>
 80223dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080223e0 <_vfiprintf_r>:
 80223e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80223e4:	460d      	mov	r5, r1
 80223e6:	b09d      	sub	sp, #116	; 0x74
 80223e8:	4614      	mov	r4, r2
 80223ea:	4698      	mov	r8, r3
 80223ec:	4606      	mov	r6, r0
 80223ee:	b118      	cbz	r0, 80223f8 <_vfiprintf_r+0x18>
 80223f0:	6983      	ldr	r3, [r0, #24]
 80223f2:	b90b      	cbnz	r3, 80223f8 <_vfiprintf_r+0x18>
 80223f4:	f000 fd48 	bl	8022e88 <__sinit>
 80223f8:	4b89      	ldr	r3, [pc, #548]	; (8022620 <_vfiprintf_r+0x240>)
 80223fa:	429d      	cmp	r5, r3
 80223fc:	d11b      	bne.n	8022436 <_vfiprintf_r+0x56>
 80223fe:	6875      	ldr	r5, [r6, #4]
 8022400:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8022402:	07d9      	lsls	r1, r3, #31
 8022404:	d405      	bmi.n	8022412 <_vfiprintf_r+0x32>
 8022406:	89ab      	ldrh	r3, [r5, #12]
 8022408:	059a      	lsls	r2, r3, #22
 802240a:	d402      	bmi.n	8022412 <_vfiprintf_r+0x32>
 802240c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802240e:	f000 fdd9 	bl	8022fc4 <__retarget_lock_acquire_recursive>
 8022412:	89ab      	ldrh	r3, [r5, #12]
 8022414:	071b      	lsls	r3, r3, #28
 8022416:	d501      	bpl.n	802241c <_vfiprintf_r+0x3c>
 8022418:	692b      	ldr	r3, [r5, #16]
 802241a:	b9eb      	cbnz	r3, 8022458 <_vfiprintf_r+0x78>
 802241c:	4629      	mov	r1, r5
 802241e:	4630      	mov	r0, r6
 8022420:	f000 fb48 	bl	8022ab4 <__swsetup_r>
 8022424:	b1c0      	cbz	r0, 8022458 <_vfiprintf_r+0x78>
 8022426:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8022428:	07dc      	lsls	r4, r3, #31
 802242a:	d50e      	bpl.n	802244a <_vfiprintf_r+0x6a>
 802242c:	f04f 30ff 	mov.w	r0, #4294967295
 8022430:	b01d      	add	sp, #116	; 0x74
 8022432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022436:	4b7b      	ldr	r3, [pc, #492]	; (8022624 <_vfiprintf_r+0x244>)
 8022438:	429d      	cmp	r5, r3
 802243a:	d101      	bne.n	8022440 <_vfiprintf_r+0x60>
 802243c:	68b5      	ldr	r5, [r6, #8]
 802243e:	e7df      	b.n	8022400 <_vfiprintf_r+0x20>
 8022440:	4b79      	ldr	r3, [pc, #484]	; (8022628 <_vfiprintf_r+0x248>)
 8022442:	429d      	cmp	r5, r3
 8022444:	bf08      	it	eq
 8022446:	68f5      	ldreq	r5, [r6, #12]
 8022448:	e7da      	b.n	8022400 <_vfiprintf_r+0x20>
 802244a:	89ab      	ldrh	r3, [r5, #12]
 802244c:	0598      	lsls	r0, r3, #22
 802244e:	d4ed      	bmi.n	802242c <_vfiprintf_r+0x4c>
 8022450:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8022452:	f000 fdb9 	bl	8022fc8 <__retarget_lock_release_recursive>
 8022456:	e7e9      	b.n	802242c <_vfiprintf_r+0x4c>
 8022458:	2300      	movs	r3, #0
 802245a:	9309      	str	r3, [sp, #36]	; 0x24
 802245c:	2320      	movs	r3, #32
 802245e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8022462:	f8cd 800c 	str.w	r8, [sp, #12]
 8022466:	2330      	movs	r3, #48	; 0x30
 8022468:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 802262c <_vfiprintf_r+0x24c>
 802246c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8022470:	f04f 0901 	mov.w	r9, #1
 8022474:	4623      	mov	r3, r4
 8022476:	469a      	mov	sl, r3
 8022478:	f813 2b01 	ldrb.w	r2, [r3], #1
 802247c:	b10a      	cbz	r2, 8022482 <_vfiprintf_r+0xa2>
 802247e:	2a25      	cmp	r2, #37	; 0x25
 8022480:	d1f9      	bne.n	8022476 <_vfiprintf_r+0x96>
 8022482:	ebba 0b04 	subs.w	fp, sl, r4
 8022486:	d00b      	beq.n	80224a0 <_vfiprintf_r+0xc0>
 8022488:	465b      	mov	r3, fp
 802248a:	4622      	mov	r2, r4
 802248c:	4629      	mov	r1, r5
 802248e:	4630      	mov	r0, r6
 8022490:	f7ff ff93 	bl	80223ba <__sfputs_r>
 8022494:	3001      	adds	r0, #1
 8022496:	f000 80aa 	beq.w	80225ee <_vfiprintf_r+0x20e>
 802249a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802249c:	445a      	add	r2, fp
 802249e:	9209      	str	r2, [sp, #36]	; 0x24
 80224a0:	f89a 3000 	ldrb.w	r3, [sl]
 80224a4:	2b00      	cmp	r3, #0
 80224a6:	f000 80a2 	beq.w	80225ee <_vfiprintf_r+0x20e>
 80224aa:	2300      	movs	r3, #0
 80224ac:	f04f 32ff 	mov.w	r2, #4294967295
 80224b0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80224b4:	f10a 0a01 	add.w	sl, sl, #1
 80224b8:	9304      	str	r3, [sp, #16]
 80224ba:	9307      	str	r3, [sp, #28]
 80224bc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80224c0:	931a      	str	r3, [sp, #104]	; 0x68
 80224c2:	4654      	mov	r4, sl
 80224c4:	2205      	movs	r2, #5
 80224c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80224ca:	4858      	ldr	r0, [pc, #352]	; (802262c <_vfiprintf_r+0x24c>)
 80224cc:	f7dd fe98 	bl	8000200 <memchr>
 80224d0:	9a04      	ldr	r2, [sp, #16]
 80224d2:	b9d8      	cbnz	r0, 802250c <_vfiprintf_r+0x12c>
 80224d4:	06d1      	lsls	r1, r2, #27
 80224d6:	bf44      	itt	mi
 80224d8:	2320      	movmi	r3, #32
 80224da:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80224de:	0713      	lsls	r3, r2, #28
 80224e0:	bf44      	itt	mi
 80224e2:	232b      	movmi	r3, #43	; 0x2b
 80224e4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80224e8:	f89a 3000 	ldrb.w	r3, [sl]
 80224ec:	2b2a      	cmp	r3, #42	; 0x2a
 80224ee:	d015      	beq.n	802251c <_vfiprintf_r+0x13c>
 80224f0:	9a07      	ldr	r2, [sp, #28]
 80224f2:	4654      	mov	r4, sl
 80224f4:	2000      	movs	r0, #0
 80224f6:	f04f 0c0a 	mov.w	ip, #10
 80224fa:	4621      	mov	r1, r4
 80224fc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8022500:	3b30      	subs	r3, #48	; 0x30
 8022502:	2b09      	cmp	r3, #9
 8022504:	d94e      	bls.n	80225a4 <_vfiprintf_r+0x1c4>
 8022506:	b1b0      	cbz	r0, 8022536 <_vfiprintf_r+0x156>
 8022508:	9207      	str	r2, [sp, #28]
 802250a:	e014      	b.n	8022536 <_vfiprintf_r+0x156>
 802250c:	eba0 0308 	sub.w	r3, r0, r8
 8022510:	fa09 f303 	lsl.w	r3, r9, r3
 8022514:	4313      	orrs	r3, r2
 8022516:	9304      	str	r3, [sp, #16]
 8022518:	46a2      	mov	sl, r4
 802251a:	e7d2      	b.n	80224c2 <_vfiprintf_r+0xe2>
 802251c:	9b03      	ldr	r3, [sp, #12]
 802251e:	1d19      	adds	r1, r3, #4
 8022520:	681b      	ldr	r3, [r3, #0]
 8022522:	9103      	str	r1, [sp, #12]
 8022524:	2b00      	cmp	r3, #0
 8022526:	bfbb      	ittet	lt
 8022528:	425b      	neglt	r3, r3
 802252a:	f042 0202 	orrlt.w	r2, r2, #2
 802252e:	9307      	strge	r3, [sp, #28]
 8022530:	9307      	strlt	r3, [sp, #28]
 8022532:	bfb8      	it	lt
 8022534:	9204      	strlt	r2, [sp, #16]
 8022536:	7823      	ldrb	r3, [r4, #0]
 8022538:	2b2e      	cmp	r3, #46	; 0x2e
 802253a:	d10c      	bne.n	8022556 <_vfiprintf_r+0x176>
 802253c:	7863      	ldrb	r3, [r4, #1]
 802253e:	2b2a      	cmp	r3, #42	; 0x2a
 8022540:	d135      	bne.n	80225ae <_vfiprintf_r+0x1ce>
 8022542:	9b03      	ldr	r3, [sp, #12]
 8022544:	1d1a      	adds	r2, r3, #4
 8022546:	681b      	ldr	r3, [r3, #0]
 8022548:	9203      	str	r2, [sp, #12]
 802254a:	2b00      	cmp	r3, #0
 802254c:	bfb8      	it	lt
 802254e:	f04f 33ff 	movlt.w	r3, #4294967295
 8022552:	3402      	adds	r4, #2
 8022554:	9305      	str	r3, [sp, #20]
 8022556:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 802263c <_vfiprintf_r+0x25c>
 802255a:	7821      	ldrb	r1, [r4, #0]
 802255c:	2203      	movs	r2, #3
 802255e:	4650      	mov	r0, sl
 8022560:	f7dd fe4e 	bl	8000200 <memchr>
 8022564:	b140      	cbz	r0, 8022578 <_vfiprintf_r+0x198>
 8022566:	2340      	movs	r3, #64	; 0x40
 8022568:	eba0 000a 	sub.w	r0, r0, sl
 802256c:	fa03 f000 	lsl.w	r0, r3, r0
 8022570:	9b04      	ldr	r3, [sp, #16]
 8022572:	4303      	orrs	r3, r0
 8022574:	3401      	adds	r4, #1
 8022576:	9304      	str	r3, [sp, #16]
 8022578:	f814 1b01 	ldrb.w	r1, [r4], #1
 802257c:	482c      	ldr	r0, [pc, #176]	; (8022630 <_vfiprintf_r+0x250>)
 802257e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8022582:	2206      	movs	r2, #6
 8022584:	f7dd fe3c 	bl	8000200 <memchr>
 8022588:	2800      	cmp	r0, #0
 802258a:	d03f      	beq.n	802260c <_vfiprintf_r+0x22c>
 802258c:	4b29      	ldr	r3, [pc, #164]	; (8022634 <_vfiprintf_r+0x254>)
 802258e:	bb1b      	cbnz	r3, 80225d8 <_vfiprintf_r+0x1f8>
 8022590:	9b03      	ldr	r3, [sp, #12]
 8022592:	3307      	adds	r3, #7
 8022594:	f023 0307 	bic.w	r3, r3, #7
 8022598:	3308      	adds	r3, #8
 802259a:	9303      	str	r3, [sp, #12]
 802259c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802259e:	443b      	add	r3, r7
 80225a0:	9309      	str	r3, [sp, #36]	; 0x24
 80225a2:	e767      	b.n	8022474 <_vfiprintf_r+0x94>
 80225a4:	fb0c 3202 	mla	r2, ip, r2, r3
 80225a8:	460c      	mov	r4, r1
 80225aa:	2001      	movs	r0, #1
 80225ac:	e7a5      	b.n	80224fa <_vfiprintf_r+0x11a>
 80225ae:	2300      	movs	r3, #0
 80225b0:	3401      	adds	r4, #1
 80225b2:	9305      	str	r3, [sp, #20]
 80225b4:	4619      	mov	r1, r3
 80225b6:	f04f 0c0a 	mov.w	ip, #10
 80225ba:	4620      	mov	r0, r4
 80225bc:	f810 2b01 	ldrb.w	r2, [r0], #1
 80225c0:	3a30      	subs	r2, #48	; 0x30
 80225c2:	2a09      	cmp	r2, #9
 80225c4:	d903      	bls.n	80225ce <_vfiprintf_r+0x1ee>
 80225c6:	2b00      	cmp	r3, #0
 80225c8:	d0c5      	beq.n	8022556 <_vfiprintf_r+0x176>
 80225ca:	9105      	str	r1, [sp, #20]
 80225cc:	e7c3      	b.n	8022556 <_vfiprintf_r+0x176>
 80225ce:	fb0c 2101 	mla	r1, ip, r1, r2
 80225d2:	4604      	mov	r4, r0
 80225d4:	2301      	movs	r3, #1
 80225d6:	e7f0      	b.n	80225ba <_vfiprintf_r+0x1da>
 80225d8:	ab03      	add	r3, sp, #12
 80225da:	9300      	str	r3, [sp, #0]
 80225dc:	462a      	mov	r2, r5
 80225de:	4b16      	ldr	r3, [pc, #88]	; (8022638 <_vfiprintf_r+0x258>)
 80225e0:	a904      	add	r1, sp, #16
 80225e2:	4630      	mov	r0, r6
 80225e4:	f3af 8000 	nop.w
 80225e8:	4607      	mov	r7, r0
 80225ea:	1c78      	adds	r0, r7, #1
 80225ec:	d1d6      	bne.n	802259c <_vfiprintf_r+0x1bc>
 80225ee:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80225f0:	07d9      	lsls	r1, r3, #31
 80225f2:	d405      	bmi.n	8022600 <_vfiprintf_r+0x220>
 80225f4:	89ab      	ldrh	r3, [r5, #12]
 80225f6:	059a      	lsls	r2, r3, #22
 80225f8:	d402      	bmi.n	8022600 <_vfiprintf_r+0x220>
 80225fa:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80225fc:	f000 fce4 	bl	8022fc8 <__retarget_lock_release_recursive>
 8022600:	89ab      	ldrh	r3, [r5, #12]
 8022602:	065b      	lsls	r3, r3, #25
 8022604:	f53f af12 	bmi.w	802242c <_vfiprintf_r+0x4c>
 8022608:	9809      	ldr	r0, [sp, #36]	; 0x24
 802260a:	e711      	b.n	8022430 <_vfiprintf_r+0x50>
 802260c:	ab03      	add	r3, sp, #12
 802260e:	9300      	str	r3, [sp, #0]
 8022610:	462a      	mov	r2, r5
 8022612:	4b09      	ldr	r3, [pc, #36]	; (8022638 <_vfiprintf_r+0x258>)
 8022614:	a904      	add	r1, sp, #16
 8022616:	4630      	mov	r0, r6
 8022618:	f000 f880 	bl	802271c <_printf_i>
 802261c:	e7e4      	b.n	80225e8 <_vfiprintf_r+0x208>
 802261e:	bf00      	nop
 8022620:	08027b20 	.word	0x08027b20
 8022624:	08027b40 	.word	0x08027b40
 8022628:	08027b00 	.word	0x08027b00
 802262c:	08027ac8 	.word	0x08027ac8
 8022630:	08027ad2 	.word	0x08027ad2
 8022634:	00000000 	.word	0x00000000
 8022638:	080223bb 	.word	0x080223bb
 802263c:	08027ace 	.word	0x08027ace

08022640 <_printf_common>:
 8022640:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022644:	4616      	mov	r6, r2
 8022646:	4699      	mov	r9, r3
 8022648:	688a      	ldr	r2, [r1, #8]
 802264a:	690b      	ldr	r3, [r1, #16]
 802264c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8022650:	4293      	cmp	r3, r2
 8022652:	bfb8      	it	lt
 8022654:	4613      	movlt	r3, r2
 8022656:	6033      	str	r3, [r6, #0]
 8022658:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802265c:	4607      	mov	r7, r0
 802265e:	460c      	mov	r4, r1
 8022660:	b10a      	cbz	r2, 8022666 <_printf_common+0x26>
 8022662:	3301      	adds	r3, #1
 8022664:	6033      	str	r3, [r6, #0]
 8022666:	6823      	ldr	r3, [r4, #0]
 8022668:	0699      	lsls	r1, r3, #26
 802266a:	bf42      	ittt	mi
 802266c:	6833      	ldrmi	r3, [r6, #0]
 802266e:	3302      	addmi	r3, #2
 8022670:	6033      	strmi	r3, [r6, #0]
 8022672:	6825      	ldr	r5, [r4, #0]
 8022674:	f015 0506 	ands.w	r5, r5, #6
 8022678:	d106      	bne.n	8022688 <_printf_common+0x48>
 802267a:	f104 0a19 	add.w	sl, r4, #25
 802267e:	68e3      	ldr	r3, [r4, #12]
 8022680:	6832      	ldr	r2, [r6, #0]
 8022682:	1a9b      	subs	r3, r3, r2
 8022684:	42ab      	cmp	r3, r5
 8022686:	dc26      	bgt.n	80226d6 <_printf_common+0x96>
 8022688:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802268c:	1e13      	subs	r3, r2, #0
 802268e:	6822      	ldr	r2, [r4, #0]
 8022690:	bf18      	it	ne
 8022692:	2301      	movne	r3, #1
 8022694:	0692      	lsls	r2, r2, #26
 8022696:	d42b      	bmi.n	80226f0 <_printf_common+0xb0>
 8022698:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802269c:	4649      	mov	r1, r9
 802269e:	4638      	mov	r0, r7
 80226a0:	47c0      	blx	r8
 80226a2:	3001      	adds	r0, #1
 80226a4:	d01e      	beq.n	80226e4 <_printf_common+0xa4>
 80226a6:	6823      	ldr	r3, [r4, #0]
 80226a8:	68e5      	ldr	r5, [r4, #12]
 80226aa:	6832      	ldr	r2, [r6, #0]
 80226ac:	f003 0306 	and.w	r3, r3, #6
 80226b0:	2b04      	cmp	r3, #4
 80226b2:	bf08      	it	eq
 80226b4:	1aad      	subeq	r5, r5, r2
 80226b6:	68a3      	ldr	r3, [r4, #8]
 80226b8:	6922      	ldr	r2, [r4, #16]
 80226ba:	bf0c      	ite	eq
 80226bc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80226c0:	2500      	movne	r5, #0
 80226c2:	4293      	cmp	r3, r2
 80226c4:	bfc4      	itt	gt
 80226c6:	1a9b      	subgt	r3, r3, r2
 80226c8:	18ed      	addgt	r5, r5, r3
 80226ca:	2600      	movs	r6, #0
 80226cc:	341a      	adds	r4, #26
 80226ce:	42b5      	cmp	r5, r6
 80226d0:	d11a      	bne.n	8022708 <_printf_common+0xc8>
 80226d2:	2000      	movs	r0, #0
 80226d4:	e008      	b.n	80226e8 <_printf_common+0xa8>
 80226d6:	2301      	movs	r3, #1
 80226d8:	4652      	mov	r2, sl
 80226da:	4649      	mov	r1, r9
 80226dc:	4638      	mov	r0, r7
 80226de:	47c0      	blx	r8
 80226e0:	3001      	adds	r0, #1
 80226e2:	d103      	bne.n	80226ec <_printf_common+0xac>
 80226e4:	f04f 30ff 	mov.w	r0, #4294967295
 80226e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80226ec:	3501      	adds	r5, #1
 80226ee:	e7c6      	b.n	802267e <_printf_common+0x3e>
 80226f0:	18e1      	adds	r1, r4, r3
 80226f2:	1c5a      	adds	r2, r3, #1
 80226f4:	2030      	movs	r0, #48	; 0x30
 80226f6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80226fa:	4422      	add	r2, r4
 80226fc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8022700:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8022704:	3302      	adds	r3, #2
 8022706:	e7c7      	b.n	8022698 <_printf_common+0x58>
 8022708:	2301      	movs	r3, #1
 802270a:	4622      	mov	r2, r4
 802270c:	4649      	mov	r1, r9
 802270e:	4638      	mov	r0, r7
 8022710:	47c0      	blx	r8
 8022712:	3001      	adds	r0, #1
 8022714:	d0e6      	beq.n	80226e4 <_printf_common+0xa4>
 8022716:	3601      	adds	r6, #1
 8022718:	e7d9      	b.n	80226ce <_printf_common+0x8e>
	...

0802271c <_printf_i>:
 802271c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8022720:	460c      	mov	r4, r1
 8022722:	4691      	mov	r9, r2
 8022724:	7e27      	ldrb	r7, [r4, #24]
 8022726:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022728:	2f78      	cmp	r7, #120	; 0x78
 802272a:	4680      	mov	r8, r0
 802272c:	469a      	mov	sl, r3
 802272e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8022732:	d807      	bhi.n	8022744 <_printf_i+0x28>
 8022734:	2f62      	cmp	r7, #98	; 0x62
 8022736:	d80a      	bhi.n	802274e <_printf_i+0x32>
 8022738:	2f00      	cmp	r7, #0
 802273a:	f000 80d8 	beq.w	80228ee <_printf_i+0x1d2>
 802273e:	2f58      	cmp	r7, #88	; 0x58
 8022740:	f000 80a3 	beq.w	802288a <_printf_i+0x16e>
 8022744:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8022748:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802274c:	e03a      	b.n	80227c4 <_printf_i+0xa8>
 802274e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8022752:	2b15      	cmp	r3, #21
 8022754:	d8f6      	bhi.n	8022744 <_printf_i+0x28>
 8022756:	a001      	add	r0, pc, #4	; (adr r0, 802275c <_printf_i+0x40>)
 8022758:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 802275c:	080227b5 	.word	0x080227b5
 8022760:	080227c9 	.word	0x080227c9
 8022764:	08022745 	.word	0x08022745
 8022768:	08022745 	.word	0x08022745
 802276c:	08022745 	.word	0x08022745
 8022770:	08022745 	.word	0x08022745
 8022774:	080227c9 	.word	0x080227c9
 8022778:	08022745 	.word	0x08022745
 802277c:	08022745 	.word	0x08022745
 8022780:	08022745 	.word	0x08022745
 8022784:	08022745 	.word	0x08022745
 8022788:	080228d5 	.word	0x080228d5
 802278c:	080227f9 	.word	0x080227f9
 8022790:	080228b7 	.word	0x080228b7
 8022794:	08022745 	.word	0x08022745
 8022798:	08022745 	.word	0x08022745
 802279c:	080228f7 	.word	0x080228f7
 80227a0:	08022745 	.word	0x08022745
 80227a4:	080227f9 	.word	0x080227f9
 80227a8:	08022745 	.word	0x08022745
 80227ac:	08022745 	.word	0x08022745
 80227b0:	080228bf 	.word	0x080228bf
 80227b4:	680b      	ldr	r3, [r1, #0]
 80227b6:	1d1a      	adds	r2, r3, #4
 80227b8:	681b      	ldr	r3, [r3, #0]
 80227ba:	600a      	str	r2, [r1, #0]
 80227bc:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80227c0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80227c4:	2301      	movs	r3, #1
 80227c6:	e0a3      	b.n	8022910 <_printf_i+0x1f4>
 80227c8:	6825      	ldr	r5, [r4, #0]
 80227ca:	6808      	ldr	r0, [r1, #0]
 80227cc:	062e      	lsls	r6, r5, #24
 80227ce:	f100 0304 	add.w	r3, r0, #4
 80227d2:	d50a      	bpl.n	80227ea <_printf_i+0xce>
 80227d4:	6805      	ldr	r5, [r0, #0]
 80227d6:	600b      	str	r3, [r1, #0]
 80227d8:	2d00      	cmp	r5, #0
 80227da:	da03      	bge.n	80227e4 <_printf_i+0xc8>
 80227dc:	232d      	movs	r3, #45	; 0x2d
 80227de:	426d      	negs	r5, r5
 80227e0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80227e4:	485e      	ldr	r0, [pc, #376]	; (8022960 <_printf_i+0x244>)
 80227e6:	230a      	movs	r3, #10
 80227e8:	e019      	b.n	802281e <_printf_i+0x102>
 80227ea:	f015 0f40 	tst.w	r5, #64	; 0x40
 80227ee:	6805      	ldr	r5, [r0, #0]
 80227f0:	600b      	str	r3, [r1, #0]
 80227f2:	bf18      	it	ne
 80227f4:	b22d      	sxthne	r5, r5
 80227f6:	e7ef      	b.n	80227d8 <_printf_i+0xbc>
 80227f8:	680b      	ldr	r3, [r1, #0]
 80227fa:	6825      	ldr	r5, [r4, #0]
 80227fc:	1d18      	adds	r0, r3, #4
 80227fe:	6008      	str	r0, [r1, #0]
 8022800:	0628      	lsls	r0, r5, #24
 8022802:	d501      	bpl.n	8022808 <_printf_i+0xec>
 8022804:	681d      	ldr	r5, [r3, #0]
 8022806:	e002      	b.n	802280e <_printf_i+0xf2>
 8022808:	0669      	lsls	r1, r5, #25
 802280a:	d5fb      	bpl.n	8022804 <_printf_i+0xe8>
 802280c:	881d      	ldrh	r5, [r3, #0]
 802280e:	4854      	ldr	r0, [pc, #336]	; (8022960 <_printf_i+0x244>)
 8022810:	2f6f      	cmp	r7, #111	; 0x6f
 8022812:	bf0c      	ite	eq
 8022814:	2308      	moveq	r3, #8
 8022816:	230a      	movne	r3, #10
 8022818:	2100      	movs	r1, #0
 802281a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802281e:	6866      	ldr	r6, [r4, #4]
 8022820:	60a6      	str	r6, [r4, #8]
 8022822:	2e00      	cmp	r6, #0
 8022824:	bfa2      	ittt	ge
 8022826:	6821      	ldrge	r1, [r4, #0]
 8022828:	f021 0104 	bicge.w	r1, r1, #4
 802282c:	6021      	strge	r1, [r4, #0]
 802282e:	b90d      	cbnz	r5, 8022834 <_printf_i+0x118>
 8022830:	2e00      	cmp	r6, #0
 8022832:	d04d      	beq.n	80228d0 <_printf_i+0x1b4>
 8022834:	4616      	mov	r6, r2
 8022836:	fbb5 f1f3 	udiv	r1, r5, r3
 802283a:	fb03 5711 	mls	r7, r3, r1, r5
 802283e:	5dc7      	ldrb	r7, [r0, r7]
 8022840:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8022844:	462f      	mov	r7, r5
 8022846:	42bb      	cmp	r3, r7
 8022848:	460d      	mov	r5, r1
 802284a:	d9f4      	bls.n	8022836 <_printf_i+0x11a>
 802284c:	2b08      	cmp	r3, #8
 802284e:	d10b      	bne.n	8022868 <_printf_i+0x14c>
 8022850:	6823      	ldr	r3, [r4, #0]
 8022852:	07df      	lsls	r7, r3, #31
 8022854:	d508      	bpl.n	8022868 <_printf_i+0x14c>
 8022856:	6923      	ldr	r3, [r4, #16]
 8022858:	6861      	ldr	r1, [r4, #4]
 802285a:	4299      	cmp	r1, r3
 802285c:	bfde      	ittt	le
 802285e:	2330      	movle	r3, #48	; 0x30
 8022860:	f806 3c01 	strble.w	r3, [r6, #-1]
 8022864:	f106 36ff 	addle.w	r6, r6, #4294967295
 8022868:	1b92      	subs	r2, r2, r6
 802286a:	6122      	str	r2, [r4, #16]
 802286c:	f8cd a000 	str.w	sl, [sp]
 8022870:	464b      	mov	r3, r9
 8022872:	aa03      	add	r2, sp, #12
 8022874:	4621      	mov	r1, r4
 8022876:	4640      	mov	r0, r8
 8022878:	f7ff fee2 	bl	8022640 <_printf_common>
 802287c:	3001      	adds	r0, #1
 802287e:	d14c      	bne.n	802291a <_printf_i+0x1fe>
 8022880:	f04f 30ff 	mov.w	r0, #4294967295
 8022884:	b004      	add	sp, #16
 8022886:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802288a:	4835      	ldr	r0, [pc, #212]	; (8022960 <_printf_i+0x244>)
 802288c:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8022890:	6823      	ldr	r3, [r4, #0]
 8022892:	680e      	ldr	r6, [r1, #0]
 8022894:	061f      	lsls	r7, r3, #24
 8022896:	f856 5b04 	ldr.w	r5, [r6], #4
 802289a:	600e      	str	r6, [r1, #0]
 802289c:	d514      	bpl.n	80228c8 <_printf_i+0x1ac>
 802289e:	07d9      	lsls	r1, r3, #31
 80228a0:	bf44      	itt	mi
 80228a2:	f043 0320 	orrmi.w	r3, r3, #32
 80228a6:	6023      	strmi	r3, [r4, #0]
 80228a8:	b91d      	cbnz	r5, 80228b2 <_printf_i+0x196>
 80228aa:	6823      	ldr	r3, [r4, #0]
 80228ac:	f023 0320 	bic.w	r3, r3, #32
 80228b0:	6023      	str	r3, [r4, #0]
 80228b2:	2310      	movs	r3, #16
 80228b4:	e7b0      	b.n	8022818 <_printf_i+0xfc>
 80228b6:	6823      	ldr	r3, [r4, #0]
 80228b8:	f043 0320 	orr.w	r3, r3, #32
 80228bc:	6023      	str	r3, [r4, #0]
 80228be:	2378      	movs	r3, #120	; 0x78
 80228c0:	4828      	ldr	r0, [pc, #160]	; (8022964 <_printf_i+0x248>)
 80228c2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80228c6:	e7e3      	b.n	8022890 <_printf_i+0x174>
 80228c8:	065e      	lsls	r6, r3, #25
 80228ca:	bf48      	it	mi
 80228cc:	b2ad      	uxthmi	r5, r5
 80228ce:	e7e6      	b.n	802289e <_printf_i+0x182>
 80228d0:	4616      	mov	r6, r2
 80228d2:	e7bb      	b.n	802284c <_printf_i+0x130>
 80228d4:	680b      	ldr	r3, [r1, #0]
 80228d6:	6826      	ldr	r6, [r4, #0]
 80228d8:	6960      	ldr	r0, [r4, #20]
 80228da:	1d1d      	adds	r5, r3, #4
 80228dc:	600d      	str	r5, [r1, #0]
 80228de:	0635      	lsls	r5, r6, #24
 80228e0:	681b      	ldr	r3, [r3, #0]
 80228e2:	d501      	bpl.n	80228e8 <_printf_i+0x1cc>
 80228e4:	6018      	str	r0, [r3, #0]
 80228e6:	e002      	b.n	80228ee <_printf_i+0x1d2>
 80228e8:	0671      	lsls	r1, r6, #25
 80228ea:	d5fb      	bpl.n	80228e4 <_printf_i+0x1c8>
 80228ec:	8018      	strh	r0, [r3, #0]
 80228ee:	2300      	movs	r3, #0
 80228f0:	6123      	str	r3, [r4, #16]
 80228f2:	4616      	mov	r6, r2
 80228f4:	e7ba      	b.n	802286c <_printf_i+0x150>
 80228f6:	680b      	ldr	r3, [r1, #0]
 80228f8:	1d1a      	adds	r2, r3, #4
 80228fa:	600a      	str	r2, [r1, #0]
 80228fc:	681e      	ldr	r6, [r3, #0]
 80228fe:	6862      	ldr	r2, [r4, #4]
 8022900:	2100      	movs	r1, #0
 8022902:	4630      	mov	r0, r6
 8022904:	f7dd fc7c 	bl	8000200 <memchr>
 8022908:	b108      	cbz	r0, 802290e <_printf_i+0x1f2>
 802290a:	1b80      	subs	r0, r0, r6
 802290c:	6060      	str	r0, [r4, #4]
 802290e:	6863      	ldr	r3, [r4, #4]
 8022910:	6123      	str	r3, [r4, #16]
 8022912:	2300      	movs	r3, #0
 8022914:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8022918:	e7a8      	b.n	802286c <_printf_i+0x150>
 802291a:	6923      	ldr	r3, [r4, #16]
 802291c:	4632      	mov	r2, r6
 802291e:	4649      	mov	r1, r9
 8022920:	4640      	mov	r0, r8
 8022922:	47d0      	blx	sl
 8022924:	3001      	adds	r0, #1
 8022926:	d0ab      	beq.n	8022880 <_printf_i+0x164>
 8022928:	6823      	ldr	r3, [r4, #0]
 802292a:	079b      	lsls	r3, r3, #30
 802292c:	d413      	bmi.n	8022956 <_printf_i+0x23a>
 802292e:	68e0      	ldr	r0, [r4, #12]
 8022930:	9b03      	ldr	r3, [sp, #12]
 8022932:	4298      	cmp	r0, r3
 8022934:	bfb8      	it	lt
 8022936:	4618      	movlt	r0, r3
 8022938:	e7a4      	b.n	8022884 <_printf_i+0x168>
 802293a:	2301      	movs	r3, #1
 802293c:	4632      	mov	r2, r6
 802293e:	4649      	mov	r1, r9
 8022940:	4640      	mov	r0, r8
 8022942:	47d0      	blx	sl
 8022944:	3001      	adds	r0, #1
 8022946:	d09b      	beq.n	8022880 <_printf_i+0x164>
 8022948:	3501      	adds	r5, #1
 802294a:	68e3      	ldr	r3, [r4, #12]
 802294c:	9903      	ldr	r1, [sp, #12]
 802294e:	1a5b      	subs	r3, r3, r1
 8022950:	42ab      	cmp	r3, r5
 8022952:	dcf2      	bgt.n	802293a <_printf_i+0x21e>
 8022954:	e7eb      	b.n	802292e <_printf_i+0x212>
 8022956:	2500      	movs	r5, #0
 8022958:	f104 0619 	add.w	r6, r4, #25
 802295c:	e7f5      	b.n	802294a <_printf_i+0x22e>
 802295e:	bf00      	nop
 8022960:	08027ad9 	.word	0x08027ad9
 8022964:	08027aea 	.word	0x08027aea

08022968 <_sbrk_r>:
 8022968:	b538      	push	{r3, r4, r5, lr}
 802296a:	4d06      	ldr	r5, [pc, #24]	; (8022984 <_sbrk_r+0x1c>)
 802296c:	2300      	movs	r3, #0
 802296e:	4604      	mov	r4, r0
 8022970:	4608      	mov	r0, r1
 8022972:	602b      	str	r3, [r5, #0]
 8022974:	f7df fc1e 	bl	80021b4 <_sbrk>
 8022978:	1c43      	adds	r3, r0, #1
 802297a:	d102      	bne.n	8022982 <_sbrk_r+0x1a>
 802297c:	682b      	ldr	r3, [r5, #0]
 802297e:	b103      	cbz	r3, 8022982 <_sbrk_r+0x1a>
 8022980:	6023      	str	r3, [r4, #0]
 8022982:	bd38      	pop	{r3, r4, r5, pc}
 8022984:	2000e994 	.word	0x2000e994

08022988 <_raise_r>:
 8022988:	291f      	cmp	r1, #31
 802298a:	b538      	push	{r3, r4, r5, lr}
 802298c:	4604      	mov	r4, r0
 802298e:	460d      	mov	r5, r1
 8022990:	d904      	bls.n	802299c <_raise_r+0x14>
 8022992:	2316      	movs	r3, #22
 8022994:	6003      	str	r3, [r0, #0]
 8022996:	f04f 30ff 	mov.w	r0, #4294967295
 802299a:	bd38      	pop	{r3, r4, r5, pc}
 802299c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802299e:	b112      	cbz	r2, 80229a6 <_raise_r+0x1e>
 80229a0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80229a4:	b94b      	cbnz	r3, 80229ba <_raise_r+0x32>
 80229a6:	4620      	mov	r0, r4
 80229a8:	f000 f830 	bl	8022a0c <_getpid_r>
 80229ac:	462a      	mov	r2, r5
 80229ae:	4601      	mov	r1, r0
 80229b0:	4620      	mov	r0, r4
 80229b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80229b6:	f000 b817 	b.w	80229e8 <_kill_r>
 80229ba:	2b01      	cmp	r3, #1
 80229bc:	d00a      	beq.n	80229d4 <_raise_r+0x4c>
 80229be:	1c59      	adds	r1, r3, #1
 80229c0:	d103      	bne.n	80229ca <_raise_r+0x42>
 80229c2:	2316      	movs	r3, #22
 80229c4:	6003      	str	r3, [r0, #0]
 80229c6:	2001      	movs	r0, #1
 80229c8:	e7e7      	b.n	802299a <_raise_r+0x12>
 80229ca:	2400      	movs	r4, #0
 80229cc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80229d0:	4628      	mov	r0, r5
 80229d2:	4798      	blx	r3
 80229d4:	2000      	movs	r0, #0
 80229d6:	e7e0      	b.n	802299a <_raise_r+0x12>

080229d8 <raise>:
 80229d8:	4b02      	ldr	r3, [pc, #8]	; (80229e4 <raise+0xc>)
 80229da:	4601      	mov	r1, r0
 80229dc:	6818      	ldr	r0, [r3, #0]
 80229de:	f7ff bfd3 	b.w	8022988 <_raise_r>
 80229e2:	bf00      	nop
 80229e4:	200000d8 	.word	0x200000d8

080229e8 <_kill_r>:
 80229e8:	b538      	push	{r3, r4, r5, lr}
 80229ea:	4d07      	ldr	r5, [pc, #28]	; (8022a08 <_kill_r+0x20>)
 80229ec:	2300      	movs	r3, #0
 80229ee:	4604      	mov	r4, r0
 80229f0:	4608      	mov	r0, r1
 80229f2:	4611      	mov	r1, r2
 80229f4:	602b      	str	r3, [r5, #0]
 80229f6:	f7df fba9 	bl	800214c <_kill>
 80229fa:	1c43      	adds	r3, r0, #1
 80229fc:	d102      	bne.n	8022a04 <_kill_r+0x1c>
 80229fe:	682b      	ldr	r3, [r5, #0]
 8022a00:	b103      	cbz	r3, 8022a04 <_kill_r+0x1c>
 8022a02:	6023      	str	r3, [r4, #0]
 8022a04:	bd38      	pop	{r3, r4, r5, pc}
 8022a06:	bf00      	nop
 8022a08:	2000e994 	.word	0x2000e994

08022a0c <_getpid_r>:
 8022a0c:	f7df bb9c 	b.w	8002148 <_getpid>

08022a10 <__swbuf_r>:
 8022a10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022a12:	460e      	mov	r6, r1
 8022a14:	4614      	mov	r4, r2
 8022a16:	4605      	mov	r5, r0
 8022a18:	b118      	cbz	r0, 8022a22 <__swbuf_r+0x12>
 8022a1a:	6983      	ldr	r3, [r0, #24]
 8022a1c:	b90b      	cbnz	r3, 8022a22 <__swbuf_r+0x12>
 8022a1e:	f000 fa33 	bl	8022e88 <__sinit>
 8022a22:	4b21      	ldr	r3, [pc, #132]	; (8022aa8 <__swbuf_r+0x98>)
 8022a24:	429c      	cmp	r4, r3
 8022a26:	d12b      	bne.n	8022a80 <__swbuf_r+0x70>
 8022a28:	686c      	ldr	r4, [r5, #4]
 8022a2a:	69a3      	ldr	r3, [r4, #24]
 8022a2c:	60a3      	str	r3, [r4, #8]
 8022a2e:	89a3      	ldrh	r3, [r4, #12]
 8022a30:	071a      	lsls	r2, r3, #28
 8022a32:	d52f      	bpl.n	8022a94 <__swbuf_r+0x84>
 8022a34:	6923      	ldr	r3, [r4, #16]
 8022a36:	b36b      	cbz	r3, 8022a94 <__swbuf_r+0x84>
 8022a38:	6923      	ldr	r3, [r4, #16]
 8022a3a:	6820      	ldr	r0, [r4, #0]
 8022a3c:	1ac0      	subs	r0, r0, r3
 8022a3e:	6963      	ldr	r3, [r4, #20]
 8022a40:	b2f6      	uxtb	r6, r6
 8022a42:	4283      	cmp	r3, r0
 8022a44:	4637      	mov	r7, r6
 8022a46:	dc04      	bgt.n	8022a52 <__swbuf_r+0x42>
 8022a48:	4621      	mov	r1, r4
 8022a4a:	4628      	mov	r0, r5
 8022a4c:	f000 f988 	bl	8022d60 <_fflush_r>
 8022a50:	bb30      	cbnz	r0, 8022aa0 <__swbuf_r+0x90>
 8022a52:	68a3      	ldr	r3, [r4, #8]
 8022a54:	3b01      	subs	r3, #1
 8022a56:	60a3      	str	r3, [r4, #8]
 8022a58:	6823      	ldr	r3, [r4, #0]
 8022a5a:	1c5a      	adds	r2, r3, #1
 8022a5c:	6022      	str	r2, [r4, #0]
 8022a5e:	701e      	strb	r6, [r3, #0]
 8022a60:	6963      	ldr	r3, [r4, #20]
 8022a62:	3001      	adds	r0, #1
 8022a64:	4283      	cmp	r3, r0
 8022a66:	d004      	beq.n	8022a72 <__swbuf_r+0x62>
 8022a68:	89a3      	ldrh	r3, [r4, #12]
 8022a6a:	07db      	lsls	r3, r3, #31
 8022a6c:	d506      	bpl.n	8022a7c <__swbuf_r+0x6c>
 8022a6e:	2e0a      	cmp	r6, #10
 8022a70:	d104      	bne.n	8022a7c <__swbuf_r+0x6c>
 8022a72:	4621      	mov	r1, r4
 8022a74:	4628      	mov	r0, r5
 8022a76:	f000 f973 	bl	8022d60 <_fflush_r>
 8022a7a:	b988      	cbnz	r0, 8022aa0 <__swbuf_r+0x90>
 8022a7c:	4638      	mov	r0, r7
 8022a7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022a80:	4b0a      	ldr	r3, [pc, #40]	; (8022aac <__swbuf_r+0x9c>)
 8022a82:	429c      	cmp	r4, r3
 8022a84:	d101      	bne.n	8022a8a <__swbuf_r+0x7a>
 8022a86:	68ac      	ldr	r4, [r5, #8]
 8022a88:	e7cf      	b.n	8022a2a <__swbuf_r+0x1a>
 8022a8a:	4b09      	ldr	r3, [pc, #36]	; (8022ab0 <__swbuf_r+0xa0>)
 8022a8c:	429c      	cmp	r4, r3
 8022a8e:	bf08      	it	eq
 8022a90:	68ec      	ldreq	r4, [r5, #12]
 8022a92:	e7ca      	b.n	8022a2a <__swbuf_r+0x1a>
 8022a94:	4621      	mov	r1, r4
 8022a96:	4628      	mov	r0, r5
 8022a98:	f000 f80c 	bl	8022ab4 <__swsetup_r>
 8022a9c:	2800      	cmp	r0, #0
 8022a9e:	d0cb      	beq.n	8022a38 <__swbuf_r+0x28>
 8022aa0:	f04f 37ff 	mov.w	r7, #4294967295
 8022aa4:	e7ea      	b.n	8022a7c <__swbuf_r+0x6c>
 8022aa6:	bf00      	nop
 8022aa8:	08027b20 	.word	0x08027b20
 8022aac:	08027b40 	.word	0x08027b40
 8022ab0:	08027b00 	.word	0x08027b00

08022ab4 <__swsetup_r>:
 8022ab4:	4b32      	ldr	r3, [pc, #200]	; (8022b80 <__swsetup_r+0xcc>)
 8022ab6:	b570      	push	{r4, r5, r6, lr}
 8022ab8:	681d      	ldr	r5, [r3, #0]
 8022aba:	4606      	mov	r6, r0
 8022abc:	460c      	mov	r4, r1
 8022abe:	b125      	cbz	r5, 8022aca <__swsetup_r+0x16>
 8022ac0:	69ab      	ldr	r3, [r5, #24]
 8022ac2:	b913      	cbnz	r3, 8022aca <__swsetup_r+0x16>
 8022ac4:	4628      	mov	r0, r5
 8022ac6:	f000 f9df 	bl	8022e88 <__sinit>
 8022aca:	4b2e      	ldr	r3, [pc, #184]	; (8022b84 <__swsetup_r+0xd0>)
 8022acc:	429c      	cmp	r4, r3
 8022ace:	d10f      	bne.n	8022af0 <__swsetup_r+0x3c>
 8022ad0:	686c      	ldr	r4, [r5, #4]
 8022ad2:	89a3      	ldrh	r3, [r4, #12]
 8022ad4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022ad8:	0719      	lsls	r1, r3, #28
 8022ada:	d42c      	bmi.n	8022b36 <__swsetup_r+0x82>
 8022adc:	06dd      	lsls	r5, r3, #27
 8022ade:	d411      	bmi.n	8022b04 <__swsetup_r+0x50>
 8022ae0:	2309      	movs	r3, #9
 8022ae2:	6033      	str	r3, [r6, #0]
 8022ae4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8022ae8:	81a3      	strh	r3, [r4, #12]
 8022aea:	f04f 30ff 	mov.w	r0, #4294967295
 8022aee:	e03e      	b.n	8022b6e <__swsetup_r+0xba>
 8022af0:	4b25      	ldr	r3, [pc, #148]	; (8022b88 <__swsetup_r+0xd4>)
 8022af2:	429c      	cmp	r4, r3
 8022af4:	d101      	bne.n	8022afa <__swsetup_r+0x46>
 8022af6:	68ac      	ldr	r4, [r5, #8]
 8022af8:	e7eb      	b.n	8022ad2 <__swsetup_r+0x1e>
 8022afa:	4b24      	ldr	r3, [pc, #144]	; (8022b8c <__swsetup_r+0xd8>)
 8022afc:	429c      	cmp	r4, r3
 8022afe:	bf08      	it	eq
 8022b00:	68ec      	ldreq	r4, [r5, #12]
 8022b02:	e7e6      	b.n	8022ad2 <__swsetup_r+0x1e>
 8022b04:	0758      	lsls	r0, r3, #29
 8022b06:	d512      	bpl.n	8022b2e <__swsetup_r+0x7a>
 8022b08:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8022b0a:	b141      	cbz	r1, 8022b1e <__swsetup_r+0x6a>
 8022b0c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8022b10:	4299      	cmp	r1, r3
 8022b12:	d002      	beq.n	8022b1a <__swsetup_r+0x66>
 8022b14:	4630      	mov	r0, r6
 8022b16:	f7ff fb8f 	bl	8022238 <_free_r>
 8022b1a:	2300      	movs	r3, #0
 8022b1c:	6363      	str	r3, [r4, #52]	; 0x34
 8022b1e:	89a3      	ldrh	r3, [r4, #12]
 8022b20:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8022b24:	81a3      	strh	r3, [r4, #12]
 8022b26:	2300      	movs	r3, #0
 8022b28:	6063      	str	r3, [r4, #4]
 8022b2a:	6923      	ldr	r3, [r4, #16]
 8022b2c:	6023      	str	r3, [r4, #0]
 8022b2e:	89a3      	ldrh	r3, [r4, #12]
 8022b30:	f043 0308 	orr.w	r3, r3, #8
 8022b34:	81a3      	strh	r3, [r4, #12]
 8022b36:	6923      	ldr	r3, [r4, #16]
 8022b38:	b94b      	cbnz	r3, 8022b4e <__swsetup_r+0x9a>
 8022b3a:	89a3      	ldrh	r3, [r4, #12]
 8022b3c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8022b40:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8022b44:	d003      	beq.n	8022b4e <__swsetup_r+0x9a>
 8022b46:	4621      	mov	r1, r4
 8022b48:	4630      	mov	r0, r6
 8022b4a:	f000 fa63 	bl	8023014 <__smakebuf_r>
 8022b4e:	89a0      	ldrh	r0, [r4, #12]
 8022b50:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022b54:	f010 0301 	ands.w	r3, r0, #1
 8022b58:	d00a      	beq.n	8022b70 <__swsetup_r+0xbc>
 8022b5a:	2300      	movs	r3, #0
 8022b5c:	60a3      	str	r3, [r4, #8]
 8022b5e:	6963      	ldr	r3, [r4, #20]
 8022b60:	425b      	negs	r3, r3
 8022b62:	61a3      	str	r3, [r4, #24]
 8022b64:	6923      	ldr	r3, [r4, #16]
 8022b66:	b943      	cbnz	r3, 8022b7a <__swsetup_r+0xc6>
 8022b68:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8022b6c:	d1ba      	bne.n	8022ae4 <__swsetup_r+0x30>
 8022b6e:	bd70      	pop	{r4, r5, r6, pc}
 8022b70:	0781      	lsls	r1, r0, #30
 8022b72:	bf58      	it	pl
 8022b74:	6963      	ldrpl	r3, [r4, #20]
 8022b76:	60a3      	str	r3, [r4, #8]
 8022b78:	e7f4      	b.n	8022b64 <__swsetup_r+0xb0>
 8022b7a:	2000      	movs	r0, #0
 8022b7c:	e7f7      	b.n	8022b6e <__swsetup_r+0xba>
 8022b7e:	bf00      	nop
 8022b80:	200000d8 	.word	0x200000d8
 8022b84:	08027b20 	.word	0x08027b20
 8022b88:	08027b40 	.word	0x08027b40
 8022b8c:	08027b00 	.word	0x08027b00

08022b90 <__register_exitproc>:
 8022b90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022b94:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8022c50 <__register_exitproc+0xc0>
 8022b98:	4606      	mov	r6, r0
 8022b9a:	f8d8 0000 	ldr.w	r0, [r8]
 8022b9e:	461f      	mov	r7, r3
 8022ba0:	460d      	mov	r5, r1
 8022ba2:	4691      	mov	r9, r2
 8022ba4:	f000 fa0e 	bl	8022fc4 <__retarget_lock_acquire_recursive>
 8022ba8:	4b25      	ldr	r3, [pc, #148]	; (8022c40 <__register_exitproc+0xb0>)
 8022baa:	681c      	ldr	r4, [r3, #0]
 8022bac:	b934      	cbnz	r4, 8022bbc <__register_exitproc+0x2c>
 8022bae:	4c25      	ldr	r4, [pc, #148]	; (8022c44 <__register_exitproc+0xb4>)
 8022bb0:	601c      	str	r4, [r3, #0]
 8022bb2:	4b25      	ldr	r3, [pc, #148]	; (8022c48 <__register_exitproc+0xb8>)
 8022bb4:	b113      	cbz	r3, 8022bbc <__register_exitproc+0x2c>
 8022bb6:	681b      	ldr	r3, [r3, #0]
 8022bb8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8022bbc:	6863      	ldr	r3, [r4, #4]
 8022bbe:	2b1f      	cmp	r3, #31
 8022bc0:	dd07      	ble.n	8022bd2 <__register_exitproc+0x42>
 8022bc2:	f8d8 0000 	ldr.w	r0, [r8]
 8022bc6:	f000 f9ff 	bl	8022fc8 <__retarget_lock_release_recursive>
 8022bca:	f04f 30ff 	mov.w	r0, #4294967295
 8022bce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022bd2:	b34e      	cbz	r6, 8022c28 <__register_exitproc+0x98>
 8022bd4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8022bd8:	b988      	cbnz	r0, 8022bfe <__register_exitproc+0x6e>
 8022bda:	4b1c      	ldr	r3, [pc, #112]	; (8022c4c <__register_exitproc+0xbc>)
 8022bdc:	b923      	cbnz	r3, 8022be8 <__register_exitproc+0x58>
 8022bde:	f8d8 0000 	ldr.w	r0, [r8]
 8022be2:	f000 f9f0 	bl	8022fc6 <__retarget_lock_release>
 8022be6:	e7f0      	b.n	8022bca <__register_exitproc+0x3a>
 8022be8:	f44f 7084 	mov.w	r0, #264	; 0x108
 8022bec:	f7ff fafe 	bl	80221ec <malloc>
 8022bf0:	2800      	cmp	r0, #0
 8022bf2:	d0f4      	beq.n	8022bde <__register_exitproc+0x4e>
 8022bf4:	2300      	movs	r3, #0
 8022bf6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8022bfa:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8022bfe:	6863      	ldr	r3, [r4, #4]
 8022c00:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8022c04:	2201      	movs	r2, #1
 8022c06:	409a      	lsls	r2, r3
 8022c08:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8022c0c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8022c10:	4313      	orrs	r3, r2
 8022c12:	2e02      	cmp	r6, #2
 8022c14:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8022c18:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8022c1c:	bf02      	ittt	eq
 8022c1e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8022c22:	431a      	orreq	r2, r3
 8022c24:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 8022c28:	6863      	ldr	r3, [r4, #4]
 8022c2a:	f8d8 0000 	ldr.w	r0, [r8]
 8022c2e:	1c5a      	adds	r2, r3, #1
 8022c30:	3302      	adds	r3, #2
 8022c32:	6062      	str	r2, [r4, #4]
 8022c34:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8022c38:	f000 f9c6 	bl	8022fc8 <__retarget_lock_release_recursive>
 8022c3c:	2000      	movs	r0, #0
 8022c3e:	e7c6      	b.n	8022bce <__register_exitproc+0x3e>
 8022c40:	2000e698 	.word	0x2000e698
 8022c44:	2000e60c 	.word	0x2000e60c
 8022c48:	08027afc 	.word	0x08027afc
 8022c4c:	080221ed 	.word	0x080221ed
 8022c50:	2000013c 	.word	0x2000013c

08022c54 <__sflush_r>:
 8022c54:	898a      	ldrh	r2, [r1, #12]
 8022c56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022c5a:	4605      	mov	r5, r0
 8022c5c:	0710      	lsls	r0, r2, #28
 8022c5e:	460c      	mov	r4, r1
 8022c60:	d458      	bmi.n	8022d14 <__sflush_r+0xc0>
 8022c62:	684b      	ldr	r3, [r1, #4]
 8022c64:	2b00      	cmp	r3, #0
 8022c66:	dc05      	bgt.n	8022c74 <__sflush_r+0x20>
 8022c68:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8022c6a:	2b00      	cmp	r3, #0
 8022c6c:	dc02      	bgt.n	8022c74 <__sflush_r+0x20>
 8022c6e:	2000      	movs	r0, #0
 8022c70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022c74:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8022c76:	2e00      	cmp	r6, #0
 8022c78:	d0f9      	beq.n	8022c6e <__sflush_r+0x1a>
 8022c7a:	2300      	movs	r3, #0
 8022c7c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8022c80:	682f      	ldr	r7, [r5, #0]
 8022c82:	602b      	str	r3, [r5, #0]
 8022c84:	d032      	beq.n	8022cec <__sflush_r+0x98>
 8022c86:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8022c88:	89a3      	ldrh	r3, [r4, #12]
 8022c8a:	075a      	lsls	r2, r3, #29
 8022c8c:	d505      	bpl.n	8022c9a <__sflush_r+0x46>
 8022c8e:	6863      	ldr	r3, [r4, #4]
 8022c90:	1ac0      	subs	r0, r0, r3
 8022c92:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8022c94:	b10b      	cbz	r3, 8022c9a <__sflush_r+0x46>
 8022c96:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8022c98:	1ac0      	subs	r0, r0, r3
 8022c9a:	2300      	movs	r3, #0
 8022c9c:	4602      	mov	r2, r0
 8022c9e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8022ca0:	6a21      	ldr	r1, [r4, #32]
 8022ca2:	4628      	mov	r0, r5
 8022ca4:	47b0      	blx	r6
 8022ca6:	1c43      	adds	r3, r0, #1
 8022ca8:	89a3      	ldrh	r3, [r4, #12]
 8022caa:	d106      	bne.n	8022cba <__sflush_r+0x66>
 8022cac:	6829      	ldr	r1, [r5, #0]
 8022cae:	291d      	cmp	r1, #29
 8022cb0:	d82c      	bhi.n	8022d0c <__sflush_r+0xb8>
 8022cb2:	4a2a      	ldr	r2, [pc, #168]	; (8022d5c <__sflush_r+0x108>)
 8022cb4:	40ca      	lsrs	r2, r1
 8022cb6:	07d6      	lsls	r6, r2, #31
 8022cb8:	d528      	bpl.n	8022d0c <__sflush_r+0xb8>
 8022cba:	2200      	movs	r2, #0
 8022cbc:	6062      	str	r2, [r4, #4]
 8022cbe:	04d9      	lsls	r1, r3, #19
 8022cc0:	6922      	ldr	r2, [r4, #16]
 8022cc2:	6022      	str	r2, [r4, #0]
 8022cc4:	d504      	bpl.n	8022cd0 <__sflush_r+0x7c>
 8022cc6:	1c42      	adds	r2, r0, #1
 8022cc8:	d101      	bne.n	8022cce <__sflush_r+0x7a>
 8022cca:	682b      	ldr	r3, [r5, #0]
 8022ccc:	b903      	cbnz	r3, 8022cd0 <__sflush_r+0x7c>
 8022cce:	6560      	str	r0, [r4, #84]	; 0x54
 8022cd0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8022cd2:	602f      	str	r7, [r5, #0]
 8022cd4:	2900      	cmp	r1, #0
 8022cd6:	d0ca      	beq.n	8022c6e <__sflush_r+0x1a>
 8022cd8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8022cdc:	4299      	cmp	r1, r3
 8022cde:	d002      	beq.n	8022ce6 <__sflush_r+0x92>
 8022ce0:	4628      	mov	r0, r5
 8022ce2:	f7ff faa9 	bl	8022238 <_free_r>
 8022ce6:	2000      	movs	r0, #0
 8022ce8:	6360      	str	r0, [r4, #52]	; 0x34
 8022cea:	e7c1      	b.n	8022c70 <__sflush_r+0x1c>
 8022cec:	6a21      	ldr	r1, [r4, #32]
 8022cee:	2301      	movs	r3, #1
 8022cf0:	4628      	mov	r0, r5
 8022cf2:	47b0      	blx	r6
 8022cf4:	1c41      	adds	r1, r0, #1
 8022cf6:	d1c7      	bne.n	8022c88 <__sflush_r+0x34>
 8022cf8:	682b      	ldr	r3, [r5, #0]
 8022cfa:	2b00      	cmp	r3, #0
 8022cfc:	d0c4      	beq.n	8022c88 <__sflush_r+0x34>
 8022cfe:	2b1d      	cmp	r3, #29
 8022d00:	d001      	beq.n	8022d06 <__sflush_r+0xb2>
 8022d02:	2b16      	cmp	r3, #22
 8022d04:	d101      	bne.n	8022d0a <__sflush_r+0xb6>
 8022d06:	602f      	str	r7, [r5, #0]
 8022d08:	e7b1      	b.n	8022c6e <__sflush_r+0x1a>
 8022d0a:	89a3      	ldrh	r3, [r4, #12]
 8022d0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8022d10:	81a3      	strh	r3, [r4, #12]
 8022d12:	e7ad      	b.n	8022c70 <__sflush_r+0x1c>
 8022d14:	690f      	ldr	r7, [r1, #16]
 8022d16:	2f00      	cmp	r7, #0
 8022d18:	d0a9      	beq.n	8022c6e <__sflush_r+0x1a>
 8022d1a:	0793      	lsls	r3, r2, #30
 8022d1c:	680e      	ldr	r6, [r1, #0]
 8022d1e:	bf08      	it	eq
 8022d20:	694b      	ldreq	r3, [r1, #20]
 8022d22:	600f      	str	r7, [r1, #0]
 8022d24:	bf18      	it	ne
 8022d26:	2300      	movne	r3, #0
 8022d28:	eba6 0807 	sub.w	r8, r6, r7
 8022d2c:	608b      	str	r3, [r1, #8]
 8022d2e:	f1b8 0f00 	cmp.w	r8, #0
 8022d32:	dd9c      	ble.n	8022c6e <__sflush_r+0x1a>
 8022d34:	6a21      	ldr	r1, [r4, #32]
 8022d36:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8022d38:	4643      	mov	r3, r8
 8022d3a:	463a      	mov	r2, r7
 8022d3c:	4628      	mov	r0, r5
 8022d3e:	47b0      	blx	r6
 8022d40:	2800      	cmp	r0, #0
 8022d42:	dc06      	bgt.n	8022d52 <__sflush_r+0xfe>
 8022d44:	89a3      	ldrh	r3, [r4, #12]
 8022d46:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8022d4a:	81a3      	strh	r3, [r4, #12]
 8022d4c:	f04f 30ff 	mov.w	r0, #4294967295
 8022d50:	e78e      	b.n	8022c70 <__sflush_r+0x1c>
 8022d52:	4407      	add	r7, r0
 8022d54:	eba8 0800 	sub.w	r8, r8, r0
 8022d58:	e7e9      	b.n	8022d2e <__sflush_r+0xda>
 8022d5a:	bf00      	nop
 8022d5c:	20400001 	.word	0x20400001

08022d60 <_fflush_r>:
 8022d60:	b538      	push	{r3, r4, r5, lr}
 8022d62:	690b      	ldr	r3, [r1, #16]
 8022d64:	4605      	mov	r5, r0
 8022d66:	460c      	mov	r4, r1
 8022d68:	b913      	cbnz	r3, 8022d70 <_fflush_r+0x10>
 8022d6a:	2500      	movs	r5, #0
 8022d6c:	4628      	mov	r0, r5
 8022d6e:	bd38      	pop	{r3, r4, r5, pc}
 8022d70:	b118      	cbz	r0, 8022d7a <_fflush_r+0x1a>
 8022d72:	6983      	ldr	r3, [r0, #24]
 8022d74:	b90b      	cbnz	r3, 8022d7a <_fflush_r+0x1a>
 8022d76:	f000 f887 	bl	8022e88 <__sinit>
 8022d7a:	4b14      	ldr	r3, [pc, #80]	; (8022dcc <_fflush_r+0x6c>)
 8022d7c:	429c      	cmp	r4, r3
 8022d7e:	d11b      	bne.n	8022db8 <_fflush_r+0x58>
 8022d80:	686c      	ldr	r4, [r5, #4]
 8022d82:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022d86:	2b00      	cmp	r3, #0
 8022d88:	d0ef      	beq.n	8022d6a <_fflush_r+0xa>
 8022d8a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8022d8c:	07d0      	lsls	r0, r2, #31
 8022d8e:	d404      	bmi.n	8022d9a <_fflush_r+0x3a>
 8022d90:	0599      	lsls	r1, r3, #22
 8022d92:	d402      	bmi.n	8022d9a <_fflush_r+0x3a>
 8022d94:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8022d96:	f000 f915 	bl	8022fc4 <__retarget_lock_acquire_recursive>
 8022d9a:	4628      	mov	r0, r5
 8022d9c:	4621      	mov	r1, r4
 8022d9e:	f7ff ff59 	bl	8022c54 <__sflush_r>
 8022da2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8022da4:	07da      	lsls	r2, r3, #31
 8022da6:	4605      	mov	r5, r0
 8022da8:	d4e0      	bmi.n	8022d6c <_fflush_r+0xc>
 8022daa:	89a3      	ldrh	r3, [r4, #12]
 8022dac:	059b      	lsls	r3, r3, #22
 8022dae:	d4dd      	bmi.n	8022d6c <_fflush_r+0xc>
 8022db0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8022db2:	f000 f909 	bl	8022fc8 <__retarget_lock_release_recursive>
 8022db6:	e7d9      	b.n	8022d6c <_fflush_r+0xc>
 8022db8:	4b05      	ldr	r3, [pc, #20]	; (8022dd0 <_fflush_r+0x70>)
 8022dba:	429c      	cmp	r4, r3
 8022dbc:	d101      	bne.n	8022dc2 <_fflush_r+0x62>
 8022dbe:	68ac      	ldr	r4, [r5, #8]
 8022dc0:	e7df      	b.n	8022d82 <_fflush_r+0x22>
 8022dc2:	4b04      	ldr	r3, [pc, #16]	; (8022dd4 <_fflush_r+0x74>)
 8022dc4:	429c      	cmp	r4, r3
 8022dc6:	bf08      	it	eq
 8022dc8:	68ec      	ldreq	r4, [r5, #12]
 8022dca:	e7da      	b.n	8022d82 <_fflush_r+0x22>
 8022dcc:	08027b20 	.word	0x08027b20
 8022dd0:	08027b40 	.word	0x08027b40
 8022dd4:	08027b00 	.word	0x08027b00

08022dd8 <std>:
 8022dd8:	2300      	movs	r3, #0
 8022dda:	b510      	push	{r4, lr}
 8022ddc:	4604      	mov	r4, r0
 8022dde:	e9c0 3300 	strd	r3, r3, [r0]
 8022de2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8022de6:	6083      	str	r3, [r0, #8]
 8022de8:	8181      	strh	r1, [r0, #12]
 8022dea:	6643      	str	r3, [r0, #100]	; 0x64
 8022dec:	81c2      	strh	r2, [r0, #14]
 8022dee:	6183      	str	r3, [r0, #24]
 8022df0:	4619      	mov	r1, r3
 8022df2:	2208      	movs	r2, #8
 8022df4:	305c      	adds	r0, #92	; 0x5c
 8022df6:	f7ff fa17 	bl	8022228 <memset>
 8022dfa:	4b05      	ldr	r3, [pc, #20]	; (8022e10 <std+0x38>)
 8022dfc:	6263      	str	r3, [r4, #36]	; 0x24
 8022dfe:	4b05      	ldr	r3, [pc, #20]	; (8022e14 <std+0x3c>)
 8022e00:	62a3      	str	r3, [r4, #40]	; 0x28
 8022e02:	4b05      	ldr	r3, [pc, #20]	; (8022e18 <std+0x40>)
 8022e04:	62e3      	str	r3, [r4, #44]	; 0x2c
 8022e06:	4b05      	ldr	r3, [pc, #20]	; (8022e1c <std+0x44>)
 8022e08:	6224      	str	r4, [r4, #32]
 8022e0a:	6323      	str	r3, [r4, #48]	; 0x30
 8022e0c:	bd10      	pop	{r4, pc}
 8022e0e:	bf00      	nop
 8022e10:	080230ad 	.word	0x080230ad
 8022e14:	080230cf 	.word	0x080230cf
 8022e18:	08023107 	.word	0x08023107
 8022e1c:	0802312b 	.word	0x0802312b

08022e20 <_cleanup_r>:
 8022e20:	4901      	ldr	r1, [pc, #4]	; (8022e28 <_cleanup_r+0x8>)
 8022e22:	f000 b8af 	b.w	8022f84 <_fwalk_reent>
 8022e26:	bf00      	nop
 8022e28:	08022d61 	.word	0x08022d61

08022e2c <__sfmoreglue>:
 8022e2c:	b570      	push	{r4, r5, r6, lr}
 8022e2e:	1e4a      	subs	r2, r1, #1
 8022e30:	2568      	movs	r5, #104	; 0x68
 8022e32:	4355      	muls	r5, r2
 8022e34:	460e      	mov	r6, r1
 8022e36:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8022e3a:	f7ff fa4d 	bl	80222d8 <_malloc_r>
 8022e3e:	4604      	mov	r4, r0
 8022e40:	b140      	cbz	r0, 8022e54 <__sfmoreglue+0x28>
 8022e42:	2100      	movs	r1, #0
 8022e44:	e9c0 1600 	strd	r1, r6, [r0]
 8022e48:	300c      	adds	r0, #12
 8022e4a:	60a0      	str	r0, [r4, #8]
 8022e4c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8022e50:	f7ff f9ea 	bl	8022228 <memset>
 8022e54:	4620      	mov	r0, r4
 8022e56:	bd70      	pop	{r4, r5, r6, pc}

08022e58 <__sfp_lock_acquire>:
 8022e58:	4801      	ldr	r0, [pc, #4]	; (8022e60 <__sfp_lock_acquire+0x8>)
 8022e5a:	f000 b8b3 	b.w	8022fc4 <__retarget_lock_acquire_recursive>
 8022e5e:	bf00      	nop
 8022e60:	2000e990 	.word	0x2000e990

08022e64 <__sfp_lock_release>:
 8022e64:	4801      	ldr	r0, [pc, #4]	; (8022e6c <__sfp_lock_release+0x8>)
 8022e66:	f000 b8af 	b.w	8022fc8 <__retarget_lock_release_recursive>
 8022e6a:	bf00      	nop
 8022e6c:	2000e990 	.word	0x2000e990

08022e70 <__sinit_lock_acquire>:
 8022e70:	4801      	ldr	r0, [pc, #4]	; (8022e78 <__sinit_lock_acquire+0x8>)
 8022e72:	f000 b8a7 	b.w	8022fc4 <__retarget_lock_acquire_recursive>
 8022e76:	bf00      	nop
 8022e78:	2000e98b 	.word	0x2000e98b

08022e7c <__sinit_lock_release>:
 8022e7c:	4801      	ldr	r0, [pc, #4]	; (8022e84 <__sinit_lock_release+0x8>)
 8022e7e:	f000 b8a3 	b.w	8022fc8 <__retarget_lock_release_recursive>
 8022e82:	bf00      	nop
 8022e84:	2000e98b 	.word	0x2000e98b

08022e88 <__sinit>:
 8022e88:	b510      	push	{r4, lr}
 8022e8a:	4604      	mov	r4, r0
 8022e8c:	f7ff fff0 	bl	8022e70 <__sinit_lock_acquire>
 8022e90:	69a3      	ldr	r3, [r4, #24]
 8022e92:	b11b      	cbz	r3, 8022e9c <__sinit+0x14>
 8022e94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022e98:	f7ff bff0 	b.w	8022e7c <__sinit_lock_release>
 8022e9c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8022ea0:	6523      	str	r3, [r4, #80]	; 0x50
 8022ea2:	4b13      	ldr	r3, [pc, #76]	; (8022ef0 <__sinit+0x68>)
 8022ea4:	4a13      	ldr	r2, [pc, #76]	; (8022ef4 <__sinit+0x6c>)
 8022ea6:	681b      	ldr	r3, [r3, #0]
 8022ea8:	62a2      	str	r2, [r4, #40]	; 0x28
 8022eaa:	42a3      	cmp	r3, r4
 8022eac:	bf04      	itt	eq
 8022eae:	2301      	moveq	r3, #1
 8022eb0:	61a3      	streq	r3, [r4, #24]
 8022eb2:	4620      	mov	r0, r4
 8022eb4:	f000 f820 	bl	8022ef8 <__sfp>
 8022eb8:	6060      	str	r0, [r4, #4]
 8022eba:	4620      	mov	r0, r4
 8022ebc:	f000 f81c 	bl	8022ef8 <__sfp>
 8022ec0:	60a0      	str	r0, [r4, #8]
 8022ec2:	4620      	mov	r0, r4
 8022ec4:	f000 f818 	bl	8022ef8 <__sfp>
 8022ec8:	2200      	movs	r2, #0
 8022eca:	60e0      	str	r0, [r4, #12]
 8022ecc:	2104      	movs	r1, #4
 8022ece:	6860      	ldr	r0, [r4, #4]
 8022ed0:	f7ff ff82 	bl	8022dd8 <std>
 8022ed4:	68a0      	ldr	r0, [r4, #8]
 8022ed6:	2201      	movs	r2, #1
 8022ed8:	2109      	movs	r1, #9
 8022eda:	f7ff ff7d 	bl	8022dd8 <std>
 8022ede:	68e0      	ldr	r0, [r4, #12]
 8022ee0:	2202      	movs	r2, #2
 8022ee2:	2112      	movs	r1, #18
 8022ee4:	f7ff ff78 	bl	8022dd8 <std>
 8022ee8:	2301      	movs	r3, #1
 8022eea:	61a3      	str	r3, [r4, #24]
 8022eec:	e7d2      	b.n	8022e94 <__sinit+0xc>
 8022eee:	bf00      	nop
 8022ef0:	08027ac4 	.word	0x08027ac4
 8022ef4:	08022e21 	.word	0x08022e21

08022ef8 <__sfp>:
 8022ef8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022efa:	4607      	mov	r7, r0
 8022efc:	f7ff ffac 	bl	8022e58 <__sfp_lock_acquire>
 8022f00:	4b1e      	ldr	r3, [pc, #120]	; (8022f7c <__sfp+0x84>)
 8022f02:	681e      	ldr	r6, [r3, #0]
 8022f04:	69b3      	ldr	r3, [r6, #24]
 8022f06:	b913      	cbnz	r3, 8022f0e <__sfp+0x16>
 8022f08:	4630      	mov	r0, r6
 8022f0a:	f7ff ffbd 	bl	8022e88 <__sinit>
 8022f0e:	3648      	adds	r6, #72	; 0x48
 8022f10:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8022f14:	3b01      	subs	r3, #1
 8022f16:	d503      	bpl.n	8022f20 <__sfp+0x28>
 8022f18:	6833      	ldr	r3, [r6, #0]
 8022f1a:	b30b      	cbz	r3, 8022f60 <__sfp+0x68>
 8022f1c:	6836      	ldr	r6, [r6, #0]
 8022f1e:	e7f7      	b.n	8022f10 <__sfp+0x18>
 8022f20:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8022f24:	b9d5      	cbnz	r5, 8022f5c <__sfp+0x64>
 8022f26:	4b16      	ldr	r3, [pc, #88]	; (8022f80 <__sfp+0x88>)
 8022f28:	60e3      	str	r3, [r4, #12]
 8022f2a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8022f2e:	6665      	str	r5, [r4, #100]	; 0x64
 8022f30:	f000 f847 	bl	8022fc2 <__retarget_lock_init_recursive>
 8022f34:	f7ff ff96 	bl	8022e64 <__sfp_lock_release>
 8022f38:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8022f3c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8022f40:	6025      	str	r5, [r4, #0]
 8022f42:	61a5      	str	r5, [r4, #24]
 8022f44:	2208      	movs	r2, #8
 8022f46:	4629      	mov	r1, r5
 8022f48:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8022f4c:	f7ff f96c 	bl	8022228 <memset>
 8022f50:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8022f54:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8022f58:	4620      	mov	r0, r4
 8022f5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022f5c:	3468      	adds	r4, #104	; 0x68
 8022f5e:	e7d9      	b.n	8022f14 <__sfp+0x1c>
 8022f60:	2104      	movs	r1, #4
 8022f62:	4638      	mov	r0, r7
 8022f64:	f7ff ff62 	bl	8022e2c <__sfmoreglue>
 8022f68:	4604      	mov	r4, r0
 8022f6a:	6030      	str	r0, [r6, #0]
 8022f6c:	2800      	cmp	r0, #0
 8022f6e:	d1d5      	bne.n	8022f1c <__sfp+0x24>
 8022f70:	f7ff ff78 	bl	8022e64 <__sfp_lock_release>
 8022f74:	230c      	movs	r3, #12
 8022f76:	603b      	str	r3, [r7, #0]
 8022f78:	e7ee      	b.n	8022f58 <__sfp+0x60>
 8022f7a:	bf00      	nop
 8022f7c:	08027ac4 	.word	0x08027ac4
 8022f80:	ffff0001 	.word	0xffff0001

08022f84 <_fwalk_reent>:
 8022f84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022f88:	4606      	mov	r6, r0
 8022f8a:	4688      	mov	r8, r1
 8022f8c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8022f90:	2700      	movs	r7, #0
 8022f92:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8022f96:	f1b9 0901 	subs.w	r9, r9, #1
 8022f9a:	d505      	bpl.n	8022fa8 <_fwalk_reent+0x24>
 8022f9c:	6824      	ldr	r4, [r4, #0]
 8022f9e:	2c00      	cmp	r4, #0
 8022fa0:	d1f7      	bne.n	8022f92 <_fwalk_reent+0xe>
 8022fa2:	4638      	mov	r0, r7
 8022fa4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022fa8:	89ab      	ldrh	r3, [r5, #12]
 8022faa:	2b01      	cmp	r3, #1
 8022fac:	d907      	bls.n	8022fbe <_fwalk_reent+0x3a>
 8022fae:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8022fb2:	3301      	adds	r3, #1
 8022fb4:	d003      	beq.n	8022fbe <_fwalk_reent+0x3a>
 8022fb6:	4629      	mov	r1, r5
 8022fb8:	4630      	mov	r0, r6
 8022fba:	47c0      	blx	r8
 8022fbc:	4307      	orrs	r7, r0
 8022fbe:	3568      	adds	r5, #104	; 0x68
 8022fc0:	e7e9      	b.n	8022f96 <_fwalk_reent+0x12>

08022fc2 <__retarget_lock_init_recursive>:
 8022fc2:	4770      	bx	lr

08022fc4 <__retarget_lock_acquire_recursive>:
 8022fc4:	4770      	bx	lr

08022fc6 <__retarget_lock_release>:
 8022fc6:	4770      	bx	lr

08022fc8 <__retarget_lock_release_recursive>:
 8022fc8:	4770      	bx	lr

08022fca <__swhatbuf_r>:
 8022fca:	b570      	push	{r4, r5, r6, lr}
 8022fcc:	460e      	mov	r6, r1
 8022fce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022fd2:	2900      	cmp	r1, #0
 8022fd4:	b096      	sub	sp, #88	; 0x58
 8022fd6:	4614      	mov	r4, r2
 8022fd8:	461d      	mov	r5, r3
 8022fda:	da07      	bge.n	8022fec <__swhatbuf_r+0x22>
 8022fdc:	2300      	movs	r3, #0
 8022fde:	602b      	str	r3, [r5, #0]
 8022fe0:	89b3      	ldrh	r3, [r6, #12]
 8022fe2:	061a      	lsls	r2, r3, #24
 8022fe4:	d410      	bmi.n	8023008 <__swhatbuf_r+0x3e>
 8022fe6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8022fea:	e00e      	b.n	802300a <__swhatbuf_r+0x40>
 8022fec:	466a      	mov	r2, sp
 8022fee:	f000 f8c3 	bl	8023178 <_fstat_r>
 8022ff2:	2800      	cmp	r0, #0
 8022ff4:	dbf2      	blt.n	8022fdc <__swhatbuf_r+0x12>
 8022ff6:	9a01      	ldr	r2, [sp, #4]
 8022ff8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8022ffc:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8023000:	425a      	negs	r2, r3
 8023002:	415a      	adcs	r2, r3
 8023004:	602a      	str	r2, [r5, #0]
 8023006:	e7ee      	b.n	8022fe6 <__swhatbuf_r+0x1c>
 8023008:	2340      	movs	r3, #64	; 0x40
 802300a:	2000      	movs	r0, #0
 802300c:	6023      	str	r3, [r4, #0]
 802300e:	b016      	add	sp, #88	; 0x58
 8023010:	bd70      	pop	{r4, r5, r6, pc}
	...

08023014 <__smakebuf_r>:
 8023014:	898b      	ldrh	r3, [r1, #12]
 8023016:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023018:	079d      	lsls	r5, r3, #30
 802301a:	4606      	mov	r6, r0
 802301c:	460c      	mov	r4, r1
 802301e:	d507      	bpl.n	8023030 <__smakebuf_r+0x1c>
 8023020:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8023024:	6023      	str	r3, [r4, #0]
 8023026:	6123      	str	r3, [r4, #16]
 8023028:	2301      	movs	r3, #1
 802302a:	6163      	str	r3, [r4, #20]
 802302c:	b002      	add	sp, #8
 802302e:	bd70      	pop	{r4, r5, r6, pc}
 8023030:	ab01      	add	r3, sp, #4
 8023032:	466a      	mov	r2, sp
 8023034:	f7ff ffc9 	bl	8022fca <__swhatbuf_r>
 8023038:	9900      	ldr	r1, [sp, #0]
 802303a:	4605      	mov	r5, r0
 802303c:	4630      	mov	r0, r6
 802303e:	f7ff f94b 	bl	80222d8 <_malloc_r>
 8023042:	b948      	cbnz	r0, 8023058 <__smakebuf_r+0x44>
 8023044:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023048:	059a      	lsls	r2, r3, #22
 802304a:	d4ef      	bmi.n	802302c <__smakebuf_r+0x18>
 802304c:	f023 0303 	bic.w	r3, r3, #3
 8023050:	f043 0302 	orr.w	r3, r3, #2
 8023054:	81a3      	strh	r3, [r4, #12]
 8023056:	e7e3      	b.n	8023020 <__smakebuf_r+0xc>
 8023058:	4b0d      	ldr	r3, [pc, #52]	; (8023090 <__smakebuf_r+0x7c>)
 802305a:	62b3      	str	r3, [r6, #40]	; 0x28
 802305c:	89a3      	ldrh	r3, [r4, #12]
 802305e:	6020      	str	r0, [r4, #0]
 8023060:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8023064:	81a3      	strh	r3, [r4, #12]
 8023066:	9b00      	ldr	r3, [sp, #0]
 8023068:	6163      	str	r3, [r4, #20]
 802306a:	9b01      	ldr	r3, [sp, #4]
 802306c:	6120      	str	r0, [r4, #16]
 802306e:	b15b      	cbz	r3, 8023088 <__smakebuf_r+0x74>
 8023070:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023074:	4630      	mov	r0, r6
 8023076:	f000 f891 	bl	802319c <_isatty_r>
 802307a:	b128      	cbz	r0, 8023088 <__smakebuf_r+0x74>
 802307c:	89a3      	ldrh	r3, [r4, #12]
 802307e:	f023 0303 	bic.w	r3, r3, #3
 8023082:	f043 0301 	orr.w	r3, r3, #1
 8023086:	81a3      	strh	r3, [r4, #12]
 8023088:	89a0      	ldrh	r0, [r4, #12]
 802308a:	4305      	orrs	r5, r0
 802308c:	81a5      	strh	r5, [r4, #12]
 802308e:	e7cd      	b.n	802302c <__smakebuf_r+0x18>
 8023090:	08022e21 	.word	0x08022e21

08023094 <__malloc_lock>:
 8023094:	4801      	ldr	r0, [pc, #4]	; (802309c <__malloc_lock+0x8>)
 8023096:	f7ff bf95 	b.w	8022fc4 <__retarget_lock_acquire_recursive>
 802309a:	bf00      	nop
 802309c:	2000e98c 	.word	0x2000e98c

080230a0 <__malloc_unlock>:
 80230a0:	4801      	ldr	r0, [pc, #4]	; (80230a8 <__malloc_unlock+0x8>)
 80230a2:	f7ff bf91 	b.w	8022fc8 <__retarget_lock_release_recursive>
 80230a6:	bf00      	nop
 80230a8:	2000e98c 	.word	0x2000e98c

080230ac <__sread>:
 80230ac:	b510      	push	{r4, lr}
 80230ae:	460c      	mov	r4, r1
 80230b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80230b4:	f000 f894 	bl	80231e0 <_read_r>
 80230b8:	2800      	cmp	r0, #0
 80230ba:	bfab      	itete	ge
 80230bc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80230be:	89a3      	ldrhlt	r3, [r4, #12]
 80230c0:	181b      	addge	r3, r3, r0
 80230c2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80230c6:	bfac      	ite	ge
 80230c8:	6563      	strge	r3, [r4, #84]	; 0x54
 80230ca:	81a3      	strhlt	r3, [r4, #12]
 80230cc:	bd10      	pop	{r4, pc}

080230ce <__swrite>:
 80230ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80230d2:	461f      	mov	r7, r3
 80230d4:	898b      	ldrh	r3, [r1, #12]
 80230d6:	05db      	lsls	r3, r3, #23
 80230d8:	4605      	mov	r5, r0
 80230da:	460c      	mov	r4, r1
 80230dc:	4616      	mov	r6, r2
 80230de:	d505      	bpl.n	80230ec <__swrite+0x1e>
 80230e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80230e4:	2302      	movs	r3, #2
 80230e6:	2200      	movs	r2, #0
 80230e8:	f000 f868 	bl	80231bc <_lseek_r>
 80230ec:	89a3      	ldrh	r3, [r4, #12]
 80230ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80230f2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80230f6:	81a3      	strh	r3, [r4, #12]
 80230f8:	4632      	mov	r2, r6
 80230fa:	463b      	mov	r3, r7
 80230fc:	4628      	mov	r0, r5
 80230fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8023102:	f000 b817 	b.w	8023134 <_write_r>

08023106 <__sseek>:
 8023106:	b510      	push	{r4, lr}
 8023108:	460c      	mov	r4, r1
 802310a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802310e:	f000 f855 	bl	80231bc <_lseek_r>
 8023112:	1c43      	adds	r3, r0, #1
 8023114:	89a3      	ldrh	r3, [r4, #12]
 8023116:	bf15      	itete	ne
 8023118:	6560      	strne	r0, [r4, #84]	; 0x54
 802311a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802311e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8023122:	81a3      	strheq	r3, [r4, #12]
 8023124:	bf18      	it	ne
 8023126:	81a3      	strhne	r3, [r4, #12]
 8023128:	bd10      	pop	{r4, pc}

0802312a <__sclose>:
 802312a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802312e:	f000 b813 	b.w	8023158 <_close_r>
	...

08023134 <_write_r>:
 8023134:	b538      	push	{r3, r4, r5, lr}
 8023136:	4d07      	ldr	r5, [pc, #28]	; (8023154 <_write_r+0x20>)
 8023138:	4604      	mov	r4, r0
 802313a:	4608      	mov	r0, r1
 802313c:	4611      	mov	r1, r2
 802313e:	2200      	movs	r2, #0
 8023140:	602a      	str	r2, [r5, #0]
 8023142:	461a      	mov	r2, r3
 8023144:	f7df f81d 	bl	8002182 <_write>
 8023148:	1c43      	adds	r3, r0, #1
 802314a:	d102      	bne.n	8023152 <_write_r+0x1e>
 802314c:	682b      	ldr	r3, [r5, #0]
 802314e:	b103      	cbz	r3, 8023152 <_write_r+0x1e>
 8023150:	6023      	str	r3, [r4, #0]
 8023152:	bd38      	pop	{r3, r4, r5, pc}
 8023154:	2000e994 	.word	0x2000e994

08023158 <_close_r>:
 8023158:	b538      	push	{r3, r4, r5, lr}
 802315a:	4d06      	ldr	r5, [pc, #24]	; (8023174 <_close_r+0x1c>)
 802315c:	2300      	movs	r3, #0
 802315e:	4604      	mov	r4, r0
 8023160:	4608      	mov	r0, r1
 8023162:	602b      	str	r3, [r5, #0]
 8023164:	f7df f81a 	bl	800219c <_close>
 8023168:	1c43      	adds	r3, r0, #1
 802316a:	d102      	bne.n	8023172 <_close_r+0x1a>
 802316c:	682b      	ldr	r3, [r5, #0]
 802316e:	b103      	cbz	r3, 8023172 <_close_r+0x1a>
 8023170:	6023      	str	r3, [r4, #0]
 8023172:	bd38      	pop	{r3, r4, r5, pc}
 8023174:	2000e994 	.word	0x2000e994

08023178 <_fstat_r>:
 8023178:	b538      	push	{r3, r4, r5, lr}
 802317a:	4d07      	ldr	r5, [pc, #28]	; (8023198 <_fstat_r+0x20>)
 802317c:	2300      	movs	r3, #0
 802317e:	4604      	mov	r4, r0
 8023180:	4608      	mov	r0, r1
 8023182:	4611      	mov	r1, r2
 8023184:	602b      	str	r3, [r5, #0]
 8023186:	f7df f80c 	bl	80021a2 <_fstat>
 802318a:	1c43      	adds	r3, r0, #1
 802318c:	d102      	bne.n	8023194 <_fstat_r+0x1c>
 802318e:	682b      	ldr	r3, [r5, #0]
 8023190:	b103      	cbz	r3, 8023194 <_fstat_r+0x1c>
 8023192:	6023      	str	r3, [r4, #0]
 8023194:	bd38      	pop	{r3, r4, r5, pc}
 8023196:	bf00      	nop
 8023198:	2000e994 	.word	0x2000e994

0802319c <_isatty_r>:
 802319c:	b538      	push	{r3, r4, r5, lr}
 802319e:	4d06      	ldr	r5, [pc, #24]	; (80231b8 <_isatty_r+0x1c>)
 80231a0:	2300      	movs	r3, #0
 80231a2:	4604      	mov	r4, r0
 80231a4:	4608      	mov	r0, r1
 80231a6:	602b      	str	r3, [r5, #0]
 80231a8:	f7df f800 	bl	80021ac <_isatty>
 80231ac:	1c43      	adds	r3, r0, #1
 80231ae:	d102      	bne.n	80231b6 <_isatty_r+0x1a>
 80231b0:	682b      	ldr	r3, [r5, #0]
 80231b2:	b103      	cbz	r3, 80231b6 <_isatty_r+0x1a>
 80231b4:	6023      	str	r3, [r4, #0]
 80231b6:	bd38      	pop	{r3, r4, r5, pc}
 80231b8:	2000e994 	.word	0x2000e994

080231bc <_lseek_r>:
 80231bc:	b538      	push	{r3, r4, r5, lr}
 80231be:	4d07      	ldr	r5, [pc, #28]	; (80231dc <_lseek_r+0x20>)
 80231c0:	4604      	mov	r4, r0
 80231c2:	4608      	mov	r0, r1
 80231c4:	4611      	mov	r1, r2
 80231c6:	2200      	movs	r2, #0
 80231c8:	602a      	str	r2, [r5, #0]
 80231ca:	461a      	mov	r2, r3
 80231cc:	f7de fff0 	bl	80021b0 <_lseek>
 80231d0:	1c43      	adds	r3, r0, #1
 80231d2:	d102      	bne.n	80231da <_lseek_r+0x1e>
 80231d4:	682b      	ldr	r3, [r5, #0]
 80231d6:	b103      	cbz	r3, 80231da <_lseek_r+0x1e>
 80231d8:	6023      	str	r3, [r4, #0]
 80231da:	bd38      	pop	{r3, r4, r5, pc}
 80231dc:	2000e994 	.word	0x2000e994

080231e0 <_read_r>:
 80231e0:	b538      	push	{r3, r4, r5, lr}
 80231e2:	4d07      	ldr	r5, [pc, #28]	; (8023200 <_read_r+0x20>)
 80231e4:	4604      	mov	r4, r0
 80231e6:	4608      	mov	r0, r1
 80231e8:	4611      	mov	r1, r2
 80231ea:	2200      	movs	r2, #0
 80231ec:	602a      	str	r2, [r5, #0]
 80231ee:	461a      	mov	r2, r3
 80231f0:	f7de ffba 	bl	8002168 <_read>
 80231f4:	1c43      	adds	r3, r0, #1
 80231f6:	d102      	bne.n	80231fe <_read_r+0x1e>
 80231f8:	682b      	ldr	r3, [r5, #0]
 80231fa:	b103      	cbz	r3, 80231fe <_read_r+0x1e>
 80231fc:	6023      	str	r3, [r4, #0]
 80231fe:	bd38      	pop	{r3, r4, r5, pc}
 8023200:	2000e994 	.word	0x2000e994

08023204 <_init>:
 8023204:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023206:	bf00      	nop
 8023208:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802320a:	bc08      	pop	{r3}
 802320c:	469e      	mov	lr, r3
 802320e:	4770      	bx	lr

08023210 <_fini>:
 8023210:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023212:	bf00      	nop
 8023214:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023216:	bc08      	pop	{r3}
 8023218:	469e      	mov	lr, r3
 802321a:	4770      	bx	lr
